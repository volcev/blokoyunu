./frontend/build/static/js/main.a97db605.js:2:(()=>{var e={4:(e,t,n)=>{"use strict";var u=n(853),r=n(43),a=n(950);function l(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function i(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function s(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function c(e){if(i(e)!==e)throw Error(l(188))}function d(e){var t=e.tag;if(5===t||26===t||27===t||6===t)return e;for(e=e.child;null!==e;){if(null!==(t=d(e)))return t;e=e.sibling}return null}var f=Object.assign,D=Symbol.for("react.element"),p=Symbol.for("react.transitional.element"),h=Symbol.for("react.portal"),m=Symbol.for("react.fragment"),F=Symbol.for("react.strict_mode"),g=Symbol.for("react.profiler"),y=Symbol.for("react.provider"),b=Symbol.for("react.consumer"),v=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),C=Symbol.for("react.suspense"),k=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),w=Symbol.for("react.lazy");Symbol.for("react.scope");var x=Symbol.for("react.activity");Symbol.for("react.legacy_hidden"),Symbol.for("react.tracing_marker");var S=Symbol.for("react.memo_cache_sentinel");Symbol.for("react.view_transition");var B=Symbol.iterator;function N(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=B&&e[B]||e["@@iterator"])?e:null}var T=Symbol.for("react.client.reference");function P(e){if(null==e)return null;if("function"===typeof e)return e.$$typeof===T?null:e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case m:return"Fragment";case g:return"Profiler";case F:return"StrictMode";case C:return"Suspense";case k:return"SuspenseList";case x:return"Activity"}if("object"===typeof e)switch(e.$$typeof){case h:return"Portal";case v:return(e.displayName||"Context")+".Provider";case b:return(e._context.displayName||"Context")+".Consumer";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:P(e.type)||"Memo";case w:t=e._payload,e=e._init;try{return P(e(t))}catch(n){}}return null}var j=Array.isArray,_=r.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,z=a.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,R={pending:!1,data:null,method:null,action:null},L=[],O=-1;function M(e){return{current:e}}function I(e){0>O||(e.current=L[O],L[O]=null,O--)}function U(e,t){O++,L[O]=e.current,e.current=t}var $=M(null),V=M(null),H=M(null),q=M(null);function W(e,t){switch(U(H,t),U(V,e),U($,null),t.nodeType){case 9:case 11:e=(e=t.documentElement)&&(e=e.namespaceURI)?rd(e):0;break;default:if(e=t.tagName,t=t.namespaceURI)e=ad(t=rd(t),e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}I($),U($,e)}function Y(){I($),I(V),I(H)}function Q(e){null!==e.memoizedState&&U(q,e);var t=$.current,n=ad(t,e.type);t!==n&&(U(V,e),U($,n))}function K(e){V.current===e&&(I($),I(V)),q.current===e&&(I(q),Qd._currentValue=R)}var G=Object.prototype.hasOwnProperty,X=u.unstable_scheduleCallback,Z=u.unstable_cancelCallback,J=u.unstable_shouldYield,ee=u.unstable_requestPaint,te=u.unstable_now,ne=u.unstable_getCurrentPriorityLevel,ue=u.unstable_ImmediatePriority,re=u.unstable_UserBlockingPriority,ae=u.unstable_NormalPriority,le=u.unstable_LowPriority,oe=u.unstable_IdlePriority,ie=u.log,se=u.unstable_setDisableYieldValue,ce=null,de=null;function fe(e){if("function"===typeof ie&&se(e),de&&"function"===typeof de.setStrictMode)try{de.setStrictMode(ce,e)}catch(t){}}var De=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(pe(e)/he|0)|0},pe=Math.log,he=Math.LN2;var me=256,Fe=4194304;function ge(e){var t=42&e;if(0!==t)return t;switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194048&e;case 4194304:case 8388608:case 16777216:case 33554432:return 62914560&e;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return e}}function ye(e,t,n){var u=e.pendingLanes;if(0===u)return 0;var r=0,a=e.suspendedLanes,l=e.pingedLanes;e=e.warmLanes;var o=134217727&u;return 0!==o?0!==(u=o&~a)?r=ge(u):0!==(l&=o)?r=ge(l):n||0!==(n=o&~e)&&(r=ge(n)):0!==(o=u&~a)?r=ge(o):0!==l?r=ge(l):n||0!==(n=u&~e)&&(r=ge(n)),0===r?0:0!==t&&t!==r&&0===(t&a)&&((a=r&-r)>=(n=t&-t)||32===a&&0!==(4194048&n))?t:r}function be(e,t){return 0===(e.pendingLanes&~(e.suspendedLanes&~e.pingedLanes)&t)}function ve(e,t){switch(e){case 1:case 2:case 4:case 8:case 64:return t+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function Ee(){var e=me;return 0===(4194048&(me<<=1))&&(me=256),e}function Ce(){var e=Fe;return 0===(62914560&(Fe<<=1))&&(Fe=4194304),e}function ke(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ae(e,t){e.pendingLanes|=t,268435456!==t&&(e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0)}function we(e,t,n){e.pendingLanes|=t,e.suspendedLanes&=~t;var u=31-De(t);e.entangledLanes|=t,e.entanglements[u]=1073741824|e.entanglements[u]|4194090&n}function xe(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var u=31-De(n),r=1<<u;r&t|e[u]&t&&(e[u]|=t),n&=~r}}function Se(e){switch(e){case 2:e=1;break;case 8:e=4;break;case 32:e=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:e=128;break;case 268435456:e=134217728;break;default:e=0}return e}function Be(e){return 2<(e&=-e)?8<e?0!==(134217727&e)?32:268435456:8:2}function Ne(){var e=z.p;return 0!==e?e:void 0===(e=window.event)?32:cf(e.type)}var Te=Math.random().toString(36).slice(2),Pe="__reactFiber$"+Te,je="__reactProps$"+Te,_e="__reactContainer$"+Te,ze="__reactEvents$"+Te,Re="__reactListeners$"+Te,Le="__reactHandles$"+Te,Oe="__reactResources$"+Te,Me="__reactMarker$"+Te;function Ie(e){delete e[Pe],delete e[je],delete e[ze],delete e[Re],delete e[Le]}function Ue(e){var t=e[Pe];if(t)return t;for(var n=e.parentNode;n;){if(t=n[_e]||n[Pe]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=yd(e);null!==e;){if(n=e[Pe])return n;e=yd(e)}return t}n=(e=n).parentNode}return null}function $e(e){if(e=e[Pe]||e[_e]){var t=e.tag;if(5===t||6===t||13===t||26===t||27===t||3===t)return e}return null}function Ve(e){var t=e.tag;if(5===t||26===t||27===t||6===t)return e.stateNode;throw Error(l(33))}function He(e){var t=e[Oe];return t||(t=e[Oe]={hoistableStyles:new Map,hoistableScripts:new Map}),t}function qe(e){e[Me]=!0}var We=new Set,Ye={};function Qe(e,t){Ke(e,t),Ke(e+"Capture",t)}function Ke(e,t){for(Ye[e]=t,e=0;e<t.length;e++)We.add(t[e])}var Ge,Xe,Ze=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),Je={},et={};function tt(e,t,n){if(r=t,G.call(et,r)||!G.call(Je,r)&&(Ze.test(r)?et[r]=!0:(Je[r]=!0,0)))if(null===n)e.removeAttribute(t);else{switch(typeof n){case"undefined":case"function":case"symbol":return void e.removeAttribute(t);case"boolean":var u=t.toLowerCase().slice(0,5);if("data-"!==u&&"aria-"!==u)return void e.removeAttribute(t)}e.setAttribute(t,""+n)}var r}function nt(e,t,n){if(null===n)e.removeAttribute(t);else{switch(typeof n){case"undefined":case"function":case"symbol":case"boolean":return void e.removeAttribute(t)}e.setAttribute(t,""+n)}}function ut(e,t,n,u){if(null===u)e.removeAttribute(n);else{switch(typeof u){case"undefined":case"function":case"symbol":case"boolean":return void e.removeAttribute(n)}e.setAttributeNS(t,n,""+u)}}function rt(e){if(void 0===Ge)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);Ge=t&&t[1]||"",Xe=-1<n.stack.indexOf("\n    at")?" (<anonymous>)":-1<n.stack.indexOf("@")?"@unknown:0:0":""}return"\n"+Ge+e+Xe}var at=!1;function lt(e,t){if(!e||at)return"";at=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var u={DetermineComponentFrameRoot:function(){try{if(t){var n=function(){throw Error()};if(Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(r){var u=r}Reflect.construct(e,[],n)}else{try{n.call()}catch(a){u=a}e.call(n.prototype)}}else{try{throw Error()}catch(l){u=l}(n=e())&&"function"===typeof n.catch&&n.catch(function(){})}}catch(o){if(o&&u&&"string"===typeof o.stack)return[o.stack,u.stack]}return[null,null]}};u.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var r=Object.getOwnPropertyDescriptor(u.DetermineComponentFrameRoot,"name");r&&r.configurable&&Object.defineProperty(u.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var a=u.DetermineComponentFrameRoot(),l=a[0],o=a[1];if(l&&o){var i=l.split("\n"),s=o.split("\n");for(r=u=0;u<i.length&&!i[u].includes("DetermineComponentFrameRoot");)u++;for(;r<s.length&&!s[r].includes("DetermineComponentFrameRoot");)r++;if(u===i.length||r===s.length)for(u=i.length-1,r=s.length-1;1<=u&&0<=r&&i[u]!==s[r];)r--;for(;1<=u&&0<=r;u--,r--)if(i[u]!==s[r]){if(1!==u||1!==r)do{if(u--,0>--r||i[u]!==s[r]){var c="\n"+i[u].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=u&&0<=r);break}}}finally{at=!1,Error.prepareStackTrace=n}return(n=e?e.displayName||e.name:"")?rt(n):""}function ot(e){switch(e.tag){case 26:case 27:case 5:return rt(e.type);case 16:return rt("Lazy");case 13:return rt("Suspense");case 19:return rt("SuspenseList");case 0:case 15:return lt(e.type,!1);case 11:return lt(e.type.render,!1);case 1:return lt(e.type,!0);case 31:return rt("Activity");default:return""}}function it(e){try{var t="";do{t+=ot(e),e=e.return}while(e);return t}catch(n){return"\nError generating stack: "+n.message+"\n"+n.stack}}function st(e){switch(typeof e){case"bigint":case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function ct(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function dt(e){e._valueTracker||(e._valueTracker=function(e){var t=ct(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),u=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){u=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return u},setValue:function(e){u=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ft(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),u="";return e&&(u=ct(e)?e.checked?"true":"false":e.value),(e=u)!==n&&(t.setValue(e),!0)}function Dt(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}var pt=/[\n"\\]/g;function ht(e){return e.replace(pt,function(e){return"\\"+e.charCodeAt(0).toString(16)+" "})}function mt(e,t,n,u,r,a,l,o){e.name="",null!=l&&"function"!==typeof l&&"symbol"!==typeof l&&"boolean"!==typeof l?e.type=l:e.removeAttribute("type"),null!=t?"number"===l?(0===t&&""===e.value||e.value!=t)&&(e.value=""+st(t)):e.value!==""+st(t)&&(e.value=""+st(t)):"submit"!==l&&"reset"!==l||e.removeAttribute("value"),null!=t?gt(e,l,st(t)):null!=n?gt(e,l,st(n)):null!=u&&e.removeAttribute("value"),null==r&&null!=a&&(e.defaultChecked=!!a),null!=r&&(e.checked=r&&"function"!==typeof r&&"symbol"!==typeof r),null!=o&&"function"!==typeof o&&"symbol"!==typeof o&&"boolean"!==typeof o?e.name=""+st(o):e.removeAttribute("name")}function Ft(e,t,n,u,r,a,l,o){if(null!=a&&"function"!==typeof a&&"symbol"!==typeof a&&"boolean"!==typeof a&&(e.type=a),null!=t||null!=n){if(!("submit"!==a&&"reset"!==a||void 0!==t&&null!==t))return;n=null!=n?""+st(n):"",t=null!=t?""+st(t):n,o||t===e.value||(e.value=t),e.defaultValue=t}u="function"!==typeof(u=null!=u?u:r)&&"symbol"!==typeof u&&!!u,e.checked=o?e.checked:!!u,e.defaultChecked=!!u,null!=l&&"function"!==typeof l&&"symbol"!==typeof l&&"boolean"!==typeof l&&(e.name=l)}function gt(e,t,n){"number"===t&&Dt(e.ownerDocument)===e||e.defaultValue===""+n||(e.defaultValue=""+n)}function yt(e,t,n,u){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&u&&(e[n].defaultSelected=!0)}else{for(n=""+st(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(u&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function bt(e,t,n){null==t||((t=""+st(t))!==e.value&&(e.value=t),null!=n)?e.defaultValue=null!=n?""+st(n):"":e.defaultValue!==t&&(e.defaultValue=t)}function vt(e,t,n,u){if(null==t){if(null!=u){if(null!=n)throw Error(l(92));if(j(u)){if(1<u.length)throw Error(l(93));u=u[0]}n=u}null==n&&(n=""),t=n}n=st(t),e.defaultValue=n,(u=e.textContent)===n&&""!==u&&null!==u&&(e.value=u)}function Et(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Ct=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function kt(e,t,n){var u=0===t.indexOf("--");null==n||"boolean"===typeof n||""===n?u?e.setProperty(t,""):"float"===t?e.cssFloat="":e[t]="":u?e.setProperty(t,n):"number"!==typeof n||0===n||Ct.has(t)?"float"===t?e.cssFloat=n:e[t]=(""+n).trim():e[t]=n+"px"}function At(e,t,n){if(null!=t&&"object"!==typeof t)throw Error(l(62));if(e=e.style,null!=n){for(var u in n)!n.hasOwnProperty(u)||null!=t&&t.hasOwnProperty(u)||(0===u.indexOf("--")?e.setProperty(u,""):"float"===u?e.cssFloat="":e[u]="");for(var r in t)u=t[r],t.hasOwnProperty(r)&&n[r]!==u&&kt(e,r,u)}else for(var a in t)t.hasOwnProperty(a)&&kt(e,a,t[a])}function wt(e){if(-1===e.indexOf("-"))return!1;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xt=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),St=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Bt(e){return St.test(""+e)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":e}var Nt=null;function Tt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Pt=null,jt=null;function _t(e){var t=$e(e);if(t&&(e=t.stateNode)){var n=e[je]||null;e:switch(e=t.stateNode,t.type){case"input":if(mt(e,n.value,n.defaultValue,n.defaultValue,n.checked,n.defaultChecked,n.type,n.name),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll('input[name="'+ht(""+t)+'"][type="radio"]'),t=0;t<n.length;t++){var u=n[t];if(u!==e&&u.form===e.form){var r=u[je]||null;if(!r)throw Error(l(90));mt(u,r.value,r.defaultValue,r.defaultValue,r.checked,r.defaultChecked,r.type,r.name)}}for(t=0;t<n.length;t++)(u=n[t]).form===e.form&&ft(u)}break e;case"textarea":bt(e,n.value,n.defaultValue);break e;case"select":null!=(t=n.value)&&yt(e,!!n.multiple,t,!1)}}}var zt=!1;function Rt(e,t,n){if(zt)return e(t,n);zt=!0;try{return e(t)}finally{if(zt=!1,(null!==Pt||null!==jt)&&(Us(),Pt&&(t=Pt,e=jt,jt=Pt=null,_t(t),e)))for(t=0;t<e.length;t++)_t(e[t])}}function Lt(e,t){var n=e.stateNode;if(null===n)return null;var u=n[je]||null;if(null===u)return null;n=u[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(u=!u.disabled)||(u=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!u;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(l(231,t,typeof n));return n}var Ot=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),Mt=!1;if(Ot)try{var It={};Object.defineProperty(It,"passive",{get:function(){Mt=!0}}),window.addEventListener("test",It,It),window.removeEventListener("test",It,It)}catch(_f){Mt=!1}var Ut=null,$t=null,Vt=null;function Ht(){if(Vt)return Vt;var e,t,n=$t,u=n.length,r="value"in Ut?Ut.value:Ut.textContent,a=r.length;for(e=0;e<u&&n[e]===r[e];e++);var l=u-e;for(t=1;t<=l&&n[u-t]===r[a-t];t++);return Vt=r.slice(e,1<t?1-t:void 0)}function qt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function Wt(){return!0}function Yt(){return!1}function Qt(e){function t(t,n,u,r,a){for(var l in this._reactName=t,this._targetInst=u,this.type=n,this.nativeEvent=r,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(r):r[l]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?Wt:Yt,this.isPropagationStopped=Yt,this}return f(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Wt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Wt)},persist:function(){},isPersistent:Wt}),t}var Kt,Gt,Xt,Zt={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Jt=Qt(Zt),en=f({},Zt,{view:0,detail:0}),tn=Qt(en),nn=f({},en,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:pn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==Xt&&(Xt&&"mousemove"===e.type?(Kt=e.screenX-Xt.screenX,Gt=e.screenY-Xt.screenY):Gt=Kt=0,Xt=e),Kt)},movementY:function(e){return"movementY"in e?e.movementY:Gt}}),un=Qt(nn),rn=Qt(f({},nn,{dataTransfer:0})),an=Qt(f({},en,{relatedTarget:0})),ln=Qt(f({},Zt,{animationName:0,elapsedTime:0,pseudoElement:0})),on=Qt(f({},Zt,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),sn=Qt(f({},Zt,{data:0})),cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},dn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Dn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=fn[e])&&!!t[e]}function pn(){return Dn}var hn=Qt(f({},en,{key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=qt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?dn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:pn,charCode:function(e){return"keypress"===e.type?qt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?qt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),mn=Qt(f({},nn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Fn=Qt(f({},en,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:pn})),gn=Qt(f({},Zt,{propertyName:0,elapsedTime:0,pseudoElement:0})),yn=Qt(f({},nn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),bn=Qt(f({},Zt,{newState:0,oldState:0})),vn=[9,13,27,32],En=Ot&&"CompositionEvent"in window,Cn=null;Ot&&"documentMode"in document&&(Cn=document.documentMode);var kn=Ot&&"TextEvent"in window&&!Cn,An=Ot&&(!En||Cn&&8<Cn&&11>=Cn),wn=String.fromCharCode(32),xn=!1;function Sn(e,t){switch(e){case"keyup":return-1!==vn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Nn=!1;var Tn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Pn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Tn[e.type]:"textarea"===t}function jn(e,t,n,u){Pt?jt?jt.push(u):jt=[u]:Pt=u,0<(t=Hc(t,"onChange")).length&&(n=new Jt("onChange","change",null,n,u),e.push({event:n,listeners:t}))}var _n=null,zn=null;function Rn(e){Rc(e,0)}function Ln(e){if(ft(Ve(e)))return e}function On(e,t){if("change"===e)return t}var Mn=!1;if(Ot){var In;if(Ot){var Un="oninput"in document;if(!Un){var $n=document.createElement("div");$n.setAttribute("oninput","return;"),Un="function"===typeof $n.oninput}In=Un}else In=!1;Mn=In&&(!document.documentMode||9<document.documentMode)}function Vn(){_n&&(_n.detachEvent("onpropertychange",Hn),zn=_n=null)}function Hn(e){if("value"===e.propertyName&&Ln(zn)){var t=[];jn(t,zn,e,Tt(e)),Rt(Rn,t)}}function qn(e,t,n){"focusin"===e?(Vn(),zn=n,(_n=t).attachEvent("onpropertychange",Hn)):"focusout"===e&&Vn()}function Wn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Ln(zn)}function Yn(e,t){if("click"===e)return Ln(t)}function Qn(e,t){if("input"===e||"change"===e)return Ln(t)}var Kn="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function Gn(e,t){if(Kn(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),u=Object.keys(t);if(n.length!==u.length)return!1;for(u=0;u<n.length;u++){var r=n[u];if(!G.call(t,r)||!Kn(e[r],t[r]))return!1}return!0}function Xn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Zn(e,t){var n,u=Xn(e);for(e=0;u;){if(3===u.nodeType){if(n=e+u.textContent.length,e<=t&&n>=t)return{node:u,offset:t-e};e=n}e:{for(;u;){if(u.nextSibling){u=u.nextSibling;break e}u=u.parentNode}u=void 0}u=Xn(u)}}function Jn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?Jn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function eu(e){for(var t=Dt((e=null!=e&&null!=e.ownerDocument&&null!=e.ownerDocument.defaultView?e.ownerDocument.defaultView:window).document);t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(u){n=!1}if(!n)break;t=Dt((e=t.contentWindow).document)}return t}function tu(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var nu=Ot&&"documentMode"in document&&11>=document.documentMode,uu=null,ru=null,au=null,lu=!1;function ou(e,t,n){var u=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;lu||null==uu||uu!==Dt(u)||("selectionStart"in(u=uu)&&tu(u)?u={start:u.selectionStart,end:u.selectionEnd}:u={anchorNode:(u=(u.ownerDocument&&u.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:u.anchorOffset,focusNode:u.focusNode,focusOffset:u.focusOffset},au&&Gn(au,u)||(au=u,0<(u=Hc(ru,"onSelect")).length&&(t=new Jt("onSelect","select",null,t,n),e.push({event:t,listeners:u}),t.target=uu)))}function iu(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var su={animationend:iu("Animation","AnimationEnd"),animationiteration:iu("Animation","AnimationIteration"),animationstart:iu("Animation","AnimationStart"),transitionrun:iu("Transition","TransitionRun"),transitionstart:iu("Transition","TransitionStart"),transitioncancel:iu("Transition","TransitionCancel"),transitionend:iu("Transition","TransitionEnd")},cu={},du={};function fu(e){if(cu[e])return cu[e];if(!su[e])return e;var t,n=su[e];for(t in n)if(n.hasOwnProperty(t)&&t in du)return cu[e]=n[t];return e}Ot&&(du=document.createElement("div").style,"AnimationEvent"in window||(delete su.animationend.animation,delete su.animationiteration.animation,delete su.animationstart.animation),"TransitionEvent"in window||delete su.transitionend.transition);var Du=fu("animationend"),pu=fu("animationiteration"),hu=fu("animationstart"),mu=fu("transitionrun"),Fu=fu("transitionstart"),gu=fu("transitioncancel"),yu=fu("transitionend"),bu=new Map,vu="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Eu(e,t){bu.set(e,t),Qe(t,[e])}vu.push("scrollEnd");var Cu=new WeakMap;function ku(e,t){if("object"===typeof e&&null!==e){var n=Cu.get(e);return void 0!==n?n:(t={value:e,source:t,stack:it(t)},Cu.set(e,t),t)}return{value:e,source:t,stack:it(t)}}var Au=[],wu=0,xu=0;function Su(){for(var e=wu,t=xu=wu=0;t<e;){var n=Au[t];Au[t++]=null;var u=Au[t];Au[t++]=null;var r=Au[t];Au[t++]=null;var a=Au[t];if(Au[t++]=null,null!==u&&null!==r){var l=u.pending;null===l?r.next=r:(r.next=l.next,l.next=r),u.pending=r}0!==a&&Pu(n,r,a)}}function Bu(e,t,n,u){Au[wu++]=e,Au[wu++]=t,Au[wu++]=n,Au[wu++]=u,xu|=u,e.lanes|=u,null!==(e=e.alternate)&&(e.lanes|=u)}function Nu(e,t,n,u){return Bu(e,t,n,u),ju(e)}function Tu(e,t){return Bu(e,null,null,t),ju(e)}function Pu(e,t,n){e.lanes|=n;var u=e.alternate;null!==u&&(u.lanes|=n);for(var r=!1,a=e.return;null!==a;)a.childLanes|=n,null!==(u=a.alternate)&&(u.childLanes|=n),22===a.tag&&(null===(e=a.stateNode)||1&e._visibility||(r=!0)),e=a,a=a.return;return 3===e.tag?(a=e.stateNode,r&&null!==t&&(r=31-De(n),null===(u=(e=a.hiddenUpdates)[r])?e[r]=[t]:u.push(t),t.lane=536870912|n),a):null}function ju(e){if(50<Ps)throw Ps=0,js=null,Error(l(185));for(var t=e.return;null!==t;)t=(e=t).return;return 3===e.tag?e.stateNode:null}var _u={};function zu(e,t,n,u){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=u,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ru(e,t,n,u){return new zu(e,t,n,u)}function Lu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ou(e,t){var n=e.alternate;return null===n?((n=Ru(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=65011712&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n.refCleanup=e.refCleanup,n}function Mu(e,t){e.flags&=65011714;var n=e.alternate;return null===n?(e.childLanes=0,e.lanes=t,e.child=null,e.subtreeFlags=0,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null):(e.childLanes=n.childLanes,e.lanes=n.lanes,e.child=n.child,e.subtreeFlags=0,e.deletions=null,e.memoizedProps=n.memoizedProps,e.memoizedState=n.memoizedState,e.updateQueue=n.updateQueue,e.type=n.type,t=n.dependencies,e.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext}),e}function Iu(e,t,n,u,r,a){var o=0;if(u=e,"function"===typeof e)Lu(e)&&(o=1);else if("string"===typeof e)o=function(e,t,n){if(1===n||null!=t.itemProp)return!1;switch(e){case"meta":case"title":return!0;case"style":if("string"!==typeof t.precedence||"string"!==typeof t.href||""===t.href)break;return!0;case"link":if("string"!==typeof t.rel||"string"!==typeof t.href||""===t.href||t.onLoad||t.onError)break;return"stylesheet"!==t.rel||(e=t.disabled,"string"===typeof t.precedence&&null==e);case"script":if(t.async&&"function"!==typeof t.async&&"symbol"!==typeof t.async&&!t.onLoad&&!t.onError&&t.src&&"string"===typeof t.src)return!0}return!1}(e,n,$.current)?26:"html"===e||"head"===e||"body"===e?27:5;else e:switch(e){case x:return(e=Ru(31,n,t,r)).elementType=x,e.lanes=a,e;case m:return Uu(n.children,r,a,t);case F:o=8,r|=24;break;case g:return(e=Ru(12,n,t,2|r)).elementType=g,e.lanes=a,e;case C:return(e=Ru(13,n,t,r)).elementType=C,e.lanes=a,e;case k:return(e=Ru(19,n,t,r)).elementType=k,e.lanes=a,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case y:case v:o=10;break e;case b:o=9;break e;case E:o=11;break e;case A:o=14;break e;case w:o=16,u=null;break e}o=29,n=Error(l(130,null===e?"null":typeof e,"")),u=null}return(t=Ru(o,n,t,r)).elementType=e,t.type=u,t.lanes=a,t}function Uu(e,t,n,u){return(e=Ru(7,e,u,t)).lanes=n,e}function $u(e,t,n){return(e=Ru(6,e,null,t)).lanes=n,e}function Vu(e,t,n){return(t=Ru(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}var Hu=[],qu=0,Wu=null,Yu=0,Qu=[],Ku=0,Gu=null,Xu=1,Zu="";function Ju(e,t){Hu[qu++]=Yu,Hu[qu++]=Wu,Wu=e,Yu=t}function er(e,t,n){Qu[Ku++]=Xu,Qu[Ku++]=Zu,Qu[Ku++]=Gu,Gu=e;var u=Xu;e=Zu;var r=32-De(u)-1;u&=~(1<<r),n+=1;var a=32-De(t)+r;if(30<a){var l=r-r%5;a=(u&(1<<l)-1).toString(32),u>>=l,r-=l,Xu=1<<32-De(t)+r|n<<r|u,Zu=a+e}else Xu=1<<a|n<<r|u,Zu=e}function tr(e){null!==e.return&&(Ju(e,1),er(e,1,0))}function nr(e){for(;e===Wu;)Wu=Hu[--qu],Hu[qu]=null,Yu=Hu[--qu],Hu[qu]=null;for(;e===Gu;)Gu=Qu[--Ku],Qu[Ku]=null,Zu=Qu[--Ku],Qu[Ku]=null,Xu=Qu[--Ku],Qu[Ku]=null}var ur=null,rr=null,ar=!1,lr=null,or=!1,ir=Error(l(519));function sr(e){throw hr(ku(Error(l(418,"")),e)),ir}function cr(e){var t=e.stateNode,n=e.type,u=e.memoizedProps;switch(t[Pe]=e,t[je]=u,n){case"dialog":Lc("cancel",t),Lc("close",t);break;case"iframe":case"object":case"embed":Lc("load",t);break;case"video":case"audio":for(n=0;n<_c.length;n++)Lc(_c[n],t);break;case"source":Lc("error",t);break;case"img":case"image":case"link":Lc("error",t),Lc("load",t);break;case"details":Lc("toggle",t);break;case"input":Lc("invalid",t),Ft(t,u.value,u.defaultValue,u.checked,u.defaultChecked,u.type,u.name,!0),dt(t);break;case"select":Lc("invalid",t);break;case"textarea":Lc("invalid",t),vt(t,u.value,u.defaultValue,u.children),dt(t)}"string"!==typeof(n=u.children)&&"number"!==typeof n&&"bigint"!==typeof n||t.textContent===""+n||!0===u.suppressHydrationWarning||Gc(t.textContent,n)?(null!=u.popover&&(Lc("beforetoggle",t),Lc("toggle",t)),null!=u.onScroll&&Lc("scroll",t),null!=u.onScrollEnd&&Lc("scrollend",t),null!=u.onClick&&(t.onclick=Xc),t=!0):t=!1,t||sr(e)}function dr(e){for(ur=e.return;ur;)switch(ur.tag){case 5:case 13:return void(or=!1);case 27:case 3:return void(or=!0);default:ur=ur.return}}function fr(e){if(e!==ur)return!1;if(!ar)return dr(e),ar=!0,!1;var t,n=e.tag;if((t=3!==n&&27!==n)&&((t=5===n)&&(t=!("form"!==(t=e.type)&&"button"!==t)||ld(e.type,e.memoizedProps)),t=!t),t&&rr&&sr(e),dr(e),13===n){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType)if("/$"===(t=e.data)){if(0===n){rr=Fd(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++;e=e.nextSibling}rr=null}}else 27===n?(n=rr,Dd(e.type)?(e=gd,gd=null,rr=e):rr=n):rr=ur?Fd(e.stateNode.nextSibling):null;return!0}function Dr(){rr=ur=null,ar=!1}function pr(){var e=lr;return null!==e&&(null===ys?ys=e:ys.push.apply(ys,e),lr=null),e}function hr(e){null===lr?lr=[e]:lr.push(e)}var mr=M(null),Fr=null,gr=null;function yr(e,t,n){U(mr,t._currentValue),t._currentValue=n}function br(e){e._currentValue=mr.current,I(mr)}function vr(e,t,n){for(;null!==e;){var u=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==u&&(u.childLanes|=t)):null!==u&&(u.childLanes&t)!==t&&(u.childLanes|=t),e===n)break;e=e.return}}function Er(e,t,n,u){var r=e.child;for(null!==r&&(r.return=e);null!==r;){var a=r.dependencies;if(null!==a){var o=r.child;a=a.firstContext;e:for(;null!==a;){var i=a;a=r;for(var s=0;s<t.length;s++)if(i.context===t[s]){a.lanes|=n,null!==(i=a.alternate)&&(i.lanes|=n),vr(a.return,n,e),u||(o=null);break e}a=i.next}}else if(18===r.tag){if(null===(o=r.return))throw Error(l(341));o.lanes|=n,null!==(a=o.alternate)&&(a.lanes|=n),vr(o,n,e),o=null}else o=r.child;if(null!==o)o.return=r;else for(o=r;null!==o;){if(o===e){o=null;break}if(null!==(r=o.sibling)){r.return=o.return,o=r;break}o=o.return}r=o}}function Cr(e,t,n,u){e=null;for(var r=t,a=!1;null!==r;){if(!a)if(0!==(524288&r.flags))a=!0;else if(0!==(262144&r.flags))break;if(10===r.tag){var o=r.alternate;if(null===o)throw Error(l(387));if(null!==(o=o.memoizedProps)){var i=r.type;Kn(r.pendingProps.value,o.value)||(null!==e?e.push(i):e=[i])}}else if(r===q.current){if(null===(o=r.alternate))throw Error(l(387));o.memoizedState.memoizedState!==r.memoizedState.memoizedState&&(null!==e?e.push(Qd):e=[Qd])}r=r.return}null!==e&&Er(t,e,n,u),t.flags|=262144}function kr(e){for(e=e.firstContext;null!==e;){if(!Kn(e.context._currentValue,e.memoizedValue))return!0;e=e.next}return!1}function Ar(e){Fr=e,gr=null,null!==(e=e.dependencies)&&(e.firstContext=null)}function wr(e){return Sr(Fr,e)}function xr(e,t){return null===Fr&&Ar(e),Sr(e,t)}function Sr(e,t){var n=t._currentValue;if(t={context:t,memoizedValue:n,next:null},null===gr){if(null===e)throw Error(l(308));gr=t,e.dependencies={lanes:0,firstContext:t},e.flags|=524288}else gr=gr.next=t;return n}var Br="undefined"!==typeof AbortController?AbortController:function(){var e=[],t=this.signal={aborted:!1,addEventListener:function(t,n){e.push(n)}};this.abort=function(){t.aborted=!0,e.forEach(function(e){return e()})}},Nr=u.unstable_scheduleCallback,Tr=u.unstable_NormalPriority,Pr={$$typeof:v,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function jr(){return{controller:new Br,data:new Map,refCount:0}}function _r(e){e.refCount--,0===e.refCount&&Nr(Tr,function(){e.controller.abort()})}var zr=null,Rr=0,Lr=0,Or=null;function Mr(){if(0===--Rr&&null!==zr){null!==Or&&(Or.status="fulfilled");var e=zr;zr=null,Lr=0,Or=null;for(var t=0;t<e.length;t++)(0,e[t])()}}var Ir=_.S;_.S=function(e,t){"object"===typeof t&&null!==t&&"function"===typeof t.then&&function(e,t){if(null===zr){var n=zr=[];Rr=0,Lr=Bc(),Or={status:"pending",value:void 0,then:function(e){n.push(e)}}}Rr++,t.then(Mr,Mr)}(0,t),null!==Ir&&Ir(e,t)};var Ur=M(null);function $r(){var e=Ur.current;return null!==e?e:us.pooledCache}function Vr(e,t){U(Ur,null===t?Ur.current:t.pool)}function Hr(){var e=$r();return null===e?null:{parent:Pr._currentValue,pool:e}}var qr=Error(l(460)),Wr=Error(l(474)),Yr=Error(l(542)),Qr={then:function(){}};function Kr(e){return"fulfilled"===(e=e.status)||"rejected"===e}function Gr(){}function Xr(e,t,n){switch(void 0===(n=e[n])?e.push(t):n!==t&&(t.then(Gr,Gr),t=n),t.status){case"fulfilled":return t.value;case"rejected":throw ea(e=t.reason),e;default:if("string"===typeof t.status)t.then(Gr,Gr);else{if(null!==(e=us)&&100<e.shellSuspendCounter)throw Error(l(482));(e=t).status="pending",e.then(function(e){if("pending"===t.status){var n=t;n.status="fulfilled",n.value=e}},function(e){if("pending"===t.status){var n=t;n.status="rejected",n.reason=e}})}switch(t.status){case"fulfilled":return t.value;case"rejected":throw ea(e=t.reason),e}throw Zr=t,qr}}var Zr=null;function Jr(){if(null===Zr)throw Error(l(459));var e=Zr;return Zr=null,e}function ea(e){if(e===qr||e===Yr)throw Error(l(483))}var ta=!1;function na(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function ua(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,callbacks:null})}function ra(e){return{lane:e,tag:0,payload:null,callback:null,next:null}}function aa(e,t,n){var u=e.updateQueue;if(null===u)return null;if(u=u.shared,0!==(2&ns)){var r=u.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),u.pending=t,t=ju(e),Pu(e,null,n),t}return Bu(e,u,t,n),ju(e)}function la(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194048&n))){var u=t.lanes;n|=u&=e.pendingLanes,t.lanes=n,xe(e,n)}}function oa(e,t){var n=e.updateQueue,u=e.alternate;if(null!==u&&n===(u=u.updateQueue)){var r=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var l={lane:n.lane,tag:n.tag,payload:n.payload,callback:null,next:null};null===a?r=a=l:a=a.next=l,n=n.next}while(null!==n);null===a?r=a=t:a=a.next=t}else r=a=t;return n={baseState:u.baseState,firstBaseUpdate:r,lastBaseUpdate:a,shared:u.shared,callbacks:u.callbacks},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}var ia=!1;function sa(){if(ia){if(null!==Or)throw Or}}function ca(e,t,n,u){ia=!1;var r=e.updateQueue;ta=!1;var a=r.firstBaseUpdate,l=r.lastBaseUpdate,o=r.shared.pending;if(null!==o){r.shared.pending=null;var i=o,s=i.next;i.next=null,null===l?a=s:l.next=s,l=i;var c=e.alternate;null!==c&&((o=(c=c.updateQueue).lastBaseUpdate)!==l&&(null===o?c.firstBaseUpdate=s:o.next=s,c.lastBaseUpdate=i))}if(null!==a){var d=r.baseState;for(l=0,c=s=i=null,o=a;;){var D=-536870913&o.lane,p=D!==o.lane;if(p?(as&D)===D:(u&D)===D){0!==D&&D===Lr&&(ia=!0),null!==c&&(c=c.next={lane:0,tag:o.tag,payload:o.payload,callback:null,next:null});e:{var h=e,m=o;D=t;var F=n;switch(m.tag){case 1:if("function"===typeof(h=m.payload)){d=h.call(F,d,D);break e}d=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null===(D="function"===typeof(h=m.payload)?h.call(F,d,D):h)||void 0===D)break e;d=f({},d,D);break e;case 2:ta=!0}}null!==(D=o.callback)&&(e.flags|=64,p&&(e.flags|=8192),null===(p=r.callbacks)?r.callbacks=[D]:p.push(D))}else p={lane:D,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(s=c=p,i=d):c=c.next=p,l|=D;if(null===(o=o.next)){if(null===(o=r.shared.pending))break;o=(p=o).next,p.next=null,r.lastBaseUpdate=p,r.shared.pending=null}}null===c&&(i=d),r.baseState=i,r.firstBaseUpdate=s,r.lastBaseUpdate=c,null===a&&(r.shared.lanes=0),Ds|=l,e.lanes=l,e.memoizedState=d}}function da(e,t){if("function"!==typeof e)throw Error(l(191,e));e.call(t)}function fa(e,t){var n=e.callbacks;if(null!==n)for(e.callbacks=null,e=0;e<n.length;e++)da(n[e],t)}var Da=M(null),pa=M(0);function ha(e,t){U(pa,e=ds),U(Da,t),ds=e|t.baseLanes}function ma(){U(pa,ds),U(Da,Da.current)}function Fa(){ds=pa.current,I(Da),I(pa)}var ga=0,ya=null,ba=null,va=null,Ea=!1,Ca=!1,ka=!1,Aa=0,wa=0,xa=null,Sa=0;function Ba(){throw Error(l(321))}function Na(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Kn(e[n],t[n]))return!1;return!0}function Ta(e,t,n,u,r,a){return ga=a,ya=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,_.H=null===e||null===e.memoizedState?ql:Wl,ka=!1,a=n(u,r),ka=!1,Ca&&(a=ja(t,n,u,r)),Pa(e),a}function Pa(e){_.H=Hl;var t=null!==ba&&null!==ba.next;if(ga=0,va=ba=ya=null,Ea=!1,wa=0,xa=null,t)throw Error(l(300));null===e||xo||null!==(e=e.dependencies)&&kr(e)&&(xo=!0)}function ja(e,t,n,u){ya=e;var r=0;do{if(Ca&&(xa=null),wa=0,Ca=!1,25<=r)throw Error(l(301));if(r+=1,va=ba=null,null!=e.updateQueue){var a=e.updateQueue;a.lastEffect=null,a.events=null,a.stores=null,null!=a.memoCache&&(a.memoCache.index=0)}_.H=Yl,a=t(n,u)}while(Ca);return a}function _a(){var e=_.H,t=e.useState()[0];return t="function"===typeof t.then?Ia(t):t,e=e.useState()[0],(null!==ba?ba.memoizedState:null)!==e&&(ya.flags|=1024),t}function za(){var e=0!==Aa;return Aa=0,e}function Ra(e,t,n){t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~n}function La(e){if(Ea){for(e=e.memoizedState;null!==e;){var t=e.queue;null!==t&&(t.pending=null),e=e.next}Ea=!1}ga=0,va=ba=ya=null,Ca=!1,wa=Aa=0,xa=null}function Oa(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===va?ya.memoizedState=va=e:va=va.next=e,va}function Ma(){if(null===ba){var e=ya.alternate;e=null!==e?e.memoizedState:null}else e=ba.next;var t=null===va?ya.memoizedState:va.next;if(null!==t)va=t,ba=e;else{if(null===e){if(null===ya.alternate)throw Error(l(467));throw Error(l(310))}e={memoizedState:(ba=e).memoizedState,baseState:ba.baseState,baseQueue:ba.baseQueue,queue:ba.queue,next:null},null===va?ya.memoizedState=va=e:va=va.next=e}return va}function Ia(e){var t=wa;return wa+=1,null===xa&&(xa=[]),e=Xr(xa,e,t),t=ya,null===(null===va?t.memoizedState:va.next)&&(t=t.alternate,_.H=null===t||null===t.memoizedState?ql:Wl),e}function Ua(e){if(null!==e&&"object"===typeof e){if("function"===typeof e.then)return Ia(e);if(e.$$typeof===v)return wr(e)}throw Error(l(438,String(e)))}function $a(e){var t=null,n=ya.updateQueue;if(null!==n&&(t=n.memoCache),null==t){var u=ya.alternate;null!==u&&(null!==(u=u.updateQueue)&&(null!=(u=u.memoCache)&&(t={data:u.data.map(function(e){return e.slice()}),index:0})))}if(null==t&&(t={data:[],index:0}),null===n&&(n={lastEffect:null,events:null,stores:null,memoCache:null},ya.updateQueue=n),n.memoCache=t,void 0===(n=t.data[t.index]))for(n=t.data[t.index]=Array(e),u=0;u<e;u++)n[u]=S;return t.index++,n}function Va(e,t){return"function"===typeof t?t(e):t}function Ha(e){return qa(Ma(),ba,e)}function qa(e,t,n){var u=e.queue;if(null===u)throw Error(l(311));u.lastRenderedReducer=n;var r=e.baseQueue,a=u.pending;if(null!==a){if(null!==r){var o=r.next;r.next=a.next,a.next=o}t.baseQueue=r=a,u.pending=null}if(a=e.baseState,null===r)e.memoizedState=a;else{var i=o=null,s=null,c=t=r.next,d=!1;do{var f=-536870913&c.lane;if(f!==c.lane?(as&f)===f:(ga&f)===f){var D=c.revertLane;if(0===D)null!==s&&(s=s.next={lane:0,revertLane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),f===Lr&&(d=!0);else{if((ga&D)===D){c=c.next,D===Lr&&(d=!0);continue}f={lane:0,revertLane:c.revertLane,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null},null===s?(i=s=f,o=a):s=s.next=f,ya.lanes|=D,Ds|=D}f=c.action,ka&&n(a,f),a=c.hasEagerState?c.eagerState:n(a,f)}else D={lane:f,revertLane:c.revertLane,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null},null===s?(i=s=D,o=a):s=s.next=D,ya.lanes|=f,Ds|=f;c=c.next}while(null!==c&&c!==t);if(null===s?o=a:s.next=i,!Kn(a,e.memoizedState)&&(xo=!0,d&&null!==(n=Or)))throw n;e.memoizedState=a,e.baseState=o,e.baseQueue=s,u.lastRenderedState=a}return null===r&&(u.lanes=0),[e.memoizedState,u.dispatch]}function Wa(e){var t=Ma(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var u=n.dispatch,r=n.pending,a=t.memoizedState;if(null!==r){n.pending=null;var o=r=r.next;do{a=e(a,o.action),o=o.next}while(o!==r);Kn(a,t.memoizedState)||(xo=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,u]}function Ya(e,t,n){var u=ya,r=Ma(),a=ar;if(a){if(void 0===n)throw Error(l(407));n=n()}else n=t();var o=!Kn((ba||r).memoizedState,n);if(o&&(r.memoizedState=n,xo=!0),r=r.queue,ml(2048,8,Ga.bind(null,u,r,e),[e]),r.getSnapshot!==t||o||null!==va&&1&va.memoizedState.tag){if(u.flags|=2048,Dl(9,{destroy:void 0,resource:void 0},Ka.bind(null,u,r,n,t),null),null===us)throw Error(l(349));a||0!==(124&ga)||Qa(u,t,n)}return n}function Qa(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ya.updateQueue)?(t={lastEffect:null,events:null,stores:null,memoCache:null},ya.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ka(e,t,n,u){t.value=n,t.getSnapshot=u,Xa(t)&&Za(e)}function Ga(e,t,n){return n(function(){Xa(t)&&Za(e)})}function Xa(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!Kn(e,n)}catch(u){return!0}}function Za(e){var t=Tu(e,2);null!==t&&Rs(t,e,2)}function Ja(e){var t=Oa();if("function"===typeof e){var n=e;if(e=n(),ka){fe(!0);try{n()}finally{fe(!1)}}}return t.memoizedState=t.baseState=e,t.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Va,lastRenderedState:e},t}function el(e,t,n,u){return e.baseState=n,qa(e,ba,"function"===typeof u?u:Va)}function tl(e,t,n,u,r){if(Ul(e))throw Error(l(485));if(null!==(e=t.action)){var a={payload:r,action:e,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(e){a.listeners.push(e)}};null!==_.T?n(!0):a.isTransition=!1,u(a),null===(n=t.pending)?(a.next=t.pending=a,nl(t,a)):(a.next=n.next,t.pending=n.next=a)}}function nl(e,t){var n=t.action,u=t.payload,r=e.state;if(t.isTransition){var a=_.T,l={};_.T=l;try{var o=n(r,u),i=_.S;null!==i&&i(l,o),ul(e,t,o)}catch(s){al(e,t,s)}finally{_.T=a}}else try{ul(e,t,a=n(r,u))}catch(c){al(e,t,c)}}function ul(e,t,n){null!==n&&"object"===typeof n&&"function"===typeof n.then?n.then(function(n){rl(e,t,n)},function(n){return al(e,t,n)}):rl(e,t,n)}function rl(e,t,n){t.status="fulfilled",t.value=n,ll(t),e.state=n,null!==(t=e.pending)&&((n=t.next)===t?e.pending=null:(n=n.next,t.next=n,nl(e,n)))}function al(e,t,n){var u=e.pending;if(e.pending=null,null!==u){u=u.next;do{t.status="rejected",t.reason=n,ll(t),t=t.next}while(t!==u)}e.action=null}function ll(e){e=e.listeners;for(var t=0;t<e.length;t++)(0,e[t])()}function ol(e,t){return t}function il(e,t){if(ar){var n=us.formState;if(null!==n){e:{var u=ya;if(ar){if(rr){t:{for(var r=rr,a=or;8!==r.nodeType;){if(!a){r=null;break t}if(null===(r=Fd(r.nextSibling))){r=null;break t}}r="F!"===(a=r.data)||"F"===a?r:null}if(r){rr=Fd(r.nextSibling),u="F!"===r.data;break e}}sr(u)}u=!1}u&&(t=n[0])}}return(n=Oa()).memoizedState=n.baseState=t,u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:ol,lastRenderedState:t},n.queue=u,n=Ol.bind(null,ya,u),u.dispatch=n,u=Ja(!1),a=Il.bind(null,ya,!1,u.queue),r={state:t,dispatch:null,action:e,pending:null},(u=Oa()).queue=r,n=tl.bind(null,ya,r,a,n),r.dispatch=n,u.memoizedState=e,[t,n,!1]}function sl(e){return cl(Ma(),ba,e)}function cl(e,t,n){if(t=qa(e,t,ol)[0],e=Ha(Va)[0],"object"===typeof t&&null!==t&&"function"===typeof t.then)try{var u=Ia(t)}catch(l){if(l===qr)throw Yr;throw l}else u=t;var r=(t=Ma()).queue,a=r.dispatch;return n!==t.memoizedState&&(ya.flags|=2048,Dl(9,{destroy:void 0,resource:void 0},dl.bind(null,r,n),null)),[u,a,e]}function dl(e,t){e.action=t}function fl(e){var t=Ma(),n=ba;if(null!==n)return cl(t,n,e);Ma(),t=t.memoizedState;var u=(n=Ma()).queue.dispatch;return n.memoizedState=e,[t,u,!1]}function Dl(e,t,n,u){return e={tag:e,create:n,deps:u,inst:t,next:null},null===(t=ya.updateQueue)&&(t={lastEffect:null,events:null,stores:null,memoCache:null},ya.updateQueue=t),null===(n=t.lastEffect)?t.lastEffect=e.next=e:(u=n.next,n.next=e,e.next=u,t.lastEffect=e),e}function pl(){return Ma().memoizedState}function hl(e,t,n,u){var r=Oa();u=void 0===u?null:u,ya.flags|=e,r.memoizedState=Dl(1|t,{destroy:void 0,resource:void 0},n,u)}function ml(e,t,n,u){var r=Ma();u=void 0===u?null:u;var a=r.memoizedState.inst;null!==ba&&null!==u&&Na(u,ba.memoizedState.deps)?r.memoizedState=Dl(t,a,n,u):(ya.flags|=e,r.memoizedState=Dl(1|t,a,n,u))}function Fl(e,t){hl(8390656,8,e,t)}function gl(e,t){ml(2048,8,e,t)}function yl(e,t){return ml(4,2,e,t)}function bl(e,t){return ml(4,4,e,t)}function vl(e,t){if("function"===typeof t){e=e();var n=t(e);return function(){"function"===typeof n?n():t(null)}}if(null!==t&&void 0!==t)return e=e(),t.current=e,function(){t.current=null}}function El(e,t,n){n=null!==n&&void 0!==n?n.concat([e]):null,ml(4,4,vl.bind(null,t,e),n)}function Cl(){}function kl(e,t){var n=Ma();t=void 0===t?null:t;var u=n.memoizedState;return null!==t&&Na(t,u[1])?u[0]:(n.memoizedState=[e,t],e)}function Al(e,t){var n=Ma();t=void 0===t?null:t;var u=n.memoizedState;if(null!==t&&Na(t,u[1]))return u[0];if(u=e(),ka){fe(!0);try{e()}finally{fe(!1)}}return n.memoizedState=[u,t],u}function wl(e,t,n){return void 0===n||0!==(1073741824&ga)?e.memoizedState=t:(e.memoizedState=n,e=zs(),ya.lanes|=e,Ds|=e,n)}function xl(e,t,n,u){return Kn(n,t)?n:null!==Da.current?(e=wl(e,n,u),Kn(e,t)||(xo=!0),e):0===(42&ga)?(xo=!0,e.memoizedState=n):(e=zs(),ya.lanes|=e,Ds|=e,t)}function Sl(e,t,n,u,r){var a=z.p;z.p=0!==a&&8>a?a:8;var l=_.T,o={};_.T=o,Il(e,!1,t,n);try{var i=r(),s=_.S;if(null!==s&&s(o,i),null!==i&&"object"===typeof i&&"function"===typeof i.then)Ml(e,t,function(e,t){var n=[],u={status:"pending",value:null,reason:null,then:function(e){n.push(e)}};return e.then(function(){u.status="fulfilled",u.value=t;for(var e=0;e<n.length;e++)(0,n[e])(t)},function(e){for(u.status="rejected",u.reason=e,e=0;e<n.length;e++)(0,n[e])(void 0)}),u}(i,u),_s());else Ml(e,t,u,_s())}catch(c){Ml(e,t,{then:function(){},status:"rejected",reason:c},_s())}finally{z.p=a,_.T=l}}function Bl(){}function Nl(e,t,n,u){if(5!==e.tag)throw Error(l(476));var r=Tl(e).queue;Sl(e,r,t,R,null===n?Bl:function(){return Pl(e),n(u)})}function Tl(e){var t=e.memoizedState;if(null!==t)return t;var n={};return(t={memoizedState:R,baseState:R,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Va,lastRenderedState:R},next:null}).next={memoizedState:n,baseState:n,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Va,lastRenderedState:n},next:null},e.memoizedState=t,null!==(e=e.alternate)&&(e.memoizedState=t),t}function Pl(e){Ml(e,Tl(e).next.queue,{},_s())}function jl(){return wr(Qd)}function _l(){return Ma().memoizedState}function zl(){return Ma().memoizedState}function Rl(e){for(var t=e.return;null!==t;){switch(t.tag){case 24:case 3:var n=_s(),u=aa(t,e=ra(n),n);return null!==u&&(Rs(u,t,n),la(u,t,n)),t={cache:jr()},void(e.payload=t)}t=t.return}}function Ll(e,t,n){var u=_s();n={lane:u,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null},Ul(e)?$l(t,n):null!==(n=Nu(e,t,n,u))&&(Rs(n,e,u),Vl(n,t,u))}function Ol(e,t,n){Ml(e,t,n,_s())}function Ml(e,t,n,u){var r={lane:u,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null};if(Ul(e))$l(t,r);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var l=t.lastRenderedState,o=a(l,n);if(r.hasEagerState=!0,r.eagerState=o,Kn(o,l))return Bu(e,t,r,0),null===us&&Su(),!1}catch(i){}if(null!==(n=Nu(e,t,r,u)))return Rs(n,e,u),Vl(n,t,u),!0}return!1}function Il(e,t,n,u){if(u={lane:2,revertLane:Bc(),action:u,hasEagerState:!1,eagerState:null,next:null},Ul(e)){if(t)throw Error(l(479))}else null!==(t=Nu(e,n,u,2))&&Rs(t,e,2)}function Ul(e){var t=e.alternate;return e===ya||null!==t&&t===ya}function $l(e,t){Ca=Ea=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Vl(e,t,n){if(0!==(4194048&n)){var u=t.lanes;n|=u&=e.pendingLanes,t.lanes=n,xe(e,n)}}var Hl={readContext:wr,use:Ua,useCallback:Ba,useContext:Ba,useEffect:Ba,useImperativeHandle:Ba,useLayoutEffect:Ba,useInsertionEffect:Ba,useMemo:Ba,useReducer:Ba,useRef:Ba,useState:Ba,useDebugValue:Ba,useDeferredValue:Ba,useTransition:Ba,useSyncExternalStore:Ba,useId:Ba,useHostTransitionStatus:Ba,useFormState:Ba,useActionState:Ba,useOptimistic:Ba,useMemoCache:Ba,useCacheRefresh:Ba},ql={readContext:wr,use:Ua,useCallback:function(e,t){return Oa().memoizedState=[e,void 0===t?null:t],e},useContext:wr,useEffect:Fl,useImperativeHandle:function(e,t,n){n=null!==n&&void 0!==n?n.concat([e]):null,hl(4194308,4,vl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return hl(4194308,4,e,t)},useInsertionEffect:function(e,t){hl(4,2,e,t)},useMemo:function(e,t){var n=Oa();t=void 0===t?null:t;var u=e();if(ka){fe(!0);try{e()}finally{fe(!1)}}return n.memoizedState=[u,t],u},useReducer:function(e,t,n){var u=Oa();if(void 0!==n){var r=n(t);if(ka){fe(!0);try{n(t)}finally{fe(!1)}}}else r=t;return u.memoizedState=u.baseState=r,e={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:r},u.queue=e,e=e.dispatch=Ll.bind(null,ya,e),[u.memoizedState,e]},useRef:function(e){return e={current:e},Oa().memoizedState=e},useState:function(e){var t=(e=Ja(e)).queue,n=Ol.bind(null,ya,t);return t.dispatch=n,[e.memoizedState,n]},useDebugValue:Cl,useDeferredValue:function(e,t){return wl(Oa(),e,t)},useTransition:function(){var e=Ja(!1);return e=Sl.bind(null,ya,e.queue,!0,!1),Oa().memoizedState=e,[!1,e]},useSyncExternalStore:function(e,t,n){var u=ya,r=Oa();if(ar){if(void 0===n)throw Error(l(407));n=n()}else{if(n=t(),null===us)throw Error(l(349));0!==(124&as)||Qa(u,t,n)}r.memoizedState=n;var a={value:n,getSnapshot:t};return r.queue=a,Fl(Ga.bind(null,u,a,e),[e]),u.flags|=2048,Dl(9,{destroy:void 0,resource:void 0},Ka.bind(null,u,a,n,t),null),n},useId:function(){var e=Oa(),t=us.identifierPrefix;if(ar){var n=Zu;t="\xab"+t+"R"+(n=(Xu&~(1<<32-De(Xu)-1)).toString(32)+n),0<(n=Aa++)&&(t+="H"+n.toString(32)),t+="\xbb"}else t="\xab"+t+"r"+(n=Sa++).toString(32)+"\xbb";return e.memoizedState=t},useHostTransitionStatus:jl,useFormState:il,useActionState:il,useOptimistic:function(e){var t=Oa();t.memoizedState=t.baseState=e;var n={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return t.queue=n,t=Il.bind(null,ya,!0,n),n.dispatch=t,[e,t]},useMemoCache:$a,useCacheRefresh:function(){return Oa().memoizedState=Rl.bind(null,ya)}},Wl={readContext:wr,use:Ua,useCallback:kl,useContext:wr,useEffect:gl,useImperativeHandle:El,useInsertionEffect:yl,useLayoutEffect:bl,useMemo:Al,useReducer:Ha,useRef:pl,useState:function(){return Ha(Va)},useDebugValue:Cl,useDeferredValue:function(e,t){return xl(Ma(),ba.memoizedState,e,t)},useTransition:function(){var e=Ha(Va)[0],t=Ma().memoizedState;return["boolean"===typeof e?e:Ia(e),t]},useSyncExternalStore:Ya,useId:_l,useHostTransitionStatus:jl,useFormState:sl,useActionState:sl,useOptimistic:function(e,t){return el(Ma(),0,e,t)},useMemoCache:$a,useCacheRefresh:zl},Yl={readContext:wr,use:Ua,useCallback:kl,useContext:wr,useEffect:gl,useImperativeHandle:El,useInsertionEffect:yl,useLayoutEffect:bl,useMemo:Al,useReducer:Wa,useRef:pl,useState:function(){return Wa(Va)},useDebugValue:Cl,useDeferredValue:function(e,t){var n=Ma();return null===ba?wl(n,e,t):xl(n,ba.memoizedState,e,t)},useTransition:function(){var e=Wa(Va)[0],t=Ma().memoizedState;return["boolean"===typeof e?e:Ia(e),t]},useSyncExternalStore:Ya,useId:_l,useHostTransitionStatus:jl,useFormState:fl,useActionState:fl,useOptimistic:function(e,t){var n=Ma();return null!==ba?el(n,0,e,t):(n.baseState=e,[e,n.queue.dispatch])},useMemoCache:$a,useCacheRefresh:zl},Ql=null,Kl=0;function Gl(e){var t=Kl;return Kl+=1,null===Ql&&(Ql=[]),Xr(Ql,e,t)}function Xl(e,t){t=t.props.ref,e.ref=void 0!==t?t:null}function Zl(e,t){if(t.$$typeof===D)throw Error(l(525));throw e=Object.prototype.toString.call(t),Error(l(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Jl(e){return(0,e._init)(e._payload)}function eo(e){function t(t,n){if(e){var u=t.deletions;null===u?(t.deletions=[n],t.flags|=16):u.push(n)}}function n(n,u){if(!e)return null;for(;null!==u;)t(n,u),u=u.sibling;return null}function u(e){for(var t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function r(e,t){return(e=Ou(e,t)).index=0,e.sibling=null,e}function a(t,n,u){return t.index=u,e?null!==(u=t.alternate)?(u=u.index)<n?(t.flags|=67108866,n):u:(t.flags|=67108866,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=67108866),t}function i(e,t,n,u){return null===t||6!==t.tag?((t=$u(n,e.mode,u)).return=e,t):((t=r(t,n)).return=e,t)}function s(e,t,n,u){var a=n.type;return a===m?d(e,t,n.props.children,u,n.key):null!==t&&(t.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===w&&Jl(a)===t.type)?(Xl(t=r(t,n.props),n),t.return=e,t):(Xl(t=Iu(n.type,n.key,n.props,null,e.mode,u),n),t.return=e,t)}function c(e,t,n,u){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vu(n,e.mode,u)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,u,a){return null===t||7!==t.tag?((t=Uu(n,e.mode,u,a)).return=e,t):((t=r(t,n)).return=e,t)}function f(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t||"bigint"===typeof t)return(t=$u(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case p:return Xl(n=Iu(t.type,t.key,t.props,null,e.mode,n),t),n.return=e,n;case h:return(t=Vu(t,e.mode,n)).return=e,t;case w:return f(e,t=(0,t._init)(t._payload),n)}if(j(t)||N(t))return(t=Uu(t,e.mode,n,null)).return=e,t;if("function"===typeof t.then)return f(e,Gl(t),n);if(t.$$typeof===v)return f(e,xr(e,t),n);Zl(e,t)}return null}function D(e,t,n,u){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n||"bigint"===typeof n)return null!==r?null:i(e,t,""+n,u);if("object"===typeof n&&null!==n){switch(n.$$typeof){case p:return n.key===r?s(e,t,n,u):null;case h:return n.key===r?c(e,t,n,u):null;case w:return D(e,t,n=(r=n._init)(n._payload),u)}if(j(n)||N(n))return null!==r?null:d(e,t,n,u,null);if("function"===typeof n.then)return D(e,t,Gl(n),u);if(n.$$typeof===v)return D(e,t,xr(e,n),u);Zl(e,n)}return null}function F(e,t,n,u,r){if("string"===typeof u&&""!==u||"number"===typeof u||"bigint"===typeof u)return i(t,e=e.get(n)||null,""+u,r);if("object"===typeof u&&null!==u){switch(u.$$typeof){case p:return s(t,e=e.get(null===u.key?n:u.key)||null,u,r);case h:return c(t,e=e.get(null===u.key?n:u.key)||null,u,r);case w:return F(e,t,n,u=(0,u._init)(u._payload),r)}if(j(u)||N(u))return d(t,e=e.get(n)||null,u,r,null);if("function"===typeof u.then)return F(e,t,n,Gl(u),r);if(u.$$typeof===v)return F(e,t,n,xr(t,u),r);Zl(t,u)}return null}function g(i,s,c,d){if("object"===typeof c&&null!==c&&c.type===m&&null===c.key&&(c=c.props.children),"object"===typeof c&&null!==c){switch(c.$$typeof){case p:e:{for(var y=c.key;null!==s;){if(s.key===y){if((y=c.type)===m){if(7===s.tag){n(i,s.sibling),(d=r(s,c.props.children)).return=i,i=d;break e}}else if(s.elementType===y||"object"===typeof y&&null!==y&&y.$$typeof===w&&Jl(y)===s.type){n(i,s.sibling),Xl(d=r(s,c.props),c),d.return=i,i=d;break e}n(i,s);break}t(i,s),s=s.sibling}c.type===m?((d=Uu(c.props.children,i.mode,d,c.key)).return=i,i=d):(Xl(d=Iu(c.type,c.key,c.props,null,i.mode,d),c),d.return=i,i=d)}return o(i);case h:e:{for(y=c.key;null!==s;){if(s.key===y){if(4===s.tag&&s.stateNode.containerInfo===c.containerInfo&&s.stateNode.implementation===c.implementation){n(i,s.sibling),(d=r(s,c.children||[])).return=i,i=d;break e}n(i,s);break}t(i,s),s=s.sibling}(d=Vu(c,i.mode,d)).return=i,i=d}return o(i);case w:return g(i,s,c=(y=c._init)(c._payload),d)}if(j(c))return function(r,l,o,i){for(var s=null,c=null,d=l,p=l=0,h=null;null!==d&&p<o.length;p++){d.index>p?(h=d,d=null):h=d.sibling;var m=D(r,d,o[p],i);if(null===m){null===d&&(d=h);break}e&&d&&null===m.alternate&&t(r,d),l=a(m,l,p),null===c?s=m:c.sibling=m,c=m,d=h}if(p===o.length)return n(r,d),ar&&Ju(r,p),s;if(null===d){for(;p<o.length;p++)null!==(d=f(r,o[p],i))&&(l=a(d,l,p),null===c?s=d:c.sibling=d,c=d);return ar&&Ju(r,p),s}for(d=u(d);p<o.length;p++)null!==(h=F(d,r,p,o[p],i))&&(e&&null!==h.alternate&&d.delete(null===h.key?p:h.key),l=a(h,l,p),null===c?s=h:c.sibling=h,c=h);return e&&d.forEach(function(e){return t(r,e)}),ar&&Ju(r,p),s}(i,s,c,d);if(N(c)){if("function"!==typeof(y=N(c)))throw Error(l(150));return function(r,o,i,s){if(null==i)throw Error(l(151));for(var c=null,d=null,p=o,h=o=0,m=null,g=i.next();null!==p&&!g.done;h++,g=i.next()){p.index>h?(m=p,p=null):m=p.sibling;var y=D(r,p,g.value,s);if(null===y){null===p&&(p=m);break}e&&p&&null===y.alternate&&t(r,p),o=a(y,o,h),null===d?c=y:d.sibling=y,d=y,p=m}if(g.done)return n(r,p),ar&&Ju(r,h),c;if(null===p){for(;!g.done;h++,g=i.next())null!==(g=f(r,g.value,s))&&(o=a(g,o,h),null===d?c=g:d.sibling=g,d=g);return ar&&Ju(r,h),c}for(p=u(p);!g.done;h++,g=i.next())null!==(g=F(p,r,h,g.value,s))&&(e&&null!==g.alternate&&p.delete(null===g.key?h:g.key),o=a(g,o,h),null===d?c=g:d.sibling=g,d=g);return e&&p.forEach(function(e){return t(r,e)}),ar&&Ju(r,h),c}(i,s,c=y.call(c),d)}if("function"===typeof c.then)return g(i,s,Gl(c),d);if(c.$$typeof===v)return g(i,s,xr(i,c),d);Zl(i,c)}return"string"===typeof c&&""!==c||"number"===typeof c||"bigint"===typeof c?(c=""+c,null!==s&&6===s.tag?(n(i,s.sibling),(d=r(s,c)).return=i,i=d):(n(i,s),(d=$u(c,i.mode,d)).return=i,i=d),o(i)):n(i,s)}return function(e,t,n,u){try{Kl=0;var r=g(e,t,n,u);return Ql=null,r}catch(l){if(l===qr||l===Yr)throw l;var a=Ru(29,l,null,e.mode);return a.lanes=u,a.return=e,a}}}var to=eo(!0),no=eo(!1),uo=M(null),ro=null;function ao(e){var t=e.alternate;U(so,1&so.current),U(uo,e),null===ro&&(null===t||null!==Da.current||null!==t.memoizedState)&&(ro=e)}function lo(e){if(22===e.tag){if(U(so,so.current),U(uo,e),null===ro){var t=e.alternate;null!==t&&null!==t.memoizedState&&(ro=e)}}else oo()}function oo(){U(so,so.current),U(uo,uo.current)}function io(e){I(uo),ro===e&&(ro=null),I(so)}var so=M(0);function co(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||md(n)))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function fo(e,t,n,u){n=null===(n=n(u,t=e.memoizedState))||void 0===n?t:f({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Do={enqueueSetState:function(e,t,n){e=e._reactInternals;var u=_s(),r=ra(u);r.payload=t,void 0!==n&&null!==n&&(r.callback=n),null!==(t=aa(e,r,u))&&(Rs(t,e,u),la(t,e,u))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var u=_s(),r=ra(u);r.tag=1,r.payload=t,void 0!==n&&null!==n&&(r.callback=n),null!==(t=aa(e,r,u))&&(Rs(t,e,u),la(t,e,u))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=_s(),u=ra(n);u.tag=2,void 0!==t&&null!==t&&(u.callback=t),null!==(t=aa(e,u,n))&&(Rs(t,e,n),la(t,e,n))}};function po(e,t,n,u,r,a,l){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(u,a,l):!t.prototype||!t.prototype.isPureReactComponent||(!Gn(n,u)||!Gn(r,a))}function ho(e,t,n,u){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,u),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,u),t.state!==e&&Do.enqueueReplaceState(t,t.state,null)}function mo(e,t){var n=t;if("ref"in t)for(var u in n={},t)"ref"!==u&&(n[u]=t[u]);if(e=e.defaultProps)for(var r in n===t&&(n=f({},n)),e)void 0===n[r]&&(n[r]=e[r]);return n}var Fo="function"===typeof reportError?reportError:function(e){if("object"===typeof window&&"function"===typeof window.ErrorEvent){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"===typeof e&&null!==e&&"string"===typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if("object"===typeof process&&"function"===typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function go(e){Fo(e)}function yo(e){console.error(e)}function bo(e){Fo(e)}function vo(e,t){try{(0,e.onUncaughtError)(t.value,{componentStack:t.stack})}catch(n){setTimeout(function(){throw n})}}function Eo(e,t,n){try{(0,e.onCaughtError)(n.value,{componentStack:n.stack,errorBoundary:1===t.tag?t.stateNode:null})}catch(u){setTimeout(function(){throw u})}}function Co(e,t,n){return(n=ra(n)).tag=3,n.payload={element:null},n.callback=function(){vo(e,t)},n}function ko(e){return(e=ra(e)).tag=3,e}function Ao(e,t,n,u){var r=n.type.getDerivedStateFromError;if("function"===typeof r){var a=u.value;e.payload=function(){return r(a)},e.callback=function(){Eo(t,n,u)}}var l=n.stateNode;null!==l&&"function"===typeof l.componentDidCatch&&(e.callback=function(){Eo(t,n,u),"function"!==typeof r&&(null===ks?ks=new Set([this]):ks.add(this));var e=u.stack;this.componentDidCatch(u.value,{componentStack:null!==e?e:""})})}var wo=Error(l(461)),xo=!1;function So(e,t,n,u){t.child=null===e?no(t,null,n,u):to(t,e.child,n,u)}function Bo(e,t,n,u,r){n=n.render;var a=t.ref;if("ref"in u){var l={};for(var o in u)"ref"!==o&&(l[o]=u[o])}else l=u;return Ar(t),u=Ta(e,t,n,l,a,r),o=za(),null===e||xo?(ar&&o&&tr(t),t.flags|=1,So(e,t,u,r),t.child):(Ra(e,t,r),Ko(e,t,r))}function No(e,t,n,u,r){if(null===e){var a=n.type;return"function"!==typeof a||Lu(a)||void 0!==a.defaultProps||null!==n.compare?((e=Iu(n.type,null,u,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,To(e,t,a,u,r))}if(a=e.child,!Go(e,r)){var l=a.memoizedProps;if((n=null!==(n=n.compare)?n:Gn)(l,u)&&e.ref===t.ref)return Ko(e,t,r)}return t.flags|=1,(e=Ou(a,u)).ref=t.ref,e.return=t,t.child=e}function To(e,t,n,u,r){if(null!==e){var a=e.memoizedProps;if(Gn(a,u)&&e.ref===t.ref){if(xo=!1,t.pendingProps=u=a,!Go(e,r))return t.lanes=e.lanes,Ko(e,t,r);0!==(131072&e.flags)&&(xo=!0)}}return zo(e,t,n,u,r)}function Po(e,t,n){var u=t.pendingProps,r=u.children,a=null!==e?e.memoizedState:null;if("hidden"===u.mode){if(0!==(128&t.flags)){if(u=null!==a?a.baseLanes|n:n,null!==e){for(r=t.child=e.child,a=0;null!==r;)a=a|r.lanes|r.childLanes,r=r.sibling;t.childLanes=a&~u}else t.childLanes=0,t.child=null;return jo(e,t,u,n)}if(0===(536870912&n))return t.lanes=t.childLanes=536870912,jo(e,t,null!==a?a.baseLanes|n:n,n);t.memoizedState={baseLanes:0,cachePool:null},null!==e&&Vr(0,null!==a?a.cachePool:null),null!==a?ha(t,a):ma(),lo(t)}else null!==a?(Vr(0,a.cachePool),ha(t,a),oo(),t.memoizedState=null):(null!==e&&Vr(0,null),ma(),oo());return So(e,t,r,n),t.child}function jo(e,t,n,u){var r=$r();return r=null===r?null:{parent:Pr._currentValue,pool:r},t.memoizedState={baseLanes:n,cachePool:r},null!==e&&Vr(0,null),ma(),lo(t),null!==e&&Cr(e,t,u,!0),null}function _o(e,t){var n=t.ref;if(null===n)null!==e&&null!==e.ref&&(t.flags|=4194816);else{if("function"!==typeof n&&"object"!==typeof n)throw Error(l(284));null!==e&&e.ref===n||(t.flags|=4194816)}}function zo(e,t,n,u,r){return Ar(t),n=Ta(e,t,n,u,void 0,r),u=za(),null===e||xo?(ar&&u&&tr(t),t.flags|=1,So(e,t,n,r),t.child):(Ra(e,t,r),Ko(e,t,r))}function Ro(e,t,n,u,r,a){return Ar(t),t.updateQueue=null,n=ja(t,u,n,r),Pa(e),u=za(),null===e||xo?(ar&&u&&tr(t),t.flags|=1,So(e,t,n,a),t.child):(Ra(e,t,a),Ko(e,t,a))}function Lo(e,t,n,u,r){if(Ar(t),null===t.stateNode){var a=_u,l=n.contextType;"object"===typeof l&&null!==l&&(a=wr(l)),a=new n(u,a),t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,a.updater=Do,t.stateNode=a,a._reactInternals=t,(a=t.stateNode).props=u,a.state=t.memoizedState,a.refs={},na(t),l=n.contextType,a.context="object"===typeof l&&null!==l?wr(l):_u,a.state=t.memoizedState,"function"===typeof(l=n.getDerivedStateFromProps)&&(fo(t,n,l,u),a.state=t.memoizedState),"function"===typeof n.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(l=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),l!==a.state&&Do.enqueueReplaceState(a,a.state,null),ca(t,u,a,r),sa(),a.state=t.memoizedState),"function"===typeof a.componentDidMount&&(t.flags|=4194308),u=!0}else if(null===e){a=t.stateNode;var o=t.memoizedProps,i=mo(n,o);a.props=i;var s=a.context,c=n.contextType;l=_u,"object"===typeof c&&null!==c&&(l=wr(c));var d=n.getDerivedStateFromProps;c="function"===typeof d||"function"===typeof a.getSnapshotBeforeUpdate,o=t.pendingProps!==o,c||"function"!==typeof a.UNSAFE_componentWillReceiveProps&&"function"!==typeof a.componentWillReceiveProps||(o||s!==l)&&ho(t,a,u,l),ta=!1;var f=t.memoizedState;a.state=f,ca(t,u,a,r),sa(),s=t.memoizedState,o||f!==s||ta?("function"===typeof d&&(fo(t,n,d,u),s=t.memoizedState),(i=ta||po(t,n,i,u,f,s,l))?(c||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||("function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"===typeof a.componentDidMount&&(t.flags|=4194308)):("function"===typeof a.componentDidMount&&(t.flags|=4194308),t.memoizedProps=u,t.memoizedState=s),a.props=u,a.state=s,a.context=l,u=i):("function"===typeof a.componentDidMount&&(t.flags|=4194308),u=!1)}else{a=t.stateNode,ua(e,t),c=mo(n,l=t.memoizedProps),a.props=c,d=t.pendingProps,f=a.context,s=n.contextType,i=_u,"object"===typeof s&&null!==s&&(i=wr(s)),(s="function"===typeof(o=n.getDerivedStateFromProps)||"function"===typeof a.getSnapshotBeforeUpdate)||"function"!==typeof a.UNSAFE_componentWillReceiveProps&&"function"!==typeof a.componentWillReceiveProps||(l!==d||f!==i)&&ho(t,a,u,i),ta=!1,f=t.memoizedState,a.state=f,ca(t,u,a,r),sa();var D=t.memoizedState;l!==d||f!==D||ta||null!==e&&null!==e.dependencies&&kr(e.dependencies)?("function"===typeof o&&(fo(t,n,o,u),D=t.memoizedState),(c=ta||po(t,n,c,u,f,D,i)||null!==e&&null!==e.dependencies&&kr(e.dependencies))?(s||"function"!==typeof a.UNSAFE_componentWillUpdate&&"function"!==typeof a.componentWillUpdate||("function"===typeof a.componentWillUpdate&&a.componentWillUpdate(u,D,i),"function"===typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(u,D,i)),"function"===typeof a.componentDidUpdate&&(t.flags|=4),"function"===typeof a.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof a.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!==typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=u,t.memoizedState=D),a.props=u,a.state=D,a.context=i,u=c):("function"!==typeof a.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!==typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),u=!1)}return a=u,_o(e,t),u=0!==(128&t.flags),a||u?(a=t.stateNode,n=u&&"function"!==typeof n.getDerivedStateFromError?null:a.render(),t.flags|=1,null!==e&&u?(t.child=to(t,e.child,null,r),t.child=to(t,null,n,r)):So(e,t,n,r),t.memoizedState=a.state,e=t.child):e=Ko(e,t,r),e}function Oo(e,t,n,u){return Dr(),t.flags|=256,So(e,t,n,u),t.child}var Mo={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function Io(e){return{baseLanes:e,cachePool:Hr()}}function Uo(e,t,n){return e=null!==e?e.childLanes&~n:0,t&&(e|=ms),e}function $o(e,t,n){var u,r=t.pendingProps,a=!1,o=0!==(128&t.flags);if((u=o)||(u=(null===e||null!==e.memoizedState)&&0!==(2&so.current)),u&&(a=!0,t.flags&=-129),u=0!==(32&t.flags),t.flags&=-33,null===e){if(ar){if(a?ao(t):oo(),ar){var i,s=rr;if(i=s){e:{for(i=s,s=or;8!==i.nodeType;){if(!s){s=null;break e}if(null===(i=Fd(i.nextSibling))){s=null;break e}}s=i}null!==s?(t.memoizedState={dehydrated:s,treeContext:null!==Gu?{id:Xu,overflow:Zu}:null,retryLane:536870912,hydrationErrors:null},(i=Ru(18,null,null,0)).stateNode=s,i.return=t,t.child=i,ur=t,rr=null,i=!0):i=!1}i||sr(t)}if(null!==(s=t.memoizedState)&&null!==(s=s.dehydrated))return md(s)?t.lanes=32:t.lanes=536870912,null;io(t)}return s=r.children,r=r.fallback,a?(oo(),s=Ho({mode:"hidden",children:s},a=t.mode),r=Uu(r,a,n,null),s.return=t,r.return=t,s.sibling=r,t.child=s,(a=t.child).memoizedState=Io(n),a.childLanes=Uo(e,u,n),t.memoizedState=Mo,r):(ao(t),Vo(t,s))}if(null!==(i=e.memoizedState)&&null!==(s=i.dehydrated)){if(o)256&t.flags?(ao(t),t.flags&=-257,t=qo(e,t,n)):null!==t.memoizedState?(oo(),t.child=e.child,t.flags|=128,t=null):(oo(),a=r.fallback,s=t.mode,r=Ho({mode:"visible",children:r.children},s),(a=Uu(a,s,n,null)).flags|=2,r.return=t,a.return=t,r.sibling=a,t.child=r,to(t,e.child,null,n),(r=t.child).memoizedState=Io(n),r.childLanes=Uo(e,u,n),t.memoizedState=Mo,t=a);else if(ao(t),md(s)){if(u=s.nextSibling&&s.nextSibling.dataset)var c=u.dgst;u=c,(r=Error(l(419))).stack="",r.digest=u,hr({value:r,source:null,stack:null}),t=qo(e,t,n)}else if(xo||Cr(e,t,n,!1),u=0!==(n&e.childLanes),xo||u){if(null!==(u=us)&&(0!==(r=0!==((r=0!==(42&(r=n&-n))?1:Se(r))&(u.suspendedLanes|n))?0:r)&&r!==i.retryLane))throw i.retryLane=r,Tu(e,r),Rs(u,e,r),wo;"$?"===s.data||Ys(),t=qo(e,t,n)}else"$?"===s.data?(t.flags|=192,t.child=e.child,t=null):(e=i.treeContext,rr=Fd(s.nextSibling),ur=t,ar=!0,lr=null,or=!1,null!==e&&(Qu[Ku++]=Xu,Qu[Ku++]=Zu,Qu[Ku++]=Gu,Xu=e.id,Zu=e.overflow,Gu=t),(t=Vo(t,r.children)).flags|=4096);return t}return a?(oo(),a=r.fallback,s=t.mode,c=(i=e.child).sibling,(r=Ou(i,{mode:"hidden",children:r.children})).subtreeFlags=65011712&i.subtreeFlags,null!==c?a=Ou(c,a):(a=Uu(a,s,n,null)).flags|=2,a.return=t,r.return=t,r.sibling=a,t.child=r,r=a,a=t.child,null===(s=e.child.memoizedState)?s=Io(n):(null!==(i=s.cachePool)?(c=Pr._currentValue,i=i.parent!==c?{parent:c,pool:c}:i):i=Hr(),s={baseLanes:s.baseLanes|n,cachePool:i}),a.memoizedState=s,a.childLanes=Uo(e,u,n),t.memoizedState=Mo,r):(ao(t),e=(n=e.child).sibling,(n=Ou(n,{mode:"visible",children:r.children})).return=t,n.sibling=null,null!==e&&(null===(u=t.deletions)?(t.deletions=[e],t.flags|=16):u.push(e)),t.child=n,t.memoizedState=null,n)}function Vo(e,t){return(t=Ho({mode:"visible",children:t},e.mode)).return=e,e.child=t}function Ho(e,t){return(e=Ru(22,e,null,t)).lanes=0,e.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},e}function qo(e,t,n){return to(t,e.child,null,n),(e=Vo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wo(e,t,n){e.lanes|=t;var u=e.alternate;null!==u&&(u.lanes|=t),vr(e.return,t,n)}function Yo(e,t,n,u,r){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:u,tail:n,tailMode:r}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=u,a.tail=n,a.tailMode=r)}function Qo(e,t,n){var u=t.pendingProps,r=u.revealOrder,a=u.tail;if(So(e,t,u.children,n),0!==(2&(u=so.current)))u=1&u|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wo(e,n,t);else if(19===e.tag)Wo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}u&=1}switch(U(so,u),r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===co(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Yo(t,!1,r,n,a);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===co(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Yo(t,!0,n,null,a);break;case"together":Yo(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Ko(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ds|=t.lanes,0===(n&t.childLanes)){if(null===e)return null;if(Cr(e,t,n,!1),0===(n&t.childLanes))return null}if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Ou(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ou(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Go(e,t){return 0!==(e.lanes&t)||!(null===(e=e.dependencies)||!kr(e))}function Xo(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps)xo=!0;else{if(!Go(e,n)&&0===(128&t.flags))return xo=!1,function(e,t,n){switch(t.tag){case 3:W(t,t.stateNode.containerInfo),yr(0,Pr,e.memoizedState.cache),Dr();break;case 27:case 5:Q(t);break;case 4:W(t,t.stateNode.containerInfo);break;case 10:yr(0,t.type,t.memoizedProps.value);break;case 13:var u=t.memoizedState;if(null!==u)return null!==u.dehydrated?(ao(t),t.flags|=128,null):0!==(n&t.child.childLanes)?$o(e,t,n):(ao(t),null!==(e=Ko(e,t,n))?e.sibling:null);ao(t);break;case 19:var r=0!==(128&e.flags);if((u=0!==(n&t.childLanes))||(Cr(e,t,n,!1),u=0!==(n&t.childLanes)),r){if(u)return Qo(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),U(so,so.current),u)break;return null;case 22:case 23:return t.lanes=0,Po(e,t,n);case 24:yr(0,Pr,e.memoizedState.cache)}return Ko(e,t,n)}(e,t,n);xo=0!==(131072&e.flags)}else xo=!1,ar&&0!==(1048576&t.flags)&&er(t,Yu,t.index);switch(t.lanes=0,t.tag){case 16:e:{e=t.pendingProps;var u=t.elementType,r=u._init;if(u=r(u._payload),t.type=u,"function"!==typeof u){if(void 0!==u&&null!==u){if((r=u.$$typeof)===E){t.tag=11,t=Bo(null,t,u,e,n);break e}if(r===A){t.tag=14,t=No(null,t,u,e,n);break e}}throw t=P(u)||u,Error(l(306,t,""))}Lu(u)?(e=mo(u,e),t.tag=1,t=Lo(null,t,u,e,n)):(t.tag=0,t=zo(null,t,u,e,n))}return t;case 0:return zo(e,t,t.type,t.pendingProps,n);case 1:return Lo(e,t,u=t.type,r=mo(u,t.pendingProps),n);case 3:e:{if(W(t,t.stateNode.containerInfo),null===e)throw Error(l(387));u=t.pendingProps;var a=t.memoizedState;r=a.element,ua(e,t),ca(t,u,null,n);var o=t.memoizedState;if(u=o.cache,yr(0,Pr,u),u!==a.cache&&Er(t,[Pr],n,!0),sa(),u=o.element,a.isDehydrated){if(a={element:u,isDehydrated:!1,cache:o.cache},t.updateQueue.baseState=a,t.memoizedState=a,256&t.flags){t=Oo(e,t,u,n);break e}if(u!==r){hr(r=ku(Error(l(424)),t)),t=Oo(e,t,u,n);break e}if(9===(e=t.stateNode.containerInfo).nodeType)e=e.body;else e="HTML"===e.nodeName?e.ownerDocument.body:e;for(rr=Fd(e.firstChild),ur=t,ar=!0,lr=null,or=!0,n=no(t,null,u,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(Dr(),u===r){t=Ko(e,t,n);break e}So(e,t,u,n)}t=t.child}return t;case 26:return _o(e,t),null===e?(n=Sd(t.type,null,t.pendingProps,null))?t.memoizedState=n:ar||(n=t.type,e=t.pendingProps,(u=ud(H.current).createElement(n))[Pe]=t,u[je]=e,ed(u,n,e),qe(u),t.stateNode=u):t.memoizedState=Sd(t.type,e.memoizedProps,t.pendingProps,e.memoizedState),null;case 27:return Q(t),null===e&&ar&&(u=t.stateNode=bd(t.type,t.pendingProps,H.current),ur=t,or=!0,r=rr,Dd(t.type)?(gd=r,rr=Fd(u.firstChild)):rr=r),So(e,t,t.pendingProps.children,n),_o(e,t),null===e&&(t.flags|=4194304),t.child;case 5:return null===e&&ar&&((r=u=rr)&&(null!==(u=function(e,t,n,u){for(;1===e.nodeType;){var r=n;if(e.nodeName.toLowerCase()!==t.toLowerCase()){if(!u&&("INPUT"!==e.nodeName||"hidden"!==e.type))break}else if(u){if(!e[Me])switch(t){case"meta":if(!e.hasAttribute("itemprop"))break;return e;case"link":if("stylesheet"===(a=e.getAttribute("rel"))&&e.hasAttribute("data-precedence"))break;if(a!==r.rel||e.getAttribute("href")!==(null==r.href||""===r.href?null:r.href)||e.getAttribute("crossorigin")!==(null==r.crossOrigin?null:r.crossOrigin)||e.getAttribute("title")!==(null==r.title?null:r.title))break;return e;case"style":if(e.hasAttribute("data-precedence"))break;return e;case"script":if(((a=e.getAttribute("src"))!==(null==r.src?null:r.src)||e.getAttribute("type")!==(null==r.type?null:r.type)||e.getAttribute("crossorigin")!==(null==r.crossOrigin?null:r.crossOrigin))&&a&&e.hasAttribute("async")&&!e.hasAttribute("itemprop"))break;return e;default:return e}}else{if("input"!==t||"hidden"!==e.type)return e;var a=null==r.name?null:""+r.name;if("hidden"===r.type&&e.getAttribute("name")===a)return e}if(null===(e=Fd(e.nextSibling)))break}return null}(u,t.type,t.pendingProps,or))?(t.stateNode=u,ur=t,rr=Fd(u.firstChild),or=!1,r=!0):r=!1),r||sr(t)),Q(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,u=a.children,ld(r,a)?u=null:null!==o&&ld(r,o)&&(t.flags|=32),null!==t.memoizedState&&(r=Ta(e,t,_a,null,null,n),Qd._currentValue=r),_o(e,t),So(e,t,u,n),t.child;case 6:return null===e&&ar&&((e=n=rr)&&(null!==(n=function(e,t,n){if(""===t)return null;for(;3!==e.nodeType;){if((1!==e.nodeType||"INPUT"!==e.nodeName||"hidden"!==e.type)&&!n)return null;if(null===(e=Fd(e.nextSibling)))return null}return e}(n,t.pendingProps,or))?(t.stateNode=n,ur=t,rr=null,e=!0):e=!1),e||sr(t)),null;case 13:return $o(e,t,n);case 4:return W(t,t.stateNode.containerInfo),u=t.pendingProps,null===e?t.child=to(t,null,u,n):So(e,t,u,n),t.child;case 11:return Bo(e,t,t.type,t.pendingProps,n);case 7:return So(e,t,t.pendingProps,n),t.child;case 8:case 12:return So(e,t,t.pendingProps.children,n),t.child;case 10:return u=t.pendingProps,yr(0,t.type,u.value),So(e,t,u.children,n),t.child;case 9:return r=t.type._context,u=t.pendingProps.children,Ar(t),u=u(r=wr(r)),t.flags|=1,So(e,t,u,n),t.child;case 14:return No(e,t,t.type,t.pendingProps,n);case 15:return To(e,t,t.type,t.pendingProps,n);case 19:return Qo(e,t,n);case 31:return u=t.pendingProps,n=t.mode,u={mode:u.mode,children:u.children},null===e?((n=Ho(u,n)).ref=t.ref,t.child=n,n.return=t,t=n):((n=Ou(e.child,u)).ref=t.ref,t.child=n,n.return=t,t=n),t;case 22:return Po(e,t,n);case 24:return Ar(t),u=wr(Pr),null===e?(null===(r=$r())&&(r=us,a=jr(),r.pooledCache=a,a.refCount++,null!==a&&(r.pooledCacheLanes|=n),r=a),t.memoizedState={parent:u,cache:r},na(t),yr(0,Pr,r)):(0!==(e.lanes&n)&&(ua(e,t),ca(t,null,null,n),sa()),r=e.memoizedState,a=t.memoizedState,r.parent!==u?(r={parent:u,cache:u},t.memoizedState=r,0===t.lanes&&(t.memoizedState=t.updateQueue.baseState=r),yr(0,Pr,u)):(u=a.cache,yr(0,Pr,u),u!==r.cache&&Er(t,[Pr],n,!0))),So(e,t,t.pendingProps.children,n),t.child;case 29:throw t.pendingProps}throw Error(l(156,t.tag))}function Zo(e){e.flags|=4}function Jo(e,t){if("stylesheet"!==t.type||0!==(4&t.state.loading))e.flags&=-16777217;else if(e.flags|=16777216,!Ud(t)){if(null!==(t=uo.current)&&((4194048&as)===as?null!==ro:(62914560&as)!==as&&0===(536870912&as)||t!==ro))throw Zr=Qr,Wr;e.flags|=8192}}function ei(e,t){null!==t&&(e.flags|=4),16384&e.flags&&(t=22!==e.tag?Ce():536870912,e.lanes|=t,Fs|=t)}function ti(e,t){if(!ar)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var u=null;null!==n;)null!==n.alternate&&(u=n),n=n.sibling;null===u?t||null===e.tail?e.tail=null:e.tail.sibling=null:u.sibling=null}}function ni(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,u=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,u|=65011712&r.subtreeFlags,u|=65011712&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,u|=r.subtreeFlags,u|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=u,e.childLanes=n,t}function ui(e,t,n){var u=t.pendingProps;switch(nr(t),t.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:case 1:return ni(t),null;case 3:return n=t.stateNode,u=null,null!==e&&(u=e.memoizedState.cache),t.memoizedState.cache!==u&&(t.flags|=2048),br(Pr),Y(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(fr(t)?Zo(t):null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,pr())),ni(t),null;case 26:return n=t.memoizedState,null===e?(Zo(t),null!==n?(ni(t),Jo(t,n)):(ni(t),t.flags&=-16777217)):n?n!==e.memoizedState?(Zo(t),ni(t),Jo(t,n)):(ni(t),t.flags&=-16777217):(e.memoizedProps!==u&&Zo(t),ni(t),t.flags&=-16777217),null;case 27:K(t),n=H.current;var r=t.type;if(null!==e&&null!=t.stateNode)e.memoizedProps!==u&&Zo(t);else{if(!u){if(null===t.stateNode)throw Error(l(166));return ni(t),null}e=$.current,fr(t)?cr(t):(e=bd(r,u,n),t.stateNode=e,Zo(t))}return ni(t),null;case 5:if(K(t),n=t.type,null!==e&&null!=t.stateNode)e.memoizedProps!==u&&Zo(t);else{if(!u){if(null===t.stateNode)throw Error(l(166));return ni(t),null}if(e=$.current,fr(t))cr(t);else{switch(r=ud(H.current),e){case 1:e=r.createElementNS("http://www.w3.org/2000/svg",n);break;case 2:e=r.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;default:switch(n){case"svg":e=r.createElementNS("http://www.w3.org/2000/svg",n);break;case"math":e=r.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;case"script":(e=r.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild);break;case"select":e="string"===typeof u.is?r.createElement("select",{is:u.is}):r.createElement("select"),u.multiple?e.multiple=!0:u.size&&(e.size=u.size);break;default:e="string"===typeof u.is?r.createElement(n,{is:u.is}):r.createElement(n)}}e[Pe]=t,e[je]=u;e:for(r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&27!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break e;for(;null===r.sibling;){if(null===r.return||r.return===t)break e;r=r.return}r.sibling.return=r.return,r=r.sibling}t.stateNode=e;e:switch(ed(e,n,u),n){case"button":case"input":case"select":case"textarea":e=!!u.autoFocus;break e;case"img":e=!0;break e;default:e=!1}e&&Zo(t)}}return ni(t),t.flags&=-16777217,null;case 6:if(e&&null!=t.stateNode)e.memoizedProps!==u&&Zo(t);else{if("string"!==typeof u&&null===t.stateNode)throw Error(l(166));if(e=H.current,fr(t)){if(e=t.stateNode,n=t.memoizedProps,u=null,null!==(r=ur))switch(r.tag){case 27:case 5:u=r.memoizedProps}e[Pe]=t,(e=!!(e.nodeValue===n||null!==u&&!0===u.suppressHydrationWarning||Gc(e.nodeValue,n)))||sr(t)}else(e=ud(e).createTextNode(u))[Pe]=t,t.stateNode=e}return ni(t),null;case 13:if(u=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(r=fr(t),null!==u&&null!==u.dehydrated){if(null===e){if(!r)throw Error(l(318));if(!(r=null!==(r=t.memoizedState)?r.dehydrated:null))throw Error(l(317));r[Pe]=t}else Dr(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;ni(t),r=!1}else r=pr(),null!==e&&null!==e.memoizedState&&(e.memoizedState.hydrationErrors=r),r=!0;if(!r)return 256&t.flags?(io(t),t):(io(t),null)}if(io(t),0!==(128&t.flags))return t.lanes=n,t;if(n=null!==u,e=null!==e&&null!==e.memoizedState,n){r=null,null!==(u=t.child).alternate&&null!==u.alternate.memoizedState&&null!==u.alternate.memoizedState.cachePool&&(r=u.alternate.memoizedState.cachePool.pool);var a=null;null!==u.memoizedState&&null!==u.memoizedState.cachePool&&(a=u.memoizedState.cachePool.pool),a!==r&&(u.flags|=2048)}return n!==e&&n&&(t.child.flags|=8192),ei(t,t.updateQueue),ni(t),null;case 4:return Y(),null===e&&Ic(t.stateNode.containerInfo),ni(t),null;case 10:return br(t.type),ni(t),null;case 19:if(I(so),null===(r=t.memoizedState))return ni(t),null;if(u=0!==(128&t.flags),null===(a=r.rendering))if(u)ti(r,!1);else{if(0!==fs||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(a=co(e))){for(t.flags|=128,ti(r,!1),e=a.updateQueue,t.updateQueue=e,ei(t,e),t.subtreeFlags=0,e=n,n=t.child;null!==n;)Mu(n,e),n=n.sibling;return U(so,1&so.current|2),t.child}e=e.sibling}null!==r.tail&&te()>Es&&(t.flags|=128,u=!0,ti(r,!1),t.lanes=4194304)}else{if(!u)if(null!==(e=co(a))){if(t.flags|=128,u=!0,e=e.updateQueue,t.updateQueue=e,ei(t,e),ti(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate&&!ar)return ni(t),null}else 2*te()-r.renderingStartTime>Es&&536870912!==n&&(t.flags|=128,u=!0,ti(r,!1),t.lanes=4194304);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(e=r.last)?e.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.renderingStartTime=te(),t.sibling=null,e=so.current,U(so,u?1&e|2:1&e),t):(ni(t),null);case 22:case 23:return io(t),Fa(),u=null!==t.memoizedState,null!==e?null!==e.memoizedState!==u&&(t.flags|=8192):u&&(t.flags|=8192),u?0!==(536870912&n)&&0===(128&t.flags)&&(ni(t),6&t.subtreeFlags&&(t.flags|=8192)):ni(t),null!==(n=t.updateQueue)&&ei(t,n.retryQueue),n=null,null!==e&&null!==e.memoizedState&&null!==e.memoizedState.cachePool&&(n=e.memoizedState.cachePool.pool),u=null,null!==t.memoizedState&&null!==t.memoizedState.cachePool&&(u=t.memoizedState.cachePool.pool),u!==n&&(t.flags|=2048),null!==e&&I(Ur),null;case 24:return n=null,null!==e&&(n=e.memoizedState.cache),t.memoizedState.cache!==n&&(t.flags|=2048),br(Pr),ni(t),null;case 25:case 30:return null}throw Error(l(156,t.tag))}function ri(e,t){switch(nr(t),t.tag){case 1:return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return br(Pr),Y(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 26:case 27:case 5:return K(t),null;case 13:if(io(t),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(l(340));Dr()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return I(so),null;case 4:return Y(),null;case 10:return br(t.type),null;case 22:case 23:return io(t),Fa(),null!==e&&I(Ur),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 24:return br(Pr),null;default:return null}}function ai(e,t){switch(nr(t),t.tag){case 3:br(Pr),Y();break;case 26:case 27:case 5:K(t);break;case 4:Y();break;case 13:io(t);break;case 19:I(so);break;case 10:br(t.type);break;case 22:case 23:io(t),Fa(),null!==e&&I(Ur);break;case 24:br(Pr)}}function li(e,t){try{var n=t.updateQueue,u=null!==n?n.lastEffect:null;if(null!==u){var r=u.next;n=r;do{if((n.tag&e)===e){u=void 0;var a=n.create,l=n.inst;u=a(),l.destroy=u}n=n.next}while(n!==r)}}catch(o){cc(t,t.return,o)}}function oi(e,t,n){try{var u=t.updateQueue,r=null!==u?u.lastEffect:null;if(null!==r){var a=r.next;u=a;do{if((u.tag&e)===e){var l=u.inst,o=l.destroy;if(void 0!==o){l.destroy=void 0,r=t;var i=n,s=o;try{s()}catch(c){cc(r,i,c)}}}u=u.next}while(u!==a)}}catch(c){cc(t,t.return,c)}}function ii(e){var t=e.updateQueue;if(null!==t){var n=e.stateNode;try{fa(t,n)}catch(u){cc(e,e.return,u)}}}function si(e,t,n){n.props=mo(e.type,e.memoizedProps),n.state=e.memoizedState;try{n.componentWillUnmount()}catch(u){cc(e,t,u)}}function ci(e,t){try{var n=e.ref;if(null!==n){switch(e.tag){case 26:case 27:case 5:var u=e.stateNode;break;default:u=e.stateNode}"function"===typeof n?e.refCleanup=n(u):n.current=u}}catch(r){cc(e,t,r)}}function di(e,t){var n=e.ref,u=e.refCleanup;if(null!==n)if("function"===typeof u)try{u()}catch(r){cc(e,t,r)}finally{e.refCleanup=null,null!=(e=e.alternate)&&(e.refCleanup=null)}else if("function"===typeof n)try{n(null)}catch(a){cc(e,t,a)}else n.current=null}function fi(e){var t=e.type,n=e.memoizedProps,u=e.stateNode;try{e:switch(t){case"button":case"input":case"select":case"textarea":n.autoFocus&&u.focus();break e;case"img":n.src?u.src=n.src:n.srcSet&&(u.srcset=n.srcSet)}}catch(r){cc(e,e.return,r)}}function Di(e,t,n){try{var u=e.stateNode;!function(e,t,n,u){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var r=null,a=null,o=null,i=null,s=null,c=null,d=null;for(p in n){var f=n[p];if(n.hasOwnProperty(p)&&null!=f)switch(p){case"checked":case"value":break;case"defaultValue":s=f;default:u.hasOwnProperty(p)||Zc(e,t,p,null,u,f)}}for(var D in u){var p=u[D];if(f=n[D],u.hasOwnProperty(D)&&(null!=p||null!=f))switch(D){case"type":a=p;break;case"name":r=p;break;case"checked":c=p;break;case"defaultChecked":d=p;break;case"value":o=p;break;case"defaultValue":i=p;break;case"children":case"dangerouslySetInnerHTML":if(null!=p)throw Error(l(137,t));break;default:p!==f&&Zc(e,t,D,p,u,f)}}return void mt(e,o,i,s,c,d,a,r);case"select":for(a in p=o=i=D=null,n)if(s=n[a],n.hasOwnProperty(a)&&null!=s)switch(a){case"value":break;case"multiple":p=s;default:u.hasOwnProperty(a)||Zc(e,t,a,null,u,s)}for(r in u)if(a=u[r],s=n[r],u.hasOwnProperty(r)&&(null!=a||null!=s))switch(r){case"value":D=a;break;case"defaultValue":i=a;break;case"multiple":o=a;default:a!==s&&Zc(e,t,r,a,u,s)}return t=i,n=o,u=p,void(null!=D?yt(e,!!n,D,!1):!!u!==!!n&&(null!=t?yt(e,!!n,t,!0):yt(e,!!n,n?[]:"",!1)));case"textarea":for(i in p=D=null,n)if(r=n[i],n.hasOwnProperty(i)&&null!=r&&!u.hasOwnProperty(i))switch(i){case"value":case"children":break;default:Zc(e,t,i,null,u,r)}for(o in u)if(r=u[o],a=n[o],u.hasOwnProperty(o)&&(null!=r||null!=a))switch(o){case"value":D=r;break;case"defaultValue":p=r;break;case"children":break;case"dangerouslySetInnerHTML":if(null!=r)throw Error(l(91));break;default:r!==a&&Zc(e,t,o,r,u,a)}return void bt(e,D,p);case"option":for(var h in n)if(D=n[h],n.hasOwnProperty(h)&&null!=D&&!u.hasOwnProperty(h))if("selected"===h)e.selected=!1;else Zc(e,t,h,null,u,D);for(s in u)if(D=u[s],p=n[s],u.hasOwnProperty(s)&&D!==p&&(null!=D||null!=p))if("selected"===s)e.selected=D&&"function"!==typeof D&&"symbol"!==typeof D;else Zc(e,t,s,D,u,p);return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var m in n)D=n[m],n.hasOwnProperty(m)&&null!=D&&!u.hasOwnProperty(m)&&Zc(e,t,m,null,u,D);for(c in u)if(D=u[c],p=n[c],u.hasOwnProperty(c)&&D!==p&&(null!=D||null!=p))switch(c){case"children":case"dangerouslySetInnerHTML":if(null!=D)throw Error(l(137,t));break;default:Zc(e,t,c,D,u,p)}return;default:if(wt(t)){for(var F in n)D=n[F],n.hasOwnProperty(F)&&void 0!==D&&!u.hasOwnProperty(F)&&Jc(e,t,F,void 0,u,D);for(d in u)D=u[d],p=n[d],!u.hasOwnProperty(d)||D===p||void 0===D&&void 0===p||Jc(e,t,d,D,u,p);return}}for(var g in n)D=n[g],n.hasOwnProperty(g)&&null!=D&&!u.hasOwnProperty(g)&&Zc(e,t,g,null,u,D);for(f in u)D=u[f],p=n[f],!u.hasOwnProperty(f)||D===p||null==D&&null==p||Zc(e,t,f,D,u,p)}(u,e.type,n,t),u[je]=t}catch(r){cc(e,e.return,r)}}function pi(e){return 5===e.tag||3===e.tag||26===e.tag||27===e.tag&&Dd(e.type)||4===e.tag}function hi(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||pi(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(27===e.tag&&Dd(e.type))continue e;if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function mi(e,t,n){var u=e.tag;if(5===u||6===u)e=e.stateNode,t?(9===n.nodeType?n.body:"HTML"===n.nodeName?n.ownerDocument.body:n).insertBefore(e,t):((t=9===n.nodeType?n.body:"HTML"===n.nodeName?n.ownerDocument.body:n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Xc));else if(4!==u&&(27===u&&Dd(e.type)&&(n=e.stateNode,t=null),null!==(e=e.child)))for(mi(e,t,n),e=e.sibling;null!==e;)mi(e,t,n),e=e.sibling}function Fi(e,t,n){var u=e.tag;if(5===u||6===u)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==u&&(27===u&&Dd(e.type)&&(n=e.stateNode),null!==(e=e.child)))for(Fi(e,t,n),e=e.sibling;null!==e;)Fi(e,t,n),e=e.sibling}function gi(e){var t=e.stateNode,n=e.memoizedProps;try{for(var u=e.type,r=t.attributes;r.length;)t.removeAttributeNode(r[0]);ed(t,u,n),t[Pe]=e,t[je]=n}catch(a){cc(e,e.return,a)}}var yi=!1,bi=!1,vi=!1,Ei="function"===typeof WeakSet?WeakSet:Set,Ci=null;function ki(e,t,n){var u=n.flags;switch(n.tag){case 0:case 11:case 15:Li(e,n),4&u&&li(5,n);break;case 1:if(Li(e,n),4&u)if(e=n.stateNode,null===t)try{e.componentDidMount()}catch(l){cc(n,n.return,l)}else{var r=mo(n.type,t.memoizedProps);t=t.memoizedState;try{e.componentDidUpdate(r,t,e.__reactInternalSnapshotBeforeUpdate)}catch(o){cc(n,n.return,o)}}64&u&&ii(n),512&u&&ci(n,n.return);break;case 3:if(Li(e,n),64&u&&null!==(e=n.updateQueue)){if(t=null,null!==n.child)switch(n.child.tag){case 27:case 5:case 1:t=n.child.stateNode}try{fa(e,t)}catch(l){cc(n,n.return,l)}}break;case 27:null===t&&4&u&&gi(n);case 26:case 5:Li(e,n),null===t&&4&u&&fi(n),512&u&&ci(n,n.return);break;case 12:Li(e,n);break;case 13:Li(e,n),4&u&&Ni(e,n),64&u&&(null!==(e=n.memoizedState)&&(null!==(e=e.dehydrated)&&function(e,t){var n=e.ownerDocument;if("$?"!==e.data||"complete"===n.readyState)t();else{var u=function(){t(),n.removeEventListener("DOMContentLoaded",u)};n.addEventListener("DOMContentLoaded",u),e._reactRetry=u}}(e,n=pc.bind(null,n))));break;case 22:if(!(u=null!==n.memoizedState||yi)){t=null!==t&&null!==t.memoizedState||bi,r=yi;var a=bi;yi=u,(bi=t)&&!a?Mi(e,n,0!==(8772&n.subtreeFlags)):Li(e,n),yi=r,bi=a}break;case 30:break;default:Li(e,n)}}function Ai(e){var t=e.alternate;null!==t&&(e.alternate=null,Ai(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&Ie(t)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}var wi=null,xi=!1;function Si(e,t,n){for(n=n.child;null!==n;)Bi(e,t,n),n=n.sibling}function Bi(e,t,n){if(de&&"function"===typeof de.onCommitFiberUnmount)try{de.onCommitFiberUnmount(ce,n)}catch(a){}switch(n.tag){case 26:bi||di(n,t),Si(e,t,n),n.memoizedState?n.memoizedState.count--:n.stateNode&&(n=n.stateNode).parentNode.removeChild(n);break;case 27:bi||di(n,t);var u=wi,r=xi;Dd(n.type)&&(wi=n.stateNode,xi=!1),Si(e,t,n),vd(n.stateNode),wi=u,xi=r;break;case 5:bi||di(n,t);case 6:if(u=wi,r=xi,wi=null,Si(e,t,n),xi=r,null!==(wi=u))if(xi)try{(9===wi.nodeType?wi.body:"HTML"===wi.nodeName?wi.ownerDocument.body:wi).removeChild(n.stateNode)}catch(l){cc(n,t,l)}else try{wi.removeChild(n.stateNode)}catch(l){cc(n,t,l)}break;case 18:null!==wi&&(xi?(pd(9===(e=wi).nodeType?e.body:"HTML"===e.nodeName?e.ownerDocument.body:e,n.stateNode),Sf(e)):pd(wi,n.stateNode));break;case 4:u=wi,r=xi,wi=n.stateNode.containerInfo,xi=!0,Si(e,t,n),wi=u,xi=r;break;case 0:case 11:case 14:case 15:bi||oi(2,n,t),bi||oi(4,n,t),Si(e,t,n);break;case 1:bi||(di(n,t),"function"===typeof(u=n.stateNode).componentWillUnmount&&si(n,t,u)),Si(e,t,n);break;case 21:Si(e,t,n);break;case 22:bi=(u=bi)||null!==n.memoizedState,Si(e,t,n),bi=u;break;default:Si(e,t,n)}}function Ni(e,t){if(null===t.memoizedState&&(null!==(e=t.alternate)&&(null!==(e=e.memoizedState)&&null!==(e=e.dehydrated))))try{Sf(e)}catch(n){cc(t,t.return,n)}}function Ti(e,t){var n=function(e){switch(e.tag){case 13:case 19:var t=e.stateNode;return null===t&&(t=e.stateNode=new Ei),t;case 22:return null===(t=(e=e.stateNode)._retryCache)&&(t=e._retryCache=new Ei),t;default:throw Error(l(435,e.tag))}}(e);t.forEach(function(t){var u=hc.bind(null,e,t);n.has(t)||(n.add(t),t.then(u,u))})}function Pi(e,t){var n=t.deletions;if(null!==n)for(var u=0;u<n.length;u++){var r=n[u],a=e,o=t,i=o;e:for(;null!==i;){switch(i.tag){case 27:if(Dd(i.type)){wi=i.stateNode,xi=!1;break e}break;case 5:wi=i.stateNode,xi=!1;break e;case 3:case 4:wi=i.stateNode.containerInfo,xi=!0;break e}i=i.return}if(null===wi)throw Error(l(160));Bi(a,o,r),wi=null,xi=!1,null!==(a=r.alternate)&&(a.return=null),r.return=null}if(13878&t.subtreeFlags)for(t=t.child;null!==t;)_i(t,e),t=t.sibling}var ji=null;function _i(e,t){var n=e.alternate,u=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:Pi(t,e),zi(e),4&u&&(oi(3,e,e.return),li(3,e),oi(5,e,e.return));break;case 1:Pi(t,e),zi(e),512&u&&(bi||null===n||di(n,n.return)),64&u&&yi&&(null!==(e=e.updateQueue)&&(null!==(u=e.callbacks)&&(n=e.shared.hiddenCallbacks,e.shared.hiddenCallbacks=null===n?u:n.concat(u))));break;case 26:var r=ji;if(Pi(t,e),zi(e),512&u&&(bi||null===n||di(n,n.return)),4&u){var a=null!==n?n.memoizedState:null;if(u=e.memoizedState,null===n)if(null===u)if(null===e.stateNode){e:{u=e.type,n=e.memoizedProps,r=r.ownerDocument||r;t:switch(u){case"title":(!(a=r.getElementsByTagName("title")[0])||a[Me]||a[Pe]||"http://www.w3.org/2000/svg"===a.namespaceURI||a.hasAttribute("itemprop"))&&(a=r.createElement(u),r.head.insertBefore(a,r.querySelector("head > title"))),ed(a,u,n),a[Pe]=e,qe(a),u=a;break e;case"link":var o=Md("link","href",r).get(u+(n.href||""));if(o)for(var i=0;i<o.length;i++)if((a=o[i]).getAttribute("href")===(null==n.href||""===n.href?null:n.href)&&a.getAttribute("rel")===(null==n.rel?null:n.rel)&&a.getAttribute("title")===(null==n.title?null:n.title)&&a.getAttribute("crossorigin")===(null==n.crossOrigin?null:n.crossOrigin)){o.splice(i,1);break t}ed(a=r.createElement(u),u,n),r.head.appendChild(a);break;case"meta":if(o=Md("meta","content",r).get(u+(n.content||"")))for(i=0;i<o.length;i++)if((a=o[i]).getAttribute("content")===(null==n.content?null:""+n.content)&&a.getAttribute("name")===(null==n.name?null:n.name)&&a.getAttribute("property")===(null==n.property?null:n.property)&&a.getAttribute("http-equiv")===(null==n.httpEquiv?null:n.httpEquiv)&&a.getAttribute("charset")===(null==n.charSet?null:n.charSet)){o.splice(i,1);break t}ed(a=r.createElement(u),u,n),r.head.appendChild(a);break;default:throw Error(l(468,u))}a[Pe]=e,qe(a),u=a}e.stateNode=u}else Id(r,e.type,e.stateNode);else e.stateNode=_d(r,u,e.memoizedProps);else a!==u?(null===a?null!==n.stateNode&&(n=n.stateNode).parentNode.removeChild(n):a.count--,null===u?Id(r,e.type,e.stateNode):_d(r,u,e.memoizedProps)):null===u&&null!==e.stateNode&&Di(e,e.memoizedProps,n.memoizedProps)}break;case 27:Pi(t,e),zi(e),512&u&&(bi||null===n||di(n,n.return)),null!==n&&4&u&&Di(e,e.memoizedProps,n.memoizedProps);break;case 5:if(Pi(t,e),zi(e),512&u&&(bi||null===n||di(n,n.return)),32&e.flags){r=e.stateNode;try{Et(r,"")}catch(p){cc(e,e.return,p)}}4&u&&null!=e.stateNode&&Di(e,r=e.memoizedProps,null!==n?n.memoizedProps:r),1024&u&&(vi=!0);break;case 6:if(Pi(t,e),zi(e),4&u){if(null===e.stateNode)throw Error(l(162));u=e.memoizedProps,n=e.stateNode;try{n.nodeValue=u}catch(p){cc(e,e.return,p)}}break;case 3:if(Od=null,r=ji,ji=kd(t.containerInfo),Pi(t,e),ji=r,zi(e),4&u&&null!==n&&n.memoizedState.isDehydrated)try{Sf(t.containerInfo)}catch(p){cc(e,e.return,p)}vi&&(vi=!1,Ri(e));break;case 4:u=ji,ji=kd(e.stateNode.containerInfo),Pi(t,e),zi(e),ji=u;break;case 12:default:Pi(t,e),zi(e);break;case 13:Pi(t,e),zi(e),8192&e.child.flags&&null!==e.memoizedState!==(null!==n&&null!==n.memoizedState)&&(vs=te()),4&u&&(null!==(u=e.updateQueue)&&(e.updateQueue=null,Ti(e,u)));break;case 22:r=null!==e.memoizedState;var s=null!==n&&null!==n.memoizedState,c=yi,d=bi;if(yi=c||r,bi=d||s,Pi(t,e),bi=d,yi=c,zi(e),8192&u)e:for(t=e.stateNode,t._visibility=r?-2&t._visibility:1|t._visibility,r&&(null===n||s||yi||bi||Oi(e)),n=null,t=e;;){if(5===t.tag||26===t.tag){if(null===n){s=n=t;try{if(a=s.stateNode,r)"function"===typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none";else{i=s.stateNode;var f=s.memoizedProps.style,D=void 0!==f&&null!==f&&f.hasOwnProperty("display")?f.display:null;i.style.display=null==D||"boolean"===typeof D?"":(""+D).trim()}}catch(p){cc(s,s.return,p)}}}else if(6===t.tag){if(null===n){s=t;try{s.stateNode.nodeValue=r?"":s.memoizedProps}catch(p){cc(s,s.return,p)}}}else if((22!==t.tag&&23!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;null===t.sibling;){if(null===t.return||t.return===e)break e;n===t&&(n=null),t=t.return}n===t&&(n=null),t.sibling.return=t.return,t=t.sibling}4&u&&(null!==(u=e.updateQueue)&&(null!==(n=u.retryQueue)&&(u.retryQueue=null,Ti(e,n))));break;case 19:Pi(t,e),zi(e),4&u&&(null!==(u=e.updateQueue)&&(e.updateQueue=null,Ti(e,u)));case 30:case 21:}}function zi(e){var t=e.flags;if(2&t){try{for(var n,u=e.return;null!==u;){if(pi(u)){n=u;break}u=u.return}if(null==n)throw Error(l(160));switch(n.tag){case 27:var r=n.stateNode;Fi(e,hi(e),r);break;case 5:var a=n.stateNode;32&n.flags&&(Et(a,""),n.flags&=-33),Fi(e,hi(e),a);break;case 3:case 4:var o=n.stateNode.containerInfo;mi(e,hi(e),o);break;default:throw Error(l(161))}}catch(i){cc(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function Ri(e){if(1024&e.subtreeFlags)for(e=e.child;null!==e;){var t=e;Ri(t),5===t.tag&&1024&t.flags&&t.stateNode.reset(),e=e.sibling}}function Li(e,t){if(8772&t.subtreeFlags)for(t=t.child;null!==t;)ki(e,t.alternate,t),t=t.sibling}function Oi(e){for(e=e.child;null!==e;){var t=e;switch(t.tag){case 0:case 11:case 14:case 15:oi(4,t,t.return),Oi(t);break;case 1:di(t,t.return);var n=t.stateNode;"function"===typeof n.componentWillUnmount&&si(t,t.return,n),Oi(t);break;case 27:vd(t.stateNode);case 26:case 5:di(t,t.return),Oi(t);break;case 22:null===t.memoizedState&&Oi(t);break;default:Oi(t)}e=e.sibling}}function Mi(e,t,n){for(n=n&&0!==(8772&t.subtreeFlags),t=t.child;null!==t;){var u=t.alternate,r=e,a=t,l=a.flags;switch(a.tag){case 0:case 11:case 15:Mi(r,a,n),li(4,a);break;case 1:if(Mi(r,a,n),"function"===typeof(r=(u=a).stateNode).componentDidMount)try{r.componentDidMount()}catch(s){cc(u,u.return,s)}if(null!==(r=(u=a).updateQueue)){var o=u.stateNode;try{var i=r.shared.hiddenCallbacks;if(null!==i)for(r.shared.hiddenCallbacks=null,r=0;r<i.length;r++)da(i[r],o)}catch(s){cc(u,u.return,s)}}n&&64&l&&ii(a),ci(a,a.return);break;case 27:gi(a);case 26:case 5:Mi(r,a,n),n&&null===u&&4&l&&fi(a),ci(a,a.return);break;case 12:Mi(r,a,n);break;case 13:Mi(r,a,n),n&&4&l&&Ni(r,a);break;case 22:null===a.memoizedState&&Mi(r,a,n),ci(a,a.return);break;case 30:break;default:Mi(r,a,n)}t=t.sibling}}function Ii(e,t){var n=null;null!==e&&null!==e.memoizedState&&null!==e.memoizedState.cachePool&&(n=e.memoizedState.cachePool.pool),e=null,null!==t.memoizedState&&null!==t.memoizedState.cachePool&&(e=t.memoizedState.cachePool.pool),e!==n&&(null!=e&&e.refCount++,null!=n&&_r(n))}function Ui(e,t){e=null,null!==t.alternate&&(e=t.alternate.memoizedState.cache),(t=t.memoizedState.cache)!==e&&(t.refCount++,null!=e&&_r(e))}function $i(e,t,n,u){if(10256&t.subtreeFlags)for(t=t.child;null!==t;)Vi(e,t,n,u),t=t.sibling}function Vi(e,t,n,u){var r=t.flags;switch(t.tag){case 0:case 11:case 15:$i(e,t,n,u),2048&r&&li(9,t);break;case 1:case 13:default:$i(e,t,n,u);break;case 3:$i(e,t,n,u),2048&r&&(e=null,null!==t.alternate&&(e=t.alternate.memoizedState.cache),(t=t.memoizedState.cache)!==e&&(t.refCount++,null!=e&&_r(e)));break;case 12:if(2048&r){$i(e,t,n,u),e=t.stateNode;try{var a=t.memoizedProps,l=a.id,o=a.onPostCommit;"function"===typeof o&&o(l,null===t.alternate?"mount":"update",e.passiveEffectDuration,-0)}catch(i){cc(t,t.return,i)}}else $i(e,t,n,u);break;case 23:break;case 22:a=t.stateNode,l=t.alternate,null!==t.memoizedState?2&a._visibility?$i(e,t,n,u):qi(e,t):2&a._visibility?$i(e,t,n,u):(a._visibility|=2,Hi(e,t,n,u,0!==(10256&t.subtreeFlags))),2048&r&&Ii(l,t);break;case 24:$i(e,t,n,u),2048&r&&Ui(t.alternate,t)}}function Hi(e,t,n,u,r){for(r=r&&0!==(10256&t.subtreeFlags),t=t.child;null!==t;){var a=e,l=t,o=n,i=u,s=l.flags;switch(l.tag){case 0:case 11:case 15:Hi(a,l,o,i,r),li(8,l);break;case 23:break;case 22:var c=l.stateNode;null!==l.memoizedState?2&c._visibility?Hi(a,l,o,i,r):qi(a,l):(c._visibility|=2,Hi(a,l,o,i,r)),r&&2048&s&&Ii(l.alternate,l);break;case 24:Hi(a,l,o,i,r),r&&2048&s&&Ui(l.alternate,l);break;default:Hi(a,l,o,i,r)}t=t.sibling}}function qi(e,t){if(10256&t.subtreeFlags)for(t=t.child;null!==t;){var n=e,u=t,r=u.flags;switch(u.tag){case 22:qi(n,u),2048&r&&Ii(u.alternate,u);break;case 24:qi(n,u),2048&r&&Ui(u.alternate,u);break;default:qi(n,u)}t=t.sibling}}var Wi=8192;function Yi(e){if(e.subtreeFlags&Wi)for(e=e.child;null!==e;)Qi(e),e=e.sibling}function Qi(e){switch(e.tag){case 26:Yi(e),e.flags&Wi&&null!==e.memoizedState&&function(e,t,n){if(null===$d)throw Error(l(475));var u=$d;if("stylesheet"===t.type&&("string"!==typeof n.media||!1!==matchMedia(n.media).matches)&&0===(4&t.state.loading)){if(null===t.instance){var r=Bd(n.href),a=e.querySelector(Nd(r));if(a)return null!==(e=a._p)&&"object"===typeof e&&"function"===typeof e.then&&(u.count++,u=Hd.bind(u),e.then(u,u)),t.state.loading|=4,t.instance=a,void qe(a);a=e.ownerDocument||e,n=Td(n),(r=Ed.get(r))&&Rd(n,r),qe(a=a.createElement("link"));var o=a;o._p=new Promise(function(e,t){o.onload=e,o.onerror=t}),ed(a,"link",n),t.instance=a}null===u.stylesheets&&(u.stylesheets=new Map),u.stylesheets.set(t,e),(e=t.state.preload)&&0===(3&t.state.loading)&&(u.count++,t=Hd.bind(u),e.addEventListener("load",t),e.addEventListener("error",t))}}(ji,e.memoizedState,e.memoizedProps);break;case 5:default:Yi(e);break;case 3:case 4:var t=ji;ji=kd(e.stateNode.containerInfo),Yi(e),ji=t;break;case 22:null===e.memoizedState&&(null!==(t=e.alternate)&&null!==t.memoizedState?(t=Wi,Wi=16777216,Yi(e),Wi=t):Yi(e))}}function Ki(e){var t=e.alternate;if(null!==t&&null!==(e=t.child)){t.child=null;do{t=e.sibling,e.sibling=null,e=t}while(null!==e)}}function Gi(e){var t=e.deletions;if(0!==(16&e.flags)){if(null!==t)for(var n=0;n<t.length;n++){var u=t[n];Ci=u,Ji(u,e)}Ki(e)}if(10256&e.subtreeFlags)for(e=e.child;null!==e;)Xi(e),e=e.sibling}function Xi(e){switch(e.tag){case 0:case 11:case 15:Gi(e),2048&e.flags&&oi(9,e,e.return);break;case 3:case 12:default:Gi(e);break;case 22:var t=e.stateNode;null!==e.memoizedState&&2&t._visibility&&(null===e.return||13!==e.return.tag)?(t._visibility&=-3,Zi(e)):Gi(e)}}function Zi(e){var t=e.deletions;if(0!==(16&e.flags)){if(null!==t)for(var n=0;n<t.length;n++){var u=t[n];Ci=u,Ji(u,e)}Ki(e)}for(e=e.child;null!==e;){switch((t=e).tag){case 0:case 11:case 15:oi(8,t,t.return),Zi(t);break;case 22:2&(n=t.stateNode)._visibility&&(n._visibility&=-3,Zi(t));break;default:Zi(t)}e=e.sibling}}function Ji(e,t){for(;null!==Ci;){var n=Ci;switch(n.tag){case 0:case 11:case 15:oi(8,n,t);break;case 23:case 22:if(null!==n.memoizedState&&null!==n.memoizedState.cachePool){var u=n.memoizedState.cachePool.pool;null!=u&&u.refCount++}break;case 24:_r(n.memoizedState.cache)}if(null!==(u=n.child))u.return=n,Ci=u;else e:for(n=e;null!==Ci;){var r=(u=Ci).sibling,a=u.return;if(Ai(u),u===n){Ci=null;break e}if(null!==r){r.return=a,Ci=r;break e}Ci=a}}}var es={getCacheForType:function(e){var t=wr(Pr),n=t.data.get(e);return void 0===n&&(n=e(),t.data.set(e,n)),n}},ts="function"===typeof WeakMap?WeakMap:Map,ns=0,us=null,rs=null,as=0,ls=0,os=null,is=!1,ss=!1,cs=!1,ds=0,fs=0,Ds=0,ps=0,hs=0,ms=0,Fs=0,gs=null,ys=null,bs=!1,vs=0,Es=1/0,Cs=null,ks=null,As=0,ws=null,xs=null,Ss=0,Bs=0,Ns=null,Ts=null,Ps=0,js=null;function _s(){if(0!==(2&ns)&&0!==as)return as&-as;if(null!==_.T){return 0!==Lr?Lr:Bc()}return Ne()}function zs(){0===ms&&(ms=0===(536870912&as)||ar?Ee():536870912);var e=uo.current;return null!==e&&(e.flags|=32),ms}function Rs(e,t,n){(e!==us||2!==ls&&9!==ls)&&null===e.cancelPendingCommit||(Vs(e,0),Is(e,as,ms,!1)),Ae(e,n),0!==(2&ns)&&e===us||(e===us&&(0===(2&ns)&&(ps|=n),4===fs&&Is(e,as,ms,!1)),Ec(e))}function Ls(e,t,n){if(0!==(6&ns))throw Error(l(327));for(var u=!n&&0===(124&t)&&0===(t&e.expiredLanes)||be(e,t),r=u?function(e,t){var n=ns;ns|=2;var u=qs(),r=Ws();us!==e||as!==t?(Cs=null,Es=te()+500,Vs(e,t)):ss=be(e,t);e:for(;;)try{if(0!==ls&&null!==rs){t=rs;var a=os;t:switch(ls){case 1:ls=0,os=null,Js(e,t,a,1);break;case 2:case 9:if(Kr(a)){ls=0,os=null,Zs(t);break}t=function(){2!==ls&&9!==ls||us!==e||(ls=7),Ec(e)},a.then(t,t);break e;case 3:ls=7;break e;case 4:ls=5;break e;case 7:Kr(a)?(ls=0,os=null,Zs(t)):(ls=0,os=null,Js(e,t,a,7));break;case 5:var o=null;switch(rs.tag){case 26:o=rs.memoizedState;case 5:case 27:var i=rs;if(!o||Ud(o)){ls=0,os=null;var s=i.sibling;if(null!==s)rs=s;else{var c=i.return;null!==c?(rs=c,ec(c)):rs=null}break t}}ls=0,os=null,Js(e,t,a,5);break;case 6:ls=0,os=null,Js(e,t,a,6);break;case 8:$s(),fs=6;break e;default:throw Error(l(462))}}Gs();break}catch(d){Hs(e,d)}return gr=Fr=null,_.H=u,_.A=r,ns=n,null!==rs?0:(us=null,as=0,Su(),fs)}(e,t):Qs(e,t,!0),a=u;;){if(0===r){ss&&!u&&Is(e,t,0,!1);break}if(n=e.current.alternate,!a||Ms(n)){if(2===r){if(a=t,e.errorRecoveryDisabledLanes&a)var o=0;else o=0!==(o=-536870913&e.pendingLanes)?o:536870912&o?536870912:0;if(0!==o){t=o;e:{var i=e;r=gs;var s=i.current.memoizedState.isDehydrated;if(s&&(Vs(i,o).flags|=256),2!==(o=Qs(i,o,!1))){if(cs&&!s){i.errorRecoveryDisabledLanes|=a,ps|=a,r=4;break e}a=ys,ys=r,null!==a&&(null===ys?ys=a:ys.push.apply(ys,a))}r=o}if(a=!1,2!==r)continue}}if(1===r){Vs(e,0),Is(e,t,0,!0);break}e:{switch(u=e,a=r){case 0:case 1:throw Error(l(345));case 4:if((4194048&t)!==t)break;case 6:Is(u,t,ms,!is);break e;case 2:ys=null;break;case 3:case 5:break;default:throw Error(l(329))}if((62914560&t)===t&&10<(r=vs+300-te())){if(Is(u,t,ms,!is),0!==ye(u,0,!0))break e;u.timeoutHandle=id(Os.bind(null,u,n,ys,Cs,bs,t,ms,ps,Fs,is,a,2,-0,0),r)}else Os(u,n,ys,Cs,bs,t,ms,ps,Fs,is,a,0,-0,0)}break}r=Qs(e,t,!1),a=!1}Ec(e)}function Os(e,t,n,u,r,a,o,i,s,c,d,f,D,p){if(e.timeoutHandle=-1,(8192&(f=t.subtreeFlags)||16785408===(16785408&f))&&($d={stylesheets:null,count:0,unsuspend:Vd},Qi(t),null!==(f=function(){if(null===$d)throw Error(l(475));var e=$d;return e.stylesheets&&0===e.count&&Wd(e,e.stylesheets),0<e.count?function(t){var n=setTimeout(function(){if(e.stylesheets&&Wd(e,e.stylesheets),e.unsuspend){var t=e.unsuspend;e.unsuspend=null,t()}},6e4);return e.unsuspend=t,function(){e.unsuspend=null,clearTimeout(n)}}:null}())))return e.cancelPendingCommit=f(nc.bind(null,e,t,a,n,u,r,o,i,s,d,1,D,p)),void Is(e,a,o,!c);nc(e,t,a,n,u,r,o,i,s)}function Ms(e){for(var t=e;;){var n=t.tag;if((0===n||11===n||15===n)&&16384&t.flags&&(null!==(n=t.updateQueue)&&null!==(n=n.stores)))for(var u=0;u<n.length;u++){var r=n[u],a=r.getSnapshot;r=r.value;try{if(!Kn(a(),r))return!1}catch(l){return!1}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Is(e,t,n,u){t&=~hs,t&=~ps,e.suspendedLanes|=t,e.pingedLanes&=~t,u&&(e.warmLanes|=t),u=e.expirationTimes;for(var r=t;0<r;){var a=31-De(r),l=1<<a;u[a]=-1,r&=~l}0!==n&&we(e,n,t)}function Us(){return 0!==(6&ns)||(Cc(0,!1),!1)}function $s(){if(null!==rs){if(0===ls)var e=rs.return;else gr=Fr=null,La(e=rs),Ql=null,Kl=0,e=rs;for(;null!==e;)ai(e.alternate,e),e=e.return;rs=null}}function Vs(e,t){var n=e.timeoutHandle;-1!==n&&(e.timeoutHandle=-1,sd(n)),null!==(n=e.cancelPendingCommit)&&(e.cancelPendingCommit=null,n()),$s(),us=e,rs=n=Ou(e.current,null),as=t,ls=0,os=null,is=!1,ss=be(e,t),cs=!1,Fs=ms=hs=ps=Ds=fs=0,ys=gs=null,bs=!1,0!==(8&t)&&(t|=32&t);var u=e.entangledLanes;if(0!==u)for(e=e.entanglements,u&=t;0<u;){var r=31-De(u),a=1<<r;t|=e[r],u&=~a}return ds=t,Su(),n}function Hs(e,t){ya=null,_.H=Hl,t===qr||t===Yr?(t=Jr(),ls=3):t===Wr?(t=Jr(),ls=4):ls=t===wo?8:null!==t&&"object"===typeof t&&"function"===typeof t.then?6:1,os=t,null===rs&&(fs=1,vo(e,ku(t,e.current)))}function qs(){var e=_.H;return _.H=Hl,null===e?Hl:e}function Ws(){var e=_.A;return _.A=es,e}function Ys(){fs=4,is||(4194048&as)!==as&&null!==uo.current||(ss=!0),0===(134217727&Ds)&&0===(134217727&ps)||null===us||Is(us,as,ms,!1)}function Qs(e,t,n){var u=ns;ns|=2;var r=qs(),a=Ws();us===e&&as===t||(Cs=null,Vs(e,t)),t=!1;var l=fs;e:for(;;)try{if(0!==ls&&null!==rs){var o=rs,i=os;switch(ls){case 8:$s(),l=6;break e;case 3:case 2:case 9:case 6:null===uo.current&&(t=!0);var s=ls;if(ls=0,os=null,Js(e,o,i,s),n&&ss){l=0;break e}break;default:s=ls,ls=0,os=null,Js(e,o,i,s)}}Ks(),l=fs;break}catch(c){Hs(e,c)}return t&&e.shellSuspendCounter++,gr=Fr=null,ns=u,_.H=r,_.A=a,null===rs&&(us=null,as=0,Su()),l}function Ks(){for(;null!==rs;)Xs(rs)}function Gs(){for(;null!==rs&&!J();)Xs(rs)}function Xs(e){var t=Xo(e.alternate,e,ds);e.memoizedProps=e.pendingProps,null===t?ec(e):rs=t}function Zs(e){var t=e,n=t.alternate;switch(t.tag){case 15:case 0:t=Ro(n,t,t.pendingProps,t.type,void 0,as);break;case 11:t=Ro(n,t,t.pendingProps,t.type.render,t.ref,as);break;case 5:La(t);default:ai(n,t),t=Xo(n,t=rs=Mu(t,ds),ds)}e.memoizedProps=e.pendingProps,null===t?ec(e):rs=t}function Js(e,t,n,u){gr=Fr=null,La(t),Ql=null,Kl=0;var r=t.return;try{if(function(e,t,n,u,r){if(n.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){if(null!==(t=n.alternate)&&Cr(t,n,r,!0),null!==(n=uo.current)){switch(n.tag){case 13:return null===ro?Ys():null===n.alternate&&0===fs&&(fs=3),n.flags&=-257,n.flags|=65536,n.lanes=r,u===Qr?n.flags|=16384:(null===(t=n.updateQueue)?n.updateQueue=new Set([u]):t.add(u),dc(e,u,r)),!1;case 22:return n.flags|=65536,u===Qr?n.flags|=16384:(null===(t=n.updateQueue)?(t={transitions:null,markerInstances:null,retryQueue:new Set([u])},n.updateQueue=t):null===(n=t.retryQueue)?t.retryQueue=new Set([u]):n.add(u),dc(e,u,r)),!1}throw Error(l(435,n.tag))}return dc(e,u,r),Ys(),!1}if(ar)return null!==(t=uo.current)?(0===(65536&t.flags)&&(t.flags|=256),t.flags|=65536,t.lanes=r,u!==ir&&hr(ku(e=Error(l(422),{cause:u}),n))):(u!==ir&&hr(ku(t=Error(l(423),{cause:u}),n)),(e=e.current.alternate).flags|=65536,r&=-r,e.lanes|=r,u=ku(u,n),oa(e,r=Co(e.stateNode,u,r)),4!==fs&&(fs=2)),!1;var a=Error(l(520),{cause:u});if(a=ku(a,n),null===gs?gs=[a]:gs.push(a),4!==fs&&(fs=2),null===t)return!0;u=ku(u,n),n=t;do{switch(n.tag){case 3:return n.flags|=65536,e=r&-r,n.lanes|=e,oa(n,e=Co(n.stateNode,u,e)),!1;case 1:if(t=n.type,a=n.stateNode,0===(128&n.flags)&&("function"===typeof t.getDerivedStateFromError||null!==a&&"function"===typeof a.componentDidCatch&&(null===ks||!ks.has(a))))return n.flags|=65536,r&=-r,n.lanes|=r,Ao(r=ko(r),e,n,u),oa(n,r),!1}n=n.return}while(null!==n);return!1}(e,r,t,n,as))return fs=1,vo(e,ku(n,e.current)),void(rs=null)}catch(a){if(null!==r)throw rs=r,a;return fs=1,vo(e,ku(n,e.current)),void(rs=null)}32768&t.flags?(ar||1===u?e=!0:ss||0!==(536870912&as)?e=!1:(is=e=!0,(2===u||9===u||3===u||6===u)&&(null!==(u=uo.current)&&13===u.tag&&(u.flags|=16384))),tc(t,e)):ec(t)}function ec(e){var t=e;do{if(0!==(32768&t.flags))return void tc(t,is);e=t.return;var n=ui(t.alternate,t,ds);if(null!==n)return void(rs=n);if(null!==(t=t.sibling))return void(rs=t);rs=t=e}while(null!==t);0===fs&&(fs=5)}function tc(e,t){do{var n=ri(e.alternate,e);if(null!==n)return n.flags&=32767,void(rs=n);if(null!==(n=e.return)&&(n.flags|=32768,n.subtreeFlags=0,n.deletions=null),!t&&null!==(e=e.sibling))return void(rs=e);rs=e=n}while(null!==e);fs=6,rs=null}function nc(e,t,n,u,r,a,o,i,s){e.cancelPendingCommit=null;do{oc()}while(0!==As);if(0!==(6&ns))throw Error(l(327));if(null!==t){if(t===e.current)throw Error(l(177));if(a=t.lanes|t.childLanes,function(e,t,n,u,r,a){var l=e.pendingLanes;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0,e.expiredLanes&=n,e.entangledLanes&=n,e.errorRecoveryDisabledLanes&=n,e.shellSuspendCounter=0;var o=e.entanglements,i=e.expirationTimes,s=e.hiddenUpdates;for(n=l&~n;0<n;){var c=31-De(n),d=1<<c;o[c]=0,i[c]=-1;var f=s[c];if(null!==f)for(s[c]=null,c=0;c<f.length;c++){var D=f[c];null!==D&&(D.lane&=-536870913)}n&=~d}0!==u&&we(e,u,0),0!==a&&0===r&&0!==e.tag&&(e.suspendedLanes|=a&~(l&~t))}(e,n,a|=xu,o,i,s),e===us&&(rs=us=null,as=0),xs=t,ws=e,Ss=n,Bs=a,Ns=r,Ts=u,0!==(10256&t.subtreeFlags)||0!==(10256&t.flags)?(e.callbackNode=null,e.callbackPriority=0,X(ae,function(){return ic(),null})):(e.callbackNode=null,e.callbackPriority=0),u=0!==(13878&t.flags),0!==(13878&t.subtreeFlags)||u){u=_.T,_.T=null,r=z.p,z.p=2,o=ns,ns|=4;try{!function(e,t){if(e=e.containerInfo,td=nf,tu(e=eu(e))){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var u=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(u&&0!==u.rangeCount){n=u.anchorNode;var r=u.anchorOffset,a=u.focusNode;u=u.focusOffset;try{n.nodeType,a.nodeType}catch(m){n=null;break e}var o=0,i=-1,s=-1,c=0,d=0,f=e,D=null;t:for(;;){for(var p;f!==n||0!==r&&3!==f.nodeType||(i=o+r),f!==a||0!==u&&3!==f.nodeType||(s=o+u),3===f.nodeType&&(o+=f.nodeValue.length),null!==(p=f.firstChild);)D=f,f=p;for(;;){if(f===e)break t;if(D===n&&++c===r&&(i=o),D===a&&++d===u&&(s=o),null!==(p=f.nextSibling))break;D=(f=D).parentNode}f=p}n=-1===i||-1===s?null:{start:i,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(nd={focusedElem:e,selectionRange:n},nf=!1,Ci=t;null!==Ci;)if(e=(t=Ci).child,0!==(1024&t.subtreeFlags)&&null!==e)e.return=t,Ci=e;else for(;null!==Ci;){switch(a=(t=Ci).alternate,e=t.flags,t.tag){case 0:case 11:case 15:case 5:case 26:case 27:case 6:case 4:case 17:break;case 1:if(0!==(1024&e)&&null!==a){e=void 0,n=t,r=a.memoizedProps,a=a.memoizedState,u=n.stateNode;try{var h=mo(n.type,r,(n.elementType,n.type));e=u.getSnapshotBeforeUpdate(h,a),u.__reactInternalSnapshotBeforeUpdate=e}catch(F){cc(n,n.return,F)}}break;case 3:if(0!==(1024&e))if(9===(n=(e=t.stateNode.containerInfo).nodeType))hd(e);else if(1===n)switch(e.nodeName){case"HEAD":case"HTML":case"BODY":hd(e);break;default:e.textContent=""}break;default:if(0!==(1024&e))throw Error(l(163))}if(null!==(e=t.sibling)){e.return=t.return,Ci=e;break}Ci=t.return}}(e,t)}finally{ns=o,z.p=r,_.T=u}}As=1,uc(),rc(),ac()}}function uc(){if(1===As){As=0;var e=ws,t=xs,n=0!==(13878&t.flags);if(0!==(13878&t.subtreeFlags)||n){n=_.T,_.T=null;var u=z.p;z.p=2;var r=ns;ns|=4;try{_i(t,e);var a=nd,l=eu(e.containerInfo),o=a.focusedElem,i=a.selectionRange;if(l!==o&&o&&o.ownerDocument&&Jn(o.ownerDocument.documentElement,o)){if(null!==i&&tu(o)){var s=i.start,c=i.end;if(void 0===c&&(c=s),"selectionStart"in o)o.selectionStart=s,o.selectionEnd=Math.min(c,o.value.length);else{var d=o.ownerDocument||document,f=d&&d.defaultView||window;if(f.getSelection){var D=f.getSelection(),p=o.textContent.length,h=Math.min(i.start,p),m=void 0===i.end?h:Math.min(i.end,p);!D.extend&&h>m&&(l=m,m=h,h=l);var F=Zn(o,h),g=Zn(o,m);if(F&&g&&(1!==D.rangeCount||D.anchorNode!==F.node||D.anchorOffset!==F.offset||D.focusNode!==g.node||D.focusOffset!==g.offset)){var y=d.createRange();y.setStart(F.node,F.offset),D.removeAllRanges(),h>m?(D.addRange(y),D.extend(g.node,g.offset)):(y.setEnd(g.node,g.offset),D.addRange(y))}}}}for(d=[],D=o;D=D.parentNode;)1===D.nodeType&&d.push({element:D,left:D.scrollLeft,top:D.scrollTop});for("function"===typeof o.focus&&o.focus(),o=0;o<d.length;o++){var b=d[o];b.element.scrollLeft=b.left,b.element.scrollTop=b.top}}nf=!!td,nd=td=null}finally{ns=r,z.p=u,_.T=n}}e.current=t,As=2}}function rc(){if(2===As){As=0;var e=ws,t=xs,n=0!==(8772&t.flags);if(0!==(8772&t.subtreeFlags)||n){n=_.T,_.T=null;var u=z.p;z.p=2;var r=ns;ns|=4;try{ki(e,t.alternate,t)}finally{ns=r,z.p=u,_.T=n}}As=3}}function ac(){if(4===As||3===As){As=0,ee();var e=ws,t=xs,n=Ss,u=Ts;0!==(10256&t.subtreeFlags)||0!==(10256&t.flags)?As=5:(As=0,xs=ws=null,lc(e,e.pendingLanes));var r=e.pendingLanes;if(0===r&&(ks=null),Be(n),t=t.stateNode,de&&"function"===typeof de.onCommitFiberRoot)try{de.onCommitFiberRoot(ce,t,void 0,128===(128&t.current.flags))}catch(i){}if(null!==u){t=_.T,r=z.p,z.p=2,_.T=null;try{for(var a=e.onRecoverableError,l=0;l<u.length;l++){var o=u[l];a(o.value,{componentStack:o.stack})}}finally{_.T=t,z.p=r}}0!==(3&Ss)&&oc(),Ec(e),r=e.pendingLanes,0!==(4194090&n)&&0!==(42&r)?e===js?Ps++:(Ps=0,js=e):Ps=0,Cc(0,!1)}}function lc(e,t){0===(e.pooledCacheLanes&=t)&&(null!=(t=e.pooledCache)&&(e.pooledCache=null,_r(t)))}function oc(e){return uc(),rc(),ac(),ic()}function ic(){if(5!==As)return!1;var e=ws,t=Bs;Bs=0;var n=Be(Ss),u=_.T,r=z.p;try{z.p=32>n?32:n,_.T=null,n=Ns,Ns=null;var a=ws,o=Ss;if(As=0,xs=ws=null,Ss=0,0!==(6&ns))throw Error(l(331));var i=ns;if(ns|=4,Xi(a.current),Vi(a,a.current,o,n),ns=i,Cc(0,!1),de&&"function"===typeof de.onPostCommitFiberRoot)try{de.onPostCommitFiberRoot(ce,a)}catch(s){}return!0}finally{z.p=r,_.T=u,lc(e,t)}}function sc(e,t,n){t=ku(n,t),null!==(e=aa(e,t=Co(e.stateNode,t,2),2))&&(Ae(e,2),Ec(e))}function cc(e,t,n){if(3===e.tag)sc(e,e,n);else for(;null!==t;){if(3===t.tag){sc(t,e,n);break}if(1===t.tag){var u=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof u.componentDidCatch&&(null===ks||!ks.has(u))){e=ku(n,e),null!==(u=aa(t,n=ko(2),2))&&(Ao(n,u,t,e),Ae(u,2),Ec(u));break}}t=t.return}}function dc(e,t,n){var u=e.pingCache;if(null===u){u=e.pingCache=new ts;var r=new Set;u.set(t,r)}else void 0===(r=u.get(t))&&(r=new Set,u.set(t,r));r.has(n)||(cs=!0,r.add(n),e=fc.bind(null,e,t,n),t.then(e,e))}function fc(e,t,n){var u=e.pingCache;null!==u&&u.delete(t),e.pingedLanes|=e.suspendedLanes&n,e.warmLanes&=~n,us===e&&(as&n)===n&&(4===fs||3===fs&&(62914560&as)===as&&300>te()-vs?0===(2&ns)&&Vs(e,0):hs|=n,Fs===as&&(Fs=0)),Ec(e)}function Dc(e,t){0===t&&(t=Ce()),null!==(e=Tu(e,t))&&(Ae(e,t),Ec(e))}function pc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Dc(e,n)}function hc(e,t){var n=0;switch(e.tag){case 13:var u=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:u=e.stateNode;break;case 22:u=e.stateNode._retryCache;break;default:throw Error(l(314))}null!==u&&u.delete(t),Dc(e,n)}var mc=null,Fc=null,gc=!1,yc=!1,bc=!1,vc=0;function Ec(e){e!==Fc&&null===e.next&&(null===Fc?mc=Fc=e:Fc=Fc.next=e),yc=!0,gc||(gc=!0,dd(function(){0!==(6&ns)?X(ue,kc):Ac()}))}function Cc(e,t){if(!bc&&yc){bc=!0;do{for(var n=!1,u=mc;null!==u;){if(!t)if(0!==e){var r=u.pendingLanes;if(0===r)var a=0;else{var l=u.suspendedLanes,o=u.pingedLanes;a=(1<<31-De(42|e)+1)-1,a=201326741&(a&=r&~(l&~o))?201326741&a|1:a?2|a:0}0!==a&&(n=!0,Sc(u,a))}else a=as,0===(3&(a=ye(u,u===us?a:0,null!==u.cancelPendingCommit||-1!==u.timeoutHandle)))||be(u,a)||(n=!0,Sc(u,a));u=u.next}}while(n);bc=!1}}function kc(){Ac()}function Ac(){yc=gc=!1;var e=0;0!==vc&&(function(){var e=window.event;if(e&&"popstate"===e.type)return e!==od&&(od=e,!0);return od=null,!1}()&&(e=vc),vc=0);for(var t=te(),n=null,u=mc;null!==u;){var r=u.next,a=wc(u,t);0===a?(u.next=null,null===n?mc=r:n.next=r,null===r&&(Fc=n)):(n=u,(0!==e||0!==(3&a))&&(yc=!0)),u=r}Cc(e,!1)}function wc(e,t){for(var n=e.suspendedLanes,u=e.pingedLanes,r=e.expirationTimes,a=-62914561&e.pendingLanes;0<a;){var l=31-De(a),o=1<<l,i=r[l];-1===i?0!==(o&n)&&0===(o&u)||(r[l]=ve(o,t)):i<=t&&(e.expiredLanes|=o),a&=~o}if(n=as,n=ye(e,e===(t=us)?n:0,null!==e.cancelPendingCommit||-1!==e.timeoutHandle),u=e.callbackNode,0===n||e===t&&(2===ls||9===ls)||null!==e.cancelPendingCommit)return null!==u&&null!==u&&Z(u),e.callbackNode=null,e.callbackPriority=0;if(0===(3&n)||be(e,n)){if((t=n&-n)===e.callbackPriority)return t;switch(null!==u&&Z(u),Be(n)){case 2:case 8:n=re;break;case 32:default:n=ae;break;case 268435456:n=oe}return u=xc.bind(null,e),n=X(n,u),e.callbackPriority=t,e.callbackNode=n,t}return null!==u&&null!==u&&Z(u),e.callbackPriority=2,e.callbackNode=null,2}function xc(e,t){if(0!==As&&5!==As)return e.callbackNode=null,e.callbackPriority=0,null;var n=e.callbackNode;if(oc()&&e.callbackNode!==n)return null;var u=as;return 0===(u=ye(e,e===us?u:0,null!==e.cancelPendingCommit||-1!==e.timeoutHandle))?null:(Ls(e,u,t),wc(e,te()),null!=e.callbackNode&&e.callbackNode===n?xc.bind(null,e):null)}function Sc(e,t){if(oc())return null;Ls(e,t,!0)}function Bc(){return 0===vc&&(vc=Ee()),vc}function Nc(e){return null==e||"symbol"===typeof e||"boolean"===typeof e?null:"function"===typeof e?e:Bt(""+e)}function Tc(e,t){var n=t.ownerDocument.createElement("input");return n.name=t.name,n.value=t.value,e.id&&n.setAttribute("form",e.id),t.parentNode.insertBefore(n,t),e=new FormData(e),n.parentNode.removeChild(n),e}for(var Pc=0;Pc<vu.length;Pc++){var jc=vu[Pc];Eu(jc.toLowerCase(),"on"+(jc[0].toUpperCase()+jc.slice(1)))}Eu(Du,"onAnimationEnd"),Eu(pu,"onAnimationIteration"),Eu(hu,"onAnimationStart"),Eu("dblclick","onDoubleClick"),Eu("focusin","onFocus"),Eu("focusout","onBlur"),Eu(mu,"onTransitionRun"),Eu(Fu,"onTransitionStart"),Eu(gu,"onTransitionCancel"),Eu(yu,"onTransitionEnd"),Ke("onMouseEnter",["mouseout","mouseover"]),Ke("onMouseLeave",["mouseout","mouseover"]),Ke("onPointerEnter",["pointerout","pointerover"]),Ke("onPointerLeave",["pointerout","pointerover"]),Qe("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Qe("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Qe("onBeforeInput",["compositionend","keypress","textInput","paste"]),Qe("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Qe("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Qe("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var _c="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),zc=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(_c));function Rc(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var u=e[n],r=u.event;u=u.listeners;e:{var a=void 0;if(t)for(var l=u.length-1;0<=l;l--){var o=u[l],i=o.instance,s=o.currentTarget;if(o=o.listener,i!==a&&r.isPropagationStopped())break e;a=o,r.currentTarget=s;try{a(r)}catch(c){Fo(c)}r.currentTarget=null,a=i}else for(l=0;l<u.length;l++){if(i=(o=u[l]).instance,s=o.currentTarget,o=o.listener,i!==a&&r.isPropagationStopped())break e;a=o,r.currentTarget=s;try{a(r)}catch(c){Fo(c)}r.currentTarget=null,a=i}}}}function Lc(e,t){var n=t[ze];void 0===n&&(n=t[ze]=new Set);var u=e+"__bubble";n.has(u)||(Uc(t,e,2,!1),n.add(u))}function Oc(e,t,n){var u=0;t&&(u|=4),Uc(n,e,u,t)}var Mc="_reactListening"+Math.random().toString(36).slice(2);function Ic(e){if(!e[Mc]){e[Mc]=!0,We.forEach(function(t){"selectionchange"!==t&&(zc.has(t)||Oc(t,!1,e),Oc(t,!0,e))});var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Mc]||(t[Mc]=!0,Oc("selectionchange",!1,t))}}function Uc(e,t,n,u){switch(cf(t)){case 2:var r=uf;break;case 8:r=rf;break;default:r=af}n=r.bind(null,t,n,e),r=void 0,!Mt||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),u?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function $c(e,t,n,u,r){var a=u;if(0===(1&t)&&0===(2&t)&&null!==u)e:for(;;){if(null===u)return;var l=u.tag;if(3===l||4===l){var o=u.stateNode.containerInfo;if(o===r)break;if(4===l)for(l=u.return;null!==l;){var s=l.tag;if((3===s||4===s)&&l.stateNode.containerInfo===r)return;l=l.return}for(;null!==o;){if(null===(l=Ue(o)))return;if(5===(s=l.tag)||6===s||26===s||27===s){u=a=l;continue e}o=o.parentNode}}u=u.return}Rt(function(){var u=a,r=Tt(n),l=[];e:{var o=bu.get(e);if(void 0!==o){var s=Jt,c=e;switch(e){case"keypress":if(0===qt(n))break e;case"keydown":case"keyup":s=hn;break;case"focusin":c="focus",s=an;break;case"focusout":c="blur",s=an;break;case"beforeblur":case"afterblur":s=an;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=un;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=rn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Fn;break;case Du:case pu:case hu:s=ln;break;case yu:s=gn;break;case"scroll":case"scrollend":s=tn;break;case"wheel":s=yn;break;case"copy":case"cut":case"paste":s=on;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=mn;break;case"toggle":case"beforetoggle":s=bn}var d=0!==(4&t),f=!d&&("scroll"===e||"scrollend"===e),D=d?null!==o?o+"Capture":null:o;d=[];for(var p,h=u;null!==h;){var m=h;if(p=m.stateNode,5!==(m=m.tag)&&26!==m&&27!==m||null===p||null===D||null!=(m=Lt(h,D))&&d.push(Vc(h,m,p)),f)break;h=h.return}0<d.length&&(o=new s(o,c,null,n,r),l.push({event:o,listeners:d}))}}if(0===(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===Nt||!(c=n.relatedTarget||n.fromElement)||!Ue(c)&&!c[_e])&&(s||o)&&(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,s?(s=u,null!==(c=(c=n.relatedTarget||n.toElement)?Ue(c):null)&&(f=i(c),d=c.tag,c!==f||5!==d&&27!==d&&6!==d)&&(c=null)):(s=null,c=u),s!==c)){if(d=un,m="onMouseLeave",D="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(d=mn,m="onPointerLeave",D="onPointerEnter",h="pointer"),f=null==s?o:Ve(s),p=null==c?o:Ve(c),(o=new d(m,h+"leave",s,n,r)).target=f,o.relatedTarget=p,m=null,Ue(r)===u&&((d=new d(D,h+"enter",c,n,r)).target=p,d.relatedTarget=f,m=d),f=m,s&&c)e:{for(D=c,h=0,p=d=s;p;p=qc(p))h++;for(p=0,m=D;m;m=qc(m))p++;for(;0<h-p;)d=qc(d),h--;for(;0<p-h;)D=qc(D),p--;for(;h--;){if(d===D||null!==D&&d===D.alternate)break e;d=qc(d),D=qc(D)}d=null}else d=null;null!==s&&Wc(l,o,s,d,!1),null!==c&&null!==f&&Wc(l,f,c,d,!0)}if("select"===(s=(o=u?Ve(u):window).nodeName&&o.nodeName.toLowerCase())||"input"===s&&"file"===o.type)var F=On;else if(Pn(o))if(Mn)F=Qn;else{F=Wn;var g=qn}else!(s=o.nodeName)||"input"!==s.toLowerCase()||"checkbox"!==o.type&&"radio"!==o.type?u&&wt(u.elementType)&&(F=On):F=Yn;switch(F&&(F=F(e,u))?jn(l,F,n,r):(g&&g(e,o,u),"focusout"===e&&u&&"number"===o.type&&null!=u.memoizedProps.value&&gt(o,"number",o.value)),g=u?Ve(u):window,e){case"focusin":(Pn(g)||"true"===g.contentEditable)&&(uu=g,ru=u,au=null);break;case"focusout":au=ru=uu=null;break;case"mousedown":lu=!0;break;case"contextmenu":case"mouseup":case"dragend":lu=!1,ou(l,n,r);break;case"selectionchange":if(nu)break;case"keydown":case"keyup":ou(l,n,r)}var y;if(En)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Nn?Sn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(An&&"ko"!==n.locale&&(Nn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Nn&&(y=Ht()):($t="value"in(Ut=r)?Ut.value:Ut.textContent,Nn=!0)),0<(g=Hc(u,b)).length&&(b=new sn(b,e,null,n,r),l.push({event:b,listeners:g}),y?b.data=y:null!==(y=Bn(n))&&(b.data=y))),(y=kn?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(xn=!0,wn);case"textInput":return(e=t.data)===wn&&xn?null:e;default:return null}}(e,n):function(e,t){if(Nn)return"compositionend"===e||!En&&Sn(e,t)?(e=Ht(),Vt=$t=Ut=null,Nn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return An&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(b=Hc(u,"onBeforeInput")).length&&(g=new sn("onBeforeInput","beforeinput",null,n,r),l.push({event:g,listeners:b}),g.data=y)),function(e,t,n,u,r){if("submit"===t&&n&&n.stateNode===r){var a=Nc((r[je]||null).action),l=u.submitter;l&&null!==(t=(t=l[je]||null)?Nc(t.formAction):l.getAttribute("formAction"))&&(a=t,l=null);var o=new Jt("action","action",null,u,r);e.push({event:o,listeners:[{instance:null,listener:function(){if(u.defaultPrevented){if(0!==vc){var e=l?Tc(r,l):new FormData(r);Nl(n,{pending:!0,data:e,method:r.method,action:a},null,e)}}else"function"===typeof a&&(o.preventDefault(),e=l?Tc(r,l):new FormData(r),Nl(n,{pending:!0,data:e,method:r.method,action:a},a,e))},currentTarget:r}]})}}(l,e,u,n,r)}Rc(l,t)})}function Vc(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Hc(e,t){for(var n=t+"Capture",u=[];null!==e;){var r=e,a=r.stateNode;if(5!==(r=r.tag)&&26!==r&&27!==r||null===a||(null!=(r=Lt(e,n))&&u.unshift(Vc(e,r,a)),null!=(r=Lt(e,t))&&u.push(Vc(e,r,a))),3===e.tag)return u;e=e.return}return[]}function qc(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag&&27!==e.tag);return e||null}function Wc(e,t,n,u,r){for(var a=t._reactName,l=[];null!==n&&n!==u;){var o=n,i=o.alternate,s=o.stateNode;if(o=o.tag,null!==i&&i===u)break;5!==o&&26!==o&&27!==o||null===s||(i=s,r?null!=(s=Lt(n,a))&&l.unshift(Vc(n,s,i)):r||null!=(s=Lt(n,a))&&l.push(Vc(n,s,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}var Yc=/\r\n?/g,Qc=/\u0000|\uFFFD/g;function Kc(e){return("string"===typeof e?e:""+e).replace(Yc,"\n").replace(Qc,"")}function Gc(e,t){return t=Kc(t),Kc(e)===t}function Xc(){}function Zc(e,t,n,u,r,a){switch(n){case"children":"string"===typeof u?"body"===t||"textarea"===t&&""===u||Et(e,u):("number"===typeof u||"bigint"===typeof u)&&"body"!==t&&Et(e,""+u);break;case"className":nt(e,"class",u);break;case"tabIndex":nt(e,"tabindex",u);break;case"dir":case"role":case"viewBox":case"width":case"height":nt(e,n,u);break;case"style":At(e,u,a);break;case"data":if("object"!==t){nt(e,"data",u);break}case"src":case"href":if(""===u&&("a"!==t||"href"!==n)){e.removeAttribute(n);break}if(null==u||"function"===typeof u||"symbol"===typeof u||"boolean"===typeof u){e.removeAttribute(n);break}u=Bt(""+u),e.setAttribute(n,u);break;case"action":case"formAction":if("function"===typeof u){e.setAttribute(n,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}if("function"===typeof a&&("formAction"===n?("input"!==t&&Zc(e,t,"name",r.name,r,null),Zc(e,t,"formEncType",r.formEncType,r,null),Zc(e,t,"formMethod",r.formMethod,r,null),Zc(e,t,"formTarget",r.formTarget,r,null)):(Zc(e,t,"encType",r.encType,r,null),Zc(e,t,"method",r.method,r,null),Zc(e,t,"target",r.target,r,null))),null==u||"symbol"===typeof u||"boolean"===typeof u){e.removeAttribute(n);break}u=Bt(""+u),e.setAttribute(n,u);break;case"onClick":null!=u&&(e.onclick=Xc);break;case"onScroll":null!=u&&Lc("scroll",e);break;case"onScrollEnd":null!=u&&Lc("scrollend",e);break;case"dangerouslySetInnerHTML":if(null!=u){if("object"!==typeof u||!("__html"in u))throw Error(l(61));if(null!=(n=u.__html)){if(null!=r.children)throw Error(l(60));e.innerHTML=n}}break;case"multiple":e.multiple=u&&"function"!==typeof u&&"symbol"!==typeof u;break;case"muted":e.muted=u&&"function"!==typeof u&&"symbol"!==typeof u;break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":case"autoFocus":break;case"xlinkHref":if(null==u||"function"===typeof u||"boolean"===typeof u||"symbol"===typeof u){e.removeAttribute("xlink:href");break}n=Bt(""+u),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":null!=u&&"function"!==typeof u&&"symbol"!==typeof u?e.setAttribute(n,""+u):e.removeAttribute(n);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":u&&"function"!==typeof u&&"symbol"!==typeof u?e.setAttribute(n,""):e.removeAttribute(n);break;case"capture":case"download":!0===u?e.setAttribute(n,""):!1!==u&&null!=u&&"function"!==typeof u&&"symbol"!==typeof u?e.setAttribute(n,u):e.removeAttribute(n);break;case"cols":case"rows":case"size":case"span":null!=u&&"function"!==typeof u&&"symbol"!==typeof u&&!isNaN(u)&&1<=u?e.setAttribute(n,u):e.removeAttribute(n);break;case"rowSpan":case"start":null==u||"function"===typeof u||"symbol"===typeof u||isNaN(u)?e.removeAttribute(n):e.setAttribute(n,u);break;case"popover":Lc("beforetoggle",e),Lc("toggle",e),tt(e,"popover",u);break;case"xlinkActuate":ut(e,"http://www.w3.org/1999/xlink","xlink:actuate",u);break;case"xlinkArcrole":ut(e,"http://www.w3.org/1999/xlink","xlink:arcrole",u);break;case"xlinkRole":ut(e,"http://www.w3.org/1999/xlink","xlink:role",u);break;case"xlinkShow":ut(e,"http://www.w3.org/1999/xlink","xlink:show",u);break;case"xlinkTitle":ut(e,"http://www.w3.org/1999/xlink","xlink:title",u);break;case"xlinkType":ut(e,"http://www.w3.org/1999/xlink","xlink:type",u);break;case"xmlBase":ut(e,"http://www.w3.org/XML/1998/namespace","xml:base",u);break;case"xmlLang":ut(e,"http://www.w3.org/XML/1998/namespace","xml:lang",u);break;case"xmlSpace":ut(e,"http://www.w3.org/XML/1998/namespace","xml:space",u);break;case"is":tt(e,"is",u);break;case"innerText":case"textContent":break;default:(!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&tt(e,n=xt.get(n)||n,u)}}function Jc(e,t,n,u,r,a){switch(n){case"style":At(e,u,a);break;case"dangerouslySetInnerHTML":if(null!=u){if("object"!==typeof u||!("__html"in u))throw Error(l(61));if(null!=(n=u.__html)){if(null!=r.children)throw Error(l(60));e.innerHTML=n}}break;case"children":"string"===typeof u?Et(e,u):("number"===typeof u||"bigint"===typeof u)&&Et(e,""+u);break;case"onScroll":null!=u&&Lc("scroll",e);break;case"onScrollEnd":null!=u&&Lc("scrollend",e);break;case"onClick":null!=u&&(e.onclick=Xc);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":case"innerText":case"textContent":break;default:Ye.hasOwnProperty(n)||("o"!==n[0]||"n"!==n[1]||(r=n.endsWith("Capture"),t=n.slice(2,r?n.length-7:void 0),"function"===typeof(a=null!=(a=e[je]||null)?a[n]:null)&&e.removeEventListener(t,a,r),"function"!==typeof u)?n in e?e[n]=u:!0===u?e.setAttribute(n,""):tt(e,n,u):("function"!==typeof a&&null!==a&&(n in e?e[n]=null:e.hasAttribute(n)&&e.removeAttribute(n)),e.addEventListener(t,u,r)))}}function ed(e,t,n){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":Lc("error",e),Lc("load",e);var u,r=!1,a=!1;for(u in n)if(n.hasOwnProperty(u)){var o=n[u];if(null!=o)switch(u){case"src":r=!0;break;case"srcSet":a=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(l(137,t));default:Zc(e,t,u,o,n,null)}}return a&&Zc(e,t,"srcSet",n.srcSet,n,null),void(r&&Zc(e,t,"src",n.src,n,null));case"input":Lc("invalid",e);var i=u=o=a=null,s=null,c=null;for(r in n)if(n.hasOwnProperty(r)){var d=n[r];if(null!=d)switch(r){case"name":a=d;break;case"type":o=d;break;case"checked":s=d;break;case"defaultChecked":c=d;break;case"value":u=d;break;case"defaultValue":i=d;break;case"children":case"dangerouslySetInnerHTML":if(null!=d)throw Error(l(137,t));break;default:Zc(e,t,r,d,n,null)}}return Ft(e,u,i,s,c,o,a,!1),void dt(e);case"select":for(a in Lc("invalid",e),r=o=u=null,n)if(n.hasOwnProperty(a)&&null!=(i=n[a]))switch(a){case"value":u=i;break;case"defaultValue":o=i;break;case"multiple":r=i;default:Zc(e,t,a,i,n,null)}return t=u,n=o,e.multiple=!!r,void(null!=t?yt(e,!!r,t,!1):null!=n&&yt(e,!!r,n,!0));case"textarea":for(o in Lc("invalid",e),u=a=r=null,n)if(n.hasOwnProperty(o)&&null!=(i=n[o]))switch(o){case"value":r=i;break;case"defaultValue":a=i;break;case"children":u=i;break;case"dangerouslySetInnerHTML":if(null!=i)throw Error(l(91));break;default:Zc(e,t,o,i,n,null)}return vt(e,r,a,u),void dt(e);case"option":for(s in n)if(n.hasOwnProperty(s)&&null!=(r=n[s]))if("selected"===s)e.selected=r&&"function"!==typeof r&&"symbol"!==typeof r;else Zc(e,t,s,r,n,null);return;case"dialog":Lc("beforetoggle",e),Lc("toggle",e),Lc("cancel",e),Lc("close",e);break;case"iframe":case"object":Lc("load",e);break;case"video":case"audio":for(r=0;r<_c.length;r++)Lc(_c[r],e);break;case"image":Lc("error",e),Lc("load",e);break;case"details":Lc("toggle",e);break;case"embed":case"source":case"link":Lc("error",e),Lc("load",e);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(c in n)if(n.hasOwnProperty(c)&&null!=(r=n[c]))switch(c){case"children":case"dangerouslySetInnerHTML":throw Error(l(137,t));default:Zc(e,t,c,r,n,null)}return;default:if(wt(t)){for(d in n)n.hasOwnProperty(d)&&(void 0!==(r=n[d])&&Jc(e,t,d,r,n,void 0));return}}for(i in n)n.hasOwnProperty(i)&&(null!=(r=n[i])&&Zc(e,t,i,r,n,null))}var td=null,nd=null;function ud(e){return 9===e.nodeType?e:e.ownerDocument}function rd(e){switch(e){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function ad(e,t){if(0===e)switch(t){case"svg":return 1;case"math":return 2;default:return 0}return 1===e&&"foreignObject"===t?0:e}function ld(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"bigint"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var od=null;var id="function"===typeof setTimeout?setTimeout:void 0,sd="function"===typeof clearTimeout?clearTimeout:void 0,cd="function"===typeof Promise?Promise:void 0,dd="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof cd?function(e){return cd.resolve(null).then(e).catch(fd)}:id;function fd(e){setTimeout(function(){throw e})}function Dd(e){return"head"===e}function pd(e,t){var n=t,u=0,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0<u&&8>u){n=u;var l=e.ownerDocument;if(1&n&&vd(l.documentElement),2&n&&vd(l.body),4&n)for(vd(n=l.head),l=n.firstChild;l;){var o=l.nextSibling,i=l.nodeName;l[Me]||"SCRIPT"===i||"STYLE"===i||"LINK"===i&&"stylesheet"===l.rel.toLowerCase()||n.removeChild(l),l=o}}if(0===r)return e.removeChild(a),void Sf(t);r--}else"$"===n||"$?"===n||"$!"===n?r++:u=n.charCodeAt(0)-48;else u=0;n=a}while(n);Sf(t)}function hd(e){var t=e.firstChild;for(t&&10===t.nodeType&&(t=t.nextSibling);t;){var n=t;switch(t=t.nextSibling,n.nodeName){case"HTML":case"HEAD":case"BODY":hd(n),Ie(n);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if("stylesheet"===n.rel.toLowerCase())continue}e.removeChild(n)}}function md(e){return"$!"===e.data||"$?"===e.data&&"complete"===e.ownerDocument.readyState}function Fd(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t||"F!"===t||"F"===t)break;if("/$"===t)return null}}return e}var gd=null;function yd(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}function bd(e,t,n){switch(t=ud(n),e){case"html":if(!(e=t.documentElement))throw Error(l(452));return e;case"head":if(!(e=t.head))throw Error(l(453));return e;case"body":if(!(e=t.body))throw Error(l(454));return e;default:throw Error(l(451))}}function vd(e){for(var t=e.attributes;t.length;)e.removeAttributeNode(t[0]);Ie(e)}var Ed=new Map,Cd=new Set;function kd(e){return"function"===typeof e.getRootNode?e.getRootNode():9===e.nodeType?e:e.ownerDocument}var Ad=z.d;z.d={f:function(){var e=Ad.f(),t=Us();return e||t},r:function(e){var t=$e(e);null!==t&&5===t.tag&&"form"===t.type?Pl(t):Ad.r(e)},D:function(e){Ad.D(e),xd("dns-prefetch",e,null)},C:function(e,t){Ad.C(e,t),xd("preconnect",e,t)},L:function(e,t,n){Ad.L(e,t,n);var u=wd;if(u&&e&&t){var r='link[rel="preload"][as="'+ht(t)+'"]';"image"===t&&n&&n.imageSrcSet?(r+='[imagesrcset="'+ht(n.imageSrcSet)+'"]',"string"===typeof n.imageSizes&&(r+='[imagesizes="'+ht(n.imageSizes)+'"]')):r+='[href="'+ht(e)+'"]';var a=r;switch(t){case"style":a=Bd(e);break;case"script":a=Pd(e)}Ed.has(a)||(e=f({rel:"preload",href:"image"===t&&n&&n.imageSrcSet?void 0:e,as:t},n),Ed.set(a,e),null!==u.querySelector(r)||"style"===t&&u.querySelector(Nd(a))||"script"===t&&u.querySelector(jd(a))||(ed(t=u.createElement("link"),"link",e),qe(t),u.head.appendChild(t)))}},m:function(e,t){Ad.m(e,t);var n=wd;if(n&&e){var u=t&&"string"===typeof t.as?t.as:"script",r='link[rel="modulepreload"][as="'+ht(u)+'"][href="'+ht(e)+'"]',a=r;switch(u){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":a=Pd(e)}if(!Ed.has(a)&&(e=f({rel:"modulepreload",href:e},t),Ed.set(a,e),null===n.querySelector(r))){switch(u){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(n.querySelector(jd(a)))return}ed(u=n.createElement("link"),"link",e),qe(u),n.head.appendChild(u)}}},X:function(e,t){Ad.X(e,t);var n=wd;if(n&&e){var u=He(n).hoistableScripts,r=Pd(e),a=u.get(r);a||((a=n.querySelector(jd(r)))||(e=f({src:e,async:!0},t),(t=Ed.get(r))&&Ld(e,t),qe(a=n.createElement("script")),ed(a,"link",e),n.head.appendChild(a)),a={type:"script",instance:a,count:1,state:null},u.set(r,a))}},S:function(e,t,n){Ad.S(e,t,n);var u=wd;if(u&&e){var r=He(u).hoistableStyles,a=Bd(e);t=t||"default";var l=r.get(a);if(!l){var o={loading:0,preload:null};if(l=u.querySelector(Nd(a)))o.loading=5;else{e=f({rel:"stylesheet",href:e,"data-precedence":t},n),(n=Ed.get(a))&&Rd(e,n);var i=l=u.createElement("link");qe(i),ed(i,"link",e),i._p=new Promise(function(e,t){i.onload=e,i.onerror=t}),i.addEventListener("load",function(){o.loading|=1}),i.addEventListener("error",function(){o.loading|=2}),o.loading|=4,zd(l,t,u)}l={type:"stylesheet",instance:l,count:1,state:o},r.set(a,l)}}},M:function(e,t){Ad.M(e,t);var n=wd;if(n&&e){var u=He(n).hoistableScripts,r=Pd(e),a=u.get(r);a||((a=n.querySelector(jd(r)))||(e=f({src:e,async:!0,type:"module"},t),(t=Ed.get(r))&&Ld(e,t),qe(a=n.createElement("script")),ed(a,"link",e),n.head.appendChild(a)),a={type:"script",instance:a,count:1,state:null},u.set(r,a))}}};var wd="undefined"===typeof document?null:document;function xd(e,t,n){var u=wd;if(u&&"string"===typeof t&&t){var r=ht(t);r='link[rel="'+e+'"][href="'+r+'"]',"string"===typeof n&&(r+='[crossorigin="'+n+'"]'),Cd.has(r)||(Cd.add(r),e={rel:e,crossOrigin:n,href:t},null===u.querySelector(r)&&(ed(t=u.createElement("link"),"link",e),qe(t),u.head.appendChild(t)))}}function Sd(e,t,n,u){var r,a,o,i,s=(s=H.current)?kd(s):null;if(!s)throw Error(l(446));switch(e){case"meta":case"title":return null;case"style":return"string"===typeof n.precedence&&"string"===typeof n.href?(t=Bd(n.href),(u=(n=He(s).hoistableStyles).get(t))||(u={type:"style",instance:null,count:0,state:null},n.set(t,u)),u):{type:"void",instance:null,count:0,state:null};case"link":if("stylesheet"===n.rel&&"string"===typeof n.href&&"string"===typeof n.precedence){e=Bd(n.href);var c=He(s).hoistableStyles,d=c.get(e);if(d||(s=s.ownerDocument||s,d={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},c.set(e,d),(c=s.querySelector(Nd(e)))&&!c._p&&(d.instance=c,d.state.loading=5),Ed.has(e)||(n={rel:"preload",as:"style",href:n.href,crossOrigin:n.crossOrigin,integrity:n.integrity,media:n.media,hrefLang:n.hrefLang,referrerPolicy:n.referrerPolicy},Ed.set(e,n),c||(r=s,a=e,o=n,i=d.state,r.querySelector('link[rel="preload"][as="style"]['+a+"]")?i.loading=1:(a=r.createElement("link"),i.preload=a,a.addEventListener("load",function(){return i.loading|=1}),a.addEventListener("error",function(){return i.loading|=2}),ed(a,"link",o),qe(a),r.head.appendChild(a))))),t&&null===u)throw Error(l(528,""));return d}if(t&&null!==u)throw Error(l(529,""));return null;case"script":return t=n.async,"string"===typeof(n=n.src)&&t&&"function"!==typeof t&&"symbol"!==typeof t?(t=Pd(n),(u=(n=He(s).hoistableScripts).get(t))||(u={type:"script",instance:null,count:0,state:null},n.set(t,u)),u):{type:"void",instance:null,count:0,state:null};default:throw Error(l(444,e))}}function Bd(e){return'href="'+ht(e)+'"'}function Nd(e){return'link[rel="stylesheet"]['+e+"]"}function Td(e){return f({},e,{"data-precedence":e.precedence,precedence:null})}function Pd(e){return'[src="'+ht(e)+'"]'}function jd(e){return"script[async]"+e}function _d(e,t,n){if(t.count++,null===t.instance)switch(t.type){case"style":var u=e.querySelector('style[data-href~="'+ht(n.href)+'"]');if(u)return t.instance=u,qe(u),u;var r=f({},n,{"data-href":n.href,"data-precedence":n.precedence,href:null,precedence:null});return qe(u=(e.ownerDocument||e).createElement("style")),ed(u,"style",r),zd(u,n.precedence,e),t.instance=u;case"stylesheet":r=Bd(n.href);var a=e.querySelector(Nd(r));if(a)return t.state.loading|=4,t.instance=a,qe(a),a;u=Td(n),(r=Ed.get(r))&&Rd(u,r),qe(a=(e.ownerDocument||e).createElement("link"));var o=a;return o._p=new Promise(function(e,t){o.onload=e,o.onerror=t}),ed(a,"link",u),t.state.loading|=4,zd(a,n.precedence,e),t.instance=a;case"script":return a=Pd(n.src),(r=e.querySelector(jd(a)))?(t.instance=r,qe(r),r):(u=n,(r=Ed.get(a))&&Ld(u=f({},n),r),qe(r=(e=e.ownerDocument||e).createElement("script")),ed(r,"link",u),e.head.appendChild(r),t.instance=r);case"void":return null;default:throw Error(l(443,t.type))}else"stylesheet"===t.type&&0===(4&t.state.loading)&&(u=t.instance,t.state.loading|=4,zd(u,n.precedence,e));return t.instance}function zd(e,t,n){for(var u=n.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),r=u.length?u[u.length-1]:null,a=r,l=0;l<u.length;l++){var o=u[l];if(o.dataset.precedence===t)a=o;else if(a!==r)break}a?a.parentNode.insertBefore(e,a.nextSibling):(t=9===n.nodeType?n.head:n).insertBefore(e,t.firstChild)}function Rd(e,t){null==e.crossOrigin&&(e.crossOrigin=t.crossOrigin),null==e.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),null==e.title&&(e.title=t.title)}function Ld(e,t){null==e.crossOrigin&&(e.crossOrigin=t.crossOrigin),null==e.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),null==e.integrity&&(e.integrity=t.integrity)}var Od=null;function Md(e,t,n){if(null===Od){var u=new Map,r=Od=new Map;r.set(n,u)}else(u=(r=Od).get(n))||(u=new Map,r.set(n,u));if(u.has(e))return u;for(u.set(e,null),n=n.getElementsByTagName(e),r=0;r<n.length;r++){var a=n[r];if(!(a[Me]||a[Pe]||"link"===e&&"stylesheet"===a.getAttribute("rel"))&&"http://www.w3.org/2000/svg"!==a.namespaceURI){var l=a.getAttribute(t)||"";l=e+l;var o=u.get(l);o?o.push(a):u.set(l,[a])}}return u}function Id(e,t,n){(e=e.ownerDocument||e).head.insertBefore(n,"title"===t?e.querySelector("head > title"):null)}function Ud(e){return"stylesheet"!==e.type||0!==(3&e.state.loading)}var $d=null;function Vd(){}function Hd(){if(this.count--,0===this.count)if(this.stylesheets)Wd(this,this.stylesheets);else if(this.unsuspend){var e=this.unsuspend;this.unsuspend=null,e()}}var qd=null;function Wd(e,t){e.stylesheets=null,null!==e.unsuspend&&(e.count++,qd=new Map,t.forEach(Yd,e),qd=null,Hd.call(e))}function Yd(e,t){if(!(4&t.state.loading)){var n=qd.get(e);if(n)var u=n.get(null);else{n=new Map,qd.set(e,n);for(var r=e.querySelectorAll("link[data-precedence],style[data-precedence]"),a=0;a<r.length;a++){var l=r[a];"LINK"!==l.nodeName&&"not all"===l.getAttribute("media")||(n.set(l.dataset.precedence,l),u=l)}u&&n.set(null,u)}l=(r=t.instance).getAttribute("data-precedence"),(a=n.get(l)||u)===u&&n.set(null,r),n.set(l,r),this.count++,u=Hd.bind(this),r.addEventListener("load",u),r.addEventListener("error",u),a?a.parentNode.insertBefore(r,a.nextSibling):(e=9===e.nodeType?e.head:e).insertBefore(r,e.firstChild),t.state.loading|=4}}var Qd={$$typeof:v,Provider:null,Consumer:null,_currentValue:R,_currentValue2:R,_threadCount:0};function Kd(e,t,n,u,r,a,l,o){this.tag=1,this.containerInfo=e,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=ke(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ke(0),this.hiddenUpdates=ke(null),this.identifierPrefix=u,this.onUncaughtError=r,this.onCaughtError=a,this.onRecoverableError=l,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=o,this.incompleteTransitions=new Map}function Gd(e,t,n,u,r,a,l,o,i,s,c,d){return e=new Kd(e,t,n,l,o,i,s,d),t=1,!0===a&&(t|=24),a=Ru(3,null,null,t),e.current=a,a.stateNode=e,(t=jr()).refCount++,e.pooledCache=t,t.refCount++,a.memoizedState={element:u,isDehydrated:n,cache:t},na(a),e}function Xd(e){return e?e=_u:_u}function Zd(e,t,n,u,r,a){r=Xd(r),null===u.context?u.context=r:u.pendingContext=r,(u=ra(t)).payload={element:n},null!==(a=void 0===a?null:a)&&(u.callback=a),null!==(n=aa(e,u,t))&&(Rs(n,0,t),la(n,e,t))}function Jd(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ef(e,t){Jd(e,t),(e=e.alternate)&&Jd(e,t)}function tf(e){if(13===e.tag){var t=Tu(e,67108864);null!==t&&Rs(t,0,67108864),ef(e,67108864)}}var nf=!0;function uf(e,t,n,u){var r=_.T;_.T=null;var a=z.p;try{z.p=2,af(e,t,n,u)}finally{z.p=a,_.T=r}}function rf(e,t,n,u){var r=_.T;_.T=null;var a=z.p;try{z.p=8,af(e,t,n,u)}finally{z.p=a,_.T=r}}function af(e,t,n,u){if(nf){var r=lf(u);if(null===r)$c(e,t,u,of,n),yf(e,u);else if(function(e,t,n,u,r){switch(t){case"focusin":return ff=bf(ff,e,t,n,u,r),!0;case"dragenter":return Df=bf(Df,e,t,n,u,r),!0;case"mouseover":return pf=bf(pf,e,t,n,u,r),!0;case"pointerover":var a=r.pointerId;return hf.set(a,bf(hf.get(a)||null,e,t,n,u,r)),!0;case"gotpointercapture":return a=r.pointerId,mf.set(a,bf(mf.get(a)||null,e,t,n,u,r)),!0}return!1}(r,e,t,n,u))u.stopPropagation();else if(yf(e,u),4&t&&-1<gf.indexOf(e)){for(;null!==r;){var a=$e(r);if(null!==a)switch(a.tag){case 3:if((a=a.stateNode).current.memoizedState.isDehydrated){var l=ge(a.pendingLanes);if(0!==l){var o=a;for(o.pendingLanes|=2,o.entangledLanes|=2;l;){var i=1<<31-De(l);o.entanglements[1]|=i,l&=~i}Ec(a),0===(6&ns)&&(Es=te()+500,Cc(0,!1))}}break;case 13:null!==(o=Tu(a,2))&&Rs(o,0,2),Us(),ef(a,2)}if(null===(a=lf(u))&&$c(e,t,u,of,n),a===r)break;r=a}null!==r&&u.stopPropagation()}else $c(e,t,u,null,n)}}function lf(e){return sf(e=Tt(e))}var of=null;function sf(e){if(of=null,null!==(e=Ue(e))){var t=i(e);if(null===t)e=null;else{var n=t.tag;if(13===n){if(null!==(e=s(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null)}}return of=e,null}function cf(e){switch(e){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(ne()){case ue:return 2;case re:return 8;case ae:case le:return 32;case oe:return 268435456;default:return 32}default:return 32}}var df=!1,ff=null,Df=null,pf=null,hf=new Map,mf=new Map,Ff=[],gf="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function yf(e,t){switch(e){case"focusin":case"focusout":ff=null;break;case"dragenter":case"dragleave":Df=null;break;case"mouseover":case"mouseout":pf=null;break;case"pointerover":case"pointerout":hf.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":mf.delete(t.pointerId)}}function bf(e,t,n,u,r,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:u,nativeEvent:a,targetContainers:[r]},null!==t&&(null!==(t=$e(t))&&tf(t)),e):(e.eventSystemFlags|=u,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function vf(e){var t=Ue(e.target);if(null!==t){var n=i(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=s(n)))return e.blockedOn=t,void function(e,t){var n=z.p;try{return z.p=e,t()}finally{z.p=n}}(e.priority,function(){if(13===n.tag){var e=_s();e=Se(e);var t=Tu(n,e);null!==t&&Rs(t,0,e),ef(n,e)}})}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ef(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=lf(e.nativeEvent);if(null!==n)return null!==(t=$e(n))&&tf(t),e.blockedOn=n,!1;var u=new(n=e.nativeEvent).constructor(n.type,n);Nt=u,n.target.dispatchEvent(u),Nt=null,t.shift()}return!0}function Cf(e,t,n){Ef(e)&&n.delete(t)}function kf(){df=!1,null!==ff&&Ef(ff)&&(ff=null),null!==Df&&Ef(Df)&&(Df=null),null!==pf&&Ef(pf)&&(pf=null),hf.forEach(Cf),mf.forEach(Cf)}function Af(e,t){e.blockedOn===t&&(e.blockedOn=null,df||(df=!0,u.unstable_scheduleCallback(u.unstable_NormalPriority,kf)))}var wf=null;function xf(e){wf!==e&&(wf=e,u.unstable_scheduleCallback(u.unstable_NormalPriority,function(){wf===e&&(wf=null);for(var t=0;t<e.length;t+=3){var n=e[t],u=e[t+1],r=e[t+2];if("function"!==typeof u){if(null===sf(u||n))continue;break}var a=$e(n);null!==a&&(e.splice(t,3),t-=3,Nl(a,{pending:!0,data:r,method:n.method,action:u},u,r))}}))}function Sf(e){function t(t){return Af(t,e)}null!==ff&&Af(ff,e),null!==Df&&Af(Df,e),null!==pf&&Af(pf,e),hf.forEach(t),mf.forEach(t);for(var n=0;n<Ff.length;n++){var u=Ff[n];u.blockedOn===e&&(u.blockedOn=null)}for(;0<Ff.length&&null===(n=Ff[0]).blockedOn;)vf(n),null===n.blockedOn&&Ff.shift();if(null!=(n=(e.ownerDocument||e).$$reactFormReplay))for(u=0;u<n.length;u+=3){var r=n[u],a=n[u+1],l=r[je]||null;if("function"===typeof a)l||xf(n);else if(l){var o=null;if(a&&a.hasAttribute("formAction")){if(r=a,l=a[je]||null)o=l.formAction;else if(null!==sf(r))continue}else o=l.action;"function"===typeof o?n[u+1]=o:(n.splice(u,3),u-=3),xf(n)}}}function Bf(e){this._internalRoot=e}function Nf(e){this._internalRoot=e}Nf.prototype.render=Bf.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(l(409));Zd(t.current,_s(),e,t,null,null)},Nf.prototype.unmount=Bf.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;Zd(e.current,2,null,e,null,null),Us(),t[_e]=null}},Nf.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ne();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ff.length&&0!==t&&t<Ff[n].priority;n++);Ff.splice(n,0,e),0===n&&vf(e)}};var Tf=r.version;if("19.1.1"!==Tf)throw Error(l(527,Tf,"19.1.1"));z.findDOMNode=function(e){var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(l(188));throw e=Object.keys(e).join(","),Error(l(268,e))}return e=function(e){var t=e.alternate;if(!t){if(null===(t=i(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,u=t;;){var r=n.return;if(null===r)break;var a=r.alternate;if(null===a){if(null!==(u=r.return)){n=u;continue}break}if(r.child===a.child){for(a=r.child;a;){if(a===n)return c(r),e;if(a===u)return c(r),t;a=a.sibling}throw Error(l(188))}if(n.return!==u.return)n=r,u=a;else{for(var o=!1,s=r.child;s;){if(s===n){o=!0,n=r,u=a;break}if(s===u){o=!0,u=r,n=a;break}s=s.sibling}if(!o){for(s=a.child;s;){if(s===n){o=!0,n=a,u=r;break}if(s===u){o=!0,u=a,n=r;break}s=s.sibling}if(!o)throw Error(l(189))}}if(n.alternate!==u)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(t),e=null===(e=null!==e?d(e):null)?null:e.stateNode};var Pf={bundleType:0,version:"19.1.1",rendererPackageName:"react-dom",currentDispatcherRef:_,reconcilerVersion:"19.1.1"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var jf=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!jf.isDisabled&&jf.supportsFiber)try{ce=jf.inject(Pf),de=jf}catch(zf){}}t.createRoot=function(e,t){if(!o(e))throw Error(l(299));var n=!1,u="",r=go,a=yo,i=bo;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(u=t.identifierPrefix),void 0!==t.onUncaughtError&&(r=t.onUncaughtError),void 0!==t.onCaughtError&&(a=t.onCaughtError),void 0!==t.onRecoverableError&&(i=t.onRecoverableError),void 0!==t.unstable_transitionCallbacks&&t.unstable_transitionCallbacks),t=Gd(e,1,!1,null,0,n,u,r,a,i,0,null),e[_e]=t.current,Ic(e),new Bf(t)},t.hydrateRoot=function(e,t,n){if(!o(e))throw Error(l(299));var u=!1,r="",a=go,i=yo,s=bo,c=null;return null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(u=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onUncaughtError&&(a=n.onUncaughtError),void 0!==n.onCaughtError&&(i=n.onCaughtError),void 0!==n.onRecoverableError&&(s=n.onRecoverableError),void 0!==n.unstable_transitionCallbacks&&n.unstable_transitionCallbacks,void 0!==n.formState&&(c=n.formState)),(t=Gd(e,1,!0,t,0,u,r,a,i,s,0,c)).context=Xd(null),n=t.current,(r=ra(u=Se(u=_s()))).callback=null,aa(n,r,u),n=u,t.current.lanes=n,Ae(t,n),Ec(t),e[_e]=t.current,Ic(e),new Nf(t)},t.version="19.1.1"},43:(e,t,n)=>{"use strict";e.exports=n(288)},281:()=>{},288:(e,t)=>{"use strict";var n=Symbol.for("react.transitional.element"),u=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),o=Symbol.for("react.consumer"),i=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),D=Symbol.iterator;var p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,m={};function F(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||p}function g(){}function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||p}F.prototype.isReactComponent={},F.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},F.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=F.prototype;var b=y.prototype=new g;b.constructor=y,h(b,F.prototype),b.isPureReactComponent=!0;var v=Array.isArray,E={H:null,A:null,T:null,S:null,V:null},C=Object.prototype.hasOwnProperty;function k(e,t,u,r,a,l){return u=l.ref,{$$typeof:n,type:e,key:t,ref:void 0!==u?u:null,props:l}}function A(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var w=/\/+/g;function x(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(e){return t[e]})}(""+e.key):t.toString(36)}function S(){}function B(e,t,r,a,l){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var i,s,c=!1;if(null===e)c=!0;else switch(o){case"bigint":case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case u:c=!0;break;case f:return B((c=e._init)(e._payload),t,r,a,l)}}if(c)return l=l(e),c=""===a?"."+x(e,0):a,v(l)?(r="",null!=c&&(r=c.replace(w,"$&/")+"/"),B(l,t,r,"",function(e){return e})):null!=l&&(A(l)&&(i=l,s=r+(null==l.key||e&&e.key===l.key?"":(""+l.key).replace(w,"$&/")+"/")+c,l=k(i.type,s,void 0,0,0,i.props)),t.push(l)),1;c=0;var d,p=""===a?".":a+":";if(v(e))for(var h=0;h<e.length;h++)c+=B(a=e[h],t,r,o=p+x(a,h),l);else if("function"===typeof(h=null===(d=e)||"object"!==typeof d?null:"function"===typeof(d=D&&d[D]||d["@@iterator"])?d:null))for(e=h.call(e),h=0;!(a=e.next()).done;)c+=B(a=a.value,t,r,o=p+x(a,h++),l);else if("object"===o){if("function"===typeof e.then)return B(function(e){switch(e.status){case"fulfilled":return e.value;case"rejected":throw e.reason;default:switch("string"===typeof e.status?e.then(S,S):(e.status="pending",e.then(function(t){"pending"===e.status&&(e.status="fulfilled",e.value=t)},function(t){"pending"===e.status&&(e.status="rejected",e.reason=t)})),e.status){case"fulfilled":return e.value;case"rejected":throw e.reason}}throw e}(e),t,r,a,l);throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.")}return c}function N(e,t,n){if(null==e)return e;var u=[],r=0;return B(e,u,"","",function(e){return t.call(n,e,r++)}),u}function T(e){if(-1===e._status){var t=e._result;(t=t()).then(function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)},function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)}),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var P="function"===typeof reportError?reportError:function(e){if("object"===typeof window&&"function"===typeof window.ErrorEvent){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"===typeof e&&null!==e&&"string"===typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if("object"===typeof process&&"function"===typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function j(){}t.Children={map:N,forEach:function(e,t,n){N(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return N(e,function(){t++}),t},toArray:function(e){return N(e,function(e){return e})||[]},only:function(e){if(!A(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=F,t.Fragment=r,t.Profiler=l,t.PureComponent=y,t.StrictMode=a,t.Suspense=c,t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=E,t.__COMPILER_RUNTIME={__proto__:null,c:function(e){return E.H.useMemoCache(e)}},t.cache=function(e){return function(){return e.apply(null,arguments)}},t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error("The argument must be a React element, but you passed "+e+".");var u=h({},e.props),r=e.key;if(null!=t)for(a in void 0!==t.ref&&void 0,void 0!==t.key&&(r=""+t.key),t)!C.call(t,a)||"key"===a||"__self"===a||"__source"===a||"ref"===a&&void 0===t.ref||(u[a]=t[a]);var a=arguments.length-2;if(1===a)u.children=n;else if(1<a){for(var l=Array(a),o=0;o<a;o++)l[o]=arguments[o+2];u.children=l}return k(e.type,r,void 0,0,0,u)},t.createContext=function(e){return(e={$$typeof:i,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider=e,e.Consumer={$$typeof:o,_context:e},e},t.createElement=function(e,t,n){var u,r={},a=null;if(null!=t)for(u in void 0!==t.key&&(a=""+t.key),t)C.call(t,u)&&"key"!==u&&"__self"!==u&&"__source"!==u&&(r[u]=t[u]);var l=arguments.length-2;if(1===l)r.children=n;else if(1<l){for(var o=Array(l),i=0;i<l;i++)o[i]=arguments[i+2];r.children=o}if(e&&e.defaultProps)for(u in l=e.defaultProps)void 0===r[u]&&(r[u]=l[u]);return k(e,a,void 0,0,0,r)},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=A,t.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=E.T,n={};E.T=n;try{var u=e(),r=E.S;null!==r&&r(n,u),"object"===typeof u&&null!==u&&"function"===typeof u.then&&u.then(j,P)}catch(a){P(a)}finally{E.T=t}},t.unstable_useCacheRefresh=function(){return E.H.useCacheRefresh()},t.use=function(e){return E.H.use(e)},t.useActionState=function(e,t,n){return E.H.useActionState(e,t,n)},t.useCallback=function(e,t){return E.H.useCallback(e,t)},t.useContext=function(e){return E.H.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e,t){return E.H.useDeferredValue(e,t)},t.useEffect=function(e,t,n){var u=E.H;if("function"===typeof n)throw Error("useEffect CRUD overload is not enabled in this build of React.");return u.useEffect(e,t)},t.useId=function(){return E.H.useId()},t.useImperativeHandle=function(e,t,n){return E.H.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return E.H.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return E.H.useLayoutEffect(e,t)},t.useMemo=function(e,t){return E.H.useMemo(e,t)},t.useOptimistic=function(e,t){return E.H.useOptimistic(e,t)},t.useReducer=function(e,t,n){return E.H.useReducer(e,t,n)},t.useRef=function(e){return E.H.useRef(e)},t.useState=function(e){return E.H.useState(e)},t.useSyncExternalStore=function(e,t,n){return E.H.useSyncExternalStore(e,t,n)},t.useTransition=function(){return E.H.useTransition()},t.version="19.1.1"},391:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(4)},504:(e,t,n)=>{!function(e){"use strict";var t=function(e){var t,n=new Float64Array(16);if(e)for(t=0;t<e.length;t++)n[t]=e[t];return n},u=function(){throw new Error("no PRNG")},r=new Uint8Array(16),a=new Uint8Array(32);a[0]=9;var l=t(),o=t([1]),i=t([56129,1]),s=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),c=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),d=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),f=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),D=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function p(e,t,n,u){e[t]=n>>24&255,e[t+1]=n>>16&255,e[t+2]=n>>8&255,e[t+3]=255&n,e[t+4]=u>>24&255,e[t+5]=u>>16&255,e[t+6]=u>>8&255,e[t+7]=255&u}function h(e,t,n,u,r){var a,l=0;for(a=0;a<r;a++)l|=e[t+a]^n[u+a];return(1&l-1>>>8)-1}function m(e,t,n,u){return h(e,t,n,u,16)}function F(e,t,n,u){return h(e,t,n,u,32)}function g(e,t,n,u){!function(e,t,n,u){for(var r,a=255&u[0]|(255&u[1])<<8|(255&u[2])<<16|(255&u[3])<<24,l=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,o=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,i=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,s=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,c=255&u[4]|(255&u[5])<<8|(255&u[6])<<16|(255&u[7])<<24,d=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,f=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,D=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,h=255&u[8]|(255&u[9])<<8|(255&u[10])<<16|(255&u[11])<<24,m=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,F=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,g=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,y=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,b=255&u[12]|(255&u[13])<<8|(255&u[14])<<16|(255&u[15])<<24,v=a,E=l,C=o,k=i,A=s,w=c,x=d,S=f,B=D,N=p,T=h,P=m,j=F,_=g,z=y,R=b,L=0;L<20;L+=2)v^=(r=(j^=(r=(B^=(r=(A^=(r=v+j|0)<<7|r>>>25)+v|0)<<9|r>>>23)+A|0)<<13|r>>>19)+B|0)<<18|r>>>14,w^=(r=(E^=(r=(_^=(r=(N^=(r=w+E|0)<<7|r>>>25)+w|0)<<9|r>>>23)+N|0)<<13|r>>>19)+_|0)<<18|r>>>14,T^=(r=(x^=(r=(C^=(r=(z^=(r=T+x|0)<<7|r>>>25)+T|0)<<9|r>>>23)+z|0)<<13|r>>>19)+C|0)<<18|r>>>14,R^=(r=(P^=(r=(S^=(r=(k^=(r=R+P|0)<<7|r>>>25)+R|0)<<9|r>>>23)+k|0)<<13|r>>>19)+S|0)<<18|r>>>14,v^=(r=(k^=(r=(C^=(r=(E^=(r=v+k|0)<<7|r>>>25)+v|0)<<9|r>>>23)+E|0)<<13|r>>>19)+C|0)<<18|r>>>14,w^=(r=(A^=(r=(S^=(r=(x^=(r=w+A|0)<<7|r>>>25)+w|0)<<9|r>>>23)+x|0)<<13|r>>>19)+S|0)<<18|r>>>14,T^=(r=(N^=(r=(B^=(r=(P^=(r=T+N|0)<<7|r>>>25)+T|0)<<9|r>>>23)+P|0)<<13|r>>>19)+B|0)<<18|r>>>14,R^=(r=(z^=(r=(_^=(r=(j^=(r=R+z|0)<<7|r>>>25)+R|0)<<9|r>>>23)+j|0)<<13|r>>>19)+_|0)<<18|r>>>14;v=v+a|0,E=E+l|0,C=C+o|0,k=k+i|0,A=A+s|0,w=w+c|0,x=x+d|0,S=S+f|0,B=B+D|0,N=N+p|0,T=T+h|0,P=P+m|0,j=j+F|0,_=_+g|0,z=z+y|0,R=R+b|0,e[0]=v>>>0&255,e[1]=v>>>8&255,e[2]=v>>>16&255,e[3]=v>>>24&255,e[4]=E>>>0&255,e[5]=E>>>8&255,e[6]=E>>>16&255,e[7]=E>>>24&255,e[8]=C>>>0&255,e[9]=C>>>8&255,e[10]=C>>>16&255,e[11]=C>>>24&255,e[12]=k>>>0&255,e[13]=k>>>8&255,e[14]=k>>>16&255,e[15]=k>>>24&255,e[16]=A>>>0&255,e[17]=A>>>8&255,e[18]=A>>>16&255,e[19]=A>>>24&255,e[20]=w>>>0&255,e[21]=w>>>8&255,e[22]=w>>>16&255,e[23]=w>>>24&255,e[24]=x>>>0&255,e[25]=x>>>8&255,e[26]=x>>>16&255,e[27]=x>>>24&255,e[28]=S>>>0&255,e[29]=S>>>8&255,e[30]=S>>>16&255,e[31]=S>>>24&255,e[32]=B>>>0&255,e[33]=B>>>8&255,e[34]=B>>>16&255,e[35]=B>>>24&255,e[36]=N>>>0&255,e[37]=N>>>8&255,e[38]=N>>>16&255,e[39]=N>>>24&255,e[40]=T>>>0&255,e[41]=T>>>8&255,e[42]=T>>>16&255,e[43]=T>>>24&255,e[44]=P>>>0&255,e[45]=P>>>8&255,e[46]=P>>>16&255,e[47]=P>>>24&255,e[48]=j>>>0&255,e[49]=j>>>8&255,e[50]=j>>>16&255,e[51]=j>>>24&255,e[52]=_>>>0&255,e[53]=_>>>8&255,e[54]=_>>>16&255,e[55]=_>>>24&255,e[56]=z>>>0&255,e[57]=z>>>8&255,e[58]=z>>>16&255,e[59]=z>>>24&255,e[60]=R>>>0&255,e[61]=R>>>8&255,e[62]=R>>>16&255,e[63]=R>>>24&255}(e,t,n,u)}function y(e,t,n,u){!function(e,t,n,u){for(var r,a=255&u[0]|(255&u[1])<<8|(255&u[2])<<16|(255&u[3])<<24,l=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,o=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,i=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,s=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,c=255&u[4]|(255&u[5])<<8|(255&u[6])<<16|(255&u[7])<<24,d=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,f=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,D=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,h=255&u[8]|(255&u[9])<<8|(255&u[10])<<16|(255&u[11])<<24,m=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,F=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,g=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,y=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,b=255&u[12]|(255&u[13])<<8|(255&u[14])<<16|(255&u[15])<<24,v=0;v<20;v+=2)a^=(r=(F^=(r=(D^=(r=(s^=(r=a+F|0)<<7|r>>>25)+a|0)<<9|r>>>23)+s|0)<<13|r>>>19)+D|0)<<18|r>>>14,c^=(r=(l^=(r=(g^=(r=(p^=(r=c+l|0)<<7|r>>>25)+c|0)<<9|r>>>23)+p|0)<<13|r>>>19)+g|0)<<18|r>>>14,h^=(r=(d^=(r=(o^=(r=(y^=(r=h+d|0)<<7|r>>>25)+h|0)<<9|r>>>23)+y|0)<<13|r>>>19)+o|0)<<18|r>>>14,b^=(r=(m^=(r=(f^=(r=(i^=(r=b+m|0)<<7|r>>>25)+b|0)<<9|r>>>23)+i|0)<<13|r>>>19)+f|0)<<18|r>>>14,a^=(r=(i^=(r=(o^=(r=(l^=(r=a+i|0)<<7|r>>>25)+a|0)<<9|r>>>23)+l|0)<<13|r>>>19)+o|0)<<18|r>>>14,c^=(r=(s^=(r=(f^=(r=(d^=(r=c+s|0)<<7|r>>>25)+c|0)<<9|r>>>23)+d|0)<<13|r>>>19)+f|0)<<18|r>>>14,h^=(r=(p^=(r=(D^=(r=(m^=(r=h+p|0)<<7|r>>>25)+h|0)<<9|r>>>23)+m|0)<<13|r>>>19)+D|0)<<18|r>>>14,b^=(r=(y^=(r=(g^=(r=(F^=(r=b+y|0)<<7|r>>>25)+b|0)<<9|r>>>23)+F|0)<<13|r>>>19)+g|0)<<18|r>>>14;e[0]=a>>>0&255,e[1]=a>>>8&255,e[2]=a>>>16&255,e[3]=a>>>24&255,e[4]=c>>>0&255,e[5]=c>>>8&255,e[6]=c>>>16&255,e[7]=c>>>24&255,e[8]=h>>>0&255,e[9]=h>>>8&255,e[10]=h>>>16&255,e[11]=h>>>24&255,e[12]=b>>>0&255,e[13]=b>>>8&255,e[14]=b>>>16&255,e[15]=b>>>24&255,e[16]=d>>>0&255,e[17]=d>>>8&255,e[18]=d>>>16&255,e[19]=d>>>24&255,e[20]=f>>>0&255,e[21]=f>>>8&255,e[22]=f>>>16&255,e[23]=f>>>24&255,e[24]=D>>>0&255,e[25]=D>>>8&255,e[26]=D>>>16&255,e[27]=D>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,t,n,u)}var b=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function v(e,t,n,u,r,a,l){var o,i,s=new Uint8Array(16),c=new Uint8Array(64);for(i=0;i<16;i++)s[i]=0;for(i=0;i<8;i++)s[i]=a[i];for(;r>=64;){for(g(c,s,l,b),i=0;i<64;i++)e[t+i]=n[u+i]^c[i];for(o=1,i=8;i<16;i++)o=o+(255&s[i])|0,s[i]=255&o,o>>>=8;r-=64,t+=64,u+=64}if(r>0)for(g(c,s,l,b),i=0;i<r;i++)e[t+i]=n[u+i]^c[i];return 0}function E(e,t,n,u,r){var a,l,o=new Uint8Array(16),i=new Uint8Array(64);for(l=0;l<16;l++)o[l]=0;for(l=0;l<8;l++)o[l]=u[l];for(;n>=64;){for(g(i,o,r,b),l=0;l<64;l++)e[t+l]=i[l];for(a=1,l=8;l<16;l++)a=a+(255&o[l])|0,o[l]=255&a,a>>>=8;n-=64,t+=64}if(n>0)for(g(i,o,r,b),l=0;l<n;l++)e[t+l]=i[l];return 0}function C(e,t,n,u,r){var a=new Uint8Array(32);y(a,u,r,b);for(var l=new Uint8Array(8),o=0;o<8;o++)l[o]=u[o+16];return E(e,t,n,l,a)}function k(e,t,n,u,r,a,l){var o=new Uint8Array(32);y(o,a,l,b);for(var i=new Uint8Array(8),s=0;s<8;s++)i[s]=a[s+16];return v(e,t,n,u,r,i,o)}var A=function(e){var t,n,u,r,a,l,o,i;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,n=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|n<<3),u=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(n>>>10|u<<6),r=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(u>>>7|r<<9),a=255&e[8]|(255&e[9])<<8,this.r[4]=255&(r>>>4|a<<12),this.r[5]=a>>>1&8190,l=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(a>>>14|l<<2),o=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(l>>>11|o<<5),i=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(o>>>8|i<<8),this.r[9]=i>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function w(e,t,n,u,r,a){var l=new A(a);return l.update(n,u,r),l.finish(e,t),0}function x(e,t,n,u,r,a){var l=new Uint8Array(16);return w(l,0,n,u,r,a),m(e,t,l,0)}function S(e,t,n,u,r){var a;if(n<32)return-1;for(k(e,0,t,0,n,u,r),w(e,16,e,32,n-32,e),a=0;a<16;a++)e[a]=0;return 0}function B(e,t,n,u,r){var a,l=new Uint8Array(32);if(n<32)return-1;if(C(l,0,32,u,r),0!==x(t,16,t,32,n-32,l))return-1;for(k(e,0,t,0,n,u,r),a=0;a<32;a++)e[a]=0;return 0}function N(e,t){var n;for(n=0;n<16;n++)e[n]=0|t[n]}function T(e){var t,n,u=1;for(t=0;t<16;t++)n=e[t]+u+65535,u=Math.floor(n/65536),e[t]=n-65536*u;e[0]+=u-1+37*(u-1)}function P(e,t,n){for(var u,r=~(n-1),a=0;a<16;a++)u=r&(e[a]^t[a]),e[a]^=u,t[a]^=u}function j(e,n){var u,r,a,l=t(),o=t();for(u=0;u<16;u++)o[u]=n[u];for(T(o),T(o),T(o),r=0;r<2;r++){for(l[0]=o[0]-65517,u=1;u<15;u++)l[u]=o[u]-65535-(l[u-1]>>16&1),l[u-1]&=65535;l[15]=o[15]-32767-(l[14]>>16&1),a=l[15]>>16&1,l[14]&=65535,P(o,l,1-a)}for(u=0;u<16;u++)e[2*u]=255&o[u],e[2*u+1]=o[u]>>8}function _(e,t){var n=new Uint8Array(32),u=new Uint8Array(32);return j(n,e),j(u,t),F(n,0,u,0)}function z(e){var t=new Uint8Array(32);return j(t,e),1&t[0]}function R(e,t){var n;for(n=0;n<16;n++)e[n]=t[2*n]+(t[2*n+1]<<8);e[15]&=32767}function L(e,t,n){for(var u=0;u<16;u++)e[u]=t[u]+n[u]}function O(e,t,n){for(var u=0;u<16;u++)e[u]=t[u]-n[u]}function M(e,t,n){var u,r,a=0,l=0,o=0,i=0,s=0,c=0,d=0,f=0,D=0,p=0,h=0,m=0,F=0,g=0,y=0,b=0,v=0,E=0,C=0,k=0,A=0,w=0,x=0,S=0,B=0,N=0,T=0,P=0,j=0,_=0,z=0,R=n[0],L=n[1],O=n[2],M=n[3],I=n[4],U=n[5],$=n[6],V=n[7],H=n[8],q=n[9],W=n[10],Y=n[11],Q=n[12],K=n[13],G=n[14],X=n[15];a+=(u=t[0])*R,l+=u*L,o+=u*O,i+=u*M,s+=u*I,c+=u*U,d+=u*$,f+=u*V,D+=u*H,p+=u*q,h+=u*W,m+=u*Y,F+=u*Q,g+=u*K,y+=u*G,b+=u*X,l+=(u=t[1])*R,o+=u*L,i+=u*O,s+=u*M,c+=u*I,d+=u*U,f+=u*$,D+=u*V,p+=u*H,h+=u*q,m+=u*W,F+=u*Y,g+=u*Q,y+=u*K,b+=u*G,v+=u*X,o+=(u=t[2])*R,i+=u*L,s+=u*O,c+=u*M,d+=u*I,f+=u*U,D+=u*$,p+=u*V,h+=u*H,m+=u*q,F+=u*W,g+=u*Y,y+=u*Q,b+=u*K,v+=u*G,E+=u*X,i+=(u=t[3])*R,s+=u*L,c+=u*O,d+=u*M,f+=u*I,D+=u*U,p+=u*$,h+=u*V,m+=u*H,F+=u*q,g+=u*W,y+=u*Y,b+=u*Q,v+=u*K,E+=u*G,C+=u*X,s+=(u=t[4])*R,c+=u*L,d+=u*O,f+=u*M,D+=u*I,p+=u*U,h+=u*$,m+=u*V,F+=u*H,g+=u*q,y+=u*W,b+=u*Y,v+=u*Q,E+=u*K,C+=u*G,k+=u*X,c+=(u=t[5])*R,d+=u*L,f+=u*O,D+=u*M,p+=u*I,h+=u*U,m+=u*$,F+=u*V,g+=u*H,y+=u*q,b+=u*W,v+=u*Y,E+=u*Q,C+=u*K,k+=u*G,A+=u*X,d+=(u=t[6])*R,f+=u*L,D+=u*O,p+=u*M,h+=u*I,m+=u*U,F+=u*$,g+=u*V,y+=u*H,b+=u*q,v+=u*W,E+=u*Y,C+=u*Q,k+=u*K,A+=u*G,w+=u*X,f+=(u=t[7])*R,D+=u*L,p+=u*O,h+=u*M,m+=u*I,F+=u*U,g+=u*$,y+=u*V,b+=u*H,v+=u*q,E+=u*W,C+=u*Y,k+=u*Q,A+=u*K,w+=u*G,x+=u*X,D+=(u=t[8])*R,p+=u*L,h+=u*O,m+=u*M,F+=u*I,g+=u*U,y+=u*$,b+=u*V,v+=u*H,E+=u*q,C+=u*W,k+=u*Y,A+=u*Q,w+=u*K,x+=u*G,S+=u*X,p+=(u=t[9])*R,h+=u*L,m+=u*O,F+=u*M,g+=u*I,y+=u*U,b+=u*$,v+=u*V,E+=u*H,C+=u*q,k+=u*W,A+=u*Y,w+=u*Q,x+=u*K,S+=u*G,B+=u*X,h+=(u=t[10])*R,m+=u*L,F+=u*O,g+=u*M,y+=u*I,b+=u*U,v+=u*$,E+=u*V,C+=u*H,k+=u*q,A+=u*W,w+=u*Y,x+=u*Q,S+=u*K,B+=u*G,N+=u*X,m+=(u=t[11])*R,F+=u*L,g+=u*O,y+=u*M,b+=u*I,v+=u*U,E+=u*$,C+=u*V,k+=u*H,A+=u*q,w+=u*W,x+=u*Y,S+=u*Q,B+=u*K,N+=u*G,T+=u*X,F+=(u=t[12])*R,g+=u*L,y+=u*O,b+=u*M,v+=u*I,E+=u*U,C+=u*$,k+=u*V,A+=u*H,w+=u*q,x+=u*W,S+=u*Y,B+=u*Q,N+=u*K,T+=u*G,P+=u*X,g+=(u=t[13])*R,y+=u*L,b+=u*O,v+=u*M,E+=u*I,C+=u*U,k+=u*$,A+=u*V,w+=u*H,x+=u*q,S+=u*W,B+=u*Y,N+=u*Q,T+=u*K,P+=u*G,j+=u*X,y+=(u=t[14])*R,b+=u*L,v+=u*O,E+=u*M,C+=u*I,k+=u*U,A+=u*$,w+=u*V,x+=u*H,S+=u*q,B+=u*W,N+=u*Y,T+=u*Q,P+=u*K,j+=u*G,_+=u*X,b+=(u=t[15])*R,l+=38*(E+=u*O),o+=38*(C+=u*M),i+=38*(k+=u*I),s+=38*(A+=u*U),c+=38*(w+=u*$),d+=38*(x+=u*V),f+=38*(S+=u*H),D+=38*(B+=u*q),p+=38*(N+=u*W),h+=38*(T+=u*Y),m+=38*(P+=u*Q),F+=38*(j+=u*K),g+=38*(_+=u*G),y+=38*(z+=u*X),a=(u=(a+=38*(v+=u*L))+(r=1)+65535)-65536*(r=Math.floor(u/65536)),l=(u=l+r+65535)-65536*(r=Math.floor(u/65536)),o=(u=o+r+65535)-65536*(r=Math.floor(u/65536)),i=(u=i+r+65535)-65536*(r=Math.floor(u/65536)),s=(u=s+r+65535)-65536*(r=Math.floor(u/65536)),c=(u=c+r+65535)-65536*(r=Math.floor(u/65536)),d=(u=d+r+65535)-65536*(r=Math.floor(u/65536)),f=(u=f+r+65535)-65536*(r=Math.floor(u/65536)),D=(u=D+r+65535)-65536*(r=Math.floor(u/65536)),p=(u=p+r+65535)-65536*(r=Math.floor(u/65536)),h=(u=h+r+65535)-65536*(r=Math.floor(u/65536)),m=(u=m+r+65535)-65536*(r=Math.floor(u/65536)),F=(u=F+r+65535)-65536*(r=Math.floor(u/65536)),g=(u=g+r+65535)-65536*(r=Math.floor(u/65536)),y=(u=y+r+65535)-65536*(r=Math.floor(u/65536)),b=(u=b+r+65535)-65536*(r=Math.floor(u/65536)),a=(u=(a+=r-1+37*(r-1))+(r=1)+65535)-65536*(r=Math.floor(u/65536)),l=(u=l+r+65535)-65536*(r=Math.floor(u/65536)),o=(u=o+r+65535)-65536*(r=Math.floor(u/65536)),i=(u=i+r+65535)-65536*(r=Math.floor(u/65536)),s=(u=s+r+65535)-65536*(r=Math.floor(u/65536)),c=(u=c+r+65535)-65536*(r=Math.floor(u/65536)),d=(u=d+r+65535)-65536*(r=Math.floor(u/65536)),f=(u=f+r+65535)-65536*(r=Math.floor(u/65536)),D=(u=D+r+65535)-65536*(r=Math.floor(u/65536)),p=(u=p+r+65535)-65536*(r=Math.floor(u/65536)),h=(u=h+r+65535)-65536*(r=Math.floor(u/65536)),m=(u=m+r+65535)-65536*(r=Math.floor(u/65536)),F=(u=F+r+65535)-65536*(r=Math.floor(u/65536)),g=(u=g+r+65535)-65536*(r=Math.floor(u/65536)),y=(u=y+r+65535)-65536*(r=Math.floor(u/65536)),b=(u=b+r+65535)-65536*(r=Math.floor(u/65536)),a+=r-1+37*(r-1),e[0]=a,e[1]=l,e[2]=o,e[3]=i,e[4]=s,e[5]=c,e[6]=d,e[7]=f,e[8]=D,e[9]=p,e[10]=h,e[11]=m,e[12]=F,e[13]=g,e[14]=y,e[15]=b}function I(e,t){M(e,t,t)}function U(e,n){var u,r=t();for(u=0;u<16;u++)r[u]=n[u];for(u=253;u>=0;u--)I(r,r),2!==u&&4!==u&&M(r,r,n);for(u=0;u<16;u++)e[u]=r[u]}function $(e,n){var u,r=t();for(u=0;u<16;u++)r[u]=n[u];for(u=250;u>=0;u--)I(r,r),1!==u&&M(r,r,n);for(u=0;u<16;u++)e[u]=r[u]}function V(e,n,u){var r,a,l=new Uint8Array(32),o=new Float64Array(80),s=t(),c=t(),d=t(),f=t(),D=t(),p=t();for(a=0;a<31;a++)l[a]=n[a];for(l[31]=127&n[31]|64,l[0]&=248,R(o,u),a=0;a<16;a++)c[a]=o[a],f[a]=s[a]=d[a]=0;for(s[0]=f[0]=1,a=254;a>=0;--a)P(s,c,r=l[a>>>3]>>>(7&a)&1),P(d,f,r),L(D,s,d),O(s,s,d),L(d,c,f),O(c,c,f),I(f,D),I(p,s),M(s,d,s),M(d,c,D),L(D,s,d),O(s,s,d),I(c,s),O(d,f,p),M(s,d,i),L(s,s,f),M(d,d,s),M(s,f,p),M(f,c,o),I(c,D),P(s,c,r),P(d,f,r);for(a=0;a<16;a++)o[a+16]=s[a],o[a+32]=d[a],o[a+48]=c[a],o[a+64]=f[a];var h=o.subarray(32),m=o.subarray(16);return U(h,h),M(m,m,h),j(e,m),0}function H(e,t){return V(e,t,a)}function q(e,t){return u(t,32),H(e,t)}function W(e,t,n){var u=new Uint8Array(32);return V(u,n,t),y(e,r,u,b)}A.prototype.blocks=function(e,t,n){for(var u,r,a,l,o,i,s,c,d,f,D,p,h,m,F,g,y,b,v,E=this.fin?0:2048,C=this.h[0],k=this.h[1],A=this.h[2],w=this.h[3],x=this.h[4],S=this.h[5],B=this.h[6],N=this.h[7],T=this.h[8],P=this.h[9],j=this.r[0],_=this.r[1],z=this.r[2],R=this.r[3],L=this.r[4],O=this.r[5],M=this.r[6],I=this.r[7],U=this.r[8],$=this.r[9];n>=16;)f=d=0,f+=(C+=8191&(u=255&e[t+0]|(255&e[t+1])<<8))*j,f+=(k+=8191&(u>>>13|(r=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*$),f+=(A+=8191&(r>>>10|(a=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*U),f+=(w+=8191&(a>>>7|(l=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*I),d=(f+=(x+=8191&(l>>>4|(o=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*M))>>>13,f&=8191,f+=(S+=o>>>1&8191)*(5*O),f+=(B+=8191&(o>>>14|(i=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*L),f+=(N+=8191&(i>>>11|(s=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*R),f+=(T+=8191&(s>>>8|(c=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*z),D=d+=(f+=(P+=c>>>5|E)*(5*_))>>>13,D+=C*_,D+=k*j,D+=A*(5*$),D+=w*(5*U),d=(D+=x*(5*I))>>>13,D&=8191,D+=S*(5*M),D+=B*(5*O),D+=N*(5*L),D+=T*(5*R),d+=(D+=P*(5*z))>>>13,D&=8191,p=d,p+=C*z,p+=k*_,p+=A*j,p+=w*(5*$),d=(p+=x*(5*U))>>>13,p&=8191,p+=S*(5*I),p+=B*(5*M),p+=N*(5*O),p+=T*(5*L),h=d+=(p+=P*(5*R))>>>13,h+=C*R,h+=k*z,h+=A*_,h+=w*j,d=(h+=x*(5*$))>>>13,h&=8191,h+=S*(5*U),h+=B*(5*I),h+=N*(5*M),h+=T*(5*O),m=d+=(h+=P*(5*L))>>>13,m+=C*L,m+=k*R,m+=A*z,m+=w*_,d=(m+=x*j)>>>13,m&=8191,m+=S*(5*$),m+=B*(5*U),m+=N*(5*I),m+=T*(5*M),F=d+=(m+=P*(5*O))>>>13,F+=C*O,F+=k*L,F+=A*R,F+=w*z,d=(F+=x*_)>>>13,F&=8191,F+=S*j,F+=B*(5*$),F+=N*(5*U),F+=T*(5*I),g=d+=(F+=P*(5*M))>>>13,g+=C*M,g+=k*O,g+=A*L,g+=w*R,d=(g+=x*z)>>>13,g&=8191,g+=S*_,g+=B*j,g+=N*(5*$),g+=T*(5*U),y=d+=(g+=P*(5*I))>>>13,y+=C*I,y+=k*M,y+=A*O,y+=w*L,d=(y+=x*R)>>>13,y&=8191,y+=S*z,y+=B*_,y+=N*j,y+=T*(5*$),b=d+=(y+=P*(5*U))>>>13,b+=C*U,b+=k*I,b+=A*M,b+=w*O,d=(b+=x*L)>>>13,b&=8191,b+=S*R,b+=B*z,b+=N*_,b+=T*j,v=d+=(b+=P*(5*$))>>>13,v+=C*$,v+=k*U,v+=A*I,v+=w*M,d=(v+=x*O)>>>13,v&=8191,v+=S*L,v+=B*R,v+=N*z,v+=T*_,C=f=8191&(d=(d=((d+=(v+=P*j)>>>13)<<2)+d|0)+(f&=8191)|0),k=D+=d>>>=13,A=p&=8191,w=h&=8191,x=m&=8191,S=F&=8191,B=g&=8191,N=y&=8191,T=b&=8191,P=v&=8191,t+=16,n-=16;this.h[0]=C,this.h[1]=k,this.h[2]=A,this.h[3]=w,this.h[4]=x,this.h[5]=S,this.h[6]=B,this.h[7]=N,this.h[8]=T,this.h[9]=P},A.prototype.finish=function(e,t){var n,u,r,a,l=new Uint16Array(10);if(this.leftover){for(a=this.leftover,this.buffer[a++]=1;a<16;a++)this.buffer[a]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(n=this.h[1]>>>13,this.h[1]&=8191,a=2;a<10;a++)this.h[a]+=n,n=this.h[a]>>>13,this.h[a]&=8191;for(this.h[0]+=5*n,n=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=n,n=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=n,l[0]=this.h[0]+5,n=l[0]>>>13,l[0]&=8191,a=1;a<10;a++)l[a]=this.h[a]+n,n=l[a]>>>13,l[a]&=8191;for(l[9]-=8192,u=(1^n)-1,a=0;a<10;a++)l[a]&=u;for(u=~u,a=0;a<10;a++)this.h[a]=this.h[a]&u|l[a];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),r=this.h[0]+this.pad[0],this.h[0]=65535&r,a=1;a<8;a++)r=(this.h[a]+this.pad[a]|0)+(r>>>16)|0,this.h[a]=65535&r;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},A.prototype.update=function(e,t,n){var u,r;if(this.leftover){for((r=16-this.leftover)>n&&(r=n),u=0;u<r;u++)this.buffer[this.leftover+u]=e[t+u];if(n-=r,t+=r,this.leftover+=r,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(n>=16&&(r=n-n%16,this.blocks(e,t,r),t+=r,n-=r),n){for(u=0;u<n;u++)this.buffer[this.leftover+u]=e[t+u];this.leftover+=n}};var Y=S,Q=B;var K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function G(e,t,n,u){for(var r,a,l,o,i,s,c,d,f,D,p,h,m,F,g,y,b,v,E,C,k,A,w,x,S,B,N=new Int32Array(16),T=new Int32Array(16),P=e[0],j=e[1],_=e[2],z=e[3],R=e[4],L=e[5],O=e[6],M=e[7],I=t[0],U=t[1],$=t[2],V=t[3],H=t[4],q=t[5],W=t[6],Y=t[7],Q=0;u>=128;){for(E=0;E<16;E++)C=8*E+Q,N[E]=n[C+0]<<24|n[C+1]<<16|n[C+2]<<8|n[C+3],T[E]=n[C+4]<<24|n[C+5]<<16|n[C+6]<<8|n[C+7];for(E=0;E<80;E++)if(r=P,a=j,l=_,o=z,i=R,s=L,c=O,M,f=I,D=U,p=$,h=V,m=H,F=q,g=W,Y,w=65535&(A=Y),x=A>>>16,S=65535&(k=M),B=k>>>16,w+=65535&(A=(H>>>14|R<<18)^(H>>>18|R<<14)^(R>>>9|H<<23)),x+=A>>>16,S+=65535&(k=(R>>>14|H<<18)^(R>>>18|H<<14)^(H>>>9|R<<23)),B+=k>>>16,w+=65535&(A=H&q^~H&W),x+=A>>>16,S+=65535&(k=R&L^~R&O),B+=k>>>16,w+=65535&(A=K[2*E+1]),x+=A>>>16,S+=65535&(k=K[2*E]),B+=k>>>16,k=N[E%16],x+=(A=T[E%16])>>>16,S+=65535&k,B+=k>>>16,S+=(x+=(w+=65535&A)>>>16)>>>16,w=65535&(A=v=65535&w|x<<16),x=A>>>16,S=65535&(k=b=65535&S|(B+=S>>>16)<<16),B=k>>>16,w+=65535&(A=(I>>>28|P<<4)^(P>>>2|I<<30)^(P>>>7|I<<25)),x+=A>>>16,S+=65535&(k=(P>>>28|I<<4)^(I>>>2|P<<30)^(I>>>7|P<<25)),B+=k>>>16,x+=(A=I&U^I&$^U&$)>>>16,S+=65535&(k=P&j^P&_^j&_),B+=k>>>16,d=65535&(S+=(x+=(w+=65535&A)>>>16)>>>16)|(B+=S>>>16)<<16,y=65535&w|x<<16,w=65535&(A=h),x=A>>>16,S=65535&(k=o),B=k>>>16,x+=(A=v)>>>16,S+=65535&(k=b),B+=k>>>16,j=r,_=a,z=l,R=o=65535&(S+=(x+=(w+=65535&A)>>>16)>>>16)|(B+=S>>>16)<<16,L=i,O=s,M=c,P=d,U=f,$=D,V=p,H=h=65535&w|x<<16,q=m,W=F,Y=g,I=y,E%16===15)for(C=0;C<16;C++)k=N[C],w=65535&(A=T[C]),x=A>>>16,S=65535&k,B=k>>>16,k=N[(C+9)%16],w+=65535&(A=T[(C+9)%16]),x+=A>>>16,S+=65535&k,B+=k>>>16,b=N[(C+1)%16],w+=65535&(A=((v=T[(C+1)%16])>>>1|b<<31)^(v>>>8|b<<24)^(v>>>7|b<<25)),x+=A>>>16,S+=65535&(k=(b>>>1|v<<31)^(b>>>8|v<<24)^b>>>7),B+=k>>>16,b=N[(C+14)%16],x+=(A=((v=T[(C+14)%16])>>>19|b<<13)^(b>>>29|v<<3)^(v>>>6|b<<26))>>>16,S+=65535&(k=(b>>>19|v<<13)^(v>>>29|b<<3)^b>>>6),B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,N[C]=65535&S|B<<16,T[C]=65535&w|x<<16;w=65535&(A=I),x=A>>>16,S=65535&(k=P),B=k>>>16,k=e[0],x+=(A=t[0])>>>16,S+=65535&k,B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,e[0]=P=65535&S|B<<16,t[0]=I=65535&w|x<<16,w=65535&(A=U),x=A>>>16,S=65535&(k=j),B=k>>>16,k=e[1],x+=(A=t[1])>>>16,S+=65535&k,B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,e[1]=j=65535&S|B<<16,t[1]=U=65535&w|x<<16,w=65535&(A=$),x=A>>>16,S=65535&(k=_),B=k>>>16,k=e[2],x+=(A=t[2])>>>16,S+=65535&k,B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,e[2]=_=65535&S|B<<16,t[2]=$=65535&w|x<<16,w=65535&(A=V),x=A>>>16,S=65535&(k=z),B=k>>>16,k=e[3],x+=(A=t[3])>>>16,S+=65535&k,B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,e[3]=z=65535&S|B<<16,t[3]=V=65535&w|x<<16,w=65535&(A=H),x=A>>>16,S=65535&(k=R),B=k>>>16,k=e[4],x+=(A=t[4])>>>16,S+=65535&k,B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,e[4]=R=65535&S|B<<16,t[4]=H=65535&w|x<<16,w=65535&(A=q),x=A>>>16,S=65535&(k=L),B=k>>>16,k=e[5],x+=(A=t[5])>>>16,S+=65535&k,B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,e[5]=L=65535&S|B<<16,t[5]=q=65535&w|x<<16,w=65535&(A=W),x=A>>>16,S=65535&(k=O),B=k>>>16,k=e[6],x+=(A=t[6])>>>16,S+=65535&k,B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,e[6]=O=65535&S|B<<16,t[6]=W=65535&w|x<<16,w=65535&(A=Y),x=A>>>16,S=65535&(k=M),B=k>>>16,k=e[7],x+=(A=t[7])>>>16,S+=65535&k,B+=k>>>16,B+=(S+=(x+=(w+=65535&A)>>>16)>>>16)>>>16,e[7]=M=65535&S|B<<16,t[7]=Y=65535&w|x<<16,Q+=128,u-=128}return u}function X(e,t,n){var u,r=new Int32Array(8),a=new Int32Array(8),l=new Uint8Array(256),o=n;for(r[0]=1779033703,r[1]=3144134277,r[2]=1013904242,r[3]=2773480762,r[4]=1359893119,r[5]=2600822924,r[6]=528734635,r[7]=1541459225,a[0]=4089235720,a[1]=2227873595,a[2]=4271175723,a[3]=1595750129,a[4]=2917565137,a[5]=725511199,a[6]=4215389547,a[7]=327033209,G(r,a,t,n),n%=128,u=0;u<n;u++)l[u]=t[o-n+u];for(l[n]=128,l[(n=256-128*(n<112?1:0))-9]=0,p(l,n-8,o/536870912|0,o<<3),G(r,a,l,n),u=0;u<8;u++)p(e,8*u,r[u],a[u]);return 0}function Z(e,n){var u=t(),r=t(),a=t(),l=t(),o=t(),i=t(),s=t(),d=t(),f=t();O(u,e[1],e[0]),O(f,n[1],n[0]),M(u,u,f),L(r,e[0],e[1]),L(f,n[0],n[1]),M(r,r,f),M(a,e[3],n[3]),M(a,a,c),M(l,e[2],n[2]),L(l,l,l),O(o,r,u),O(i,l,a),L(s,l,a),L(d,r,u),M(e[0],o,i),M(e[1],d,s),M(e[2],s,i),M(e[3],o,d)}function J(e,t,n){var u;for(u=0;u<4;u++)P(e[u],t[u],n)}function ee(e,n){var u=t(),r=t(),a=t();U(a,n[2]),M(u,n[0],a),M(r,n[1],a),j(e,r),e[31]^=z(u)<<7}function te(e,t,n){var u,r;for(N(e[0],l),N(e[1],o),N(e[2],o),N(e[3],l),r=255;r>=0;--r)J(e,t,u=n[r/8|0]>>(7&r)&1),Z(t,e),Z(e,e),J(e,t,u)}function ne(e,n){var u=[t(),t(),t(),t()];N(u[0],d),N(u[1],f),N(u[2],o),M(u[3],d,f),te(e,u,n)}function ue(e,n,r){var a,l=new Uint8Array(64),o=[t(),t(),t(),t()];for(r||u(n,32),X(l,n,32),l[0]&=248,l[31]&=127,l[31]|=64,ne(o,l),ee(e,o),a=0;a<32;a++)n[a+32]=e[a];return 0}var re=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ae(e,t){var n,u,r,a;for(u=63;u>=32;--u){for(n=0,r=u-32,a=u-12;r<a;++r)t[r]+=n-16*t[u]*re[r-(u-32)],n=Math.floor((t[r]+128)/256),t[r]-=256*n;t[r]+=n,t[u]=0}for(n=0,r=0;r<32;r++)t[r]+=n-(t[31]>>4)*re[r],n=t[r]>>8,t[r]&=255;for(r=0;r<32;r++)t[r]-=n*re[r];for(u=0;u<32;u++)t[u+1]+=t[u]>>8,e[u]=255&t[u]}function le(e){var t,n=new Float64Array(64);for(t=0;t<64;t++)n[t]=e[t];for(t=0;t<64;t++)e[t]=0;ae(e,n)}function oe(e,n,u,r){var a,l,o=new Uint8Array(64),i=new Uint8Array(64),s=new Uint8Array(64),c=new Float64Array(64),d=[t(),t(),t(),t()];X(o,r,32),o[0]&=248,o[31]&=127,o[31]|=64;var f=u+64;for(a=0;a<u;a++)e[64+a]=n[a];for(a=0;a<32;a++)e[32+a]=o[32+a];for(X(s,e.subarray(32),u+32),le(s),ne(d,s),ee(e,d),a=32;a<64;a++)e[a]=r[a];for(X(i,e,u+64),le(i),a=0;a<64;a++)c[a]=0;for(a=0;a<32;a++)c[a]=s[a];for(a=0;a<32;a++)for(l=0;l<32;l++)c[a+l]+=i[a]*o[l];return ae(e.subarray(32),c),f}function ie(e,n,u,r){var a,i=new Uint8Array(32),c=new Uint8Array(64),d=[t(),t(),t(),t()],f=[t(),t(),t(),t()];if(u<64)return-1;if(function(e,n){var u=t(),r=t(),a=t(),i=t(),c=t(),d=t(),f=t();return N(e[2],o),R(e[1],n),I(a,e[1]),M(i,a,s),O(a,a,e[2]),L(i,e[2],i),I(c,i),I(d,c),M(f,d,c),M(u,f,a),M(u,u,i),$(u,u),M(u,u,a),M(u,u,i),M(u,u,i),M(e[0],u,i),I(r,e[0]),M(r,r,i),_(r,a)&&M(e[0],e[0],D),I(r,e[0]),M(r,r,i),_(r,a)?-1:(z(e[0])===n[31]>>7&&O(e[0],l,e[0]),M(e[3],e[0],e[1]),0)}(f,r))return-1;for(a=0;a<u;a++)e[a]=n[a];for(a=0;a<32;a++)e[a+32]=r[a];if(X(c,e,u),le(c),te(d,f,c),ne(f,n.subarray(32)),Z(d,f),ee(i,d),u-=64,F(n,0,i,0)){for(a=0;a<u;a++)e[a]=0;return-1}for(a=0;a<u;a++)e[a]=n[a+64];return u}var se=16,ce=64,de=32,fe=64;function De(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function pe(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function he(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:y,crypto_stream_xor:k,crypto_stream:C,crypto_stream_salsa20_xor:v,crypto_stream_salsa20:E,crypto_onetimeauth:w,crypto_onetimeauth_verify:x,crypto_verify_16:m,crypto_verify_32:F,crypto_secretbox:S,crypto_secretbox_open:B,crypto_scalarmult:V,crypto_scalarmult_base:H,crypto_box_beforenm:W,crypto_box_afternm:Y,crypto_box:function(e,t,n,u,r,a){var l=new Uint8Array(32);return W(l,r,a),Y(e,t,n,u,l)},crypto_box_open:function(e,t,n,u,r,a){var l=new Uint8Array(32);return W(l,r,a),Q(e,t,n,u,l)},crypto_box_keypair:q,crypto_hash:X,crypto_sign:oe,crypto_sign_keypair:ue,crypto_sign_open:ie,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:se,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ce,crypto_sign_PUBLICKEYBYTES:de,crypto_sign_SECRETKEYBYTES:fe,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:s,L:re,pack25519:j,unpack25519:R,M:M,A:L,S:I,Z:O,pow2523:$,add:Z,set25519:N,modL:ae,scalarmult:te,scalarbase:ne},e.randomBytes=function(e){var t=new Uint8Array(e);return u(t,e),t},e.secretbox=function(e,t,n){pe(e,t,n),De(n,t);for(var u=new Uint8Array(32+e.length),r=new Uint8Array(u.length),a=0;a<e.length;a++)u[a+32]=e[a];return S(r,u,u.length,t,n),r.subarray(se)},e.secretbox.open=function(e,t,n){pe(e,t,n),De(n,t);for(var u=new Uint8Array(se+e.length),r=new Uint8Array(u.length),a=0;a<e.length;a++)u[a+se]=e[a];return u.length<32||0!==B(r,u,u.length,t,n)?null:r.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=se,e.scalarMult=function(e,t){if(pe(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var n=new Uint8Array(32);return V(n,e,t),n},e.scalarMult.base=function(e){if(pe(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return H(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,n,u,r){var a=e.box.before(u,r);return e.secretbox(t,n,a)},e.box.before=function(e,t){pe(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var n=new Uint8Array(32);return W(n,e,t),n},e.box.after=e.secretbox,e.box.open=function(t,n,u,r){var a=e.box.before(u,r);return e.secretbox.open(t,n,a)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return q(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(pe(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return H(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(pe(e,t),t.length!==fe)throw new Error("bad secret key size");var n=new Uint8Array(ce+e.length);return oe(n,e,e.length,t),n},e.sign.open=function(e,t){if(pe(e,t),t.length!==de)throw new Error("bad public key size");var n=new Uint8Array(e.length),u=ie(n,e,e.length,t);if(u<0)return null;for(var r=new Uint8Array(u),a=0;a<r.length;a++)r[a]=n[a];return r},e.sign.detached=function(t,n){for(var u=e.sign(t,n),r=new Uint8Array(ce),a=0;a<r.length;a++)r[a]=u[a];return r},e.sign.detached.verify=function(e,t,n){if(pe(e,t,n),t.length!==ce)throw new Error("bad signature size");if(n.length!==de)throw new Error("bad public key size");var u,r=new Uint8Array(ce+e.length),a=new Uint8Array(ce+e.length);for(u=0;u<ce;u++)r[u]=t[u];for(u=0;u<e.length;u++)r[u+ce]=e[u];return ie(a,r,r.length,n)>=0},e.sign.keyPair=function(){var e=new Uint8Array(de),t=new Uint8Array(fe);return ue(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(pe(e),e.length!==fe)throw new Error("bad secret key size");for(var t=new Uint8Array(de),n=0;n<t.length;n++)t[n]=e[32+n];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(pe(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(de),n=new Uint8Array(fe),u=0;u<32;u++)n[u]=e[u];return ue(t,n,!0),{publicKey:t,secretKey:n}},e.sign.publicKeyLength=de,e.sign.secretKeyLength=fe,e.sign.seedLength=32,e.sign.signatureLength=ce,e.hash=function(e){pe(e);var t=new Uint8Array(64);return X(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return pe(e,t),0!==e.length&&0!==t.length&&(e.length===t.length&&0===h(e,0,t,0,e.length))},e.setPRNG=function(e){u=e},function(){var t="undefined"!==typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){e.setPRNG(function(e,n){var u,r=new Uint8Array(n);for(u=0;u<n;u+=65536)t.getRandomValues(r.subarray(u,u+Math.min(n-u,65536)));for(u=0;u<n;u++)e[u]=r[u];he(r)})}else(t=n(281))&&t.randomBytes&&e.setPRNG(function(e,n){var u,r=t.randomBytes(n);for(u=0;u<n;u++)e[u]=r[u];he(r)})}()}(e.exports?e.exports:self.nacl=self.nacl||{})},579:(e,t,n)=>{"use strict";e.exports=n(799)},672:(e,t,n)=>{"use strict";var u=n(43);function r(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function a(){}var l={d:{f:a,r:function(){throw Error(r(522))},D:a,C:a,L:a,m:a,X:a,S:a,M:a},p:0,findDOMNode:null},o=Symbol.for("react.portal");var i=u.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function s(e,t){return"font"===e?"":"string"===typeof t?"use-credentials"===t?t:"":void 0}t.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=l,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType)throw Error(r(299));return function(e,t,n){var u=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:o,key:null==u?null:""+u,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.flushSync=function(e){var t=i.T,n=l.p;try{if(i.T=null,l.p=2,e)return e()}finally{i.T=t,l.p=n,l.d.f()}},t.preconnect=function(e,t){"string"===typeof e&&(t?t="string"===typeof(t=t.crossOrigin)?"use-credentials"===t?t:"":void 0:t=null,l.d.C(e,t))},t.prefetchDNS=function(e){"string"===typeof e&&l.d.D(e)},t.preinit=function(e,t){if("string"===typeof e&&t&&"string"===typeof t.as){var n=t.as,u=s(n,t.crossOrigin),r="string"===typeof t.integrity?t.integrity:void 0,a="string"===typeof t.fetchPriority?t.fetchPriority:void 0;"style"===n?l.d.S(e,"string"===typeof t.precedence?t.precedence:void 0,{crossOrigin:u,integrity:r,fetchPriority:a}):"script"===n&&l.d.X(e,{crossOrigin:u,integrity:r,fetchPriority:a,nonce:"string"===typeof t.nonce?t.nonce:void 0})}},t.preinitModule=function(e,t){if("string"===typeof e)if("object"===typeof t&&null!==t){if(null==t.as||"script"===t.as){var n=s(t.as,t.crossOrigin);l.d.M(e,{crossOrigin:n,integrity:"string"===typeof t.integrity?t.integrity:void 0,nonce:"string"===typeof t.nonce?t.nonce:void 0})}}else null==t&&l.d.M(e)},t.preload=function(e,t){if("string"===typeof e&&"object"===typeof t&&null!==t&&"string"===typeof t.as){var n=t.as,u=s(n,t.crossOrigin);l.d.L(e,n,{crossOrigin:u,integrity:"string"===typeof t.integrity?t.integrity:void 0,nonce:"string"===typeof t.nonce?t.nonce:void 0,type:"string"===typeof t.type?t.type:void 0,fetchPriority:"string"===typeof t.fetchPriority?t.fetchPriority:void 0,referrerPolicy:"string"===typeof t.referrerPolicy?t.referrerPolicy:void 0,imageSrcSet:"string"===typeof t.imageSrcSet?t.imageSrcSet:void 0,imageSizes:"string"===typeof t.imageSizes?t.imageSizes:void 0,media:"string"===typeof t.media?t.media:void 0})}},t.preloadModule=function(e,t){if("string"===typeof e)if(t){var n=s(t.as,t.crossOrigin);l.d.m(e,{as:"string"===typeof t.as&&"script"!==t.as?t.as:void 0,crossOrigin:n,integrity:"string"===typeof t.integrity?t.integrity:void 0})}else l.d.m(e)},t.requestFormReset=function(e){l.d.r(e)},t.unstable_batchedUpdates=function(e,t){return e(t)},t.useFormState=function(e,t,n){return i.H.useFormState(e,t,n)},t.useFormStatus=function(){return i.H.useHostTransitionStatus()},t.version="19.1.1"},799:(e,t)=>{"use strict";var n=Symbol.for("react.transitional.element"),u=Symbol.for("react.fragment");function r(e,t,u){var r=null;if(void 0!==u&&(r=""+u),void 0!==t.key&&(r=""+t.key),"key"in t)for(var a in u={},t)"key"!==a&&(u[a]=t[a]);else u=t;return t=u.ref,{$$typeof:n,type:e,key:r,ref:void 0!==t?t:null,props:u}}t.Fragment=u,t.jsx=r,t.jsxs=r},853:(e,t,n)=>{"use strict";e.exports=n(896)},896:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var u=n-1>>>1,r=e[u];if(!(0<a(r,t)))break e;e[u]=t,e[n]=r,n=u}}function u(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var u=0,r=e.length,l=r>>>1;u<l;){var o=2*(u+1)-1,i=e[o],s=o+1,c=e[s];if(0>a(i,n))s<r&&0>a(c,i)?(e[u]=c,e[s]=n,u=s):(e[u]=i,e[o]=n,u=o);else{if(!(s<r&&0>a(c,n)))break e;e[u]=c,e[s]=n,u=s}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if(t.unstable_now=void 0,"object"===typeof performance&&"function"===typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var o=Date,i=o.now();t.unstable_now=function(){return o.now()-i}}var s=[],c=[],d=1,f=null,D=3,p=!1,h=!1,m=!1,F=!1,g="function"===typeof setTimeout?setTimeout:null,y="function"===typeof clearTimeout?clearTimeout:null,b="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=u(c);null!==t;){if(null===t.callback)r(c);else{if(!(t.startTime<=e))break;r(c),t.sortIndex=t.expirationTime,n(s,t)}t=u(c)}}function E(e){if(m=!1,v(e),!h)if(null!==u(s))h=!0,k||(k=!0,C());else{var t=u(c);null!==t&&P(E,t.startTime-e)}}var C,k=!1,A=-1,w=5,x=-1;function S(){return!!F||!(t.unstable_now()-x<w)}function B(){if(F=!1,k){var e=t.unstable_now();x=e;var n=!0;try{e:{h=!1,m&&(m=!1,y(A),A=-1),p=!0;var a=D;try{t:{for(v(e),f=u(s);null!==f&&!(f.expirationTime>e&&S());){var l=f.callback;if("function"===typeof l){f.callback=null,D=f.priorityLevel;var o=l(f.expirationTime<=e);if(e=t.unstable_now(),"function"===typeof o){f.callback=o,v(e),n=!0;break t}f===u(s)&&r(s),v(e)}else r(s);f=u(s)}if(null!==f)n=!0;else{var i=u(c);null!==i&&P(E,i.startTime-e),n=!1}}break e}finally{f=null,D=a,p=!1}n=void 0}}finally{n?C():k=!1}}}if("function"===typeof b)C=function(){b(B)};else if("undefined"!==typeof MessageChannel){var N=new MessageChannel,T=N.port2;N.port1.onmessage=B,C=function(){T.postMessage(null)}}else C=function(){g(B,0)};function P(e,n){A=g(function(){e(t.unstable_now())},n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):w=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return D},t.unstable_next=function(e){switch(D){case 1:case 2:case 3:var t=3;break;default:t=D}var n=D;D=t;try{return e()}finally{D=n}},t.unstable_requestPaint=function(){F=!0},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=D;D=e;try{return t()}finally{D=n}},t.unstable_scheduleCallback=function(e,r,a){var l=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?l+a:l:a=l,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:a,expirationTime:o=a+o,sortIndex:-1},a>l?(e.sortIndex=a,n(c,e),null===u(s)&&e===u(c)&&(m?(y(A),A=-1):m=!0,P(E,a-l))):(e.sortIndex=o,n(s,e),h||p||(h=!0,k||(k=!0,C()))),e},t.unstable_shouldYield=S,t.unstable_wrapCallback=function(e){var t=D;return function(){var n=D;D=t;try{return e.apply(this,arguments)}finally{D=n}}}},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(672)}},t={};function n(u){var r=t[u];if(void 0!==r)return r.exports;var a=t[u]={exports:{}};return e[u](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var u in t)n.o(t,u)&&!n.o(e,u)&&Object.defineProperty(e,u,{enumerable:!0,get:t[u]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(43),t=n(391);function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function r(e){var t=function(e,t){if("object"!=u(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==u(t)?t:t+""}function a(e,t,n){return(t=r(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);t&&(u=u.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,u)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach(function(t){a(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}let i=null,s=null;async function c(){return s||(i||(i=fetch("/chain/info").then(e=>e.ok?e.json():Promise.reject(new Error("chain_info_http_".concat(e.status)))).then(e=>String((null===e||void 0===e?void 0:e.chain_id)||"volchain-main")).catch(()=>"volchain-main").then(e=>(s=e,e))),i)}async function d(e){var t;let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const u=(n.method||"GET").toUpperCase(),r=null!==(t=n.requireOpId)&&void 0!==t?t:"GET"!==u&&"HEAD"!==u,a=Object.assign({},n.headers||{}),l="undefined"!==typeof window&&localStorage.getItem("session_token")||"";if(l&&!a["X-Session-Token"]&&(a["X-Session-Token"]=l),n.body&&!a["Content-Type"]&&(a["Content-Type"]="application/json"),"POST"===u||"PATCH"===u||"DELETE"===u||"PUT"===u){try{const e=await c();a["X-Chain-Id"]||(a["X-Chain-Id"]=e)}catch(i){}r&&!a["X-Op-Id"]&&(a["X-Op-Id"]=function(){const e=new Uint8Array(16);"undefined"!==typeof crypto&&crypto.getRandomValues?crypto.getRandomValues(e):e.fill(0),e[6]=15&e[6]|64,e[8]=63&e[8]|128;const t=Array.from(e).map(e=>e.toString(16).padStart(2,"0"));return"".concat(t[0]).concat(t[1]).concat(t[2]).concat(t[3],"-").concat(t[4]).concat(t[5],"-").concat(t[6]).concat(t[7],"-").concat(t[8]).concat(t[9],"-").concat(t[10]).concat(t[11]).concat(t[12]).concat(t[13]).concat(t[14]).concat(t[15])}())}const o={method:u,headers:a,body:n.body?"string"===typeof n.body?n.body:JSON.stringify(n.body):void 0};return fetch(e,o)}async function f(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,u=null;for(let l=0;l<=n;l++)try{const n=await d(e,t);if(400===n.status)try{const e=await n.clone().json();if(e&&("CHAIN_ID mismatch"===e.error||"CHAIN_ID required"===e.error)){s=null,i=null,await c();continue}}catch(r){}return n}catch(a){if(u=a,l===n)throw a}if(u)throw u;return d(e,t)}var D=n(950),p=n(579);const h="/pow",m=()=>{const e=localStorage.getItem("user_pubkey")||"";return/^[0-9a-fA-F]{64}$/.test(e)?e:"0".repeat(64)};const F=t=>{let{username:n,userColor:u,showSettings:r,setShowSettings:a,handleLogout:l,setUsername:i,tokenBalance:s,setTokenBalance:c,blockData:d,setBlockData:F}=t;const[g,y]=(0,e.useState)([]),[b,v]=(0,e.useState)("idle"),[E,C]=(0,e.useState)(!1),[k,A]=(0,e.useState)(null),[w,x]=(0,e.useState)(new Set),[S,B]=(0,e.useState)(!1),N=(0,e.useRef)([]),T=(0,e.useRef)(!0),P=()=>(window.screen.width||window.innerWidth)<400?"280px":"300px",j=/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||/iPad|iPhone|iPod/.test(navigator.userAgent),_=/android/i.test(navigator.userAgent),z=/iPad|iPhone|iPod/.test(navigator.userAgent);(0,e.useEffect)(()=>{if(!S)return;const e=document.body.style.overflow;document.body.style.overflow="hidden",document.body.style.position="fixed",document.body.style.width="100%";const t=()=>{const e=document.querySelector('[style*="z-index: 99999"]'),t=document.querySelector('[style*="border-radius: 12px"][style*="background"]');if(e){const t=e;if(t.style.position="fixed",t.style.top="0px",t.style.left="0px",z)t.style.width="".concat(window.screen.width,"px"),t.style.height="".concat(window.screen.height,"px"),t.style.right="0px",t.style.bottom="0px",t.style.setProperty("-webkit-transform","none"),t.style.setProperty("-webkit-zoom","normal"),t.style.setProperty("zoom","normal");else if(_){var n;const e=(null===(n=window.visualViewport)||void 0===n?void 0:n.height)||window.innerHeight;t.style.width="100vw",t.style.height="".concat(e,"px"),t.style.setProperty("zoom","1"),t.style.setProperty("transform","none")}else t.style.width="100vw",t.style.height="100vh",t.style.setProperty("zoom","1");t.style.transform="none",t.style.zIndex="2147483647",t.style.backgroundColor="rgba(0, 0, 0, 0.7)",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center"}if(t){const e=t,n=z?window.screen.width<400?"280px":"300px":P();e.style.width=n,e.style.minWidth=n,e.style.maxWidth=n,e.style.transform="none",e.style.fontSize="14px",e.style.position="relative",e.style.backgroundColor="white",e.style.padding="20px",e.style.borderRadius="12px",e.style.textAlign="center",e.style.margin="0",e.style.border="none",e.style.outline="none",z?(e.style.setProperty("-webkit-transform","none"),e.style.setProperty("-webkit-zoom","normal"),e.style.setProperty("zoom","normal"),e.style.setProperty("will-change","auto")):e.style.setProperty("zoom","1")}},n=setInterval(t,j?16:50),u=new MutationObserver(t);return setTimeout(()=>{const e=document.querySelector('[style*="z-index: 99999"]'),t=document.querySelector('[style*="border-radius: 12px"][style*="background"]');e&&u.observe(e,{attributes:!0,attributeFilter:["style","class"]}),t&&u.observe(t,{attributes:!0,attributeFilter:["style","class"]})},10),()=>{clearInterval(n),u.disconnect(),document.body.style.overflow=e,document.body.style.position="",document.body.style.width=""}},[S,_,z,j]);const[R,L]=(0,e.useState)({}),O=(0,e.useCallback)(async()=>{try{const u=await f("".concat("","/grid"),{method:"GET"},1);if(!u.ok)throw new Error("HTTP error! status: ".concat(u.status));const r=await u.json(),a=r.map(e=>e.dugBy?"dug":"idle");y(a),F(r);try{const e=await f("/volchain/user/".concat(n),{method:"GET"},1);if(e.ok){const t=await e.json();c(t.balance||0)}else c(r.filter(e=>e.dugBy===n).length)}catch(e){c(r.filter(e=>e.dugBy===n).length)}if(r.filter(e=>null!==e.dugBy).length===r.length)try{if(!(await f("".concat("","/expand"),{method:"POST",headers:{"Content-Type":"application/json"}},1)).ok)return;const e=await(await f("".concat("","/grid"),{method:"GET"},1)).json(),t=e.map(e=>e.dugBy?"dug":"idle");y(t),F(e),c(e.filter(e=>e.dugBy===n).length)}catch(t){}}catch(u){}},[n,F,c]);(0,e.useEffect)(()=>{O()},[O]),(0,e.useEffect)(()=>{c(d.filter(e=>e.dugBy===n).length)},[d,n,c]),(0,e.useEffect)(()=>{const e=Array.from(new Set(d.filter(e=>e.dugBy).map(e=>e.dugBy)));Promise.all(e.map(async e=>{const t=await f("/auth/user?username=".concat(e),{method:"GET"},1);return[e,(await t.json()).color]})).then(e=>{const t={};e.forEach(e=>{let[n,u]=e;t[n]=u}),L(t)})},[d]),(0,e.useEffect)(()=>{if(T.current&&g.length>0){const e=g.findIndex(e=>"idle"===e);-1!==e&&setTimeout(()=>{const t=N.current[e];if(t){const e=t.getBoundingClientRect();e.top>=0&&e.left>=0&&e.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&e.right<=(window.innerWidth||document.documentElement.clientWidth)||t.scrollIntoView({behavior:"smooth",block:"center"}),T.current=!1}},100)}},[g]);const M=async e=>{if(!E&&n){if("idle"!==g[e])return;B(!1),C(!0);const r=[...g];r[e]="digging",y(r);try{await new Promise(e=>setTimeout(e,3e3));const t=await f("".concat("","/grid/").concat(e),{method:"PATCH",headers:{"Content-Type":"application/json"},body:{dugBy:n,color:u,visual:null}},1);if(t.ok)x(t=>new Set(t).add(e)),setTimeout(()=>{x(t=>{const n=new Set(t);return n.delete(e),n})},6e3),await O(),async function(e){try{const t=await fetch("".concat(h,"/target")).then(e=>e.json()),n=new Worker("/powWorker.js?v=1");n.postMessage(o(o({},t),{},{pubkey:e,apiBase:h})),n.onmessage=()=>n.terminate(),n.onerror=()=>n.terminate()}catch(t){}}(m());else{const u=await t.json();if(401===t.status||"Unauthorized: Invalid or missing session token"===u.error)return alert("Your session has expired. Please log in again."),localStorage.removeItem("session_token"),localStorage.removeItem("username"),localStorage.removeItem("color_".concat(n)),void window.location.reload();if(429===t.status)return alert((null===u||void 0===u?void 0:u.error)||"Daily mining limit reached"),r[e]="idle",void y(r);alert(u.error||"Digging failed"),r[e]="idle",y(r),await O()}}catch(t){console.error("Failed to save digging:",t),alert("Digging failed"),r[e]="idle",y(r),await O()}finally{C(!1)}}},I=null!==k?d[k]:null,U=null!==k?g[k]:null,$=(null===I||void 0===I?void 0:I.dugBy)===n,V="idle"===U;return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("div",{style:{width:"100%",display:"flex",justifyContent:"center",alignItems:"center",padding:"0 env(safe-area-inset-right) 0 env(safe-area-inset-left)"},children:(0,p.jsx)("div",{className:"grid-container",style:{display:"grid",gridTemplateColumns:"repeat(10, 1fr)",gap:"1px",width:"100%",maxWidth:"400px",margin:"0 auto",padding:"1px",boxSizing:"border-box"},children:g.map((e,t)=>{const u=d[t],r=(null===u||void 0===u?void 0:u.dugBy)===n,a=null!==u&&void 0!==u&&u.dugBy&&R[u.dugBy]?R[u.dugBy]:"transparent",l="dug"===e?a:"transparent";let o="";return("digging"===e||E&&k===t)&&(o="\u23f3"),(0,p.jsx)("div",{ref:e=>{N.current[t]=e},className:"grid-block ".concat(e).concat(r?" my-block":""),title:"dug"===e?"Block #".concat(null===u||void 0===u?void 0:u.index," - Dug by: ").concat((null===u||void 0===u?void 0:u.dugBy)||"Unknown"):"Block #".concat(null===u||void 0===u?void 0:u.index),style:{backgroundColor:l,width:"100%",height:"100%",aspectRatio:"1",minWidth:0,minHeight:0},onClick:()=>(e=>{A(e),B(!0)})(t),children:(0,p.jsxs)("div",{style:{position:"relative",width:"100%",height:"100%",display:"flex",alignItems:"center",justifyContent:"center"},children:[o,w.has(t)&&(0,p.jsx)("div",{className:"newly-dug-visual",children:"\ud83d\ude0a"})]})},t)})})}),S&&I&&null!==k&&(0,D.createPortal)((0,p.jsx)("div",{className:"block-modal-overlay","data-modal":"block-info","data-safari":j?"true":"false",onClick:()=>B(!1),style:{position:"fixed",top:"0",left:"0",bottom:"0",right:"0",zIndex:2147483647,display:"flex",justifyContent:"center",alignItems:"center",backgroundColor:"rgba(0, 0, 0, 0.7)",transform:"none",transformOrigin:"0 0",zoom:1,WebkitTransform:"none",MozTransform:"none",msTransform:"none"},children:(0,p.jsxs)("div",{className:"block-modal-content","data-modal-content":"block-info","data-safari":j?"true":"false",onClick:e=>e.stopPropagation(),style:{backgroundColor:"white",padding:"20px",borderRadius:"12px",boxShadow:"0 8px 32px rgba(0, 0, 0, 0.3)",textAlign:"center",width:P(),maxWidth:P(),minWidth:P(),height:"auto",maxHeight:"400px",position:"relative",transform:"none",transformOrigin:"center center",zoom:1,fontSize:"14px",WebkitTransform:"none",MozTransform:"none",msTransform:"none",margin:"0",border:"none",outline:"none"},children:[(0,p.jsxs)("h3",{style:{margin:"0 0 16px 0",color:"#333",fontSize:"20px"},children:["Block #",I.index]}),V?(0,p.jsx)("p",{style:{margin:"8px 0 20px 0",color:"#666",fontSize:"16px"},children:"Empty Block"}):$?(0,p.jsx)("p",{style:{margin:"8px 0 20px 0",color:"#666",fontSize:"16px"},children:"Owner: You"}):(0,p.jsxs)("p",{style:{margin:"8px 0 20px 0",color:"#666",fontSize:"16px"},children:["Owner: ",I.dugBy]}),(0,p.jsxs)("div",{style:{display:"flex",gap:"12px",justifyContent:"center",flexWrap:"wrap"},children:[V&&(0,p.jsx)("button",{className:"block-modal-button dig-button",onClick:()=>M(k),disabled:E,style:{padding:"10px 20px",border:"none",borderRadius:"6px",fontSize:"14px",fontWeight:"600",cursor:"pointer",backgroundColor:"#4CAF50",color:"white",minWidth:"80px"},children:E?"Mining...":"Dig"}),(0,p.jsx)("button",{className:"block-modal-button close-button",onClick:()=>B(!1),style:{padding:"10px 20px",border:"none",borderRadius:"6px",fontSize:"14px",fontWeight:"600",cursor:"pointer",backgroundColor:"#9E9E9E",color:"white",minWidth:"80px"},children:"Close"})]})]})}),document.body)]})},g=["#FFCDD2","#F8BBD0","#E1BEE7","#D1C4E9","#C5CAE9","#BBDEFB","#B2EBF2","#C8E6C9","#DCEDC8","#FFF9C4","#FFE0B2","#FFCCBC","#D7CCC8","#26A69A","#CFD8DC","#F44336","#E91E63","#9C27B0","#673AB7","#3F51B5","#2196F3","#03A9F4","#00BCD4","#009688","#4CAF50","#8BC34A","#CDDC39","#FFEB3B","#FFC107","#FF9800","#FF5722","#795548","#607D8B"],y=t=>{let{onLogin:n}=t;const[u,r]=(0,e.useState)(!1),[a,l]=(0,e.useState)(!1),[o,i]=(0,e.useState)(!1),[s,c]=(0,e.useState)(""),[d,f]=(0,e.useState)(""),[D,h]=(0,e.useState)(""),[m,F]=(0,e.useState)(null),[y,b]=(0,e.useState)(""),[v,E]=(0,e.useState)(""),[C,k]=(0,e.useState)("");e.useEffect(()=>{const e=new URLSearchParams(window.location.search),t=e.get("token"),n=e.get("email");t&&n&&(b(t),c(n),i(!0),l(!1),r(!1))},[]);const A=async e=>{if(e.preventDefault(),s.trim())try{const e=await fetch("/forgot-password",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:s})}),t=await e.json();if(!e.ok)return void alert(t.error||"Failed to send reset email");alert(t.message),l(!1),c("")}catch(t){alert("Connection error: "+t.message)}else alert("Please enter your email address")},w=async e=>{if(e.preventDefault(),v&&C)if(v===C)if(v.length<8)alert("Password must be at least 8 characters long");else try{const e=await fetch("/reset-password",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:s,token:y,newPassword:v})}),t=await e.json();if(!e.ok)return void alert(t.error||"Failed to reset password");alert(t.message),i(!1),b(""),E(""),k(""),c(""),window.history.replaceState({},document.title,window.location.pathname)}catch(t){alert("Connection error: "+t.message)}else alert("Passwords do not match");else alert("Please fill in both password fields")};return a?(0,p.jsxs)("div",{className:"login-container",children:[(0,p.jsx)("h2",{children:"Reset Password"}),(0,p.jsxs)("form",{onSubmit:A,children:[(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Email:"}),(0,p.jsx)("input",{className:"login-input",type:"email",value:s,onChange:e=>c(e.target.value),placeholder:"Enter your email address",required:!0,title:"Please enter a valid email address",onInvalid:e=>e.currentTarget.setCustomValidity("Please enter a valid email address"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),(0,p.jsxs)("div",{className:"login-button-group",children:[(0,p.jsx)("button",{className:"login-button",type:"submit",children:"Send Reset Link"}),(0,p.jsx)("button",{className:"login-button",type:"button",onClick:()=>{l(!1),c("")},children:"Back to Login"})]})]})]}):o?(0,p.jsxs)("div",{className:"login-container",children:[(0,p.jsx)("h2",{children:"Set New Password"}),(0,p.jsxs)("form",{onSubmit:w,children:[(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Email:"}),(0,p.jsx)("input",{className:"login-input",type:"email",value:s,disabled:!0,style:{backgroundColor:"#f5f5f5"}})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"New Password:"}),(0,p.jsx)("input",{className:"login-input",type:"password",value:v,onChange:e=>E(e.target.value),placeholder:"Enter your new password",required:!0,minLength:8,title:"Password must be at least 8 characters",onInvalid:e=>e.currentTarget.setCustomValidity("Password must be at least 8 characters"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Confirm Password:"}),(0,p.jsx)("input",{className:"login-input",type:"password",value:C,onChange:e=>k(e.target.value),placeholder:"Confirm your new password",required:!0,minLength:8,title:"Please confirm your password",onInvalid:e=>e.currentTarget.setCustomValidity("Please confirm your password"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),(0,p.jsxs)("div",{className:"login-button-group",children:[(0,p.jsx)("button",{className:"login-button",type:"submit",children:"Reset Password"}),(0,p.jsx)("button",{className:"login-button",type:"button",onClick:()=>{i(!1),b(""),E(""),k(""),c(""),window.history.replaceState({},document.title,window.location.pathname)},children:"Cancel"})]})]})]}):(0,p.jsxs)("div",{className:"login-container",children:[(0,p.jsx)("h2",{children:u?"Sign Up":"Log In"}),(0,p.jsxs)("form",{onSubmit:async e=>{e.preventDefault();const t=u?"/auth/signup":"/login",r=u?{email:s,password:d,username:D.trim(),color:m||g[Math.floor(Math.random()*g.length)]}:{email:s,password:d};if(!u||D.trim())try{const e=await fetch("".concat(t),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),l=await e.json();if(!e.ok)return void alert(l.error||"Authentication failed");if(u)alert("Signup successful! Please verify your email.");else{l.sessionToken&&localStorage.setItem("session_token",l.sessionToken);try{sessionStorage.setItem("login_password",d)}catch(a){}n(l.username,l.color)}}catch(l){alert("Connection error: "+l.message)}else alert("Username is required")},children:[(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Email:"}),(0,p.jsx)("input",{className:"login-input",type:"email",value:s,onChange:e=>c(e.target.value),placeholder:"Enter your email",required:!0,title:"Please enter a valid email address",onInvalid:e=>e.currentTarget.setCustomValidity("Please enter a valid email address"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Password:"}),(0,p.jsx)("input",{className:"login-input",type:"password",value:d,onChange:e=>f(e.target.value),placeholder:"Enter your password",required:!0,title:"Please enter your password",onInvalid:e=>e.currentTarget.setCustomValidity("Please enter your password"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),!u&&(0,p.jsx)("div",{className:"forgot-password-link",children:(0,p.jsx)("button",{type:"button",className:"link-button",onClick:()=>{l(!0),c(""),f("")},children:"Forgot your password?"})}),(0,p.jsxs)("div",{className:"login-button-group",children:[(0,p.jsx)("button",{className:"login-button",type:"submit",children:u?"Sign Up":"Log In"}),(0,p.jsx)("button",{className:"login-button",type:"button",onClick:()=>r(!u),children:u?"Log In":"Sign Up"})]}),u&&(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Username:"}),(0,p.jsx)("input",{className:"login-input",type:"text",value:D,onChange:e=>h(e.target.value),placeholder:"Enter your username",required:!0,title:"Please enter your username",onInvalid:e=>e.currentTarget.setCustomValidity("Please enter your username"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Color Selection:"}),(0,p.jsx)("div",{className:"color-picker",children:g.map(e=>(0,p.jsx)("div",{onClick:()=>F(e),style:{width:"40px",height:"40px",backgroundColor:e,border:m===e?"3px solid black":"1px solid #888",cursor:"pointer",borderRadius:"4px"},title:e},e))})]})]})]})]})};var b;function v(){return{async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null}}var E={async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null};function C(e){E=e}var k={exec:()=>null};function A(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n="string"==typeof e?e:e.source,u={replace:(e,t)=>{let r="string"==typeof t?t:t.source;return r=r.replace(w.caret,"$1"),n=n.replace(e,r),u},getRegex:()=>new RegExp(n,t)};return u}var w={codeRemoveIndent:/^(?: {1,4}| {0,3}\t)/gm,outputLinkReplace:/\\([\[\]])/g,indentCodeCompensation:/^(\s+)(?:```)/,beginningSpace:/^\s+/,endingHash:/#$/,startingSpaceChar:/^ /,endingSpaceChar:/ $/,nonSpaceChar:/[^ ]/,newLineCharGlobal:/\n/g,tabCharGlobal:/\t/g,multipleSpaceGlobal:/\s+/g,blankLine:/^[ \t]*$/,doubleBlankLine:/\n[ \t]*\n[ \t]*$/,blockquoteStart:/^ {0,3}>/,blockquoteSetextReplace:/\n {0,3}((?:=+|-+) *)(?=\n|$)/g,blockquoteSetextReplace2:/^ {0,3}>[ \t]?/gm,listReplaceTabs:/^\t+/,listReplaceNesting:/^ {1,4}(?=( {4})*[^ ])/g,listIsTask:/^\[[ xX]\] /,listReplaceTask:/^\[[ xX]\] +/,anyLine:/\n.*\n/,hrefBrackets:/^<(.*)>$/,tableDelimiter:/[:|]/,tableAlignChars:/^\||\| *$/g,tableRowBlankLine:/\n[ \t]*$/,tableAlignRight:/^ *-+: *$/,tableAlignCenter:/^ *:-+: *$/,tableAlignLeft:/^ *:-+ *$/,startATag:/^<a /i,endATag:/^<\/a>/i,startPreScriptTag:/^<(pre|code|kbd|script)(\s|>)/i,endPreScriptTag:/^<\/(pre|code|kbd|script)(\s|>)/i,startAngleBracket:/^</,endAngleBracket:/>$/,pedanticHrefTitle:/^([^'"]*[^\s])\s+(['"])(.*)\2/,unicodeAlphaNumeric:/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDDC0-\uDDF3\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDD40-\uDD65\uDD6F-\uDD85\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDEC2-\uDEC4\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61\uDF80-\uDF89\uDF8B\uDF8E\uDF90-\uDFB5\uDFB7\uDFD1\uDFD3]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDED0-\uDEE3\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8\uDFC0-\uDFE0\uDFF0-\uDFF9]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDF50-\uDF59\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD80E\uD80F\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46\uDC60-\uDFFF]|\uD810[\uDC00-\uDFFA]|\uD811[\uDC00-\uDE46]|\uD818[\uDD00-\uDD1D\uDD30-\uDD39]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDD40-\uDD6C\uDD70-\uDD79\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDCFF-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD833[\uDCF0-\uDCF9]|\uD834[\uDEC0-\uDED3\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDCD0-\uDCEB\uDCF0-\uDCF9\uDDD0-\uDDED\uDDF0-\uDDFA\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])/,escapeTest:/[&<>"']/,escapeReplace:/[&<>"']/g,escapeTestNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,escapeReplaceNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g,unescapeTest:/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,caret:/(^|[^\[])\^/g,percentDecode:/%25/g,findPipe:/\|/g,splitPipe:/ \|/,slashPipe:/\\\|/g,carriageReturn:/\r\n|\r/g,spaceLine:/^ +$/gm,notSpaceStart:/^\S*/,endingNewline:/\n$/,listItemRegex:e=>new RegExp("^( {0,3}".concat(e,")((?:[\t ][^\\n]*)?(?:\\n|$))")),nextBulletRegex:e=>new RegExp("^ {0,".concat(Math.min(3,e-1),"}(?:[*+-]|\\d{1,9}[.)])((?:[ \t][^\\n]*)?(?:\\n|$))")),hrRegex:e=>new RegExp("^ {0,".concat(Math.min(3,e-1),"}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)")),fencesBeginRegex:e=>new RegExp("^ {0,".concat(Math.min(3,e-1),"}(?:```|~~~)")),headingBeginRegex:e=>new RegExp("^ {0,".concat(Math.min(3,e-1),"}#")),htmlBeginRegex:e=>new RegExp("^ {0,".concat(Math.min(3,e-1),"}<(?:[a-z].*>|!--)"),"i")},x=/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,S=/(?:[*+-]|\d{1,9}[.)])/,B=/^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,N=A(B).replace(/bull/g,S).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).replace(/\|table/g,"").getRegex(),T=A(B).replace(/bull/g,S).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).replace(/table/g,/ {0,3}\|?(?:[:\- ]*\|)+[\:\- ]*\n/).getRegex(),P=/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,j=/(?!\s*\])(?:\\.|[^\[\]\\])+/,_=A(/^ {0,3}\[(label)\]: *(?:\n[ \t]*)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n[ \t]*)?| *\n[ \t]*)(title))? *(?:\n+|$)/).replace("label",j).replace("title",/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/).getRegex(),z=A(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/).replace(/bull/g,S).getRegex(),R="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",L=/<!--(?:-?>|[\s\S]*?(?:-->|$))/,O=A("^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$))","i").replace("comment",L).replace("tag",R).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),M=A(P).replace("hr",x).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",R).getRegex(),I={blockquote:A(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/).replace("paragraph",M).getRegex(),code:/^((?: {4}| {0,3}\t)[^\n]+(?:\n(?:[ \t]*(?:\n|$))*)?)+/,def:_,fences:/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,hr:x,html:O,lheading:N,list:z,newline:/^(?:[ \t]*(?:\n|$))+/,paragraph:M,table:k,text:/^[^\n]+/},U=A("^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)").replace("hr",x).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("blockquote"," {0,3}>").replace("code","(?: {4}| {0,3}\t)[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",R).getRegex(),$=o(o({},I),{},{lheading:T,table:U,paragraph:A(P).replace("hr",x).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("table",U).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",R).getRegex()}),V=o(o({},I),{},{html:A("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",L).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:k,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:A(P).replace("hr",x).replace("heading"," *#{1,6} *[^\n]").replace("lheading",N).replace("|table","").replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").replace("|tag","").getRegex()}),H=/^( {2,}|\\)\n(?!\s*$)/,q=/(?:[!-\/:-@\[-`\{-~\xA1-\xA9\xAB\xAC\xAE-\xB1\xB4\xB6-\xB8\xBB\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u037E\u0384\u0385\u0387\u03F6\u0482\u055A-\u055F\u0589\u058A\u058D-\u058F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0606-\u060F\u061B\u061D-\u061F\u066A-\u066D\u06D4\u06DE\u06E9\u06FD\u06FE\u0700-\u070D\u07F6-\u07F9\u07FE\u07FF\u0830-\u083E\u085E\u0888\u0964\u0965\u0970\u09F2\u09F3\u09FA\u09FB\u09FD\u0A76\u0AF0\u0AF1\u0B70\u0BF3-\u0BFA\u0C77\u0C7F\u0C84\u0D4F\u0D79\u0DF4\u0E3F\u0E4F\u0E5A\u0E5B\u0F01-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F85\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE-\u0FDA\u104A-\u104F\u109E\u109F\u10FB\u1360-\u1368\u1390-\u1399\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DB\u1800-\u180A\u1940\u1944\u1945\u19DE-\u19FF\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B4E\u1B4F\u1B5A-\u1B6A\u1B74-\u1B7F\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2010-\u2027\u2030-\u205E\u207A-\u207E\u208A-\u208E\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2429\u2440-\u244A\u249C-\u24E9\u2500-\u2775\u2794-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E5D\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3001-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u303F\u309B\u309C\u30A0\u30FB\u3190\u3191\u3196-\u319F\u31C0-\u31E5\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAA77-\uAA79\uAADE\uAADF\uAAF0\uAAF1\uAB5B\uAB6A\uAB6B\uABEB\uFB29\uFBB2-\uFBC2\uFD3E-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD00-\uDD02\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDC77\uDC78\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEC8\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDD6E\uDD8E\uDD8F\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9\uDFD4\uDFD5\uDFD7\uDFD8]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3F]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09\uDFE1]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFD5-\uDFF1\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3F\uDF44\uDF45]|\uD81B[\uDD6D-\uDD6F\uDE97-\uDE9A\uDFE2]|\uD82F[\uDC9C\uDC9F]|\uD833[\uDC00-\uDCEF\uDD00-\uDEB3\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE8B]|\uD838[\uDD4F\uDEFF]|\uD839\uDDFF|\uD83A[\uDD5E\uDD5F]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0-\uDCBB\uDCC0\uDCC1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE89\uDE8F-\uDEC6\uDECE-\uDEDC\uDEDF-\uDEE9\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFEF])/,W=/(?:[\t-\r -\/:-@\[-`\{-~\xA0-\xA9\xAB\xAC\xAE-\xB1\xB4\xB6-\xB8\xBB\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u037E\u0384\u0385\u0387\u03F6\u0482\u055A-\u055F\u0589\u058A\u058D-\u058F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0606-\u060F\u061B\u061D-\u061F\u066A-\u066D\u06D4\u06DE\u06E9\u06FD\u06FE\u0700-\u070D\u07F6-\u07F9\u07FE\u07FF\u0830-\u083E\u085E\u0888\u0964\u0965\u0970\u09F2\u09F3\u09FA\u09FB\u09FD\u0A76\u0AF0\u0AF1\u0B70\u0BF3-\u0BFA\u0C77\u0C7F\u0C84\u0D4F\u0D79\u0DF4\u0E3F\u0E4F\u0E5A\u0E5B\u0F01-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F85\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE-\u0FDA\u104A-\u104F\u109E\u109F\u10FB\u1360-\u1368\u1390-\u1399\u1400\u166D\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DB\u1800-\u180A\u1940\u1944\u1945\u19DE-\u19FF\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B4E\u1B4F\u1B5A-\u1B6A\u1B74-\u1B7F\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2000-\u200A\u2010-\u2029\u202F-\u205F\u207A-\u207E\u208A-\u208E\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2429\u2440-\u244A\u249C-\u24E9\u2500-\u2775\u2794-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E5D\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u303F\u309B\u309C\u30A0\u30FB\u3190\u3191\u3196-\u319F\u31C0-\u31E5\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAA77-\uAA79\uAADE\uAADF\uAAF0\uAAF1\uAB5B\uAB6A\uAB6B\uABEB\uFB29\uFBB2-\uFBC2\uFD3E-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFEFF\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD00-\uDD02\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDC77\uDC78\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEC8\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDD6E\uDD8E\uDD8F\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9\uDFD4\uDFD5\uDFD7\uDFD8]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3F]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09\uDFE1]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFD5-\uDFF1\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3F\uDF44\uDF45]|\uD81B[\uDD6D-\uDD6F\uDE97-\uDE9A\uDFE2]|\uD82F[\uDC9C\uDC9F]|\uD833[\uDC00-\uDCEF\uDD00-\uDEB3\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE8B]|\uD838[\uDD4F\uDEFF]|\uD839\uDDFF|\uD83A[\uDD5E\uDD5F]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0-\uDCBB\uDCC0\uDCC1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE89\uDE8F-\uDEC6\uDECE-\uDEDC\uDEDF-\uDEE9\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFEF])/,Y=/(?:[\0-\x08\x0E-\x1F0-9A-Za-z\x7F-\x9F\xAA\xAD\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376-\u037D\u037F-\u0383\u0386\u0388-\u03F5\u03F7-\u0481\u0483-\u0559\u0560-\u0588\u058B\u058C\u0590-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7-\u05F2\u05F5-\u0605\u0610-\u061A\u061C\u0620-\u0669\u066E-\u06D3\u06D5-\u06DD\u06DF-\u06E8\u06EA-\u06FC\u06FF\u070E-\u07F5\u07FA-\u07FD\u0800-\u082F\u083F-\u085D\u085F-\u0887\u0889-\u0963\u0966-\u096F\u0971-\u09F1\u09F4-\u09F9\u09FC\u09FE-\u0A75\u0A77-\u0AEF\u0AF2-\u0B6F\u0B71-\u0BF2\u0BFB-\u0C76\u0C78-\u0C7E\u0C80-\u0C83\u0C85-\u0D4E\u0D50-\u0D78\u0D7A-\u0DF3\u0DF5-\u0E3E\u0E40-\u0E4E\u0E50-\u0E59\u0E5C-\u0F00\u0F18\u0F19\u0F20-\u0F33\u0F35\u0F37\u0F39\u0F3E-\u0F84\u0F86-\u0FBD\u0FC6\u0FCD\u0FDB-\u1049\u1050-\u109D\u10A0-\u10FA\u10FC-\u135F\u1369-\u138F\u139A-\u13FF\u1401-\u166C\u166F-\u167F\u1681-\u169A\u169D-\u16EA\u16EE-\u1734\u1737-\u17D3\u17D7\u17DC-\u17FF\u180B-\u193F\u1941-\u1943\u1946-\u19DD\u1A00-\u1A1D\u1A20-\u1A9F\u1AA7\u1AAE-\u1B4D\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BFB\u1C00-\u1C3A\u1C40-\u1C7D\u1C80-\u1CBF\u1CC8-\u1CD2\u1CD4-\u1FBC\u1FBE\u1FC2-\u1FCC\u1FD0-\u1FDC\u1FE0-\u1FEC\u1FF0-\u1FFC\u1FFF\u200B-\u200F\u202A-\u202E\u2060-\u2079\u207F-\u2089\u208F-\u209F\u20C1-\u20FF\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u218C-\u218F\u242A-\u243F\u244B-\u249B\u24EA-\u24FF\u2776-\u2793\u2B74\u2B75\u2B96\u2C00-\u2CE4\u2CEB-\u2CF8\u2CFD\u2D00-\u2D6F\u2D71-\u2DFF\u2E2F\u2E5E-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3040-\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u318F\u3192-\u3195\u31A0-\u31BF\u31E6-\u31EE\u31F0-\u31FF\u321F-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48F\uA4C7-\uA4FD\uA500-\uA60C\uA610-\uA672\uA674-\uA67D\uA67F-\uA6F1\uA6F8-\uA6FF\uA717-\uA71F\uA722-\uA788\uA78B-\uA827\uA82C-\uA835\uA83A-\uA873\uA878-\uA8CD\uA8D0-\uA8F7\uA8FB\uA8FD-\uA92D\uA930-\uA95E\uA960-\uA9C0\uA9CE-\uA9DD\uA9E0-\uAA5B\uAA60-\uAA76\uAA7A-\uAADD\uAAE0-\uAAEF\uAAF2-\uAB5A\uAB5C-\uAB69\uAB6C-\uABEA\uABEC-\uD7FF\uE000-\uFB28\uFB2A-\uFBB1\uFBC3-\uFD3D\uFD50-\uFDCE\uFDD0-\uFDFB\uFE00-\uFE0F\uFE1A-\uFE2F\uFE53\uFE67\uFE6C-\uFEFE\uFF00\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFDF\uFFE7\uFFEF-\uFFFB\uFFFE\uFFFF]|\uD800[\uDC00-\uDCFF\uDD03-\uDD36\uDD40-\uDD78\uDD8A\uDD8B\uDD8F\uDD9D-\uDD9F\uDDA1-\uDDCF\uDDFD-\uDF9E\uDFA0-\uDFCF\uDFD1-\uDFFF]|\uD801[\uDC00-\uDD6E\uDD70-\uDFFF]|\uD802[\uDC00-\uDC56\uDC58-\uDC76\uDC79-\uDD1E\uDD20-\uDD3E\uDD40-\uDE4F\uDE59-\uDE7E\uDE80-\uDEC7\uDEC9-\uDEEF\uDEF7-\uDF38\uDF40-\uDF98\uDF9D-\uDFFF]|\uD803[\uDC00-\uDD6D\uDD6F-\uDD8D\uDD90-\uDEAC\uDEAE-\uDF54\uDF5A-\uDF85\uDF8A-\uDFFF]|\uD804[\uDC00-\uDC46\uDC4E-\uDCBA\uDCBD\uDCC2-\uDD3F\uDD44-\uDD73\uDD76-\uDDC4\uDDC9-\uDDCC\uDDCE-\uDDDA\uDDDC\uDDE0-\uDE37\uDE3E-\uDEA8\uDEAA-\uDFD3\uDFD6\uDFD9-\uDFFF]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC5C\uDC5E-\uDCC5\uDCC7-\uDDC0\uDDD8-\uDE40\uDE44-\uDE5F\uDE6D-\uDEB8\uDEBA-\uDF3B\uDF40-\uDFFF]|\uD806[\uDC00-\uDC3A\uDC3C-\uDD43\uDD47-\uDDE1\uDDE3-\uDE3E\uDE47-\uDE99\uDE9D\uDEA3-\uDEFF\uDF0A-\uDFE0\uDFE2-\uDFFF]|\uD807[\uDC00-\uDC40\uDC46-\uDC6F\uDC72-\uDEF6\uDEF9-\uDF42\uDF50-\uDFD4\uDFF2-\uDFFE]|[\uD808\uD80A\uD80C-\uD819\uD81C-\uD82E\uD830-\uD832\uD837\uD83F-\uDBFF][\uDC00-\uDFFF]|\uD809[\uDC00-\uDC6F\uDC75-\uDFFF]|\uD80B[\uDC00-\uDFF0\uDFF3-\uDFFF]|\uD81A[\uDC00-\uDE6D\uDE70-\uDEF4\uDEF6-\uDF36\uDF40-\uDF43\uDF46-\uDFFF]|\uD81B[\uDC00-\uDD6C\uDD70-\uDE96\uDE9B-\uDFE1\uDFE3-\uDFFF]|\uD82F[\uDC00-\uDC9B\uDC9D\uDC9E\uDCA0-\uDFFF]|\uD833[\uDCF0-\uDCFF\uDEB4-\uDF4F\uDFC4-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDD65-\uDD69\uDD6D-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDDEB-\uDDFF\uDE42-\uDE44\uDE46-\uDEFF\uDF57-\uDFFF]|\uD835[\uDC00-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE8C-\uDFFF]|\uD838[\uDC00-\uDD4E\uDD50-\uDEFE\uDF00-\uDFFF]|\uD839[\uDC00-\uDDFE\uDE00-\uDFFF]|\uD83A[\uDC00-\uDD5D\uDD60-\uDFFF]|\uD83B[\uDC00-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDD2D\uDD2F-\uDEEF\uDEF2-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCC0\uDCD0\uDCF6-\uDD0C\uDDAE-\uDDE5\uDE03-\uDE0F\uDE3C-\uDE3F\uDE49-\uDE4F\uDE52-\uDE5F\uDE66-\uDEFF]|\uD83D[\uDED8-\uDEDB\uDEED-\uDEEF\uDEFD-\uDEFF\uDF77-\uDF7A\uDFDA-\uDFDF\uDFEC-\uDFEF\uDFF1-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE\uDCAF\uDCBC-\uDCBF\uDCC2-\uDCFF\uDE54-\uDE5F\uDE6E\uDE6F\uDE7D-\uDE7F\uDE8A-\uDE8E\uDEC7-\uDECD\uDEDD\uDEDE\uDEEA-\uDEEF\uDEF9-\uDEFF\uDF93\uDFF0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/,Q=A(/^((?![*_])punctSpace)/,"u").replace(/punctSpace/g,W).getRegex(),K=/(?!~)(?:[!-\/:-@\[-`\{-~\xA1-\xA9\xAB\xAC\xAE-\xB1\xB4\xB6-\xB8\xBB\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u037E\u0384\u0385\u0387\u03F6\u0482\u055A-\u055F\u0589\u058A\u058D-\u058F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0606-\u060F\u061B\u061D-\u061F\u066A-\u066D\u06D4\u06DE\u06E9\u06FD\u06FE\u0700-\u070D\u07F6-\u07F9\u07FE\u07FF\u0830-\u083E\u085E\u0888\u0964\u0965\u0970\u09F2\u09F3\u09FA\u09FB\u09FD\u0A76\u0AF0\u0AF1\u0B70\u0BF3-\u0BFA\u0C77\u0C7F\u0C84\u0D4F\u0D79\u0DF4\u0E3F\u0E4F\u0E5A\u0E5B\u0F01-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F85\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE-\u0FDA\u104A-\u104F\u109E\u109F\u10FB\u1360-\u1368\u1390-\u1399\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DB\u1800-\u180A\u1940\u1944\u1945\u19DE-\u19FF\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B4E\u1B4F\u1B5A-\u1B6A\u1B74-\u1B7F\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2010-\u2027\u2030-\u205E\u207A-\u207E\u208A-\u208E\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2429\u2440-\u244A\u249C-\u24E9\u2500-\u2775\u2794-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E5D\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3001-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u303F\u309B\u309C\u30A0\u30FB\u3190\u3191\u3196-\u319F\u31C0-\u31E5\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAA77-\uAA79\uAADE\uAADF\uAAF0\uAAF1\uAB5B\uAB6A\uAB6B\uABEB\uFB29\uFBB2-\uFBC2\uFD3E-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD00-\uDD02\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDC77\uDC78\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEC8\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDD6E\uDD8E\uDD8F\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9\uDFD4\uDFD5\uDFD7\uDFD8]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3F]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09\uDFE1]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFD5-\uDFF1\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3F\uDF44\uDF45]|\uD81B[\uDD6D-\uDD6F\uDE97-\uDE9A\uDFE2]|\uD82F[\uDC9C\uDC9F]|\uD833[\uDC00-\uDCEF\uDD00-\uDEB3\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE8B]|\uD838[\uDD4F\uDEFF]|\uD839\uDDFF|\uD83A[\uDD5E\uDD5F]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0-\uDCBB\uDCC0\uDCC1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE89\uDE8F-\uDEC6\uDECE-\uDEDC\uDEDF-\uDEE9\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFEF])/,G=/^(?:\*+(?:((?!\*)punct)|[^\s*]))|^_+(?:((?!_)punct)|([^\s_]))/,X=A(G,"u").replace(/punct/g,q).getRegex(),Z=A(G,"u").replace(/punct/g,K).getRegex(),J="^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)punct(\\*+)(?=[\\s]|$)|notPunctSpace(\\*+)(?!\\*)(?=punctSpace|$)|(?!\\*)punctSpace(\\*+)(?=notPunctSpace)|[\\s](\\*+)(?!\\*)(?=punct)|(?!\\*)punct(\\*+)(?!\\*)(?=punct)|notPunctSpace(\\*+)(?=notPunctSpace)",ee=A(J,"gu").replace(/notPunctSpace/g,Y).replace(/punctSpace/g,W).replace(/punct/g,q).getRegex(),te=A(J,"gu").replace(/notPunctSpace/g,/(?:(?:[\0-\x08\x0E-\x1F0-9A-Za-z\x7F-\x9F\xAA\xAD\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376-\u037D\u037F-\u0383\u0386\u0388-\u03F5\u03F7-\u0481\u0483-\u0559\u0560-\u0588\u058B\u058C\u0590-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7-\u05F2\u05F5-\u0605\u0610-\u061A\u061C\u0620-\u0669\u066E-\u06D3\u06D5-\u06DD\u06DF-\u06E8\u06EA-\u06FC\u06FF\u070E-\u07F5\u07FA-\u07FD\u0800-\u082F\u083F-\u085D\u085F-\u0887\u0889-\u0963\u0966-\u096F\u0971-\u09F1\u09F4-\u09F9\u09FC\u09FE-\u0A75\u0A77-\u0AEF\u0AF2-\u0B6F\u0B71-\u0BF2\u0BFB-\u0C76\u0C78-\u0C7E\u0C80-\u0C83\u0C85-\u0D4E\u0D50-\u0D78\u0D7A-\u0DF3\u0DF5-\u0E3E\u0E40-\u0E4E\u0E50-\u0E59\u0E5C-\u0F00\u0F18\u0F19\u0F20-\u0F33\u0F35\u0F37\u0F39\u0F3E-\u0F84\u0F86-\u0FBD\u0FC6\u0FCD\u0FDB-\u1049\u1050-\u109D\u10A0-\u10FA\u10FC-\u135F\u1369-\u138F\u139A-\u13FF\u1401-\u166C\u166F-\u167F\u1681-\u169A\u169D-\u16EA\u16EE-\u1734\u1737-\u17D3\u17D7\u17DC-\u17FF\u180B-\u193F\u1941-\u1943\u1946-\u19DD\u1A00-\u1A1D\u1A20-\u1A9F\u1AA7\u1AAE-\u1B4D\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BFB\u1C00-\u1C3A\u1C40-\u1C7D\u1C80-\u1CBF\u1CC8-\u1CD2\u1CD4-\u1FBC\u1FBE\u1FC2-\u1FCC\u1FD0-\u1FDC\u1FE0-\u1FEC\u1FF0-\u1FFC\u1FFF\u200B-\u200F\u202A-\u202E\u2060-\u2079\u207F-\u2089\u208F-\u209F\u20C1-\u20FF\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u218C-\u218F\u242A-\u243F\u244B-\u249B\u24EA-\u24FF\u2776-\u2793\u2B74\u2B75\u2B96\u2C00-\u2CE4\u2CEB-\u2CF8\u2CFD\u2D00-\u2D6F\u2D71-\u2DFF\u2E2F\u2E5E-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3040-\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u318F\u3192-\u3195\u31A0-\u31BF\u31E6-\u31EE\u31F0-\u31FF\u321F-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48F\uA4C7-\uA4FD\uA500-\uA60C\uA610-\uA672\uA674-\uA67D\uA67F-\uA6F1\uA6F8-\uA6FF\uA717-\uA71F\uA722-\uA788\uA78B-\uA827\uA82C-\uA835\uA83A-\uA873\uA878-\uA8CD\uA8D0-\uA8F7\uA8FB\uA8FD-\uA92D\uA930-\uA95E\uA960-\uA9C0\uA9CE-\uA9DD\uA9E0-\uAA5B\uAA60-\uAA76\uAA7A-\uAADD\uAAE0-\uAAEF\uAAF2-\uAB5A\uAB5C-\uAB69\uAB6C-\uABEA\uABEC-\uD7FF\uE000-\uFB28\uFB2A-\uFBB1\uFBC3-\uFD3D\uFD50-\uFDCE\uFDD0-\uFDFB\uFE00-\uFE0F\uFE1A-\uFE2F\uFE53\uFE67\uFE6C-\uFEFE\uFF00\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFDF\uFFE7\uFFEF-\uFFFB\uFFFE\uFFFF]|\uD800[\uDC00-\uDCFF\uDD03-\uDD36\uDD40-\uDD78\uDD8A\uDD8B\uDD8F\uDD9D-\uDD9F\uDDA1-\uDDCF\uDDFD-\uDF9E\uDFA0-\uDFCF\uDFD1-\uDFFF]|\uD801[\uDC00-\uDD6E\uDD70-\uDFFF]|\uD802[\uDC00-\uDC56\uDC58-\uDC76\uDC79-\uDD1E\uDD20-\uDD3E\uDD40-\uDE4F\uDE59-\uDE7E\uDE80-\uDEC7\uDEC9-\uDEEF\uDEF7-\uDF38\uDF40-\uDF98\uDF9D-\uDFFF]|\uD803[\uDC00-\uDD6D\uDD6F-\uDD8D\uDD90-\uDEAC\uDEAE-\uDF54\uDF5A-\uDF85\uDF8A-\uDFFF]|\uD804[\uDC00-\uDC46\uDC4E-\uDCBA\uDCBD\uDCC2-\uDD3F\uDD44-\uDD73\uDD76-\uDDC4\uDDC9-\uDDCC\uDDCE-\uDDDA\uDDDC\uDDE0-\uDE37\uDE3E-\uDEA8\uDEAA-\uDFD3\uDFD6\uDFD9-\uDFFF]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC5C\uDC5E-\uDCC5\uDCC7-\uDDC0\uDDD8-\uDE40\uDE44-\uDE5F\uDE6D-\uDEB8\uDEBA-\uDF3B\uDF40-\uDFFF]|\uD806[\uDC00-\uDC3A\uDC3C-\uDD43\uDD47-\uDDE1\uDDE3-\uDE3E\uDE47-\uDE99\uDE9D\uDEA3-\uDEFF\uDF0A-\uDFE0\uDFE2-\uDFFF]|\uD807[\uDC00-\uDC40\uDC46-\uDC6F\uDC72-\uDEF6\uDEF9-\uDF42\uDF50-\uDFD4\uDFF2-\uDFFE]|[\uD808\uD80A\uD80C-\uD819\uD81C-\uD82E\uD830-\uD832\uD837\uD83F-\uDBFF][\uDC00-\uDFFF]|\uD809[\uDC00-\uDC6F\uDC75-\uDFFF]|\uD80B[\uDC00-\uDFF0\uDFF3-\uDFFF]|\uD81A[\uDC00-\uDE6D\uDE70-\uDEF4\uDEF6-\uDF36\uDF40-\uDF43\uDF46-\uDFFF]|\uD81B[\uDC00-\uDD6C\uDD70-\uDE96\uDE9B-\uDFE1\uDFE3-\uDFFF]|\uD82F[\uDC00-\uDC9B\uDC9D\uDC9E\uDCA0-\uDFFF]|\uD833[\uDCF0-\uDCFF\uDEB4-\uDF4F\uDFC4-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDD65-\uDD69\uDD6D-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDDEB-\uDDFF\uDE42-\uDE44\uDE46-\uDEFF\uDF57-\uDFFF]|\uD835[\uDC00-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE8C-\uDFFF]|\uD838[\uDC00-\uDD4E\uDD50-\uDEFE\uDF00-\uDFFF]|\uD839[\uDC00-\uDDFE\uDE00-\uDFFF]|\uD83A[\uDC00-\uDD5D\uDD60-\uDFFF]|\uD83B[\uDC00-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDD2D\uDD2F-\uDEEF\uDEF2-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCC0\uDCD0\uDCF6-\uDD0C\uDDAE-\uDDE5\uDE03-\uDE0F\uDE3C-\uDE3F\uDE49-\uDE4F\uDE52-\uDE5F\uDE66-\uDEFF]|\uD83D[\uDED8-\uDEDB\uDEED-\uDEEF\uDEFD-\uDEFF\uDF77-\uDF7A\uDFDA-\uDFDF\uDFEC-\uDFEF\uDFF1-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE\uDCAF\uDCBC-\uDCBF\uDCC2-\uDCFF\uDE54-\uDE5F\uDE6E\uDE6F\uDE7D-\uDE7F\uDE8A-\uDE8E\uDEC7-\uDECD\uDEDD\uDEDE\uDEEA-\uDEEF\uDEF9-\uDEFF\uDF93\uDFF0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|~)/).replace(/punctSpace/g,/(?!~)(?:[\t-\r -\/:-@\[-`\{-~\xA0-\xA9\xAB\xAC\xAE-\xB1\xB4\xB6-\xB8\xBB\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u037E\u0384\u0385\u0387\u03F6\u0482\u055A-\u055F\u0589\u058A\u058D-\u058F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0606-\u060F\u061B\u061D-\u061F\u066A-\u066D\u06D4\u06DE\u06E9\u06FD\u06FE\u0700-\u070D\u07F6-\u07F9\u07FE\u07FF\u0830-\u083E\u085E\u0888\u0964\u0965\u0970\u09F2\u09F3\u09FA\u09FB\u09FD\u0A76\u0AF0\u0AF1\u0B70\u0BF3-\u0BFA\u0C77\u0C7F\u0C84\u0D4F\u0D79\u0DF4\u0E3F\u0E4F\u0E5A\u0E5B\u0F01-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F85\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE-\u0FDA\u104A-\u104F\u109E\u109F\u10FB\u1360-\u1368\u1390-\u1399\u1400\u166D\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DB\u1800-\u180A\u1940\u1944\u1945\u19DE-\u19FF\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B4E\u1B4F\u1B5A-\u1B6A\u1B74-\u1B7F\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2000-\u200A\u2010-\u2029\u202F-\u205F\u207A-\u207E\u208A-\u208E\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2429\u2440-\u244A\u249C-\u24E9\u2500-\u2775\u2794-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E5D\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u303F\u309B\u309C\u30A0\u30FB\u3190\u3191\u3196-\u319F\u31C0-\u31E5\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAA77-\uAA79\uAADE\uAADF\uAAF0\uAAF1\uAB5B\uAB6A\uAB6B\uABEB\uFB29\uFBB2-\uFBC2\uFD3E-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFEFF\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD00-\uDD02\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDC77\uDC78\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEC8\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDD6E\uDD8E\uDD8F\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9\uDFD4\uDFD5\uDFD7\uDFD8]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3F]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09\uDFE1]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFD5-\uDFF1\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3F\uDF44\uDF45]|\uD81B[\uDD6D-\uDD6F\uDE97-\uDE9A\uDFE2]|\uD82F[\uDC9C\uDC9F]|\uD833[\uDC00-\uDCEF\uDD00-\uDEB3\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE8B]|\uD838[\uDD4F\uDEFF]|\uD839\uDDFF|\uD83A[\uDD5E\uDD5F]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0-\uDCBB\uDCC0\uDCC1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE89\uDE8F-\uDEC6\uDECE-\uDEDC\uDEDF-\uDEE9\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFEF])/).replace(/punct/g,K).getRegex(),ne=A("^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)","gu").replace(/notPunctSpace/g,Y).replace(/punctSpace/g,W).replace(/punct/g,q).getRegex(),ue=A(/\\(punct)/,"gu").replace(/punct/g,q).getRegex(),re=A(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/).replace("scheme",/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace("email",/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(),ae=A(L).replace("(?:--\x3e|$)","--\x3e").getRegex(),le=A("^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>").replace("comment",ae).replace("attribute",/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/).getRegex(),oe=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,ie=A(/^!?\[(label)\]\(\s*(href)(?:(?:[ \t]*(?:\n[ \t]*)?)(title))?\s*\)/).replace("label",oe).replace("href",/<(?:\\.|[^\n<>\\])+>|[^ \t\n\x00-\x1f]*/).replace("title",/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/).getRegex(),se=A(/^!?\[(label)\]\[(ref)\]/).replace("label",oe).replace("ref",j).getRegex(),ce=A(/^!?\[(ref)\](?:\[\])?/).replace("ref",j).getRegex(),de={_backpedal:k,anyPunctuation:ue,autolink:re,blockSkip:/\[[^[\]]*?\]\((?:\\.|[^\\\(\)]|\((?:\\.|[^\\\(\)])*\))*\)|`[^`]*?`|<[^<>]*?>/g,br:H,code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,del:k,emStrongLDelim:X,emStrongRDelimAst:ee,emStrongRDelimUnd:ne,escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,link:ie,nolink:ce,punctuation:Q,reflink:se,reflinkSearch:A("reflink|nolink(?!\\()","g").replace("reflink",se).replace("nolink",ce).getRegex(),tag:le,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,url:k},fe=o(o({},de),{},{link:A(/^!?\[(label)\]\((.*?)\)/).replace("label",oe).getRegex(),reflink:A(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",oe).getRegex()}),De=o(o({},de),{},{emStrongRDelimAst:te,emStrongLDelim:Z,url:A(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,"i").replace("email",/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])((?:\\.|[^\\])*?(?:\\.|[^\s~\\]))\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),pe=o(o({},De),{},{br:A(H).replace("{2,}","*").getRegex(),text:A(De.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()}),he={normal:I,gfm:$,pedantic:V},me={normal:de,gfm:De,breaks:pe,pedantic:fe},Fe={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},ge=e=>Fe[e];function ye(e,t){if(t){if(w.escapeTest.test(e))return e.replace(w.escapeReplace,ge)}else if(w.escapeTestNoEncode.test(e))return e.replace(w.escapeReplaceNoEncode,ge);return e}function be(e){try{e=encodeURI(e).replace(w.percentDecode,"%")}catch(t){return null}return e}function ve(e,t){var n;let u=e.replace(w.findPipe,(e,t,n)=>{let u=!1,r=t;for(;--r>=0&&"\\"===n[r];)u=!u;return u?"|":" |"}).split(w.splitPipe),r=0;if(u[0].trim()||u.shift(),u.length>0&&!(null!==(n=u.at(-1))&&void 0!==n&&n.trim())&&u.pop(),t)if(u.length>t)u.splice(t);else for(;u.length<t;)u.push("");for(;r<u.length;r++)u[r]=u[r].trim().replace(w.slashPipe,"|");return u}function Ee(e,t,n){let u=e.length;if(0===u)return"";let r=0;for(;r<u;){let a=e.charAt(u-r-1);if(a!==t||n){if(a===t||!n)break;r++}else r++}return e.slice(0,u-r)}function Ce(e,t,n,u,r){let a=t.href,l=t.title||null,o=e[1].replace(r.other.outputLinkReplace,"$1");u.state.inLink=!0;let i={type:"!"===e[0].charAt(0)?"image":"link",raw:n,href:a,title:l,text:o,tokens:u.inlineTokens(o)};return u.state.inLink=!1,i}var ke=class{constructor(e){a(this,"options",void 0),a(this,"rules",void 0),a(this,"lexer",void 0),this.options=e||E}space(e){let t=this.rules.block.newline.exec(e);if(t&&t[0].length>0)return{type:"space",raw:t[0]}}code(e){let t=this.rules.block.code.exec(e);if(t){let e=t[0].replace(this.rules.other.codeRemoveIndent,"");return{type:"code",raw:t[0],codeBlockStyle:"indented",text:this.options.pedantic?e:Ee(e,"\n")}}}fences(e){let t=this.rules.block.fences.exec(e);if(t){let e=t[0],n=function(e,t,n){let u=e.match(n.other.indentCodeCompensation);if(null===u)return t;let r=u[1];return t.split("\n").map(e=>{let t=e.match(n.other.beginningSpace);if(null===t)return e;let[u]=t;return u.length>=r.length?e.slice(r.length):e}).join("\n")}(e,t[3]||"",this.rules);return{type:"code",raw:e,lang:t[2]?t[2].trim().replace(this.rules.inline.anyPunctuation,"$1"):t[2],text:n}}}heading(e){let t=this.rules.block.heading.exec(e);if(t){let e=t[2].trim();if(this.rules.other.endingHash.test(e)){let t=Ee(e,"#");(this.options.pedantic||!t||this.rules.other.endingSpaceChar.test(t))&&(e=t.trim())}return{type:"heading",raw:t[0],depth:t[1].length,text:e,tokens:this.lexer.inline(e)}}}hr(e){let t=this.rules.block.hr.exec(e);if(t)return{type:"hr",raw:Ee(t[0],"\n")}}blockquote(e){let t=this.rules.block.blockquote.exec(e);if(t){let e=Ee(t[0],"\n").split("\n"),n="",u="",r=[];for(;e.length>0;){let t,a=!1,l=[];for(t=0;t<e.length;t++)if(this.rules.other.blockquoteStart.test(e[t]))l.push(e[t]),a=!0;else{if(a)break;l.push(e[t])}e=e.slice(t);let o=l.join("\n"),i=o.replace(this.rules.other.blockquoteSetextReplace,"\n    $1").replace(this.rules.other.blockquoteSetextReplace2,"");n=n?"".concat(n,"\n").concat(o):o,u=u?"".concat(u,"\n").concat(i):i;let s=this.lexer.state.top;if(this.lexer.state.top=!0,this.lexer.blockTokens(i,r,!0),this.lexer.state.top=s,0===e.length)break;let c=r.at(-1);if("code"===(null===c||void 0===c?void 0:c.type))break;if("blockquote"===(null===c||void 0===c?void 0:c.type)){let t=c,a=t.raw+"\n"+e.join("\n"),l=this.blockquote(a);r[r.length-1]=l,n=n.substring(0,n.length-t.raw.length)+l.raw,u=u.substring(0,u.length-t.text.length)+l.text;break}if("list"===(null===c||void 0===c?void 0:c.type)){let t=c,a=t.raw+"\n"+e.join("\n"),l=this.list(a);r[r.length-1]=l,n=n.substring(0,n.length-c.raw.length)+l.raw,u=u.substring(0,u.length-t.raw.length)+l.raw,e=a.substring(r.at(-1).raw.length).split("\n");continue}}return{type:"blockquote",raw:n,tokens:r,text:u}}}list(e){let t=this.rules.block.list.exec(e);if(t){let n=t[1].trim(),u=n.length>1,r={type:"list",raw:"",ordered:u,start:u?+n.slice(0,-1):"",loose:!1,items:[]};n=u?"\\d{1,9}\\".concat(n.slice(-1)):"\\".concat(n),this.options.pedantic&&(n=u?n:"[*+-]");let a=this.rules.other.listItemRegex(n),l=!1;for(;e;){let n=!1,u="",o="";if(!(t=a.exec(e))||this.rules.block.hr.test(e))break;u=t[0],e=e.substring(u.length);let i=t[2].split("\n",1)[0].replace(this.rules.other.listReplaceTabs,e=>" ".repeat(3*e.length)),s=e.split("\n",1)[0],c=!i.trim(),d=0;if(this.options.pedantic?(d=2,o=i.trimStart()):c?d=t[1].length+1:(d=t[2].search(this.rules.other.nonSpaceChar),d=d>4?1:d,o=i.slice(d),d+=t[1].length),c&&this.rules.other.blankLine.test(s)&&(u+=s+"\n",e=e.substring(s.length+1),n=!0),!n){let t=this.rules.other.nextBulletRegex(d),n=this.rules.other.hrRegex(d),r=this.rules.other.fencesBeginRegex(d),a=this.rules.other.headingBeginRegex(d),l=this.rules.other.htmlBeginRegex(d);for(;e;){let f,D=e.split("\n",1)[0];if(s=D,this.options.pedantic?(s=s.replace(this.rules.other.listReplaceNesting,"  "),f=s):f=s.replace(this.rules.other.tabCharGlobal,"    "),r.test(s)||a.test(s)||l.test(s)||t.test(s)||n.test(s))break;if(f.search(this.rules.other.nonSpaceChar)>=d||!s.trim())o+="\n"+f.slice(d);else{if(c||i.replace(this.rules.other.tabCharGlobal,"    ").search(this.rules.other.nonSpaceChar)>=4||r.test(i)||a.test(i)||n.test(i))break;o+="\n"+s}!c&&!s.trim()&&(c=!0),u+=D+"\n",e=e.substring(D.length+1),i=f.slice(d)}}r.loose||(l?r.loose=!0:this.rules.other.doubleBlankLine.test(u)&&(l=!0));let f,D=null;this.options.gfm&&(D=this.rules.other.listIsTask.exec(o),D&&(f="[ ] "!==D[0],o=o.replace(this.rules.other.listReplaceTask,""))),r.items.push({type:"list_item",raw:u,task:!!D,checked:f,loose:!1,text:o,tokens:[]}),r.raw+=u}let o=r.items.at(-1);if(!o)return;o.raw=o.raw.trimEnd(),o.text=o.text.trimEnd(),r.raw=r.raw.trimEnd();for(let e=0;e<r.items.length;e++)if(this.lexer.state.top=!1,r.items[e].tokens=this.lexer.blockTokens(r.items[e].text,[]),!r.loose){let t=r.items[e].tokens.filter(e=>"space"===e.type),n=t.length>0&&t.some(e=>this.rules.other.anyLine.test(e.raw));r.loose=n}if(r.loose)for(let e=0;e<r.items.length;e++)r.items[e].loose=!0;return r}}html(e){let t=this.rules.block.html.exec(e);if(t)return{type:"html",block:!0,raw:t[0],pre:"pre"===t[1]||"script"===t[1]||"style"===t[1],text:t[0]}}def(e){let t=this.rules.block.def.exec(e);if(t){let e=t[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal," "),n=t[2]?t[2].replace(this.rules.other.hrefBrackets,"$1").replace(this.rules.inline.anyPunctuation,"$1"):"",u=t[3]?t[3].substring(1,t[3].length-1).replace(this.rules.inline.anyPunctuation,"$1"):t[3];return{type:"def",tag:e,raw:t[0],href:n,title:u}}}table(e){var t;let n=this.rules.block.table.exec(e);if(!n||!this.rules.other.tableDelimiter.test(n[2]))return;let u=ve(n[1]),r=n[2].replace(this.rules.other.tableAlignChars,"").split("|"),a=null!==(t=n[3])&&void 0!==t&&t.trim()?n[3].replace(this.rules.other.tableRowBlankLine,"").split("\n"):[],l={type:"table",raw:n[0],header:[],align:[],rows:[]};if(u.length===r.length){for(let e of r)this.rules.other.tableAlignRight.test(e)?l.align.push("right"):this.rules.other.tableAlignCenter.test(e)?l.align.push("center"):this.rules.other.tableAlignLeft.test(e)?l.align.push("left"):l.align.push(null);for(let e=0;e<u.length;e++)l.header.push({text:u[e],tokens:this.lexer.inline(u[e]),header:!0,align:l.align[e]});for(let e of a)l.rows.push(ve(e,l.header.length).map((e,t)=>({text:e,tokens:this.lexer.inline(e),header:!1,align:l.align[t]})));return l}}lheading(e){let t=this.rules.block.lheading.exec(e);if(t)return{type:"heading",raw:t[0],depth:"="===t[2].charAt(0)?1:2,text:t[1],tokens:this.lexer.inline(t[1])}}paragraph(e){let t=this.rules.block.paragraph.exec(e);if(t){let e="\n"===t[1].charAt(t[1].length-1)?t[1].slice(0,-1):t[1];return{type:"paragraph",raw:t[0],text:e,tokens:this.lexer.inline(e)}}}text(e){let t=this.rules.block.text.exec(e);if(t)return{type:"text",raw:t[0],text:t[0],tokens:this.lexer.inline(t[0])}}escape(e){let t=this.rules.inline.escape.exec(e);if(t)return{type:"escape",raw:t[0],text:t[1]}}tag(e){let t=this.rules.inline.tag.exec(e);if(t)return!this.lexer.state.inLink&&this.rules.other.startATag.test(t[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&this.rules.other.endATag.test(t[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&this.rules.other.startPreScriptTag.test(t[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&this.rules.other.endPreScriptTag.test(t[0])&&(this.lexer.state.inRawBlock=!1),{type:"html",raw:t[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,block:!1,text:t[0]}}link(e){let t=this.rules.inline.link.exec(e);if(t){let e=t[2].trim();if(!this.options.pedantic&&this.rules.other.startAngleBracket.test(e)){if(!this.rules.other.endAngleBracket.test(e))return;let t=Ee(e.slice(0,-1),"\\");if((e.length-t.length)%2===0)return}else{let e=function(e,t){if(-1===e.indexOf(t[1]))return-1;let n=0;for(let u=0;u<e.length;u++)if("\\"===e[u])u++;else if(e[u]===t[0])n++;else if(e[u]===t[1]&&(n--,n<0))return u;return n>0?-2:-1}(t[2],"()");if(-2===e)return;if(e>-1){let n=(0===t[0].indexOf("!")?5:4)+t[1].length+e;t[2]=t[2].substring(0,e),t[0]=t[0].substring(0,n).trim(),t[3]=""}}let n=t[2],u="";if(this.options.pedantic){let e=this.rules.other.pedanticHrefTitle.exec(n);e&&(n=e[1],u=e[3])}else u=t[3]?t[3].slice(1,-1):"";return n=n.trim(),this.rules.other.startAngleBracket.test(n)&&(n=this.options.pedantic&&!this.rules.other.endAngleBracket.test(e)?n.slice(1):n.slice(1,-1)),Ce(t,{href:n&&n.replace(this.rules.inline.anyPunctuation,"$1"),title:u&&u.replace(this.rules.inline.anyPunctuation,"$1")},t[0],this.lexer,this.rules)}}reflink(e,t){let n;if((n=this.rules.inline.reflink.exec(e))||(n=this.rules.inline.nolink.exec(e))){let e=t[(n[2]||n[1]).replace(this.rules.other.multipleSpaceGlobal," ").toLowerCase()];if(!e){let e=n[0].charAt(0);return{type:"text",raw:e,text:e}}return Ce(n,e,n[0],this.lexer,this.rules)}}emStrong(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",u=this.rules.inline.emStrongLDelim.exec(e);if(!(!u||u[3]&&n.match(this.rules.other.unicodeAlphaNumeric))&&(!u[1]&&!u[2]||!n||this.rules.inline.punctuation.exec(n))){let n,r,a=[...u[0]].length-1,l=a,o=0,i="*"===u[0][0]?this.rules.inline.emStrongRDelimAst:this.rules.inline.emStrongRDelimUnd;for(i.lastIndex=0,t=t.slice(-1*e.length+a);null!=(u=i.exec(t));){if(n=u[1]||u[2]||u[3]||u[4]||u[5]||u[6],!n)continue;if(r=[...n].length,u[3]||u[4]){l+=r;continue}if((u[5]||u[6])&&a%3&&!((a+r)%3)){o+=r;continue}if(l-=r,l>0)continue;r=Math.min(r,r+l+o);let t=[...u[0]][0].length,i=e.slice(0,a+u.index+t+r);if(Math.min(a,r)%2){let e=i.slice(1,-1);return{type:"em",raw:i,text:e,tokens:this.lexer.inlineTokens(e)}}let s=i.slice(2,-2);return{type:"strong",raw:i,text:s,tokens:this.lexer.inlineTokens(s)}}}}codespan(e){let t=this.rules.inline.code.exec(e);if(t){let e=t[2].replace(this.rules.other.newLineCharGlobal," "),n=this.rules.other.nonSpaceChar.test(e),u=this.rules.other.startingSpaceChar.test(e)&&this.rules.other.endingSpaceChar.test(e);return n&&u&&(e=e.substring(1,e.length-1)),{type:"codespan",raw:t[0],text:e}}}br(e){let t=this.rules.inline.br.exec(e);if(t)return{type:"br",raw:t[0]}}del(e){let t=this.rules.inline.del.exec(e);if(t)return{type:"del",raw:t[0],text:t[2],tokens:this.lexer.inlineTokens(t[2])}}autolink(e){let t=this.rules.inline.autolink.exec(e);if(t){let e,n;return"@"===t[2]?(e=t[1],n="mailto:"+e):(e=t[1],n=e),{type:"link",raw:t[0],text:e,href:n,tokens:[{type:"text",raw:e,text:e}]}}}url(e){let t;if(t=this.rules.inline.url.exec(e)){let e,r;if("@"===t[2])e=t[0],r="mailto:"+e;else{let a;do{var n,u;a=t[0],t[0]=null!==(n=null===(u=this.rules.inline._backpedal.exec(t[0]))||void 0===u?void 0:u[0])&&void 0!==n?n:""}while(a!==t[0]);e=t[0],r="www."===t[1]?"http://"+t[0]:t[0]}return{type:"link",raw:t[0],text:e,href:r,tokens:[{type:"text",raw:e,text:e}]}}}inlineText(e){let t=this.rules.inline.text.exec(e);if(t){let e=this.lexer.state.inRawBlock;return{type:"text",raw:t[0],text:t[0],escaped:e}}}},Ae=class e{constructor(e){a(this,"tokens",void 0),a(this,"options",void 0),a(this,"state",void 0),a(this,"tokenizer",void 0),a(this,"inlineQueue",void 0),this.tokens=[],this.tokens.links=Object.create(null),this.options=e||E,this.options.tokenizer=this.options.tokenizer||new ke,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};let t={other:w,block:he.normal,inline:me.normal};this.options.pedantic?(t.block=he.pedantic,t.inline=me.pedantic):this.options.gfm&&(t.block=he.gfm,this.options.breaks?t.inline=me.breaks:t.inline=me.gfm),this.tokenizer.rules=t}static get rules(){return{block:he,inline:me}}static lex(t,n){return new e(n).lex(t)}static lexInline(t,n){return new e(n).inlineTokens(t)}lex(e){e=e.replace(w.carriageReturn,"\n"),this.blockTokens(e,this.tokens);for(let t=0;t<this.inlineQueue.length;t++){let e=this.inlineQueue[t];this.inlineTokens(e.src,e.tokens)}return this.inlineQueue=[],this.tokens}blockTokens(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(this.options.pedantic&&(e=e.replace(w.tabCharGlobal,"    ").replace(w.spaceLine,""));e;){var u,r;let a;if(null!==(u=this.options.extensions)&&void 0!==u&&null!==(u=u.block)&&void 0!==u&&u.some(n=>!!(a=n.call({lexer:this},e,t))&&(e=e.substring(a.raw.length),t.push(a),!0)))continue;if(a=this.tokenizer.space(e)){e=e.substring(a.raw.length);let n=t.at(-1);1===a.raw.length&&void 0!==n?n.raw+="\n":t.push(a);continue}if(a=this.tokenizer.code(e)){e=e.substring(a.raw.length);let n=t.at(-1);"paragraph"===(null===n||void 0===n?void 0:n.type)||"text"===(null===n||void 0===n?void 0:n.type)?(n.raw+="\n"+a.raw,n.text+="\n"+a.text,this.inlineQueue.at(-1).src=n.text):t.push(a);continue}if(a=this.tokenizer.fences(e)){e=e.substring(a.raw.length),t.push(a);continue}if(a=this.tokenizer.heading(e)){e=e.substring(a.raw.length),t.push(a);continue}if(a=this.tokenizer.hr(e)){e=e.substring(a.raw.length),t.push(a);continue}if(a=this.tokenizer.blockquote(e)){e=e.substring(a.raw.length),t.push(a);continue}if(a=this.tokenizer.list(e)){e=e.substring(a.raw.length),t.push(a);continue}if(a=this.tokenizer.html(e)){e=e.substring(a.raw.length),t.push(a);continue}if(a=this.tokenizer.def(e)){e=e.substring(a.raw.length);let n=t.at(-1);"paragraph"===(null===n||void 0===n?void 0:n.type)||"text"===(null===n||void 0===n?void 0:n.type)?(n.raw+="\n"+a.raw,n.text+="\n"+a.raw,this.inlineQueue.at(-1).src=n.text):this.tokens.links[a.tag]||(this.tokens.links[a.tag]={href:a.href,title:a.title});continue}if(a=this.tokenizer.table(e)){e=e.substring(a.raw.length),t.push(a);continue}if(a=this.tokenizer.lheading(e)){e=e.substring(a.raw.length),t.push(a);continue}let l=e;if(null!==(r=this.options.extensions)&&void 0!==r&&r.startBlock){let t,n=1/0,u=e.slice(1);this.options.extensions.startBlock.forEach(e=>{t=e.call({lexer:this},u),"number"==typeof t&&t>=0&&(n=Math.min(n,t))}),n<1/0&&n>=0&&(l=e.substring(0,n+1))}if(this.state.top&&(a=this.tokenizer.paragraph(l))){let u=t.at(-1);n&&"paragraph"===(null===u||void 0===u?void 0:u.type)?(u.raw+="\n"+a.raw,u.text+="\n"+a.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=u.text):t.push(a),n=l.length!==e.length,e=e.substring(a.raw.length);continue}if(a=this.tokenizer.text(e)){e=e.substring(a.raw.length);let n=t.at(-1);"text"===(null===n||void 0===n?void 0:n.type)?(n.raw+="\n"+a.raw,n.text+="\n"+a.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=n.text):t.push(a);continue}if(e){let t="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(t);break}throw new Error(t)}}return this.state.top=!0,t}inline(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this.inlineQueue.push({src:e,tokens:t}),t}inlineTokens(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=e,u=null;if(this.tokens.links){let e=Object.keys(this.tokens.links);if(e.length>0)for(;null!=(u=this.tokenizer.rules.inline.reflinkSearch.exec(n));)e.includes(u[0].slice(u[0].lastIndexOf("[")+1,-1))&&(n=n.slice(0,u.index)+"["+"a".repeat(u[0].length-2)+"]"+n.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;null!=(u=this.tokenizer.rules.inline.anyPunctuation.exec(n));)n=n.slice(0,u.index)+"++"+n.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);for(;null!=(u=this.tokenizer.rules.inline.blockSkip.exec(n));)n=n.slice(0,u.index)+"["+"a".repeat(u[0].length-2)+"]"+n.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);let r=!1,a="";for(;e;){var l,o;let u;if(r||(a=""),r=!1,null!==(l=this.options.extensions)&&void 0!==l&&null!==(l=l.inline)&&void 0!==l&&l.some(n=>!!(u=n.call({lexer:this},e,t))&&(e=e.substring(u.raw.length),t.push(u),!0)))continue;if(u=this.tokenizer.escape(e)){e=e.substring(u.raw.length),t.push(u);continue}if(u=this.tokenizer.tag(e)){e=e.substring(u.raw.length),t.push(u);continue}if(u=this.tokenizer.link(e)){e=e.substring(u.raw.length),t.push(u);continue}if(u=this.tokenizer.reflink(e,this.tokens.links)){e=e.substring(u.raw.length);let n=t.at(-1);"text"===u.type&&"text"===(null===n||void 0===n?void 0:n.type)?(n.raw+=u.raw,n.text+=u.text):t.push(u);continue}if(u=this.tokenizer.emStrong(e,n,a)){e=e.substring(u.raw.length),t.push(u);continue}if(u=this.tokenizer.codespan(e)){e=e.substring(u.raw.length),t.push(u);continue}if(u=this.tokenizer.br(e)){e=e.substring(u.raw.length),t.push(u);continue}if(u=this.tokenizer.del(e)){e=e.substring(u.raw.length),t.push(u);continue}if(u=this.tokenizer.autolink(e)){e=e.substring(u.raw.length),t.push(u);continue}if(!this.state.inLink&&(u=this.tokenizer.url(e))){e=e.substring(u.raw.length),t.push(u);continue}let i=e;if(null!==(o=this.options.extensions)&&void 0!==o&&o.startInline){let t,n=1/0,u=e.slice(1);this.options.extensions.startInline.forEach(e=>{t=e.call({lexer:this},u),"number"==typeof t&&t>=0&&(n=Math.min(n,t))}),n<1/0&&n>=0&&(i=e.substring(0,n+1))}if(u=this.tokenizer.inlineText(i)){e=e.substring(u.raw.length),"_"!==u.raw.slice(-1)&&(a=u.raw.slice(-1)),r=!0;let n=t.at(-1);"text"===(null===n||void 0===n?void 0:n.type)?(n.raw+=u.raw,n.text+=u.text):t.push(u);continue}if(e){let t="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(t);break}throw new Error(t)}}return t}},we=class{constructor(e){a(this,"options",void 0),a(this,"parser",void 0),this.options=e||E}space(e){return""}code(e){var t;let{text:n,lang:u,escaped:r}=e,a=null===(t=(u||"").match(w.notSpaceStart))||void 0===t?void 0:t[0],l=n.replace(w.endingNewline,"")+"\n";return a?'<pre><code class="language-'+ye(a)+'">'+(r?l:ye(l,!0))+"</code></pre>\n":"<pre><code>"+(r?l:ye(l,!0))+"</code></pre>\n"}blockquote(e){let{tokens:t}=e;return"<blockquote>\n".concat(this.parser.parse(t),"</blockquote>\n")}html(e){let{text:t}=e;return t}heading(e){let{tokens:t,depth:n}=e;return"<h".concat(n,">").concat(this.parser.parseInline(t),"</h").concat(n,">\n")}hr(e){return"<hr>\n"}list(e){let t=e.ordered,n=e.start,u="";for(let a=0;a<e.items.length;a++){let t=e.items[a];u+=this.listitem(t)}let r=t?"ol":"ul";return"<"+r+(t&&1!==n?' start="'+n+'"':"")+">\n"+u+"</"+r+">\n"}listitem(e){let t="";if(e.task){var n;let u=this.checkbox({checked:!!e.checked});e.loose?"paragraph"===(null===(n=e.tokens[0])||void 0===n?void 0:n.type)?(e.tokens[0].text=u+" "+e.tokens[0].text,e.tokens[0].tokens&&e.tokens[0].tokens.length>0&&"text"===e.tokens[0].tokens[0].type&&(e.tokens[0].tokens[0].text=u+" "+ye(e.tokens[0].tokens[0].text),e.tokens[0].tokens[0].escaped=!0)):e.tokens.unshift({type:"text",raw:u+" ",text:u+" ",escaped:!0}):t+=u+" "}return t+=this.parser.parse(e.tokens,!!e.loose),"<li>".concat(t,"</li>\n")}checkbox(e){let{checked:t}=e;return"<input "+(t?'checked="" ':"")+'disabled="" type="checkbox">'}paragraph(e){let{tokens:t}=e;return"<p>".concat(this.parser.parseInline(t),"</p>\n")}table(e){let t="",n="";for(let r=0;r<e.header.length;r++)n+=this.tablecell(e.header[r]);t+=this.tablerow({text:n});let u="";for(let r=0;r<e.rows.length;r++){let t=e.rows[r];n="";for(let e=0;e<t.length;e++)n+=this.tablecell(t[e]);u+=this.tablerow({text:n})}return u&&(u="<tbody>".concat(u,"</tbody>")),"<table>\n<thead>\n"+t+"</thead>\n"+u+"</table>\n"}tablerow(e){let{text:t}=e;return"<tr>\n".concat(t,"</tr>\n")}tablecell(e){let t=this.parser.parseInline(e.tokens),n=e.header?"th":"td";return(e.align?"<".concat(n,' align="').concat(e.align,'">'):"<".concat(n,">"))+t+"</".concat(n,">\n")}strong(e){let{tokens:t}=e;return"<strong>".concat(this.parser.parseInline(t),"</strong>")}em(e){let{tokens:t}=e;return"<em>".concat(this.parser.parseInline(t),"</em>")}codespan(e){let{text:t}=e;return"<code>".concat(ye(t,!0),"</code>")}br(e){return"<br>"}del(e){let{tokens:t}=e;return"<del>".concat(this.parser.parseInline(t),"</del>")}link(e){let{href:t,title:n,tokens:u}=e,r=this.parser.parseInline(u),a=be(t);if(null===a)return r;t=a;let l='<a href="'+t+'"';return n&&(l+=' title="'+ye(n)+'"'),l+=">"+r+"</a>",l}image(e){let{href:t,title:n,text:u,tokens:r}=e;r&&(u=this.parser.parseInline(r,this.parser.textRenderer));let a=be(t);if(null===a)return ye(u);t=a;let l='<img src="'.concat(t,'" alt="').concat(u,'"');return n&&(l+=' title="'.concat(ye(n),'"')),l+=">",l}text(e){return"tokens"in e&&e.tokens?this.parser.parseInline(e.tokens):"escaped"in e&&e.escaped?e.text:ye(e.text)}},xe=class{strong(e){let{text:t}=e;return t}em(e){let{text:t}=e;return t}codespan(e){let{text:t}=e;return t}del(e){let{text:t}=e;return t}html(e){let{text:t}=e;return t}text(e){let{text:t}=e;return t}link(e){let{text:t}=e;return""+t}image(e){let{text:t}=e;return""+t}br(){return""}},Se=class e{constructor(e){a(this,"options",void 0),a(this,"renderer",void 0),a(this,"textRenderer",void 0),this.options=e||E,this.options.renderer=this.options.renderer||new we,this.renderer=this.options.renderer,this.renderer.options=this.options,this.renderer.parser=this,this.textRenderer=new xe}static parse(t,n){return new e(n).parse(t)}static parseInline(t,n){return new e(n).parseInline(t)}parse(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n="";for(let r=0;r<e.length;r++){var u;let a=e[r];if(null!==(u=this.options.extensions)&&void 0!==u&&null!==(u=u.renderers)&&void 0!==u&&u[a.type]){let e=a,t=this.options.extensions.renderers[e.type].call({parser:this},e);if(!1!==t||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(e.type)){n+=t||"";continue}}let l=a;switch(l.type){case"space":n+=this.renderer.space(l);continue;case"hr":n+=this.renderer.hr(l);continue;case"heading":n+=this.renderer.heading(l);continue;case"code":n+=this.renderer.code(l);continue;case"table":n+=this.renderer.table(l);continue;case"blockquote":n+=this.renderer.blockquote(l);continue;case"list":n+=this.renderer.list(l);continue;case"html":n+=this.renderer.html(l);continue;case"paragraph":n+=this.renderer.paragraph(l);continue;case"text":{let u=l,a=this.renderer.text(u);for(;r+1<e.length&&"text"===e[r+1].type;)u=e[++r],a+="\n"+this.renderer.text(u);n+=t?this.renderer.paragraph({type:"paragraph",raw:a,text:a,tokens:[{type:"text",raw:a,text:a,escaped:!0}]}):a;continue}default:{let e='Token with "'+l.type+'" type was not found.';if(this.options.silent)return console.error(e),"";throw new Error(e)}}}return n}parseInline(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.renderer,n="";for(let r=0;r<e.length;r++){var u;let a=e[r];if(null!==(u=this.options.extensions)&&void 0!==u&&null!==(u=u.renderers)&&void 0!==u&&u[a.type]){let e=this.options.extensions.renderers[a.type].call({parser:this},a);if(!1!==e||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(a.type)){n+=e||"";continue}}let l=a;switch(l.type){case"escape":case"text":n+=t.text(l);break;case"html":n+=t.html(l);break;case"link":n+=t.link(l);break;case"image":n+=t.image(l);break;case"strong":n+=t.strong(l);break;case"em":n+=t.em(l);break;case"codespan":n+=t.codespan(l);break;case"br":n+=t.br(l);break;case"del":n+=t.del(l);break;default:{let e='Token with "'+l.type+'" type was not found.';if(this.options.silent)return console.error(e),"";throw new Error(e)}}}return n}},Be=(b=class{constructor(e){a(this,"options",void 0),a(this,"block",void 0),this.options=e||E}preprocess(e){return e}postprocess(e){return e}processAllTokens(e){return e}provideLexer(){return this.block?Ae.lex:Ae.lexInline}provideParser(){return this.block?Se.parse:Se.parseInline}},a(b,"passThroughHooks",new Set(["preprocess","postprocess","processAllTokens"])),b),Ne=new class{constructor(){a(this,"defaults",{async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null}),a(this,"options",this.setOptions),a(this,"parse",this.parseMarkdown(!0)),a(this,"parseInline",this.parseMarkdown(!1)),a(this,"Parser",Se),a(this,"Renderer",we),a(this,"TextRenderer",xe),a(this,"Lexer",Ae),a(this,"Tokenizer",ke),a(this,"Hooks",Be),this.use(...arguments)}walkTokens(e,t){let n=[];for(let r of e)switch(n=n.concat(t.call(this,r)),r.type){case"table":{let e=r;for(let u of e.header)n=n.concat(this.walkTokens(u.tokens,t));for(let u of e.rows)for(let e of u)n=n.concat(this.walkTokens(e.tokens,t));break}case"list":{let e=r;n=n.concat(this.walkTokens(e.items,t));break}default:{var u;let e=r;null!==(u=this.defaults.extensions)&&void 0!==u&&null!==(u=u.childTokens)&&void 0!==u&&u[e.type]?this.defaults.extensions.childTokens[e.type].forEach(u=>{let r=e[u].flat(1/0);n=n.concat(this.walkTokens(r,t))}):e.tokens&&(n=n.concat(this.walkTokens(e.tokens,t)))}}return n}use(){let e=this.defaults.extensions||{renderers:{},childTokens:{}};for(var t=arguments.length,n=new Array(t),u=0;u<t;u++)n[u]=arguments[u];return n.forEach(t=>{let n=o({},t);if(n.async=this.defaults.async||n.async||!1,t.extensions&&(t.extensions.forEach(t=>{if(!t.name)throw new Error("extension name required");if("renderer"in t){let n=e.renderers[t.name];e.renderers[t.name]=n?function(){for(var e=arguments.length,u=new Array(e),r=0;r<e;r++)u[r]=arguments[r];let a=t.renderer.apply(this,u);return!1===a&&(a=n.apply(this,u)),a}:t.renderer}if("tokenizer"in t){if(!t.level||"block"!==t.level&&"inline"!==t.level)throw new Error("extension level must be 'block' or 'inline'");let n=e[t.level];n?n.unshift(t.tokenizer):e[t.level]=[t.tokenizer],t.start&&("block"===t.level?e.startBlock?e.startBlock.push(t.start):e.startBlock=[t.start]:"inline"===t.level&&(e.startInline?e.startInline.push(t.start):e.startInline=[t.start]))}"childTokens"in t&&t.childTokens&&(e.childTokens[t.name]=t.childTokens)}),n.extensions=e),t.renderer){let e=this.defaults.renderer||new we(this.defaults);for(let n in t.renderer){if(!(n in e))throw new Error("renderer '".concat(n,"' does not exist"));if(["options","parser"].includes(n))continue;let u=n,r=t.renderer[u],a=e[u];e[u]=function(){for(var t=arguments.length,n=new Array(t),u=0;u<t;u++)n[u]=arguments[u];let l=r.apply(e,n);return!1===l&&(l=a.apply(e,n)),l||""}}n.renderer=e}if(t.tokenizer){let e=this.defaults.tokenizer||new ke(this.defaults);for(let n in t.tokenizer){if(!(n in e))throw new Error("tokenizer '".concat(n,"' does not exist"));if(["options","rules","lexer"].includes(n))continue;let u=n,r=t.tokenizer[u],a=e[u];e[u]=function(){for(var t=arguments.length,n=new Array(t),u=0;u<t;u++)n[u]=arguments[u];let l=r.apply(e,n);return!1===l&&(l=a.apply(e,n)),l}}n.tokenizer=e}if(t.hooks){let e=this.defaults.hooks||new Be;for(let n in t.hooks){if(!(n in e))throw new Error("hook '".concat(n,"' does not exist"));if(["options","block"].includes(n))continue;let u=n,r=t.hooks[u],a=e[u];Be.passThroughHooks.has(n)?e[u]=t=>{if(this.defaults.async)return Promise.resolve(r.call(e,t)).then(t=>a.call(e,t));let n=r.call(e,t);return a.call(e,n)}:e[u]=function(){for(var t=arguments.length,n=new Array(t),u=0;u<t;u++)n[u]=arguments[u];let l=r.apply(e,n);return!1===l&&(l=a.apply(e,n)),l}}n.hooks=e}if(t.walkTokens){let e=this.defaults.walkTokens,u=t.walkTokens;n.walkTokens=function(t){let n=[];return n.push(u.call(this,t)),e&&(n=n.concat(e.call(this,t))),n}}this.defaults=o(o({},this.defaults),n)}),this}setOptions(e){return this.defaults=o(o({},this.defaults),e),this}lexer(e,t){return Ae.lex(e,null!==t&&void 0!==t?t:this.defaults)}parser(e,t){return Se.parse(e,null!==t&&void 0!==t?t:this.defaults)}parseMarkdown(e){return(t,n)=>{let u=o({},n),r=o(o({},this.defaults),u),a=this.onError(!!r.silent,!!r.async);if(!0===this.defaults.async&&!1===u.async)return a(new Error("marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise."));if(typeof t>"u"||null===t)return a(new Error("marked(): input parameter is undefined or null"));if("string"!=typeof t)return a(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(t)+", string expected"));r.hooks&&(r.hooks.options=r,r.hooks.block=e);let l=r.hooks?r.hooks.provideLexer():e?Ae.lex:Ae.lexInline,i=r.hooks?r.hooks.provideParser():e?Se.parse:Se.parseInline;if(r.async)return Promise.resolve(r.hooks?r.hooks.preprocess(t):t).then(e=>l(e,r)).then(e=>r.hooks?r.hooks.processAllTokens(e):e).then(e=>r.walkTokens?Promise.all(this.walkTokens(e,r.walkTokens)).then(()=>e):e).then(e=>i(e,r)).then(e=>r.hooks?r.hooks.postprocess(e):e).catch(a);try{r.hooks&&(t=r.hooks.preprocess(t));let e=l(t,r);r.hooks&&(e=r.hooks.processAllTokens(e)),r.walkTokens&&this.walkTokens(e,r.walkTokens);let n=i(e,r);return r.hooks&&(n=r.hooks.postprocess(n)),n}catch(s){return a(s)}}}onError(e,t){return n=>{if(n.message+="\nPlease report this to https://github.com/markedjs/marked.",e){let e="<p>An error occurred:</p><pre>"+ye(n.message+"",!0)+"</pre>";return t?Promise.resolve(e):e}if(t)return Promise.reject(n);throw n}}};function Te(e,t){return Ne.parse(e,t)}Te.options=Te.setOptions=function(e){return Ne.setOptions(e),Te.defaults=Ne.defaults,C(Te.defaults),Te},Te.getDefaults=v,Te.defaults=E,Te.use=function(){return Ne.use(...arguments),Te.defaults=Ne.defaults,C(Te.defaults),Te},Te.walkTokens=function(e,t){return Ne.walkTokens(e,t)},Te.parseInline=Ne.parseInline,Te.Parser=Se,Te.parser=Se.parse,Te.Renderer=we,Te.TextRenderer=xe,Te.Lexer=Ae,Te.lexer=Ae.lex,Te.Tokenizer=ke,Te.Hooks=Be,Te.parse=Te;Te.options,Te.setOptions,Te.use,Te.walkTokens,Te.parseInline,Se.parse,Ae.lex;const Pe=e=>{let{setShowAbout:t}=e;const n=Te.parse("\n# \ud83c\udfae BlockMiningGame\n\nMine blocks, battle in Warzone, and grow your territory. Your Volore balance is always equal to your mined blocks.\n\n## \ud83c\udfaf Core Rules\n\n- **1 Block = 1 Volore**. Your total Volore always matches your total mined blocks in Digzone.\n- **Daily Mining Limit**: You can dig up to **20 blocks/day**.\n- **Castle Bonus Timing**: On your first dig of the day, your castles auto-mine as a **single aggregated bonus** (amount = number of your castles). This appears in Activity as one MINT entry, not many separate +1 lines.\n- **Dynamic Grid**: The grid expands automatically when it fills up.\n\n## \u26cf\ufe0f Digzone (Mining)\n\n- Tap/click to mine empty blocks and claim them in your color.\n- Each successful dig increases your mined block count by 1 (and thus your Volore by 1).\n\n## \ud83c\udff0 Castles\n\n- A block with **defense \u2265 10** becomes a **Castle** (black border + golden glow).\n- **Auto-Mining (Aggregated)**: Each Castle contributes **+1/day**; the sum is minted at once on your first dig of the day (reason 'castle_bonus').\n- **First-Placement Protection**: Castles cannot be attacked on a player's very first placement.\n\n## \u2694\ufe0f Warzone (PvP)\n\n- **First Placement**: Your first Warzone block can be placed anywhere.\n- **Neighbor Rule**: After your first placement, new placements/attacks must be adjacent to your existing Warzone blocks.\n- **Support (Defend)**: Supporting your own block increases its defense by +1. This consumes your stock but does not change your total mined blocks.\n- **Attack**: Attacking an opponent's block reduces its defense by 1 (ownerless at 0).\n- **Attack Cost (Invariant)**: Each attack causes both attacker and defender to lose 1 mined block (most recent). The invariant (Volore = Mined Blocks) always holds.\n\n## \ud83d\udcbc Transfers\n\n- Send Volore to another registered user by entering their Volchain address.\n- Sending N Volore moves your last N mined Digzone blocks to the receiver. Both balances remain equal to their mined blocks.\n\n## \ud83d\udce6 Stock, Used, Available\n\n- **Used Volore** (Warzone): Sum of the defense values of your Warzone blocks.\n- **Available Volore**: (Mined \u2212 Used). This is how many new Warzone actions (placements/supports) you can perform.\n\n## \ud83d\udcca Stats & Activity\n\n- **Top Volore Miners**: Leaderboard based on mined blocks.\n- **Volchain Activity**: Shows mint/burn/transfer events with usernames. Castle bonus appears as a single aggregated MINT.\n- **Consistency**: UI and VolChain totals are verified; supply equals mined. System verification runs against Digzone + GridB + VolChain.\n\n## \ud83d\udd10 Accounts & Wallet\n\n- No external wallet needed. Your **Volchain address** is managed in Settings and used for in-game transfers.\n- Email verification and session-based login are supported.\n- Technical: Requests include chain and operation IDs automatically for safety.\n\n---\n\nStart mining, build castles, and dominate the Warzone!\n");return(0,p.jsx)("div",{className:"settings-modal",children:(0,p.jsxs)("div",{className:"settings-content",children:[(0,p.jsxs)("div",{className:"modal-header",children:[(0,p.jsx)("h3",{className:"modal-title",children:"\ud83c\udfae BlockGame Info"}),(0,p.jsx)("button",{className:"modal-close-x",onClick:()=>t(!1),"aria-label":"Close",children:"\xd7"})]}),(0,p.jsx)("div",{className:"modal-body",children:(0,p.jsx)("div",{dangerouslySetInnerHTML:{__html:n},style:{textAlign:"left",lineHeight:"1.6",color:"#333"}})})]})})};function je(e,t,n){const u=[],r=e%n;e>=n&&u.push(e-n);const a=e+n;if(a<t&&u.push(a),r>0&&u.push(e-1),r<n-1){const n=e+1;n<t&&u.push(n)}return u}const _e=t=>{let{totalBlocks:n,username:u,userColor:r,tokenBalance:a,setTokenBalance:l,setBlockData:i}=t;const[s,c]=(0,e.useState)({width:window.innerWidth,height:window.innerHeight}),d=(0,e.useCallback)(()=>s.width<=800,[s.width]),h=50,m=Math.ceil(n/h),F=Array.from({length:n},(e,t)=>t),[g,y]=(0,e.useState)([]),[b,v]=(0,e.useState)(!1),[E,C]=(0,e.useState)({}),[k,A]=(0,e.useState)(!1),[w,x]=(0,e.useState)(null),[S,B]=(0,e.useState)("stake"),N=()=>(window.screen.width||window.innerWidth)<400?"280px":"300px",T=/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||/iPad|iPhone|iPod/.test(navigator.userAgent),P=/android/i.test(navigator.userAgent),j=/iPad|iPhone|iPod/.test(navigator.userAgent);(0,e.useEffect)(()=>{if(!k)return;const e=document.body.style.overflow;document.body.style.overflow="hidden",document.body.style.position="fixed",document.body.style.width="100%";const t=()=>{const e=document.querySelector('[style*="z-index: 99999"]'),t=document.querySelector('[style*="border-radius: 12px"][style*="background"]');if(e){const t=e;if(t.style.position="fixed",t.style.top="0px",t.style.left="0px",j)t.style.width="".concat(window.screen.width,"px"),t.style.height="".concat(window.screen.height,"px"),t.style.right="0px",t.style.bottom="0px",t.style.setProperty("-webkit-transform","none"),t.style.setProperty("-webkit-zoom","normal"),t.style.setProperty("zoom","normal");else if(P){var n;const e=(null===(n=window.visualViewport)||void 0===n?void 0:n.height)||window.innerHeight;t.style.width="100vw",t.style.height="".concat(e,"px"),t.style.setProperty("zoom","1"),t.style.setProperty("transform","none")}else t.style.width="100vw",t.style.height="100vh",t.style.setProperty("zoom","1");t.style.transform="none",t.style.zIndex="2147483647",t.style.backgroundColor="rgba(0, 0, 0, 0.7)",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center"}if(t){const e=t,n=j?window.screen.width<400?"280px":"300px":N();e.style.width=n,e.style.minWidth=n,e.style.maxWidth=n,e.style.transform="none",e.style.fontSize="14px",e.style.position="relative",e.style.backgroundColor="white",e.style.padding="20px",e.style.borderRadius="12px",e.style.textAlign="center",e.style.margin="0",e.style.border="none",e.style.outline="none",j?(e.style.setProperty("-webkit-transform","none"),e.style.setProperty("-webkit-zoom","normal"),e.style.setProperty("zoom","normal"),e.style.setProperty("will-change","auto")):e.style.setProperty("zoom","1")}},n=setInterval(t,T?16:50),u=new MutationObserver(t);return setTimeout(()=>{const e=document.querySelector('[style*="z-index: 99999"]'),t=document.querySelector('[style*="border-radius: 12px"][style*="background"]');e&&u.observe(e,{attributes:!0,attributeFilter:["style","class"]}),t&&u.observe(t,{attributes:!0,attributeFilter:["style","class"]})},10),()=>{clearInterval(n),u.disconnect(),document.body.style.overflow=e,document.body.style.position="",document.body.style.width=""}},[k,P,j,T]),(0,e.useEffect)(()=>{const e=()=>{c({width:window.innerWidth,height:window.innerHeight})};return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)},[]);const _=(0,e.useCallback)(()=>{const{width:e}=s,t=.95*e,n=Math.floor((t-24.5)/h);return Math.min(Math.max(n,4),20)},[s,h])(),z=async()=>{v(!0);const e=await fetch("/gridb"),t=await e.json();y(t),v(!1)};(0,e.useEffect)(()=>{z()},[n]),(0,e.useEffect)(()=>{const e=Array.from(new Set(g.filter(e=>e&&"object"===typeof e&&e.owner).map(e=>e.owner)));Promise.all(e.map(async e=>{const t=await fetch("/auth/user?username=".concat(e));return[e,(await t.json()).color]})).then(e=>{const t={};e.forEach(e=>{let[n,u]=e;t[n]=u}),C(t)})},[g]);const R=g.filter(e=>e&&"object"===typeof e&&e.owner===u),L=R.reduce((e,t)=>e+(Number(t.defense||1)||1),0),O=a-L,M=(0,e.useCallback)(e=>{if(b)return;const t=g[e]&&"object"===typeof g[e]?g[e]:null;if("stake"===S){const r=a-L;if((!(null!==t&&void 0!==t&&t.owner)||t.owner!==u)&&r<=0)return void alert("\u26a0\ufe0f No available blocks for war! Mine more blocks in Digzone first.");if(null===t||void 0===t||!t.owner){const t=0===g.filter(e=>e&&"object"===typeof e&&e.owner===u).length;if(!t){if(!je(e,n,h).some(e=>g[e]&&"object"===typeof g[e]&&g[e].owner===u))return void alert("\u26a0\ufe0f You must place blocks adjacent to your existing blocks! Expand step by step.")}}}x(e),A(!0)},[b,a,L,g,u,n,h,S]),I=(0,e.useCallback)(async e=>{if(b)return;const t=a-L,r=g[e]&&"object"===typeof g[e]?g[e]:null;if((!(null!==r&&void 0!==r&&r.owner)||r.owner!==u)&&t<=0)return alert("\u26a0\ufe0f No available blocks for war! Mine more blocks in Digzone first."),void A(!1);if(null===r||void 0===r||!r.owner){const t=0===g.filter(e=>e&&"object"===typeof e&&e.owner===u).length;if(!t){if(!je(e,n,h).some(e=>g[e]&&"object"===typeof g[e]&&g[e].owner===u))return alert("\u26a0\ufe0f You must place blocks adjacent to your existing blocks! Expand step by step."),void A(!1)}}A(!1),v(!0);const s=(null===r||void 0===r?void 0:r.owner)||null,c="number"===typeof(null===r||void 0===r?void 0:r.defense)?r.defense:null!==r&&void 0!==r&&r.owner?1:0;await new Promise(e=>setTimeout(e,100));let d=0;for(;d<3;)try{const t=await f("/gridb/".concat(e),{method:"PATCH",headers:{"Content-Type":"application/json"},body:{action:"attack"}},1);if(t.ok){const n=await t.json();n.ok&&n.gridb?(y(n.gridb),console.log("[ATTACK] Success: ".concat(n.mode,", effects:"),n.effects)):(Array.isArray(n)||console.warn("[ATTACK] Unexpected response format:",n),y(n));const r=n.gridb||n;try{const t=r[e]&&"object"===typeof r[e]?r[e]:null,n=(null===t||void 0===t?void 0:t.owner)||null,u="number"===typeof(null===t||void 0===t?void 0:t.defense)?t.defense:null!==t&&void 0!==t&&t.owner?1:0;if(!(n!==s||u!==c)){const e=await f("/gridb",{method:"GET",requireOpId:!1},1);if(e.ok){const t=await e.json();y(t)}}}catch(D){}try{const e=await f("/grid",{method:"GET",requireOpId:!1},1);if(e.ok){const t=await e.json();i(t);const n=t.filter(e=>e.dugBy===u).length;l(n),console.log("\ud83d\udd04 Token balance updated: ".concat(a," \u2192 ").concat(n))}}catch(p){console.error("Failed to update grid data:",p)}const d=Array.isArray(r)?r:Array.isArray(null===n||void 0===n?void 0:n.gridb)?n.gridb:[],h=Array.from(new Set(d.filter(e=>e&&"object"===typeof e&&e.owner).map(e=>e.owner))),m=h.map(async e=>{try{const t=await f("/auth/user?username=".concat(e),{method:"GET",requireOpId:!1},1);if(t.ok){const n=await t.json();return{[e]:n.color}}}catch(t){console.log("Color fetch failed for",e)}return{}}),F=(await Promise.all(m)).reduce((e,t)=>o(o({},e),t),{});return C(e=>o(o({},e),F)),void v(!1)}{const e=await t.json();if("guard_system_failed"===e.error){if(d++,d<3){console.log("Guard system busy, retrying... (".concat(d,"/").concat(3,")")),await new Promise(e=>setTimeout(e,1e3));continue}alert("\u26a0\ufe0f System temporarily busy. Please try again in a moment.")}else alert(e.error||"Block action failed");break}}catch(p){if(d++,console.error("Request failed:",p),d<3){await new Promise(e=>setTimeout(e,1e3));continue}alert("\u26a0\ufe0f Connection error. Please try again.")}v(!1)},[b,i,l,u,a,L,g,h,n]),U=(0,e.useCallback)(async e=>{if(b)return;const t=g[e]&&"object"===typeof g[e]?g[e]:null;if(!t||t.owner!==u)return;if((t.defense||1)>=10)return void alert("\ud83c\udff0 Maximum defense reached! Cannot stake further.");A(!1),v(!0),await new Promise(e=>setTimeout(e,100));const n=await f("/gridb/".concat(e,"/stake"),{method:"POST",headers:{"Content-Type":"application/json"}},1);if(n.ok){const e=await n.json();console.log("Stake response:",e),e.success?z():Array.isArray(e)?y(e):(console.error("Unexpected response format:",e),z());try{const e=await f("/grid",{method:"GET",requireOpId:!1},1);if(e.ok){const t=await e.json();i(t);const n=t.filter(e=>e.dugBy===u).length;l(n)}}catch(r){console.error("Failed to update grid data:",r)}}else{const e=await n.json().catch(()=>({}));"guard_system_failed"===e.error?alert("\u26a0\ufe0f System temporarily busy. Please try again in a moment."):alert(e.error||"Stake failed")}v(!1)},[b,g,i,l,u]),$=(0,e.useCallback)(async e=>{if(b)return;const t=g[e]&&"object"===typeof g[e]?g[e]:null;if(!t||t.owner!==u)return;A(!1),v(!0),await new Promise(e=>setTimeout(e,100));const n=await f("/gridb/".concat(e,"/unstake"),{method:"POST",headers:{"Content-Type":"application/json"}},1);if(n.ok){const e=await n.json();console.log("Unstake response:",e),e.success?z():Array.isArray(e)?y(e):(console.error("Unexpected response format:",e),z());try{const e=await f("/grid",{method:"GET",requireOpId:!1},1);if(e.ok){const t=await e.json();i(t);const n=t.filter(e=>e.dugBy===u).length;l(n)}}catch(r){console.error("Failed to update grid data:",r)}}else{const e=await n.json().catch(()=>({}));"guard_system_failed"===e.error?alert("\u26a0\ufe0f System temporarily busy. Please try again in a moment."):alert(e.error||"Unstake failed")}v(!1)},[b,g,i,l,u]),V=(0,e.useCallback)(async e=>{if(b)return;const t=g[e];if(!t||t.owner!==u)return;A(!1),v(!0),await new Promise(e=>setTimeout(e,100));const n=await f("/gridb/".concat(e),{method:"DELETE",headers:{"Content-Type":"application/json"}},1);if(n.ok){const e=await n.json();console.log("Remove response:",e),e.success?z():Array.isArray(e)?y(e):(console.error("Unexpected response format:",e),z());try{const e=await f("/grid",{method:"GET",requireOpId:!1},1);if(e.ok){const t=await e.json();i(t);const n=t.filter(e=>e.dugBy===u).length;l(n)}}catch(r){console.error("Failed to update grid data:",r)}}else{const e=await n.json().catch(()=>({}));"guard_system_failed"===e.error?alert("\u26a0\ufe0f System temporarily busy. Please try again in a moment."):alert(e.error||"Remove failed")}v(!1)},[b,g,i,l,u]),[H,q]=(0,e.useState)(null),[W,Y]=(0,e.useState)(!1),Q=(0,e.useRef)(!1),[K,G]=(0,e.useState)(1),[X,Z]=(0,e.useState)(1),[J,ee]=(0,e.useState)(0),[te,ne]=(0,e.useState)({x:0,y:0}),[ue,re]=(0,e.useState)({x:0,y:0}),ae=(0,e.useRef)(null),le=(0,e.useRef)(!1),oe=(0,e.useRef)(!1),[ie,se]=(0,e.useState)({x:0,y:0}),[ce,de]=(0,e.useState)(!1),fe=(0,e.useRef)({x:0,y:0}),De=(0,e.useRef)(0),pe=(0,e.useRef)(null);(0,e.useEffect)(()=>{try{le.current="ontouchstart"in window||(navigator.maxTouchPoints||0)>0}catch(e){le.current=!1}},[]);const he=(0,e.useCallback)(()=>{if(!ae.current||!ae.current.parentElement)return{minX:0,maxX:0,minY:0,maxY:0};const e=ae.current.parentElement.getBoundingClientRect(),t=ae.current.offsetWidth,n=ae.current.offsetHeight,u=t*K,r=n*K;if(u<=e.width&&r<=e.height)return{minX:0,maxX:0,minY:0,maxY:0};const a=u>e.width?u-e.width:0,l=r>e.height?r-e.height:0,o=a/2/K,i=l/2/K;return{minX:-o,maxX:o,minY:-i,maxY:i}},[K]),me=(0,e.useCallback)(()=>{if(ce||!ce&&Math.abs(ie.x)<.01&&Math.abs(ie.y)<.01)return void(pe.current&&(cancelAnimationFrame(pe.current),pe.current=null));const e=Date.now(),t=e-De.current;De.current=e;const n={x:ie.x*Math.pow(.92,t/16),y:ie.y*Math.pow(.92,t/16)},u=he(),r={x:te.x+n.x,y:te.y+n.y},a={x:Math.max(u.minX,Math.min(u.maxX,r.x)),y:Math.max(u.minY,Math.min(u.maxY,r.y))};ae.current&&(ae.current.style.transform="scale(".concat(K,") translate(").concat(a.x,"px, ").concat(a.y,"px)")),ne(a),se(n),pe.current=requestAnimationFrame(me)},[ie,ce,te,K,he]);(0,e.useEffect)(()=>(!ce&&(Math.abs(ie.x)>.01||Math.abs(ie.y)>.01)&&(De.current=Date.now(),pe.current=requestAnimationFrame(me)),()=>{pe.current&&(cancelAnimationFrame(pe.current),pe.current=null)}),[ie,ce,me]);const Fe=(0,e.useCallback)((e,t)=>{const n=e.clientX-t.clientX,u=e.clientY-t.clientY;return Math.sqrt(n*n+u*u)},[]),ge=(0,e.useCallback)((e,t)=>{if(e.touches.length>=2){q(null),Q.current=!0,Y(!0);const t=Fe(e.touches[0],e.touches[1]);return ee(t),Z(K),void e.preventDefault()}Q.current=!1,Y(!1),de(!0);const n=e.touches[0];q({x:n.clientX,y:n.clientY,time:Date.now()}),re(te),se({x:0,y:0}),fe.current={x:0,y:0},pe.current&&(cancelAnimationFrame(pe.current),pe.current=null)},[Fe,K,te]),ye=(0,e.useCallback)(e=>{if(2===e.touches.length&&W){const t=Fe(e.touches[0],e.touches[1]),n=Math.min(Math.max(X*(t/J),1),4);return ae.current&&requestAnimationFrame(()=>{G(n);const e="scale(".concat(n,") translate(").concat(te.x,"px, ").concat(te.y,"px)");ae.current.style.transform=e}),void e.preventDefault()}if(!H||1!==e.touches.length||!ce)return;const t=e.touches[0],n=t.clientX-H.x,u=t.clientY-H.y,r=(Math.sqrt(n*n+u*u),Date.now()-H.time);if(r>10){const e=n/r,t=u/r;fe.current={x:16.67*e,y:16.67*t}}const a=he(),l=Math.min(Math.max(ue.x+n,a.minX),a.maxX),o=Math.min(Math.max(ue.y+u,a.minY),a.maxY);ae.current&&requestAnimationFrame(()=>{const e="scale(".concat(K,") translate(").concat(l,"px, ").concat(o,"px)");ae.current.style.transform=e,ne({x:l,y:o})})},[W,Fe,J,X,H,ue,K,he,ce,te]),be=(0,e.useRef)(!1),ve=(0,e.useCallback)((e,t)=>{if(Q.current||W)return Y(!1),Q.current=!1,void(be.current=!0);if(e.touches.length>0)return;if(de(!1),!H)return;const n=e.changedTouches[0],u=Math.abs(n.clientX-H.x),r=Math.abs(n.clientY-H.y),a=Math.sqrt(u*u+r*r),l=Date.now()-H.time,o=Math.max(2,10/Math.max(1,K));if(l<250&&a<o){if(be.current)return be.current=!1,void q(null);e.preventDefault(),M(t)}else{se(fe.current);try{var i,s;null===(i=(s=e).preventDefault)||void 0===i||i.call(s)}catch(c){}oe.current=!0,window.setTimeout(()=>{oe.current=!1},250)}q(null)},[H,M,W]);return(0,p.jsxs)("div",{className:"gridb-container",style:{display:"flex",flexDirection:"column",alignItems:"center",width:"100%",padding:d()?"8px":"16px",boxSizing:"border-box"},children:[(0,p.jsxs)("div",{style:{display:"flex",gap:8,alignItems:"center",marginTop:d()?40:0,marginBottom:d()?8:12},children:[(0,p.jsxs)("div",{style:{display:"inline-flex",border:"1px solid #ddd",borderRadius:8,overflow:"hidden"},children:[(0,p.jsx)("button",{onClick:()=>B("stake"),disabled:b,style:{padding:d()?"6px 10px":"8px 14px",fontSize:d()?12:14,border:"none",background:"stake"===S?"#2196F3":"#f5f5f5",color:"stake"===S?"#fff":"#333",cursor:"pointer",fontWeight:700},children:"Stake"}),(0,p.jsx)("button",{onClick:()=>B("unstake"),disabled:b,style:{padding:d()?"6px 10px":"8px 14px",fontSize:d()?12:14,border:"none",background:"unstake"===S?"#ff9800":"#f5f5f5",color:"unstake"===S?"#fff":"#333",cursor:"pointer",fontWeight:700},children:"Unstake"})]}),(0,p.jsxs)("div",{style:{fontSize:d()?12:13,color:"#666"},children:["Mode: ","stake"===S?"Place/Support/Attack":"Decrease defense or remove your blocks"]})]}),(0,p.jsxs)("div",{style:{fontSize:d()?14:16,marginBottom:d()?"8px":"12px",color:O>0?"#2196f3":"#ff5722",fontWeight:O<0?"bold":600},children:["\ud83d\udcb0 Total: ",a," | \ud83c\udfd7\ufe0f Used: ",L," | Available: ",O>=0?O:"".concat(O," (NEGATIVE!)")]}),(0,p.jsx)("div",{className:"gridb-wrapper",style:{width:"100%",maxWidth:"95vw",overflowX:"auto",overflowY:"hidden",WebkitOverflowScrolling:"touch",scrollbarWidth:"none",msOverflowStyle:"none",padding:"2px",margin:"0 auto",boxSizing:"border-box",backgroundColor:"#f5f5f5",borderRadius:"4px",position:"relative"},children:(0,p.jsx)("div",{ref:ae,className:"grid-container gridb-grid",style:{display:"grid",gridTemplateColumns:"repeat(".concat(h,", ").concat(_,"px)"),gridTemplateRows:"repeat(".concat(m,", ").concat(_,"px)"),gap:"0.5px",width:"".concat(_*h+24.5,"px"),transformOrigin:"center",willChange:"transform",contain:"paint layout",touchAction:"none"},children:F.map(e=>{const t=g[e]&&"object"===typeof g[e]?g[e]:null,n=t&&t.owner===u,r=t&&t.owner&&E[t.owner]?E[t.owner]:"#f5f5f5",a=t&&t.defense>=10,l=Math.floor(e/h)<10&&e%h<10,o=d()?Math.max(4,Math.min(8,Math.floor(.3*_))):Math.max(Math.floor(.4*_),10);return(0,p.jsx)("div",{className:"grid-block".concat(n?" my-block":"").concat(l?" digzone-block":" warzone-block"),style:{backgroundColor:t&&t.owner?r:"#ffffff",border:"0.5px solid ".concat(t&&t.owner?a?"#000":"#999":"#dddddd"),background:t&&t.owner?r:"#ffffff",color:t&&t.owner?"#222":"#888",fontSize:o,lineHeight:1,overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap",display:"flex",alignItems:"center",justifyContent:"center",textAlign:"center",height:"".concat(_,"px"),width:"".concat(_,"px"),userSelect:"none",boxSizing:"border-box",cursor:b?"wait":"pointer",fontWeight:t&&t.owner?d()?700:600:400,opacity:b?.5:1,pointerEvents:b?"none":"auto",transition:d()?"none":"transform 0.1s",minWidth:d()?"8px":"auto",minHeight:d()?"8px":"auto"},title:t&&t.owner?"Block #".concat(e," - Owner: ").concat(t.owner):"Block #".concat(e),onClick:t=>{oe.current?t.preventDefault():M(e)},onTouchStart:t=>ge(t,e),onTouchMove:ye,onTouchEnd:t=>ve(t,e),children:t&&t.owner?"number"===typeof t.defense?t.defense:1:""},e)})})}),k&&null!==w&&(0,D.createPortal)((0,p.jsx)("div",{className:"block-modal-overlay","data-modal":"block-info","data-ios":j?"true":"false",onClick:()=>A(!1),style:{position:"fixed",top:"0",left:"0",bottom:"0",right:"0",zIndex:2147483647,display:"flex",justifyContent:"center",alignItems:"center",backgroundColor:"rgba(0, 0, 0, 0.7)",transform:"none",transformOrigin:"0 0",zoom:1,WebkitTransform:"none",MozTransform:"none",msTransform:"none"},children:(0,p.jsx)("div",{className:"block-modal-content","data-modal-content":"block-info","data-ios":j?"true":"false",onClick:e=>e.stopPropagation(),style:{backgroundColor:"white",padding:"20px",borderRadius:"12px",boxShadow:"0 8px 32px rgba(0, 0, 0, 0.3)",textAlign:"center",width:N(),maxWidth:N(),minWidth:N(),height:"auto",maxHeight:"400px",position:"relative",transform:"none",transformOrigin:"center center",zoom:1,fontSize:"14px",WebkitTransform:"none",MozTransform:"none",msTransform:"none",margin:"0",border:"none",outline:"none"},children:(()=>{const e=g.find(e=>e&&"object"===typeof e&&e.index===w),t=(null===e||void 0===e?void 0:e.owner)===u,n=!(null!==e&&void 0!==e&&e.owner),r=(null===e||void 0===e?void 0:e.owner)&&(null===e||void 0===e?void 0:e.owner)!==u,a=(null===e||void 0===e?void 0:e.defense)>=10,l=0===g.filter(e=>e.owner===u).length,o=g.filter(e=>!e.owner),i=l&&0===o.length;return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("h3",{style:{margin:"0 0 16px 0",color:"#333",fontSize:"20px"},children:["Block #",w]}),n?(0,p.jsx)("p",{style:{margin:"8px 0 20px 0",color:"#666",fontSize:"16px"},children:"Empty Block"}):t?(0,p.jsxs)("div",{style:{margin:"8px 0 20px 0"},children:[(0,p.jsxs)("p",{style:{margin:"0 0 8px 0",color:"#666",fontSize:"16px"},children:["Owner: You (Defense: ",(null===e||void 0===e?void 0:e.defense)||1,")"]}),a&&(0,p.jsx)("p",{style:{margin:"0",color:"#f57c00",fontSize:"14px",fontWeight:"bold"},children:"Castle: +1 auto-mining per day"})]}):(0,p.jsxs)("div",{style:{margin:"8px 0 20px 0"},children:[(0,p.jsxs)("p",{style:{margin:"0 0 8px 0",color:"#666",fontSize:"16px"},children:["Owner: ",null===e||void 0===e?void 0:e.owner," (Defense: ",(null===e||void 0===e?void 0:e.defense)||1,")"]}),a&&(0,p.jsx)("p",{style:{margin:"0 0 8px 0",color:"#f57c00",fontSize:"14px",fontWeight:"bold"},children:"Enemy Castle: Generates +1 block/day"}),i&&a&&(0,p.jsx)("p",{style:{margin:"0",color:"#f44336",fontSize:"13px",fontStyle:"italic"},children:"Castle Protection: Attack neighboring blocks first"})]}),(0,p.jsxs)("div",{style:{display:"flex",gap:"12px",justifyContent:"center",flexWrap:"wrap"},children:["stake"===S&&(0,p.jsxs)(p.Fragment,{children:[(n||r)&&(0,p.jsx)("button",{className:"block-modal-button attack-button",onClick:()=>null!==w&&I(w),disabled:b||i&&a,style:{padding:"10px 20px",border:"none",borderRadius:"6px",fontSize:"14px",fontWeight:"600",cursor:b||i&&a?"not-allowed":"pointer",backgroundColor:i&&a?"#9E9E9E":"#f44336",color:"white",minWidth:"80px",opacity:i&&a?.6:1},title:i&&a?"Cannot attack castles on first placement":"",children:b?"Processing...":i&&a?"Protected":n?"Claim":"Attack"}),t&&(0,p.jsx)("button",{className:"block-modal-button support-button",onClick:()=>null!==w&&U(w),disabled:b,style:{padding:"10px 20px",border:"none",borderRadius:"6px",fontSize:"14px",fontWeight:"600",cursor:"pointer",backgroundColor:9===(null===e||void 0===e?void 0:e.defense)?"#ff9800":"#2196F3",color:"white",minWidth:"80px"},title:9===(null===e||void 0===e?void 0:e.defense)?"Upgrade to Castle! (+1 auto-mining/day)":"Increase defense by 1",children:b?"Processing...":9===(null===e||void 0===e?void 0:e.defense)?"Castle!":"Support"})]}),"unstake"===S&&t&&(0,p.jsxs)(p.Fragment,{children:[((null===e||void 0===e?void 0:e.defense)||1)>1&&(0,p.jsx)("button",{className:"block-modal-button unstake-button",onClick:()=>null!==w&&$(w),disabled:b,style:{padding:"10px 20px",border:"none",borderRadius:"6px",fontSize:"14px",fontWeight:"600",cursor:"pointer",backgroundColor:"#ff9800",color:"white",minWidth:"80px"},title:a?"Drop castle defense by 1":"Decrease defense by 1",children:b?"Processing...":"Unstake -1"}),1===((null===e||void 0===e?void 0:e.defense)||1)&&(0,p.jsx)("button",{className:"block-modal-button remove-button",onClick:()=>null!==w&&V(w),disabled:b,style:{padding:"10px 20px",border:"none",borderRadius:"6px",fontSize:"14px",fontWeight:"600",cursor:"pointer",backgroundColor:"#e53935",color:"white",minWidth:"80px"},title:"Remove this block (full unstake)",children:b?"Processing...":"Remove"})]}),(0,p.jsx)("button",{className:"block-modal-button close-button",onClick:()=>A(!1),style:{padding:"10px 20px",border:"none",borderRadius:"6px",fontSize:"14px",fontWeight:"600",cursor:"pointer",backgroundColor:"#9E9E9E",color:"white",minWidth:"80px"},children:"Close"})]})]})})()})}),document.body)]})},ze=t=>{let{isVisible:n,onClose:u,username:r}=t;const[a,l]=(0,e.useState)(null),[o,i]=(0,e.useState)(null),[s,c]=(0,e.useState)(!1),[d,D]=(0,e.useState)(""),[h,m]=(0,e.useState)(null),[F,g]=(0,e.useState)([]),[y,b]=(0,e.useState)(0),[v,E]=(0,e.useState)(0),[C,k]=(0,e.useState)(!1),A=(0,e.useCallback)(async()=>{c(!0),m(null);try{const a=r?"/stats/volchain?username=".concat(encodeURIComponent(r)):"/stats/volchain",[o,i]=await Promise.all([f(a,{method:"GET"},1),f("/volchain/holders?limit=3",{method:"GET"},1)]),s=await o.json();Array.isArray(i);const c=await i.json().catch(()=>[]);if(Array.isArray(c)?g(c.map(e=>({name:(null===e||void 0===e?void 0:e.name)||("string"===typeof(null===e||void 0===e?void 0:e.pubkey)?e.pubkey.slice(0,8):""),balance:Number(null===e||void 0===e?void 0:e.balance)||0,color:(null===e||void 0===e?void 0:e.color)||"#e0e0e0",pubkey:(null===e||void 0===e?void 0:e.pubkey)||""}))):g([]),s.success){var e,t,n,u;l(s.grid),D("volchain"===s.source?"\ud83d\udd17 Volchain":"\ud83d\udcbe Local");const r=Number((null===s||void 0===s||null===(e=s.volchain)||void 0===e?void 0:e.totalSupply)||0);b(r);const a=Number((null===s||void 0===s||null===(t=s.volchain)||void 0===t||null===(n=t.currentUser)||void 0===n?void 0:n.balance)||0);E(a);const o=Number((null===s||void 0===s||null===(u=s.grid)||void 0===u?void 0:u.minedBlocks)||0);k(r>0&&o>=0&&r!==o)}else m("Failed to fetch stats")}catch(a){m("Network error"),console.error("Stats fetch error:",a)}finally{c(!1)}},[r,c,m,l,D,g]);return(0,e.useEffect)(()=>{n&&A()},[n,A]),(0,e.useEffect)(()=>{(async()=>{try{if(!n)return void g([]);const e=await f("/volchain/holders?limit=3",{method:"GET"},1),t=await e.json();Array.isArray(t)?g(t.map(e=>({name:(null===e||void 0===e?void 0:e.name)||("string"===typeof(null===e||void 0===e?void 0:e.pubkey)?e.pubkey.slice(0,8):"---"),balance:Number(null===e||void 0===e?void 0:e.balance)||0,color:(null===e||void 0===e?void 0:e.color)||"#e0e0e0",pubkey:(null===e||void 0===e?void 0:e.pubkey)||""}))):g([])}catch(e){g([])}})()},[n]),(0,e.useEffect)(()=>{(async()=>{try{if(!n||!r)return void i(null);const e=await fetch("/gridb"),t=await e.json(),u=Array.isArray(t)?t.filter(e=>e&&e.owner===r&&(e.defense||0)>=10).length:0;i(u)}catch(e){i(null)}})()},[n,r]),n?(0,p.jsx)("div",{className:"settings-modal",onClick:u,children:(0,p.jsxs)("div",{className:"settings-content",onClick:e=>e.stopPropagation(),children:[(0,p.jsxs)("div",{className:"modal-header stats-header",children:[(0,p.jsx)("h2",{className:"modal-title",children:"\ud83c\udfd7\ufe0f Volchain Statistics"}),(0,p.jsx)("button",{className:"modal-close-x stats-close-btn",onClick:u,children:"\xd7"})]}),(0,p.jsxs)("div",{className:"modal-body",children:[(0,p.jsxs)("div",{className:"stats-source",children:["Data Source: ",(0,p.jsx)("span",{className:d.includes("Volchain")?"source-blockchain":"source-local",children:d})]}),s&&(0,p.jsxs)("div",{className:"stats-loading",children:[(0,p.jsx)("div",{className:"spinner"}),(0,p.jsx)("p",{children:"Loading stats from blockchain..."})]}),h&&(0,p.jsxs)("div",{className:"stats-error",children:[(0,p.jsxs)("p",{children:["\u274c ",h]}),(0,p.jsx)("button",{onClick:A,className:"retry-btn",children:"Retry"})]}),a&&!s&&(0,p.jsxs)("div",{className:"stats-sections",children:[(0,p.jsxs)("div",{className:"stats-section",children:[(0,p.jsx)("h4",{className:"section-title",children:"\ud83d\udcca Volchain Information"}),(0,p.jsxs)("div",{className:"stats-row",children:[(0,p.jsxs)("div",{className:"stat-item",children:[(0,p.jsx)("span",{className:"stat-label",children:"Total Volore:"}),(0,p.jsx)("span",{className:"stat-value",children:(y||0).toLocaleString()})]}),(0,p.jsxs)("div",{className:"stat-item",children:[(0,p.jsx)("span",{className:"stat-label",children:"Mined Volore:"}),(0,p.jsx)("span",{className:"stat-value",children:(y||0).toLocaleString()})]})]}),C&&(0,p.jsx)("div",{className:"stats-note",style:{color:"#b58900"},children:"syncing\u2026"})]}),(0,p.jsx)("div",{className:"stats-section",children:(0,p.jsx)("div",{className:"top-lists-container",children:(0,p.jsxs)("div",{className:"top-list-column",children:[(0,p.jsx)("h4",{className:"section-title",children:"\ud83c\udfc5 Top Volore Holders"}),(0,p.jsx)("div",{className:"top-miners-list",children:Array.from({length:3}).map((e,t)=>{const n=F[t];return(0,p.jsxs)("div",{className:"miner-item ".concat(n?"":"placeholder"),children:[(0,p.jsx)("span",{className:"miner-rank",children:t+1}),(0,p.jsx)("div",{className:"miner-color",style:{backgroundColor:(null===n||void 0===n?void 0:n.color)||"#e0e0e0"}}),(0,p.jsx)("span",{className:"miner-name",children:(null===n||void 0===n?void 0:n.name)||"---"}),(0,p.jsx)("span",{className:"miner-blocks",children:n?"".concat(n.balance):"0"})]},t)})})]})})}),a.currentUser&&(0,p.jsxs)("div",{className:"stats-section",children:[(0,p.jsx)("h4",{className:"section-title",children:"\ud83d\udc64 Your Stats"}),(0,p.jsxs)("div",{className:"stats-row",children:[(0,p.jsxs)("div",{className:"stat-item",children:[(0,p.jsx)("span",{className:"stat-label",children:"Your Volore:"}),(0,p.jsx)("span",{className:"stat-value",children:(v||0).toLocaleString()})]}),"number"===typeof o&&(0,p.jsxs)("div",{className:"stat-item",children:[(0,p.jsx)("span",{className:"stat-label",children:"Your Castles:"}),(0,p.jsx)("span",{className:"stat-value",children:o})]}),(0,p.jsxs)("div",{className:"stat-item",children:[(0,p.jsx)("span",{className:"stat-label",children:"Remaining Mines Today:"}),(0,p.jsx)("span",{className:"stat-value highlight",children:a.currentUser.remainingMines})]})]})]})]}),(0,p.jsxs)("div",{className:"stats-footer",children:[(0,p.jsx)("button",{onClick:A,className:"refresh-btn",disabled:s,children:"\ud83d\udd04 Refresh"}),(0,p.jsx)("p",{className:"stats-note",children:"Stats are computed from Volchain snapshot"})]})]})]})}):null},Re=e=>{let{open:t,top:n=70,left:u=24,onInfo:r,onSettings:a,onVolore:l,onVolchainActivity:o,onContact:i,onLogout:s}=e;return t?D.createPortal((0,p.jsxs)("div",{className:"menu-dropdown",style:{position:"fixed",zIndex:9999,top:n,left:u,right:"auto",minWidth:160,maxWidth:"90vw",width:"auto"},children:[(0,p.jsx)("button",{onClick:r,children:"Info"}),(0,p.jsx)("button",{onClick:a,children:"Settings"}),(0,p.jsx)("button",{onClick:l,children:"Volore"}),(0,p.jsx)("button",{onClick:o,children:"Volchain Activity"}),(0,p.jsx)("button",{onClick:i,children:"Contact Us"}),(0,p.jsx)("button",{onClick:s,style:{backgroundColor:"#ff4d4f",color:"white",border:"none",borderRadius:6},children:"Logout"})]}),document.body):null},Le=e=>{try{const t=new Date(e),n=String(t.getMonth()+1).padStart(2,"0"),u=String(t.getDate()).padStart(2,"0"),r=String(t.getHours()).padStart(2,"0"),a=String(t.getMinutes()).padStart(2,"0");return"".concat(n,"-").concat(u," ").concat(r,":").concat(a)}catch(t){return String(e)}},Oe=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:6;return e&&"string"===typeof e?e.length>t?"".concat(e.slice(0,t),"\u2026"):e:""},Me=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;return e&&"string"===typeof e?e.length>t?"".concat(e.slice(0,t),"\u2026"):e:""},Ie=t=>{let{autoRefreshMs:n}=t;const[u,r]=(0,e.useState)([]),[a,l]=(0,e.useState)(!1),[o,i]=(0,e.useState)(null),[s,c]=(0,e.useState)(null),d=(0,e.useRef)(""),D=(0,e.useCallback)(e=>{try{return JSON.stringify(e.slice(0,50).map(e=>({t:e.ts,y:e.type,a:e.amount,f:e.from,o:e.to})))}catch(t){return String(Date.now())}},[]),h=(0,e.useCallback)(async e=>{try{!(null===e||void 0===e||!e.silent)||(l(!0),i(null));const t=await f("/volchain/events?limit=200&_ts=".concat(Date.now()),{method:"GET"},1);if(!t.ok)throw new Error("Failed to load events");const n=await t.json(),u=Array.isArray(null===n||void 0===n?void 0:n.events)?n.events:Array.isArray(n)?n:[];"number"===typeof(null===n||void 0===n?void 0:n.nextCursor)&&c(n.nextCursor);const a=D(u);a!==d.current&&(d.current=a,r(u))}catch(t){null!==e&&void 0!==e&&e.silent||i((null===t||void 0===t?void 0:t.message)||"Failed to load events")}finally{null!==e&&void 0!==e&&e.silent||l(!1)}},[D]);(0,e.useEffect)(()=>{h()},[h]);const m=(0,e.useCallback)(async()=>{if(null!==s)try{const e=await f("/volchain/events?limit=200&cursor=".concat(s,"&_ts=").concat(Date.now()),{method:"GET"},1);if(!e.ok)return;const t=await e.json(),n=Array.isArray(null===t||void 0===t?void 0:t.events)?t.events:[];"number"===typeof(null===t||void 0===t?void 0:t.nextCursor)?c(t.nextCursor):c(null),n.length>0&&r(e=>[...e,...n])}catch(e){}},[s]);return(0,e.useEffect)(()=>{if(!n||n<=0)return;const e=setInterval(()=>h({silent:!0}),n);return()=>clearInterval(e)},[n,h]),(0,p.jsxs)("div",{style:{overflowX:"hidden"},children:[(0,p.jsxs)("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"},children:[(0,p.jsx)("strong",{children:"Recent (max 1000)"}),!n&&(0,p.jsx)("button",{className:"settings-button",onClick:()=>h(),disabled:a,children:"Refresh"})]}),a&&0===u.length&&(0,p.jsx)("p",{children:"Loading events\u2026"}),o&&(0,p.jsxs)("p",{style:{color:"#c00"},children:["\u274c ",o]}),(0,p.jsxs)("div",{style:{maxHeight:260,minHeight:260,overflowY:"auto",overflowX:"hidden",marginTop:6,border:"1px solid #eee",borderRadius:6,padding:6},children:[0===u.length&&!a&&(0,p.jsx)("p",{children:"No events yet."}),u.map((e,t)=>{const n=(0,p.jsx)("span",{style:{color:"#666",width:80,flex:"0 0 auto"},children:Le(e.ts)}),u=e.type.toUpperCase(),r=(0,p.jsx)("span",{style:{color:"#333",width:58,flex:"0 0 auto"},children:u});let a="";if("mint"===e.type){const t=Me(e.username)||Me(e.toUser)||Oe(e.pubkey);a=(String(e.reason).toLowerCase(),"+".concat(e.amount," to ").concat(t))}else if("burn"===e.type)a="-".concat(e.amount," from ").concat(Me(e.username)||Oe(e.pubkey));else if("transfer"===e.type){const t=Me(e.fromUser)||Oe(e.from),n=Me(e.toUser)||Oe(e.to);a="".concat(e.amount," ").concat(t,"\u2192").concat(n)}else if("attack"===e.type){const t=Me(e.fromUser)||Oe(e.from),n=Me(e.toUser)||Oe(e.to);a="".concat(t,"\u2192").concat(n)}else if("stake"===e.type){const t="number"===typeof e.amount?e.amount:1,n=Me(e.username)||Oe(e.pubkey);a="+".concat(t," \u2014 Used +").concat(t," / Avail -").concat(t," \u2014 ").concat(n)}else if("unstake"===e.type){const t="number"===typeof e.amount?e.amount:1,n=Me(e.username)||Oe(e.pubkey);a="+".concat(t," \u2014 Used -").concat(t," / Avail +").concat(t," \u2014 ").concat(n)}return(0,p.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:6,fontSize:12,padding:"4px 4px",borderBottom:"1px dashed #eee",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},children:[n,r,(0,p.jsx)("span",{style:{flex:"1 1 auto",minWidth:0,overflow:"hidden",textOverflow:"ellipsis"},children:a})]},t)})]}),null!==s&&(0,p.jsx)("div",{style:{display:"flex",justifyContent:"center",marginTop:6},children:(0,p.jsx)("button",{className:"settings-button",onClick:m,style:{fontSize:12,padding:"6px 10px"},children:"Load more"})})]})};var Ue=n(504),$e=n.n(Ue);function Ve(e){let t=e+48;return t+=9-e>>>8&7,String.fromCharCode(t)}function He(e){let t=e+48;return t+=9-e>>>8&39,String.fromCharCode(t)}const qe=256;function We(e){let t=qe;return t+=(47-e&e-58)>>8&-256+e-48,t+=(64-e&e-71)>>8&-256+e-65+10,t+=(96-e&e-103)>>8&-256+e-97+10,t}function Ye(e){const t=arguments.length>1&&void 0!==arguments[1]&&arguments[1]?He:Ve;let n="";for(let u=0;u<e.length;u++)n+=t(e[u]>>>4),n+=t(15&e[u]);return n}function Qe(e){if(0===e.length)return new Uint8Array(0);if(e.length%2!==0)throw new Error("hex: input string must be divisible by two");const t=new Uint8Array(e.length/2);let n=0;for(let u=0;u<e.length;u+=2){let r=We(e.charCodeAt(u)),a=We(e.charCodeAt(u+1));t[u/2]=r<<4|a,n|=r&qe,n|=a&qe}if(0!==n)throw new Error("hex: incorrect characters for decoding");return t}const Ke=t=>{let{username:n}=t;const[u,r]=(0,e.useState)(!1),[a,l]=(0,e.useState)(null),[o,i]=(0,e.useState)(0),[s,c]=(0,e.useState)(0),[d,D]=(0,e.useState)(0),[h,m]=(0,e.useState)(""),[F,g]=(0,e.useState)([]),[y,b]=(0,e.useState)(""),[v,E]=(0,e.useState)(0),[C,k]=(0,e.useState)(null),[A,w]=(0,e.useState)(!1),[x,S]=(0,e.useState)(!1);(0,e.useEffect)(()=>{(async()=>{try{var e,t;r(!0),l(null);const d=await fetch("/stats/volchain?username=".concat(encodeURIComponent(n||""))),f=await d.json();null!==f&&void 0!==f&&null!==(e=f.volchain)&&void 0!==e&&null!==(t=e.currentUser)&&void 0!==t&&t.pubkey&&m(f.volchain.currentUser.pubkey);const p=await fetch("/gridb"),h=await p.json(),F=Array.isArray(h)?h.filter(e=>e&&e.owner===n).reduce((e,t)=>e+("number"===typeof t.defense?t.defense:1),0):0;c(F);try{const e=await fetch("/grid"),t=await e.json(),u=Array.isArray(t)?t.filter(e=>e&&e.dugBy===n).length:0;i(u),D(u-F)}catch(u){}try{const e=await fetch("/volchain/holders?limit=3"),t=await e.json();Array.isArray(t)&&(window.__topHoldersCache=t.map(e=>({name:e.name||("string"===typeof e.pubkey?e.pubkey.slice(0,8):"-"),color:e.color||"#888",balance:e.balance||0,pubkey:e.pubkey||""})))}catch(a){}try{const e=await fetch("/volchain/holders?limit=3"),t=await e.json();if(Array.isArray(t)){const e=t.map(e=>({name:e.name||("string"===typeof e.pubkey?e.pubkey.slice(0,8):"-"),color:e.color||"#888",balance:e.balance||0,pubkey:e.pubkey||""}));g(e);try{window.__topHoldersCache=e}catch(o){}}}catch(s){}}catch(d){l((null===d||void 0===d?void 0:d.message)||"Failed to load Volore stats")}finally{r(!1)}})()},[n]);const B="undefined"!==typeof window&&localStorage.getItem("session_token")||"",N=(0,e.useMemo)(()=>d>0&&/^([0-9a-fA-F]{64})$/.test(y)&&v>0&&v<=d&&!!B,[d,y,v,B]),T=(0,e.useMemo)(()=>B?d<=0?"No Available Volore to send":h&&y&&y.toLowerCase()===h.toLowerCase()?"You cannot send Volore to yourself":/^([0-9a-fA-F]{64})$/.test(y)?!v||v<=0?"Amount must be greater than 0":v>d?"Amount exceeds Available Volore":"":"Invalid destination address (must be 64 hex)":"Please log in to send Volore",[B,d,y,v,h]),P=(y.length>0||"number"===typeof v&&v>0)&&!!T&&!N;return(0,p.jsxs)("div",{children:[u&&(0,p.jsx)("p",{children:"Loading Volore\u2026"}),a&&(0,p.jsxs)("p",{style:{color:"#c00"},children:["\u274c ",a]}),(0,p.jsxs)("div",{className:"stats-section",children:[(0,p.jsx)("h4",{className:"section-title",children:"\ud83d\udcca Volore Balances"}),(0,p.jsxs)("div",{className:"stats-row",children:[(0,p.jsxs)("div",{className:"stat-item",children:[(0,p.jsx)("span",{className:"stat-label",children:"Total Volore:"}),(0,p.jsx)("span",{className:"stat-value",children:o.toLocaleString()})]}),(0,p.jsxs)("div",{className:"stat-item",children:[(0,p.jsx)("span",{className:"stat-label",children:"Used Volore (Warzone):"}),(0,p.jsx)("span",{className:"stat-value",children:s.toLocaleString()})]}),(0,p.jsxs)("div",{className:"stat-item",children:[(0,p.jsx)("span",{className:"stat-label",children:"Available Volore:"}),(0,p.jsx)("span",{className:"stat-value highlight",children:d.toLocaleString()})]})]})]}),(0,p.jsxs)("div",{className:"stats-section",children:[(0,p.jsx)("h4",{className:"section-title",children:"\ud83d\udd17 Your Volchain Address"}),(0,p.jsx)("div",{className:"tech-info",children:(0,p.jsxs)("div",{className:"tech-item",children:[(0,p.jsx)("span",{className:"tech-label",children:"Address:"}),(0,p.jsx)("span",{className:"tech-value tech-address",children:h?"".concat(h.slice(0,8),"...").concat(h.slice(-8)):"-"}),(0,p.jsx)("button",{type:"button",onClick:async()=>{try{if(!h)return;await navigator.clipboard.writeText(h),w(!0),setTimeout(()=>w(!1),1500)}catch(e){}},title:"Copy address","aria-label":"Copy address",style:{marginLeft:8,padding:"2px 6px",borderRadius:4,border:"1px solid #ccc",background:"#f7f7f7",cursor:"pointer"},children:"\u29c9"}),A&&(0,p.jsx)("span",{style:{marginLeft:6,fontSize:12,color:"#4CAF50"},children:"Copied"})]})})]}),(0,p.jsxs)("div",{className:"stats-section",children:[(0,p.jsx)("h4",{className:"section-title",children:"\ud83d\udce4 Send Volore"}),(0,p.jsxs)("div",{className:"stats-row",style:{gap:12,flexWrap:"wrap"},children:[(0,p.jsx)("input",{placeholder:"Receiver Volchain address (64-hex)",value:y,onChange:e=>b(e.target.value.trim()),style:{flex:"1 1 320px",padding:8}}),(0,p.jsx)("input",{type:"number",placeholder:"Amount (max ".concat(d,")"),value:v||"",min:1,max:d,onChange:e=>E(Number(e.target.value)),style:{width:160,padding:8}}),(0,p.jsx)("button",{className:"settings-button",disabled:!N,onClick:()=>{k(null),l(null),N?S(!0):T&&l(T)},children:"Send"})]}),P&&!a&&(0,p.jsxs)("p",{style:{color:"#c00"},children:["\u2757 ",T]}),C&&(0,p.jsx)("p",{children:C})]}),x&&(0,p.jsx)("div",{style:{position:"fixed",inset:0,background:"rgba(0,0,0,0.35)",display:"flex",alignItems:"center",justifyContent:"center",zIndex:1e3},children:(0,p.jsxs)("div",{style:{background:"#fff",padding:20,borderRadius:8,maxWidth:420,width:"90%",boxShadow:"0 6px 24px rgba(0,0,0,0.2)"},children:[(0,p.jsx)("h4",{style:{marginTop:0,marginBottom:12},children:"Confirm Transfer"}),(0,p.jsxs)("p",{style:{marginTop:0},children:["Do you really want to send ",(0,p.jsx)("strong",{children:v})," Volore to",(0,p.jsx)("br",{}),(0,p.jsxs)("span",{style:{fontFamily:"monospace"},children:[y.slice(0,12),"\u2026",y.slice(-12)]}),"?"]}),(0,p.jsxs)("div",{style:{display:"flex",gap:12,justifyContent:"flex-end"},children:[(0,p.jsx)("button",{className:"settings-button",onClick:()=>S(!1),style:{background:"#e0e0e0",color:"#333"},children:"Cancel"}),(0,p.jsx)("button",{className:"settings-button",onClick:async()=>{try{var e;if(k(null),l(null),!N)return void(T&&l(T));S(!1);const t=await f("/volchain/transfer",{method:"POST",headers:{"Content-Type":"application/json"},body:{toPubkey:y,amount:v}},1),n=await t.json();if(!t.ok||null!==n&&void 0!==n&&n.error)return void l((null===n||void 0===n?void 0:n.error)||"Transfer failed");k("\u2705 Sent ".concat(v," Volore to ").concat(y.slice(0,8),"\u2026")),i(e=>Math.max(0,("number"===typeof e?e:0)-v)),D(null!==(e=n.availableAfter)&&void 0!==e?e:Math.max(0,d-v)),b(""),E(0)}catch(t){l((null===t||void 0===t?void 0:t.message)||"Transfer failed")}},style:{background:"#4CAF50",color:"#fff"},children:"Send"})]})]})}),(0,p.jsxs)("div",{className:"stats-section",children:[(0,p.jsx)("h4",{className:"section-title",children:"\ud83c\udfc5 Top Volore Holders"}),(0,p.jsx)("div",{className:"top-miners-list",children:F.map((e,t)=>(0,p.jsxs)("div",{className:"miner-item",children:[(0,p.jsx)("span",{className:"miner-rank",children:t+1}),(0,p.jsx)("div",{className:"miner-color",style:{backgroundColor:e.color||"#e0e0e0"}}),(0,p.jsx)("span",{className:"miner-name",children:e.name}),(0,p.jsx)("span",{className:"miner-blocks",children:e.balance})]},e.pubkey+t))})]})]})};function Ge(e){return Array.from(e).map(e=>e.toString(16).padStart(2,"0")).join("")}function Xe(e){const t=new Uint8Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=parseInt(e.slice(n,n+2),16);return t}async function Ze(e,t){const n=new TextEncoder,u=await crypto.subtle.importKey("raw",n.encode(e),{name:"PBKDF2"},!1,["deriveKey"]);return crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},u,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}async function Je(e,t){const n=crypto.getRandomValues(new Uint8Array(12)),u=crypto.getRandomValues(new Uint8Array(16)),r=await Ze(t,u),a=new Uint8Array(await crypto.subtle.encrypt({name:"AES-GCM",iv:n},r,(new TextEncoder).encode(e)));return JSON.stringify({kdf:"pbkdf2-sha256",c:"aes-256-gcm",iv:Ge(n),salt:Ge(u),ct:Ge(a)})}async function et(e,t){const n=JSON.parse(e),u=await Ze(t,Xe(n.salt)),r=await crypto.subtle.decrypt({name:"AES-GCM",iv:Xe(n.iv)},u,Xe(n.ct));return(new TextDecoder).decode(r)}function tt(){const e=$e().sign.keyPair(),t=Ye(e.publicKey),n=Ye(e.secretKey);return localStorage.setItem("user_pubkey",t),localStorage.setItem("user_privkey",n),{pubHex:t,privHex:n}}const nt=()=>{const[t,n]=(0,e.useState)(null),[u,r]=(0,e.useState)(null),[a,l]=(0,e.useState)(!1),[o,i]=(0,e.useState)(!1),[s,c]=(0,e.useState)(!1),[d,D]=(0,e.useState)(!1),[h,m]=(0,e.useState)(!1),[g,b]=(0,e.useState)(!1),[v,E]=(0,e.useState)(!1),[C,k]=(0,e.useState)(0),[A,w]=(0,e.useState)(!1),[x,S]=(0,e.useState)(""),[B,N]=(0,e.useState)([]),[T,P]=(0,e.useState)(""),[j,_]=(0,e.useState)(""),[z,R]=(0,e.useState)(""),[L,O]=(0,e.useState)(""),[M,I]=(0,e.useState)(u),[U,$]=(0,e.useState)(""),[V,H]=(0,e.useState)(""),[q,W]=(0,e.useState)(""),[Y,Q]=(0,e.useState)("");(0,e.useEffect)(()=>{try{const e=!!localStorage.getItem("user_pubkey"),t=!!localStorage.getItem("user_privkey");e&&t||tt()}catch(e){}},[]),(0,e.useEffect)(()=>{try{f("/chain/info",{method:"GET"},1).catch(()=>{})}catch(e){}},[]),(0,e.useEffect)(()=>{const e=localStorage.getItem("username");if(e){n(e);const t=localStorage.getItem("color_".concat(e));t&&r(t)}},[]),(0,e.useEffect)(()=>{if(t){const n=localStorage.getItem("session_token");n&&f("/auth/keystore",{method:"GET",headers:{"X-Session-Token":n}},1).then(e=>e.json()).then(async e=>{const t=null===e||void 0===e?void 0:e.powKeystore,u=null===e||void 0===e?void 0:e.powPubkey;u&&S(u);const r=localStorage.getItem("user_pubkey"),a=localStorage.getItem("user_privkey");if(t&&(!r||!a)){const e=sessionStorage.getItem("login_password")||"";if(e)try{const n=await et(t,e),r=Qe(n),a=Ye($e().sign.keyPair.fromSecretKey(Uint8Array.from(r)).publicKey);u&&u!==a?(localStorage.setItem("user_pubkey",u),localStorage.setItem("user_privkey",n),console.warn("Local wallet mismatched; adopted server wallet.")):(localStorage.setItem("user_pubkey",a),localStorage.setItem("user_privkey",n),console.log("Wallet restored on this device."))}catch(o){console.warn("Failed to decrypt wallet with login password.")}}if(t&&u&&r&&a&&r!==u)try{const e=sessionStorage.getItem("login_password")||"";if(e){const n=await et(t,e),r=Qe(n);Ye($e().sign.keyPair.fromSecretKey(Uint8Array.from(r)).publicKey)===u&&(localStorage.setItem("user_pubkey",u),localStorage.setItem("user_privkey",n),console.warn("Local wallet updated to match server."))}}catch(i){}if(!t){let e=localStorage.getItem("user_pubkey"),t=localStorage.getItem("user_privkey");if(!e||!t){const u=tt();e=u.pubHex,t=u.privHex;try{await f("/auth/associate-pow-key",{method:"POST",headers:{"Content-Type":"application/json","X-Session-Token":n},body:{powPubkey:e}},1)}catch(s){}}const u=sessionStorage.getItem("login_password")||"";if(u)try{const r=await Je(t,u);await f("/auth/save-keystore",{method:"POST",headers:{"Content-Type":"application/json","X-Session-Token":n},body:{powKeystore:r,powPubkey:e}},1)}catch(c){}}const l=e=>!!e&&(/^0{64}$/.test(e)||/^([0-9a-fA-F]{16})\1\1\1$/.test(e));if((!u||!/^[0-9a-fA-F]{64}$/.test(u)||l(u))&&r&&/^[0-9a-fA-F]{64}$/.test(r))try{await f("/auth/associate-pow-key",{method:"POST",headers:{"Content-Type":"application/json","X-Session-Token":n},body:{powPubkey:r}},1),S(r)}catch(d){}if((!u||l(u)||!/^[0-9a-fA-F]{64}$/.test(u))&&(!r||l(r)||!/^[0-9a-fA-F]{64}$/.test(r)))try{const e=tt();await f("/auth/associate-pow-key",{method:"POST",headers:{"Content-Type":"application/json","X-Session-Token":n},body:{powPubkey:e.pubHex}},1),S(e.pubHex);const t=sessionStorage.getItem("login_password")||"";if(t){const u=await Je(e.privHex,t);await f("/auth/save-keystore",{method:"POST",headers:{"Content-Type":"application/json","X-Session-Token":n},body:{powKeystore:u,powPubkey:e.pubHex}},1)}}catch(D){}}).catch(()=>{}),f("/auth/user?username=".concat(t),{method:"GET"},1).catch(()=>{});try{sessionStorage.removeItem("login_password")}catch(e){}}},[t]),(0,e.useEffect)(()=>{a&&t&&(f("/auth/user?username=".concat(t),{method:"GET"},1).then(e=>e.json()).then(e=>{P(e.email),I(e.color)}),f("/stats/volchain?username=".concat(encodeURIComponent(t)),{method:"GET"},1).then(e=>e.json()).then(e=>{var t,n;const u=(null===e||void 0===e||null===(t=e.volchain)||void 0===t||null===(n=t.currentUser)||void 0===n?void 0:n.pubkey)||"";/^[0-9a-fA-F]{64}$/.test(u)&&S(u)}).catch(()=>{}))},[a,t]);const K=()=>{t&&(localStorage.removeItem("username"),localStorage.removeItem("color_".concat(t)),n(null),r(null),l(!1),i(!1),c(!1),D(!1),m(!1))};return(0,p.jsxs)("div",{className:"app-container",children:[(0,p.jsx)("div",{className:"fixed-header-bg"}),(0,p.jsxs)("header",{className:"top-bar",children:[t&&u&&(0,p.jsx)("div",{className:"button-container",children:(0,p.jsx)("button",{className:"menu-button",onClick:()=>D(!d),"aria-label":"Toggle Menu",children:"\u2630"})}),(0,p.jsx)("h1",{className:"title",children:"\u26cf BlockMiningGame"}),t&&u&&(0,p.jsxs)("div",{className:"welcome-header",children:["Welcome ",t]})]}),(0,p.jsx)(Re,{open:d,onInfo:()=>{i(!0),D(!1)},onSettings:()=>{l(!0),D(!1)},onVolore:()=>{E(!0),D(!1)},onVolchainActivity:()=>{w(!0),D(!1)},onContact:()=>{c(!0),D(!1)},onLogout:()=>{K(),D(!1)}}),(0,p.jsx)("div",{className:"header-overlay"}),(0,p.jsxs)("div",{className:"scrollable-content",children:[(0,p.jsxs)("div",{className:"content-container",children:[(0,p.jsx)("div",{className:"banner-placeholder",children:(0,p.jsx)("div",{className:"banner-content",children:(0,p.jsx)("img",{src:"/ads/banner.jpg",alt:"Advertisement",className:"banner-image",onError:e=>{e.currentTarget.style.display="none",e.currentTarget.parentElement&&(e.currentTarget.parentElement.innerHTML="Ad Banner (728x90)")}})})}),t&&u&&!o&&(0,p.jsx)(p.Fragment,{children:(0,p.jsxs)("div",{className:"button-group",children:[(0,p.jsx)("button",{onClick:()=>m(!h),className:"action-button my-blocks-button","aria-label":h?"Digzone":"Warzone",children:h?"Digzone":"Warzone"}),(0,p.jsx)("button",{onClick:()=>b(!0),className:"action-button blockchain-stats-button","aria-label":"Volchain Stats",style:{background:"linear-gradient(135deg, #4CAF50 0%, #45a049 100%)",color:"white",border:"none",fontWeight:"bold"},children:"\ud83d\udd17 Volchain Stats"})]})}),t&&u?o?(0,p.jsx)(Pe,{setShowAbout:i}):h?(0,p.jsx)(_e,{totalBlocks:B.length,username:t,userColor:u,tokenBalance:C,setTokenBalance:k,setBlockData:N}):(0,p.jsx)(F,{username:t,userColor:u,showSettings:a,setShowSettings:l,handleLogout:K,setUsername:n,tokenBalance:C,setTokenBalance:k,blockData:B,setBlockData:N}):(0,p.jsx)(y,{onLogin:(e,t)=>{localStorage.setItem("username",e),localStorage.setItem("color_".concat(e),t),n(e),r(t)}})]}),a&&(0,p.jsx)("div",{className:"settings-modal",children:(0,p.jsxs)("div",{className:"settings-content",children:[(0,p.jsxs)("div",{className:"modal-header",children:[(0,p.jsx)("h3",{className:"modal-title",children:"\u2699\ufe0f Settings"}),(0,p.jsx)("button",{className:"modal-close-x",onClick:()=>l(!1),"aria-label":"Close",children:"\xd7"})]}),(0,p.jsxs)("div",{className:"modal-body",children:[(0,p.jsxs)("p",{children:[(0,p.jsx)("strong",{children:"Email:"})," ",T]}),(0,p.jsxs)("p",{children:[(0,p.jsx)("strong",{children:"Username:"})," ",t]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Color Selection:"}),(0,p.jsx)("div",{className:"color-picker",children:["#FFCDD2","#F8BBD0","#E1BEE7","#D1C4E9","#C5CAE9","#BBDEFB","#B2EBF2","#C8E6C9","#DCEDC8","#FFF9C4","#FFE0B2","#FFCCBC","#D7CCC8","#26A69A","#CFD8DC","#F44336","#E91E63","#9C27B0","#673AB7","#3F51B5","#2196F3","#03A9F4","#00BCD4","#009688","#4CAF50","#8BC34A","#CDDC39","#FFEB3B","#FFC107","#FF9800","#FF5722","#795548","#607D8B"].map(e=>(0,p.jsx)("div",{onClick:()=>I(e),style:{width:"40px",height:"40px",backgroundColor:e,border:M===e?"3px solid black":"1px solid #888",cursor:"pointer",borderRadius:"4px",display:"inline-block",marginRight:"4px"},title:e},e))}),(0,p.jsx)("button",{className:"settings-button",onClick:async()=>{if(M)try{const e=await fetch("/auth/update-color",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:t,color:M})}),n=await e.json();if(!e.ok)return void alert((null===n||void 0===n?void 0:n.error)||"Color update failed");alert("Color updated successfully"),window.location.reload()}catch(e){alert("Color update error: "+e.message)}else alert("Please select a color")},children:"Update Color"})]}),(0,p.jsxs)("form",{onSubmit:async e=>{if(e.preventDefault(),z===L)if(z.length<8)alert("New password must be at least 8 characters");else try{const u=await fetch("/auth/change-password",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:t,currentPassword:j,newPassword:z})}),r=await u.json();if(!u.ok)return void alert(r.error||"Password change failed");try{const t=localStorage.getItem("session_token");if(t){let u=localStorage.getItem("user_pubkey")||"",r=localStorage.getItem("user_privkey")||"";if(!r){const e=await fetch("/auth/keystore",{headers:{"X-Session-Token":t}}),a=await e.json(),l=null===a||void 0===a?void 0:a.powKeystore,o=null===a||void 0===a?void 0:a.powPubkey;if(l)try{r=await et(l,j);const e=Qe(r),t=Ye($e().sign.keyPair.fromSecretKey(Uint8Array.from(e)).publicKey);u||(u=t),o&&o!==t||(localStorage.setItem("user_pubkey",t),localStorage.setItem("user_privkey",r))}catch(n){console.warn("Keystore decrypt with old password failed; skipping re-encrypt")}}if(r&&u)try{const e=await Je(r,z);await fetch("/auth/save-keystore",{method:"POST",headers:{"Content-Type":"application/json","X-Session-Token":t},body:JSON.stringify({powKeystore:e,powPubkey:u})})}catch(e){console.warn("Failed to save re-encrypted keystore:",e)}}}catch(e){console.warn("Post-change keystore update failed:",e)}alert("Password changed successfully"),_(""),R(""),O("")}catch(u){alert("Password change error: "+u.message)}else alert("New passwords do not match")},children:[(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Current Password:"}),(0,p.jsx)("input",{className:"settings-input",type:"password",value:j,onChange:e=>_(e.target.value),required:!0})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"New Password:"}),(0,p.jsx)("input",{className:"settings-input",type:"password",value:z,onChange:e=>R(e.target.value),required:!0})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Confirm New Password:"}),(0,p.jsx)("input",{className:"settings-input",type:"password",value:L,onChange:e=>O(e.target.value),required:!0})]}),(0,p.jsx)("button",{className:"settings-button",type:"submit",children:"Change Password"})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"New Username:"}),(0,p.jsx)("input",{className:"settings-input",type:"text",value:U,onChange:e=>$(e.target.value),placeholder:"Enter new username"}),(0,p.jsx)("button",{className:"settings-button",onClick:async()=>{if(!U||U.length<3)alert("New username must be at least 3 characters");else try{const e=await fetch("/api/update-username",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({currentUsername:t,newUsername:U})});if(!e.ok){const t=await e.text();return console.error("Username update failed, response:",t),void alert("Username update failed: "+t)}await e.json(),localStorage.removeItem("username"),localStorage.removeItem("color_".concat(t)),localStorage.removeItem("session_token"),n(null),r(null),l(!1),i(!1),c(!1),D(!1),m(!1),$(""),alert("Username updated successfully! Please log in again with your new username."),window.location.reload()}catch(e){console.error("Username update error:",e),alert("Username update error: ".concat(e.message))}},children:"Update Username"})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Volchain Address (Server):"}),(0,p.jsx)("input",{className:"settings-input",type:"text",value:x||localStorage.getItem("user_pubkey")||"",readOnly:!0,placeholder:"Your Volchain address will appear here"}),(0,p.jsx)("button",{type:"button",className:"settings-button",style:{marginTop:8},onClick:async()=>{const e=x||localStorage.getItem("user_pubkey")||"";if(e)try{await navigator.clipboard.writeText(e),alert("Address copied")}catch(t){}},"aria-label":"Copy Volchain address",title:"Copy Volchain address",children:"\u29c9 Copy"})]})]})]})})]}),!1,s&&(0,p.jsx)("div",{className:"settings-modal",children:(0,p.jsxs)("div",{className:"settings-content",children:[(0,p.jsxs)("div",{className:"modal-header",children:[(0,p.jsx)("h3",{className:"modal-title",children:"\ud83d\udce7 Contact Us"}),(0,p.jsx)("button",{className:"modal-close-x",onClick:()=>c(!1),"aria-label":"Close",children:"\xd7"})]}),(0,p.jsxs)("div",{className:"modal-body",children:[(0,p.jsx)("p",{style:{marginBottom:"16px",color:"#666"},children:"Have a question, suggestion, or found a bug? We'd love to hear from you!"}),(0,p.jsxs)("form",{onSubmit:async e=>{if(e.preventDefault(),V&&q&&Y)try{const e=localStorage.getItem("session_token");if(!e)return void alert("Please log in again to send a message.");const n=await fetch("/api/contact",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)},body:JSON.stringify({name:V,email:q,message:Y,username:t})}),u=await n.json();if(!n.ok)return void alert(u.error||"Failed to send message");alert("Your message has been sent successfully! We'll get back to you soon."),H(""),W(""),Q(""),c(!1)}catch(n){alert("Error sending message: "+n.message)}else alert("Please fill in all fields")},children:[(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Your Name:"}),(0,p.jsx)("input",{type:"text",value:V,onChange:e=>H(e.target.value),placeholder:"Enter your name",className:"form-input",required:!0,title:"Please enter your name",onInvalid:e=>e.currentTarget.setCustomValidity("Please enter your name"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Email Address:"}),(0,p.jsx)("input",{type:"email",value:q,onChange:e=>W(e.target.value),placeholder:"Enter your email",className:"form-input",required:!0,title:"Please enter a valid email address",onInvalid:e=>e.currentTarget.setCustomValidity("Please enter a valid email address"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("label",{children:"Message:"}),(0,p.jsx)("textarea",{value:Y,onChange:e=>Q(e.target.value),placeholder:"Tell us about your issue, suggestion, or feedback...",className:"form-textarea",rows:6,required:!0,title:"Please enter your message",onInvalid:e=>e.currentTarget.setCustomValidity("Please enter your message"),onInput:e=>e.currentTarget.setCustomValidity("")})]}),(0,p.jsxs)("div",{className:"form-group",children:[(0,p.jsx)("button",{type:"submit",className:"settings-button",children:"Send Message"}),(0,p.jsx)("button",{type:"button",className:"settings-button cancel-button",onClick:()=>c(!1),children:"Cancel"})]})]})]})]})}),(0,p.jsx)(ze,{isVisible:g,onClose:()=>b(!1),username:t}),v&&(0,p.jsx)("div",{className:"settings-modal",onClick:()=>E(!1),children:(0,p.jsxs)("div",{className:"settings-content",onClick:e=>e.stopPropagation(),children:[(0,p.jsxs)("div",{className:"modal-header",children:[(0,p.jsx)("h3",{className:"modal-title",children:"\ud83d\udcb0 Volore"}),(0,p.jsx)("button",{className:"modal-close-x",onClick:()=>E(!1),"aria-label":"Close",children:"\xd7"})]}),(0,p.jsx)("div",{className:"modal-body",children:(0,p.jsx)(Ke,{username:t})})]})}),A&&(0,p.jsx)("div",{className:"settings-modal",onClick:()=>w(!1),children:(0,p.jsxs)("div",{className:"settings-content",onClick:e=>e.stopPropagation(),children:[(0,p.jsxs)("div",{className:"modal-header",children:[(0,p.jsx)("h3",{className:"modal-title",children:"\ud83e\uddfe Volchain Activity"}),(0,p.jsx)("button",{className:"modal-close-x",onClick:()=>w(!1),"aria-label":"Close",children:"\xd7"})]}),(0,p.jsx)("div",{className:"modal-body",children:(0,p.jsx)(Ie,{autoRefreshMs:3e4})})]})})]})};t.createRoot(document.getElementById("root")).render((0,p.jsx)(e.StrictMode,{children:(0,p.jsx)(nt,{})}))})()})();
./frontend/build/static/js/main.a97db605.js.map:1:{"version":3,"file":"static/js/main.a97db605.js","mappings":"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","sources":["../node_modules/react-dom/cjs/react-dom-client.production.js","../node_modules/react/index.js","../node_modules/react/cjs/react.production.js","../node_modules/react-dom/client.js","../node_modules/tweetnacl/nacl-fast.js","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.js","../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/request.ts","Grid.tsx","Login.tsx","../node_modules/marked/src/defaults.ts","../node_modules/marked/src/rules.ts","../node_modules/marked/src/helpers.ts","../node_modules/marked/src/Tokenizer.ts","../node_modules/marked/src/Lexer.ts","../node_modules/marked/src/Renderer.ts","../node_modules/marked/src/TextRenderer.ts","../node_modules/marked/src/Parser.ts","../node_modules/marked/src/Hooks.ts","../node_modules/marked/src/marked.ts","../node_modules/marked/src/Instance.ts","About.tsx","GridB.tsx","BlockchainStats.tsx","components/MenuDropdownPortal.tsx","components/VolchainActivity.tsx","../node_modules/@stablelib/hex/hex.ts","components/VolorePanel.tsx","App.tsx","index.tsx"],"sourcesContent":["/**\n * @license React\n * react-dom-client.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\"use strict\";\nvar Scheduler = require(\"scheduler\"),\n  React = require(\"react\"),\n  ReactDOM = require(\"react-dom\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction isValidContainer(node) {\n  return !(\n    !node ||\n    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n  );\n}\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber,\n    nearestMounted = fiber;\n  if (fiber.alternate) for (; node.return; ) node = node.return;\n  else {\n    fiber = node;\n    do\n      (node = fiber),\n        0 !== (node.flags & 4098) && (nearestMounted = node.return),\n        (fiber = node.return);\n    while (fiber);\n  }\n  return 3 === node.tag ? nearestMounted : null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (13 === fiber.tag) {\n    var suspenseState = fiber.memoizedState;\n    null === suspenseState &&\n      ((fiber = fiber.alternate),\n      null !== fiber && (suspenseState = fiber.memoizedState));\n    if (null !== suspenseState) return suspenseState.dehydrated;\n  }\n  return null;\n}\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber)\n    throw Error(formatProdErrorMessage(188));\n}\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    alternate = getNearestMountedFiber(fiber);\n    if (null === alternate) throw Error(formatProdErrorMessage(188));\n    return alternate !== fiber ? null : fiber;\n  }\n  for (var a = fiber, b = alternate; ; ) {\n    var parentA = a.return;\n    if (null === parentA) break;\n    var parentB = parentA.alternate;\n    if (null === parentB) {\n      b = parentA.return;\n      if (null !== b) {\n        a = b;\n        continue;\n      }\n      break;\n    }\n    if (parentA.child === parentB.child) {\n      for (parentB = parentA.child; parentB; ) {\n        if (parentB === a) return assertIsMounted(parentA), fiber;\n        if (parentB === b) return assertIsMounted(parentA), alternate;\n        parentB = parentB.sibling;\n      }\n      throw Error(formatProdErrorMessage(188));\n    }\n    if (a.return !== b.return) (a = parentA), (b = parentB);\n    else {\n      for (var didFindChild = !1, child$0 = parentA.child; child$0; ) {\n        if (child$0 === a) {\n          didFindChild = !0;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child$0 === b) {\n          didFindChild = !0;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child$0 = child$0.sibling;\n      }\n      if (!didFindChild) {\n        for (child$0 = parentB.child; child$0; ) {\n          if (child$0 === a) {\n            didFindChild = !0;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child$0 === b) {\n            didFindChild = !0;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child$0 = child$0.sibling;\n        }\n        if (!didFindChild) throw Error(formatProdErrorMessage(189));\n      }\n    }\n    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));\n  }\n  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));\n  return a.stateNode.current === a ? fiber : alternate;\n}\nfunction findCurrentHostFiberImpl(node) {\n  var tag = node.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n  for (node = node.child; null !== node; ) {\n    tag = findCurrentHostFiberImpl(node);\n    if (null !== tag) return tag;\n    node = node.sibling;\n  }\n  return null;\n}\nvar assign = Object.assign,\n  REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nSymbol.for(\"react.scope\");\nvar REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\");\nSymbol.for(\"react.legacy_hidden\");\nSymbol.for(\"react.tracing_marker\");\nvar REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.view_transition\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n    case REACT_ACTIVITY_TYPE:\n      return \"Activity\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_PORTAL_TYPE:\n        return \"Portal\";\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  valueStack = [],\n  index = -1;\nfunction createCursor(defaultValue) {\n  return { current: defaultValue };\n}\nfunction pop(cursor) {\n  0 > index ||\n    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);\n}\nfunction push(cursor, value) {\n  index++;\n  valueStack[index] = cursor.current;\n  cursor.current = value;\n}\nvar contextStackCursor = createCursor(null),\n  contextFiberStackCursor = createCursor(null),\n  rootInstanceStackCursor = createCursor(null),\n  hostTransitionProviderCursor = createCursor(null);\nfunction pushHostContainer(fiber, nextRootInstance) {\n  push(rootInstanceStackCursor, nextRootInstance);\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor, null);\n  switch (nextRootInstance.nodeType) {\n    case 9:\n    case 11:\n      fiber = (fiber = nextRootInstance.documentElement)\n        ? (fiber = fiber.namespaceURI)\n          ? getOwnHostContext(fiber)\n          : 0\n        : 0;\n      break;\n    default:\n      if (\n        ((fiber = nextRootInstance.tagName),\n        (nextRootInstance = nextRootInstance.namespaceURI))\n      )\n        (nextRootInstance = getOwnHostContext(nextRootInstance)),\n          (fiber = getChildHostContextProd(nextRootInstance, fiber));\n      else\n        switch (fiber) {\n          case \"svg\":\n            fiber = 1;\n            break;\n          case \"math\":\n            fiber = 2;\n            break;\n          default:\n            fiber = 0;\n        }\n  }\n  pop(contextStackCursor);\n  push(contextStackCursor, fiber);\n}\nfunction popHostContainer() {\n  pop(contextStackCursor);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\nfunction pushHostContext(fiber) {\n  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);\n  var context = contextStackCursor.current;\n  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);\n  context !== JSCompiler_inline_result &&\n    (push(contextFiberStackCursor, fiber),\n    push(contextStackCursor, JSCompiler_inline_result));\n}\nfunction popHostContext(fiber) {\n  contextFiberStackCursor.current === fiber &&\n    (pop(contextStackCursor), pop(contextFiberStackCursor));\n  hostTransitionProviderCursor.current === fiber &&\n    (pop(hostTransitionProviderCursor),\n    (HostTransitionContext._currentValue = sharedNotPendingObject));\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n  cancelCallback$1 = Scheduler.unstable_cancelCallback,\n  shouldYield = Scheduler.unstable_shouldYield,\n  requestPaint = Scheduler.unstable_requestPaint,\n  now = Scheduler.unstable_now,\n  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n  ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n  NormalPriority$1 = Scheduler.unstable_NormalPriority,\n  LowPriority = Scheduler.unstable_LowPriority,\n  IdlePriority = Scheduler.unstable_IdlePriority,\n  log$1 = Scheduler.log,\n  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n  rendererID = null,\n  injectedHook = null;\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  \"function\" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);\n  if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n    try {\n      injectedHook.setStrictMode(rendererID, newIsStrictMode);\n    } catch (err) {}\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar nextTransitionLane = 256,\n  nextRetryLane = 4194304;\nfunction getHighestPriorityLanes(lanes) {\n  var pendingSyncLanes = lanes & 42;\n  if (0 !== pendingSyncLanes) return pendingSyncLanes;\n  switch (lanes & -lanes) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n      return 128;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return lanes & 4194048;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return lanes & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return lanes;\n  }\n}\nfunction getNextLanes(root, wipLanes, rootHasPendingCommit) {\n  var pendingLanes = root.pendingLanes;\n  if (0 === pendingLanes) return 0;\n  var nextLanes = 0,\n    suspendedLanes = root.suspendedLanes,\n    pingedLanes = root.pingedLanes;\n  root = root.warmLanes;\n  var nonIdlePendingLanes = pendingLanes & 134217727;\n  0 !== nonIdlePendingLanes\n    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n      0 !== pendingLanes\n        ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n        : ((pingedLanes &= nonIdlePendingLanes),\n          0 !== pingedLanes\n            ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n            : rootHasPendingCommit ||\n              ((rootHasPendingCommit = nonIdlePendingLanes & ~root),\n              0 !== rootHasPendingCommit &&\n                (nextLanes = getHighestPriorityLanes(rootHasPendingCommit)))))\n    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n      0 !== nonIdlePendingLanes\n        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n        : 0 !== pingedLanes\n          ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n          : rootHasPendingCommit ||\n            ((rootHasPendingCommit = pendingLanes & ~root),\n            0 !== rootHasPendingCommit &&\n              (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));\n  return 0 === nextLanes\n    ? 0\n    : 0 !== wipLanes &&\n        wipLanes !== nextLanes &&\n        0 === (wipLanes & suspendedLanes) &&\n        ((suspendedLanes = nextLanes & -nextLanes),\n        (rootHasPendingCommit = wipLanes & -wipLanes),\n        suspendedLanes >= rootHasPendingCommit ||\n          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))\n      ? wipLanes\n      : nextLanes;\n}\nfunction checkIfRootIsPrerendering(root, renderLanes) {\n  return (\n    0 ===\n    (root.pendingLanes &\n      ~(root.suspendedLanes & ~root.pingedLanes) &\n      renderLanes)\n  );\n}\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n    case 64:\n      return currentTime + 250;\n    case 16:\n    case 32:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return currentTime + 5e3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction claimNextTransitionLane() {\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n  return lane;\n}\nfunction createLaneMap(initial) {\n  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n  return laneMap;\n}\nfunction markRootUpdated$1(root, updateLane) {\n  root.pendingLanes |= updateLane;\n  268435456 !== updateLane &&\n    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));\n}\nfunction markRootFinished(\n  root,\n  finishedLanes,\n  remainingLanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  var previouslyPendingLanes = root.pendingLanes;\n  root.pendingLanes = remainingLanes;\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.warmLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  root.errorRecoveryDisabledLanes &= remainingLanes;\n  root.shellSuspendCounter = 0;\n  var entanglements = root.entanglements,\n    expirationTimes = root.expirationTimes,\n    hiddenUpdates = root.hiddenUpdates;\n  for (\n    remainingLanes = previouslyPendingLanes & ~remainingLanes;\n    0 < remainingLanes;\n\n  ) {\n    var index$5 = 31 - clz32(remainingLanes),\n      lane = 1 << index$5;\n    entanglements[index$5] = 0;\n    expirationTimes[index$5] = -1;\n    var hiddenUpdatesForLane = hiddenUpdates[index$5];\n    if (null !== hiddenUpdatesForLane)\n      for (\n        hiddenUpdates[index$5] = null, index$5 = 0;\n        index$5 < hiddenUpdatesForLane.length;\n        index$5++\n      ) {\n        var update = hiddenUpdatesForLane[index$5];\n        null !== update && (update.lane &= -536870913);\n      }\n    remainingLanes &= ~lane;\n  }\n  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n  0 !== suspendedRetryLanes &&\n    0 === updatedLanes &&\n    0 !== root.tag &&\n    (root.suspendedLanes |=\n      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n}\nfunction markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n  root.pendingLanes |= spawnedLane;\n  root.suspendedLanes &= ~spawnedLane;\n  var spawnedLaneIndex = 31 - clz32(spawnedLane);\n  root.entangledLanes |= spawnedLane;\n  root.entanglements[spawnedLaneIndex] =\n    root.entanglements[spawnedLaneIndex] |\n    1073741824 |\n    (entangledLanes & 4194090);\n}\nfunction markRootEntangled(root, entangledLanes) {\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  for (root = root.entanglements; rootEntangledLanes; ) {\n    var index$6 = 31 - clz32(rootEntangledLanes),\n      lane = 1 << index$6;\n    (lane & entangledLanes) | (root[index$6] & entangledLanes) &&\n      (root[index$6] |= entangledLanes);\n    rootEntangledLanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydrationByLane(lane) {\n  switch (lane) {\n    case 2:\n      lane = 1;\n      break;\n    case 8:\n      lane = 4;\n      break;\n    case 32:\n      lane = 16;\n      break;\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      lane = 128;\n      break;\n    case 268435456:\n      lane = 134217728;\n      break;\n    default:\n      lane = 0;\n  }\n  return lane;\n}\nfunction lanesToEventPriority(lanes) {\n  lanes &= -lanes;\n  return 2 < lanes\n    ? 8 < lanes\n      ? 0 !== (lanes & 134217727)\n        ? 32\n        : 268435456\n      : 8\n    : 2;\n}\nfunction resolveUpdatePriority() {\n  var updatePriority = ReactDOMSharedInternals.p;\n  if (0 !== updatePriority) return updatePriority;\n  updatePriority = window.event;\n  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    return (ReactDOMSharedInternals.p = priority), fn();\n  } finally {\n    ReactDOMSharedInternals.p = previousPriority;\n  }\n}\nvar randomKey = Math.random().toString(36).slice(2),\n  internalInstanceKey = \"__reactFiber$\" + randomKey,\n  internalPropsKey = \"__reactProps$\" + randomKey,\n  internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n  internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n  internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n  internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n  internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n  internalHoistableMarker = \"__reactMarker$\" + randomKey;\nfunction detachDeletedInstance(node) {\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n  if (targetInst) return targetInst;\n  for (var parentNode = targetNode.parentNode; parentNode; ) {\n    if (\n      (targetInst =\n        parentNode[internalContainerInstanceKey] ||\n        parentNode[internalInstanceKey])\n    ) {\n      parentNode = targetInst.alternate;\n      if (\n        null !== targetInst.child ||\n        (null !== parentNode && null !== parentNode.child)\n      )\n        for (\n          targetNode = getParentSuspenseInstance(targetNode);\n          null !== targetNode;\n\n        ) {\n          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;\n          targetNode = getParentSuspenseInstance(targetNode);\n        }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\nfunction getInstanceFromNode(node) {\n  if (\n    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n  ) {\n    var tag = node.tag;\n    if (\n      5 === tag ||\n      6 === tag ||\n      13 === tag ||\n      26 === tag ||\n      27 === tag ||\n      3 === tag\n    )\n      return node;\n  }\n  return null;\n}\nfunction getNodeFromInstance(inst) {\n  var tag = inst.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;\n  throw Error(formatProdErrorMessage(33));\n}\nfunction getResourcesFromRoot(root) {\n  var resources = root[internalRootNodeResourcesKey];\n  resources ||\n    (resources = root[internalRootNodeResourcesKey] =\n      { hoistableStyles: new Map(), hoistableScripts: new Map() });\n  return resources;\n}\nfunction markNodeAsHoistable(node) {\n  node[internalHoistableMarker] = !0;\n}\nvar allNativeEvents = new Set(),\n  registrationNameDependencies = {};\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + \"Capture\", dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  registrationNameDependencies[registrationName] = dependencies;\n  for (\n    registrationName = 0;\n    registrationName < dependencies.length;\n    registrationName++\n  )\n    allNativeEvents.add(dependencies[registrationName]);\n}\nvar VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nfunction setValueForAttribute(node, name, value) {\n  if (isAttributeNameSafe(name))\n    if (null === value) node.removeAttribute(name);\n    else {\n      switch (typeof value) {\n        case \"undefined\":\n        case \"function\":\n        case \"symbol\":\n          node.removeAttribute(name);\n          return;\n        case \"boolean\":\n          var prefix$8 = name.toLowerCase().slice(0, 5);\n          if (\"data-\" !== prefix$8 && \"aria-\" !== prefix$8) {\n            node.removeAttribute(name);\n            return;\n          }\n      }\n      node.setAttribute(name, \"\" + value);\n    }\n}\nfunction setValueForKnownAttribute(node, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttribute(name, \"\" + value);\n  }\n}\nfunction setValueForNamespacedAttribute(node, namespace, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttributeNS(namespace, name, \"\" + value);\n  }\n}\nvar prefix, suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$9) {\n                control = x$9;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$10) {\n              control = x$10;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return describeBuiltInComponentFrame(fiber.type);\n    case 16:\n      return describeBuiltInComponentFrame(\"Lazy\");\n    case 13:\n      return describeBuiltInComponentFrame(\"Suspense\");\n    case 19:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case 0:\n    case 15:\n      return describeNativeComponentFrame(fiber.type, !1);\n    case 11:\n      return describeNativeComponentFrame(fiber.type.render, !1);\n    case 1:\n      return describeNativeComponentFrame(fiber.type, !0);\n    case 31:\n      return describeBuiltInComponentFrame(\"Activity\");\n    default:\n      return \"\";\n  }\n}\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    do\n      (info += describeFiber(workInProgress)),\n        (workInProgress = workInProgress.return);\n    while (workInProgress);\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n    case \"undefined\":\n      return value;\n    case \"object\":\n      return value;\n    default:\n      return \"\";\n  }\n}\nfunction isCheckable(elem) {\n  var type = elem.type;\n  return (\n    (elem = elem.nodeName) &&\n    \"input\" === elem.toLowerCase() &&\n    (\"checkbox\" === type || \"radio\" === type)\n  );\n}\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? \"checked\" : \"value\",\n    descriptor = Object.getOwnPropertyDescriptor(\n      node.constructor.prototype,\n      valueField\n    ),\n    currentValue = \"\" + node[valueField];\n  if (\n    !node.hasOwnProperty(valueField) &&\n    \"undefined\" !== typeof descriptor &&\n    \"function\" === typeof descriptor.get &&\n    \"function\" === typeof descriptor.set\n  ) {\n    var get = descriptor.get,\n      set = descriptor.set;\n    Object.defineProperty(node, valueField, {\n      configurable: !0,\n      get: function () {\n        return get.call(this);\n      },\n      set: function (value) {\n        currentValue = \"\" + value;\n        set.call(this, value);\n      }\n    });\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable\n    });\n    return {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = \"\" + value;\n      },\n      stopTracking: function () {\n        node._valueTracker = null;\n        delete node[valueField];\n      }\n    };\n  }\n}\nfunction track(node) {\n  node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n}\nfunction updateValueIfChanged(node) {\n  if (!node) return !1;\n  var tracker = node._valueTracker;\n  if (!tracker) return !0;\n  var lastValue = tracker.getValue();\n  var value = \"\";\n  node &&\n    (value = isCheckable(node)\n      ? node.checked\n        ? \"true\"\n        : \"false\"\n      : node.value);\n  node = value;\n  return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n}\nfunction getActiveElement(doc) {\n  doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof doc) return null;\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\nvar escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g;\nfunction escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n  return value.replace(\n    escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n    function (ch) {\n      return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n    }\n  );\n}\nfunction updateInput(\n  element,\n  value,\n  defaultValue,\n  lastDefaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name\n) {\n  element.name = \"\";\n  null != type &&\n  \"function\" !== typeof type &&\n  \"symbol\" !== typeof type &&\n  \"boolean\" !== typeof type\n    ? (element.type = type)\n    : element.removeAttribute(\"type\");\n  if (null != value)\n    if (\"number\" === type) {\n      if ((0 === value && \"\" === element.value) || element.value != value)\n        element.value = \"\" + getToStringValue(value);\n    } else\n      element.value !== \"\" + getToStringValue(value) &&\n        (element.value = \"\" + getToStringValue(value));\n  else\n    (\"submit\" !== type && \"reset\" !== type) || element.removeAttribute(\"value\");\n  null != value\n    ? setDefaultValue(element, type, getToStringValue(value))\n    : null != defaultValue\n      ? setDefaultValue(element, type, getToStringValue(defaultValue))\n      : null != lastDefaultValue && element.removeAttribute(\"value\");\n  null == checked &&\n    null != defaultChecked &&\n    (element.defaultChecked = !!defaultChecked);\n  null != checked &&\n    (element.checked =\n      checked && \"function\" !== typeof checked && \"symbol\" !== typeof checked);\n  null != name &&\n  \"function\" !== typeof name &&\n  \"symbol\" !== typeof name &&\n  \"boolean\" !== typeof name\n    ? (element.name = \"\" + getToStringValue(name))\n    : element.removeAttribute(\"name\");\n}\nfunction initInput(\n  element,\n  value,\n  defaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name,\n  isHydrating\n) {\n  null != type &&\n    \"function\" !== typeof type &&\n    \"symbol\" !== typeof type &&\n    \"boolean\" !== typeof type &&\n    (element.type = type);\n  if (null != value || null != defaultValue) {\n    if (\n      !(\n        (\"submit\" !== type && \"reset\" !== type) ||\n        (void 0 !== value && null !== value)\n      )\n    )\n      return;\n    defaultValue =\n      null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n    isHydrating || value === element.value || (element.value = value);\n    element.defaultValue = value;\n  }\n  checked = null != checked ? checked : defaultChecked;\n  checked =\n    \"function\" !== typeof checked && \"symbol\" !== typeof checked && !!checked;\n  element.checked = isHydrating ? element.checked : !!checked;\n  element.defaultChecked = !!checked;\n  null != name &&\n    \"function\" !== typeof name &&\n    \"symbol\" !== typeof name &&\n    \"boolean\" !== typeof name &&\n    (element.name = name);\n}\nfunction setDefaultValue(node, type, value) {\n  (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n    node.defaultValue === \"\" + value ||\n    (node.defaultValue = \"\" + value);\n}\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  node = node.options;\n  if (multiple) {\n    multiple = {};\n    for (var i = 0; i < propValue.length; i++)\n      multiple[\"$\" + propValue[i]] = !0;\n    for (propValue = 0; propValue < node.length; propValue++)\n      (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n        node[propValue].selected !== i && (node[propValue].selected = i),\n        i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n  } else {\n    propValue = \"\" + getToStringValue(propValue);\n    multiple = null;\n    for (i = 0; i < node.length; i++) {\n      if (node[i].value === propValue) {\n        node[i].selected = !0;\n        setDefaultSelected && (node[i].defaultSelected = !0);\n        return;\n      }\n      null !== multiple || node[i].disabled || (multiple = node[i]);\n    }\n    null !== multiple && (multiple.selected = !0);\n  }\n}\nfunction updateTextarea(element, value, defaultValue) {\n  if (\n    null != value &&\n    ((value = \"\" + getToStringValue(value)),\n    value !== element.value && (element.value = value),\n    null == defaultValue)\n  ) {\n    element.defaultValue !== value && (element.defaultValue = value);\n    return;\n  }\n  element.defaultValue =\n    null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n}\nfunction initTextarea(element, value, defaultValue, children) {\n  if (null == value) {\n    if (null != children) {\n      if (null != defaultValue) throw Error(formatProdErrorMessage(92));\n      if (isArrayImpl(children)) {\n        if (1 < children.length) throw Error(formatProdErrorMessage(93));\n        children = children[0];\n      }\n      defaultValue = children;\n    }\n    null == defaultValue && (defaultValue = \"\");\n    value = defaultValue;\n  }\n  defaultValue = getToStringValue(value);\n  element.defaultValue = defaultValue;\n  children = element.textContent;\n  children === defaultValue &&\n    \"\" !== children &&\n    null !== children &&\n    (element.value = children);\n}\nfunction setTextContent(node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      3 === firstChild.nodeType\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n}\nvar unitlessNumbers = new Set(\n  \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n    \" \"\n  )\n);\nfunction setValueForStyle(style, styleName, value) {\n  var isCustomProperty = 0 === styleName.indexOf(\"--\");\n  null == value || \"boolean\" === typeof value || \"\" === value\n    ? isCustomProperty\n      ? style.setProperty(styleName, \"\")\n      : \"float\" === styleName\n        ? (style.cssFloat = \"\")\n        : (style[styleName] = \"\")\n    : isCustomProperty\n      ? style.setProperty(styleName, value)\n      : \"number\" !== typeof value ||\n          0 === value ||\n          unitlessNumbers.has(styleName)\n        ? \"float\" === styleName\n          ? (style.cssFloat = value)\n          : (style[styleName] = (\"\" + value).trim())\n        : (style[styleName] = value + \"px\");\n}\nfunction setValueForStyles(node, styles, prevStyles) {\n  if (null != styles && \"object\" !== typeof styles)\n    throw Error(formatProdErrorMessage(62));\n  node = node.style;\n  if (null != prevStyles) {\n    for (var styleName in prevStyles)\n      !prevStyles.hasOwnProperty(styleName) ||\n        (null != styles && styles.hasOwnProperty(styleName)) ||\n        (0 === styleName.indexOf(\"--\")\n          ? node.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (node.cssFloat = \"\")\n            : (node[styleName] = \"\"));\n    for (var styleName$16 in styles)\n      (styleName = styles[styleName$16]),\n        styles.hasOwnProperty(styleName$16) &&\n          prevStyles[styleName$16] !== styleName &&\n          setValueForStyle(node, styleName$16, styleName);\n  } else\n    for (var styleName$17 in styles)\n      styles.hasOwnProperty(styleName$17) &&\n        setValueForStyle(node, styleName$17, styles[styleName$17]);\n}\nfunction isCustomElement(tagName) {\n  if (-1 === tagName.indexOf(\"-\")) return !1;\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar currentReplayingEvent = null;\nfunction getEventTarget(nativeEvent) {\n  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n  nativeEvent.correspondingUseElement &&\n    (nativeEvent = nativeEvent.correspondingUseElement);\n  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n}\nvar restoreTarget = null,\n  restoreQueue = null;\nfunction restoreStateOfTarget(target) {\n  var internalInstance = getInstanceFromNode(target);\n  if (internalInstance && (target = internalInstance.stateNode)) {\n    var props = target[internalPropsKey] || null;\n    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {\n      case \"input\":\n        updateInput(\n          target,\n          props.value,\n          props.defaultValue,\n          props.defaultValue,\n          props.checked,\n          props.defaultChecked,\n          props.type,\n          props.name\n        );\n        internalInstance = props.name;\n        if (\"radio\" === props.type && null != internalInstance) {\n          for (props = target; props.parentNode; ) props = props.parentNode;\n          props = props.querySelectorAll(\n            'input[name=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                \"\" + internalInstance\n              ) +\n              '\"][type=\"radio\"]'\n          );\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          ) {\n            var otherNode = props[internalInstance];\n            if (otherNode !== target && otherNode.form === target.form) {\n              var otherProps = otherNode[internalPropsKey] || null;\n              if (!otherProps) throw Error(formatProdErrorMessage(90));\n              updateInput(\n                otherNode,\n                otherProps.value,\n                otherProps.defaultValue,\n                otherProps.defaultValue,\n                otherProps.checked,\n                otherProps.defaultChecked,\n                otherProps.type,\n                otherProps.name\n              );\n            }\n          }\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          )\n            (otherNode = props[internalInstance]),\n              otherNode.form === target.form && updateValueIfChanged(otherNode);\n        }\n        break a;\n      case \"textarea\":\n        updateTextarea(target, props.value, props.defaultValue);\n        break a;\n      case \"select\":\n        (internalInstance = props.value),\n          null != internalInstance &&\n            updateOptions(target, !!props.multiple, internalInstance, !1);\n    }\n  }\n}\nvar isInsideEventHandler = !1;\nfunction batchedUpdates$1(fn, a, b) {\n  if (isInsideEventHandler) return fn(a, b);\n  isInsideEventHandler = !0;\n  try {\n    var JSCompiler_inline_result = fn(a);\n    return JSCompiler_inline_result;\n  } finally {\n    if (\n      ((isInsideEventHandler = !1),\n      null !== restoreTarget || null !== restoreQueue)\n    )\n      if (\n        (flushSyncWork$1(),\n        restoreTarget &&\n          ((a = restoreTarget),\n          (fn = restoreQueue),\n          (restoreQueue = restoreTarget = null),\n          restoreStateOfTarget(a),\n          fn))\n      )\n        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n  }\n}\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n  if (null === stateNode) return null;\n  var props = stateNode[internalPropsKey] || null;\n  if (null === props) return null;\n  stateNode = props[registrationName];\n  a: switch (registrationName) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n    case \"onMouseEnter\":\n      (props = !props.disabled) ||\n        ((inst = inst.type),\n        (props = !(\n          \"button\" === inst ||\n          \"input\" === inst ||\n          \"select\" === inst ||\n          \"textarea\" === inst\n        )));\n      inst = !props;\n      break a;\n    default:\n      inst = !1;\n  }\n  if (inst) return null;\n  if (stateNode && \"function\" !== typeof stateNode)\n    throw Error(\n      formatProdErrorMessage(231, registrationName, typeof stateNode)\n    );\n  return stateNode;\n}\nvar canUseDOM = !(\n    \"undefined\" === typeof window ||\n    \"undefined\" === typeof window.document ||\n    \"undefined\" === typeof window.document.createElement\n  ),\n  passiveBrowserEventsSupported = !1;\nif (canUseDOM)\n  try {\n    var options = {};\n    Object.defineProperty(options, \"passive\", {\n      get: function () {\n        passiveBrowserEventsSupported = !0;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = !1;\n  }\nvar root = null,\n  startText = null,\n  fallbackText = null;\nfunction getData() {\n  if (fallbackText) return fallbackText;\n  var start,\n    startValue = startText,\n    startLength = startValue.length,\n    end,\n    endValue = \"value\" in root ? root.value : root.textContent,\n    endLength = endValue.length;\n  for (\n    start = 0;\n    start < startLength && startValue[start] === endValue[start];\n    start++\n  );\n  var minEnd = startLength - start;\n  for (\n    end = 1;\n    end <= minEnd &&\n    startValue[startLength - end] === endValue[endLength - end];\n    end++\n  );\n  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n}\nfunction getEventCharCode(nativeEvent) {\n  var keyCode = nativeEvent.keyCode;\n  \"charCode\" in nativeEvent\n    ? ((nativeEvent = nativeEvent.charCode),\n      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n    : (nativeEvent = keyCode);\n  10 === nativeEvent && (nativeEvent = 13);\n  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n}\nfunction functionThatReturnsTrue() {\n  return !0;\n}\nfunction functionThatReturnsFalse() {\n  return !1;\n}\nfunction createSyntheticEvent(Interface) {\n  function SyntheticBaseEvent(\n    reactName,\n    reactEventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n    for (var propName in Interface)\n      Interface.hasOwnProperty(propName) &&\n        ((reactName = Interface[propName]),\n        (this[propName] = reactName\n          ? reactName(nativeEvent)\n          : nativeEvent[propName]));\n    this.isDefaultPrevented = (\n      null != nativeEvent.defaultPrevented\n        ? nativeEvent.defaultPrevented\n        : !1 === nativeEvent.returnValue\n    )\n      ? functionThatReturnsTrue\n      : functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var event = this.nativeEvent;\n      event &&\n        (event.preventDefault\n          ? event.preventDefault()\n          : \"unknown\" !== typeof event.returnValue && (event.returnValue = !1),\n        (this.isDefaultPrevented = functionThatReturnsTrue));\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n      event &&\n        (event.stopPropagation\n          ? event.stopPropagation()\n          : \"unknown\" !== typeof event.cancelBubble &&\n            (event.cancelBubble = !0),\n        (this.isPropagationStopped = functionThatReturnsTrue));\n    },\n    persist: function () {},\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\nvar EventInterface = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (event) {\n      return event.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  SyntheticEvent = createSyntheticEvent(EventInterface),\n  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n  lastMovementX,\n  lastMovementY,\n  lastMouseEvent,\n  MouseEventInterface = assign({}, UIEventInterface, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: getEventModifierState,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (event) {\n      return void 0 === event.relatedTarget\n        ? event.fromElement === event.srcElement\n          ? event.toElement\n          : event.fromElement\n        : event.relatedTarget;\n    },\n    movementX: function (event) {\n      if (\"movementX\" in event) return event.movementX;\n      event !== lastMouseEvent &&\n        (lastMouseEvent && \"mousemove\" === event.type\n          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n            (lastMovementY = event.screenY - lastMouseEvent.screenY))\n          : (lastMovementY = lastMovementX = 0),\n        (lastMouseEvent = event));\n      return lastMovementX;\n    },\n    movementY: function (event) {\n      return \"movementY\" in event ? event.movementY : lastMovementY;\n    }\n  }),\n  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n  AnimationEventInterface = assign({}, EventInterface, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n  ClipboardEventInterface = assign({}, EventInterface, {\n    clipboardData: function (event) {\n      return \"clipboardData\" in event\n        ? event.clipboardData\n        : window.clipboardData;\n    }\n  }),\n  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),\n  normalizeKey = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n  translateToKey = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n  modifierKeyToProp = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\nfunction modifierStateGetter(keyArg) {\n  var nativeEvent = this.nativeEvent;\n  return nativeEvent.getModifierState\n    ? nativeEvent.getModifierState(keyArg)\n    : (keyArg = modifierKeyToProp[keyArg])\n      ? !!nativeEvent[keyArg]\n      : !1;\n}\nfunction getEventModifierState() {\n  return modifierStateGetter;\n}\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n    key: function (nativeEvent) {\n      if (nativeEvent.key) {\n        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n        if (\"Unidentified\" !== key) return key;\n      }\n      return \"keypress\" === nativeEvent.type\n        ? ((nativeEvent = getEventCharCode(nativeEvent)),\n          13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n        : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n          ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n          : \"\";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: getEventModifierState,\n    charCode: function (event) {\n      return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n    },\n    keyCode: function (event) {\n      return \"keydown\" === event.type || \"keyup\" === event.type\n        ? event.keyCode\n        : 0;\n    },\n    which: function (event) {\n      return \"keypress\" === event.type\n        ? getEventCharCode(event)\n        : \"keydown\" === event.type || \"keyup\" === event.type\n          ? event.keyCode\n          : 0;\n    }\n  }),\n  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n  PointerEventInterface = assign({}, MouseEventInterface, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n  TouchEventInterface = assign({}, UIEventInterface, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: getEventModifierState\n  }),\n  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n  TransitionEventInterface = assign({}, EventInterface, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n  WheelEventInterface = assign({}, MouseEventInterface, {\n    deltaX: function (event) {\n      return \"deltaX\" in event\n        ? event.deltaX\n        : \"wheelDeltaX\" in event\n          ? -event.wheelDeltaX\n          : 0;\n    },\n    deltaY: function (event) {\n      return \"deltaY\" in event\n        ? event.deltaY\n        : \"wheelDeltaY\" in event\n          ? -event.wheelDeltaY\n          : \"wheelDelta\" in event\n            ? -event.wheelDelta\n            : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n  ToggleEventInterface = assign({}, EventInterface, {\n    newState: 0,\n    oldState: 0\n  }),\n  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n  END_KEYCODES = [9, 13, 27, 32],\n  canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n  documentMode = null;\ncanUseDOM &&\n  \"documentMode\" in document &&\n  (documentMode = document.documentMode);\nvar canUseTextInputEvent = canUseDOM && \"TextEvent\" in window && !documentMode,\n  useFallbackCompositionData =\n    canUseDOM &&\n    (!canUseCompositionEvent ||\n      (documentMode && 8 < documentMode && 11 >= documentMode)),\n  SPACEBAR_CHAR = String.fromCharCode(32),\n  hasSpaceKeypress = !1;\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"keyup\":\n      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n    case \"keydown\":\n      return 229 !== nativeEvent.keyCode;\n    case \"keypress\":\n    case \"mousedown\":\n    case \"focusout\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction getDataFromCustomEvent(nativeEvent) {\n  nativeEvent = nativeEvent.detail;\n  return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n    ? nativeEvent.data\n    : null;\n}\nvar isComposing = !1;\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"compositionend\":\n      return getDataFromCustomEvent(nativeEvent);\n    case \"keypress\":\n      if (32 !== nativeEvent.which) return null;\n      hasSpaceKeypress = !0;\n      return SPACEBAR_CHAR;\n    case \"textInput\":\n      return (\n        (domEventName = nativeEvent.data),\n        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName\n      );\n    default:\n      return null;\n  }\n}\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  if (isComposing)\n    return \"compositionend\" === domEventName ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n      ? ((domEventName = getData()),\n        (fallbackText = startText = root = null),\n        (isComposing = !1),\n        domEventName)\n      : null;\n  switch (domEventName) {\n    case \"paste\":\n      return null;\n    case \"keypress\":\n      if (\n        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||\n        (nativeEvent.ctrlKey && nativeEvent.altKey)\n      ) {\n        if (nativeEvent.char && 1 < nativeEvent.char.length)\n          return nativeEvent.char;\n        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case \"compositionend\":\n      return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\nvar supportedInputTypes = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return \"input\" === nodeName\n    ? !!supportedInputTypes[elem.type]\n    : \"textarea\" === nodeName\n      ? !0\n      : !1;\n}\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target\n) {\n  restoreTarget\n    ? restoreQueue\n      ? restoreQueue.push(target)\n      : (restoreQueue = [target])\n    : (restoreTarget = target);\n  inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n  0 < inst.length &&\n    ((nativeEvent = new SyntheticEvent(\n      \"onChange\",\n      \"change\",\n      null,\n      nativeEvent,\n      target\n    )),\n    dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n}\nvar activeElement$1 = null,\n  activeElementInst$1 = null;\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) return targetInst;\n}\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (\"change\" === domEventName) return targetInst;\n}\nvar isInputEventSupported = !1;\nif (canUseDOM) {\n  var JSCompiler_inline_result$jscomp$282;\n  if (canUseDOM) {\n    var isSupported$jscomp$inline_417 = \"oninput\" in document;\n    if (!isSupported$jscomp$inline_417) {\n      var element$jscomp$inline_418 = document.createElement(\"div\");\n      element$jscomp$inline_418.setAttribute(\"oninput\", \"return;\");\n      isSupported$jscomp$inline_417 =\n        \"function\" === typeof element$jscomp$inline_418.oninput;\n    }\n    JSCompiler_inline_result$jscomp$282 = isSupported$jscomp$inline_417;\n  } else JSCompiler_inline_result$jscomp$282 = !1;\n  isInputEventSupported =\n    JSCompiler_inline_result$jscomp$282 &&\n    (!document.documentMode || 9 < document.documentMode);\n}\nfunction stopWatchingForValueChange() {\n  activeElement$1 &&\n    (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n    (activeElementInst$1 = activeElement$1 = null));\n}\nfunction handlePropertyChange(nativeEvent) {\n  if (\n    \"value\" === nativeEvent.propertyName &&\n    getInstIfValueChanged(activeElementInst$1)\n  ) {\n    var dispatchQueue = [];\n    createAndAccumulateChangeEvent(\n      dispatchQueue,\n      activeElementInst$1,\n      nativeEvent,\n      getEventTarget(nativeEvent)\n    );\n    batchedUpdates$1(runEventInBatch, dispatchQueue);\n  }\n}\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  \"focusin\" === domEventName\n    ? (stopWatchingForValueChange(),\n      (activeElement$1 = target),\n      (activeElementInst$1 = targetInst),\n      activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n    : \"focusout\" === domEventName && stopWatchingForValueChange();\n}\nfunction getTargetInstForInputEventPolyfill(domEventName) {\n  if (\n    \"selectionchange\" === domEventName ||\n    \"keyup\" === domEventName ||\n    \"keydown\" === domEventName\n  )\n    return getInstIfValueChanged(activeElementInst$1);\n}\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n}\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (\"input\" === domEventName || \"change\" === domEventName)\n    return getInstIfValueChanged(targetInst);\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is;\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) return !0;\n  if (\n    \"object\" !== typeof objA ||\n    null === objA ||\n    \"object\" !== typeof objB ||\n    null === objB\n  )\n    return !1;\n  var keysA = Object.keys(objA),\n    keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return !1;\n  for (keysB = 0; keysB < keysA.length; keysB++) {\n    var currentKey = keysA[keysB];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    )\n      return !1;\n  }\n  return !0;\n}\nfunction getLeafNode(node) {\n  for (; node && node.firstChild; ) node = node.firstChild;\n  return node;\n}\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  root = 0;\n  for (var nodeEnd; node; ) {\n    if (3 === node.nodeType) {\n      nodeEnd = root + node.textContent.length;\n      if (root <= offset && nodeEnd >= offset)\n        return { node: node, offset: offset - root };\n      root = nodeEnd;\n    }\n    a: {\n      for (; node; ) {\n        if (node.nextSibling) {\n          node = node.nextSibling;\n          break a;\n        }\n        node = node.parentNode;\n      }\n      node = void 0;\n    }\n    node = getLeafNode(node);\n  }\n}\nfunction containsNode(outerNode, innerNode) {\n  return outerNode && innerNode\n    ? outerNode === innerNode\n      ? !0\n      : outerNode && 3 === outerNode.nodeType\n        ? !1\n        : innerNode && 3 === innerNode.nodeType\n          ? containsNode(outerNode, innerNode.parentNode)\n          : \"contains\" in outerNode\n            ? outerNode.contains(innerNode)\n            : outerNode.compareDocumentPosition\n              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n              : !1\n    : !1;\n}\nfunction getActiveElementDeep(containerInfo) {\n  containerInfo =\n    null != containerInfo &&\n    null != containerInfo.ownerDocument &&\n    null != containerInfo.ownerDocument.defaultView\n      ? containerInfo.ownerDocument.defaultView\n      : window;\n  for (\n    var element = getActiveElement(containerInfo.document);\n    element instanceof containerInfo.HTMLIFrameElement;\n\n  ) {\n    try {\n      var JSCompiler_inline_result =\n        \"string\" === typeof element.contentWindow.location.href;\n    } catch (err) {\n      JSCompiler_inline_result = !1;\n    }\n    if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n    else break;\n    element = getActiveElement(containerInfo.document);\n  }\n  return element;\n}\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((\"input\" === nodeName &&\n      (\"text\" === elem.type ||\n        \"search\" === elem.type ||\n        \"tel\" === elem.type ||\n        \"url\" === elem.type ||\n        \"password\" === elem.type)) ||\n      \"textarea\" === nodeName ||\n      \"true\" === elem.contentEditable)\n  );\n}\nvar skipSelectionChangeEvent =\n    canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n  activeElement = null,\n  activeElementInst = null,\n  lastSelection = null,\n  mouseDown = !1;\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  var doc =\n    nativeEventTarget.window === nativeEventTarget\n      ? nativeEventTarget.document\n      : 9 === nativeEventTarget.nodeType\n        ? nativeEventTarget\n        : nativeEventTarget.ownerDocument;\n  mouseDown ||\n    null == activeElement ||\n    activeElement !== getActiveElement(doc) ||\n    ((doc = activeElement),\n    \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n      : ((doc = (\n          (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n          window\n        ).getSelection()),\n        (doc = {\n          anchorNode: doc.anchorNode,\n          anchorOffset: doc.anchorOffset,\n          focusNode: doc.focusNode,\n          focusOffset: doc.focusOffset\n        })),\n    (lastSelection && shallowEqual(lastSelection, doc)) ||\n      ((lastSelection = doc),\n      (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n      0 < doc.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onSelect\",\n          \"select\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n        (nativeEvent.target = activeElement))));\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n  prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n  return prefixes;\n}\nvar vendorPrefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n    animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n    transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n    transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n    transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  },\n  prefixedEventNames = {},\n  style = {};\ncanUseDOM &&\n  ((style = document.createElement(\"div\").style),\n  \"AnimationEvent\" in window ||\n    (delete vendorPrefixes.animationend.animation,\n    delete vendorPrefixes.animationiteration.animation,\n    delete vendorPrefixes.animationstart.animation),\n  \"TransitionEvent\" in window ||\n    delete vendorPrefixes.transitionend.transition);\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n  if (!vendorPrefixes[eventName]) return eventName;\n  var prefixMap = vendorPrefixes[eventName],\n    styleProp;\n  for (styleProp in prefixMap)\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n  return eventName;\n}\nvar ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n  ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n  ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n  TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n  TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n  TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n  TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n  topLevelEventsToReactNames = new Map(),\n  simpleEventPluginEvents =\n    \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\n      \" \"\n    );\nsimpleEventPluginEvents.push(\"scrollEnd\");\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\nvar CapturedStacks = new WeakMap();\nfunction createCapturedValueAtFiber(value, source) {\n  if (\"object\" === typeof value && null !== value) {\n    var existing = CapturedStacks.get(value);\n    if (void 0 !== existing) return existing;\n    source = {\n      value: value,\n      source: source,\n      stack: getStackByFiberInDevAndProd(source)\n    };\n    CapturedStacks.set(value, source);\n    return source;\n  }\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\nvar concurrentQueues = [],\n  concurrentQueuesIndex = 0,\n  concurrentlyUpdatedLanes = 0;\nfunction finishQueueingConcurrentUpdates() {\n  for (\n    var endIndex = concurrentQueuesIndex,\n      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n    i < endIndex;\n\n  ) {\n    var fiber = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var queue = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var update = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var lane = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    if (null !== queue && null !== update) {\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n  }\n}\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  concurrentQueues[concurrentQueuesIndex++] = fiber;\n  concurrentQueues[concurrentQueuesIndex++] = queue;\n  concurrentQueues[concurrentQueuesIndex++] = update;\n  concurrentQueues[concurrentQueuesIndex++] = lane;\n  concurrentlyUpdatedLanes |= lane;\n  fiber.lanes |= lane;\n  fiber = fiber.alternate;\n  null !== fiber && (fiber.lanes |= lane);\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  enqueueUpdate$1(fiber, queue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  enqueueUpdate$1(fiber, null, null, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n  sourceFiber.lanes |= lane;\n  var alternate = sourceFiber.alternate;\n  null !== alternate && (alternate.lanes |= lane);\n  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n    (parent.childLanes |= lane),\n      (alternate = parent.alternate),\n      null !== alternate && (alternate.childLanes |= lane),\n      22 === parent.tag &&\n        ((sourceFiber = parent.stateNode),\n        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),\n      (sourceFiber = parent),\n      (parent = parent.return);\n  return 3 === sourceFiber.tag\n    ? ((parent = sourceFiber.stateNode),\n      isHidden &&\n        null !== update &&\n        ((isHidden = 31 - clz32(lane)),\n        (sourceFiber = parent.hiddenUpdates),\n        (alternate = sourceFiber[isHidden]),\n        null === alternate\n          ? (sourceFiber[isHidden] = [update])\n          : alternate.push(update),\n        (update.lane = lane | 536870912)),\n      parent)\n    : null;\n}\nfunction getRootForUpdatedFiber(sourceFiber) {\n  if (50 < nestedUpdateCount)\n    throw (\n      ((nestedUpdateCount = 0),\n      (rootWithNestedUpdates = null),\n      Error(formatProdErrorMessage(185)))\n    );\n  for (var parent = sourceFiber.return; null !== parent; )\n    (sourceFiber = parent), (parent = sourceFiber.return);\n  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;\n}\nvar emptyContextObject = {};\nfunction FiberNode(tag, pendingProps, key, mode) {\n  this.tag = tag;\n  this.key = key;\n  this.sibling =\n    this.child =\n    this.return =\n    this.stateNode =\n    this.type =\n    this.elementType =\n      null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = pendingProps;\n  this.dependencies =\n    this.memoizedState =\n    this.updateQueue =\n    this.memoizedProps =\n      null;\n  this.mode = mode;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction createFiberImplClass(tag, pendingProps, key, mode) {\n  return new FiberNode(tag, pendingProps, key, mode);\n}\nfunction shouldConstruct(Component) {\n  Component = Component.prototype;\n  return !(!Component || !Component.isReactComponent);\n}\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n  null === workInProgress\n    ? ((workInProgress = createFiberImplClass(\n        current.tag,\n        pendingProps,\n        current.key,\n        current.mode\n      )),\n      (workInProgress.elementType = current.elementType),\n      (workInProgress.type = current.type),\n      (workInProgress.stateNode = current.stateNode),\n      (workInProgress.alternate = current),\n      (current.alternate = workInProgress))\n    : ((workInProgress.pendingProps = pendingProps),\n      (workInProgress.type = current.type),\n      (workInProgress.flags = 0),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null));\n  workInProgress.flags = current.flags & 65011712;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  pendingProps = current.dependencies;\n  workInProgress.dependencies =\n    null === pendingProps\n      ? null\n      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n  workInProgress.refCleanup = current.refCleanup;\n  return workInProgress;\n}\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  workInProgress.flags &= 65011714;\n  var current = workInProgress.alternate;\n  null === current\n    ? ((workInProgress.childLanes = 0),\n      (workInProgress.lanes = renderLanes),\n      (workInProgress.child = null),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.memoizedProps = null),\n      (workInProgress.memoizedState = null),\n      (workInProgress.updateQueue = null),\n      (workInProgress.dependencies = null),\n      (workInProgress.stateNode = null))\n    : ((workInProgress.childLanes = current.childLanes),\n      (workInProgress.lanes = current.lanes),\n      (workInProgress.child = current.child),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null),\n      (workInProgress.memoizedProps = current.memoizedProps),\n      (workInProgress.memoizedState = current.memoizedState),\n      (workInProgress.updateQueue = current.updateQueue),\n      (workInProgress.type = current.type),\n      (renderLanes = current.dependencies),\n      (workInProgress.dependencies =\n        null === renderLanes\n          ? null\n          : {\n              lanes: renderLanes.lanes,\n              firstContext: renderLanes.firstContext\n            }));\n  return workInProgress;\n}\nfunction createFiberFromTypeAndProps(\n  type,\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = 0;\n  owner = type;\n  if (\"function\" === typeof type) shouldConstruct(type) && (fiberTag = 1);\n  else if (\"string\" === typeof type)\n    fiberTag = isHostHoistableType(\n      type,\n      pendingProps,\n      contextStackCursor.current\n    )\n      ? 26\n      : \"html\" === type || \"head\" === type || \"body\" === type\n        ? 27\n        : 5;\n  else\n    a: switch (type) {\n      case REACT_ACTIVITY_TYPE:\n        return (\n          (type = createFiberImplClass(31, pendingProps, key, mode)),\n          (type.elementType = REACT_ACTIVITY_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = 8;\n        mode |= 24;\n        break;\n      case REACT_PROFILER_TYPE:\n        return (\n          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),\n          (type.elementType = REACT_PROFILER_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_TYPE:\n        return (\n          (type = createFiberImplClass(13, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_LIST_TYPE:\n        return (\n          (type = createFiberImplClass(19, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_LIST_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      default:\n        if (\"object\" === typeof type && null !== type)\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n            case REACT_CONTEXT_TYPE:\n              fiberTag = 10;\n              break a;\n            case REACT_CONSUMER_TYPE:\n              fiberTag = 9;\n              break a;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = 11;\n              break a;\n            case REACT_MEMO_TYPE:\n              fiberTag = 14;\n              break a;\n            case REACT_LAZY_TYPE:\n              fiberTag = 16;\n              owner = null;\n              break a;\n          }\n        fiberTag = 29;\n        pendingProps = Error(\n          formatProdErrorMessage(130, null === type ? \"null\" : typeof type, \"\")\n        );\n        owner = null;\n    }\n  key = createFiberImplClass(fiberTag, pendingProps, key, mode);\n  key.elementType = type;\n  key.type = owner;\n  key.lanes = lanes;\n  return key;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  elements = createFiberImplClass(7, elements, key, mode);\n  elements.lanes = lanes;\n  return elements;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  content = createFiberImplClass(6, content, null, mode);\n  content.lanes = lanes;\n  return content;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  mode = createFiberImplClass(\n    4,\n    null !== portal.children ? portal.children : [],\n    portal.key,\n    mode\n  );\n  mode.lanes = lanes;\n  mode.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    implementation: portal.implementation\n  };\n  return mode;\n}\nvar forkStack = [],\n  forkStackIndex = 0,\n  treeForkProvider = null,\n  treeForkCount = 0,\n  idStack = [],\n  idStackIndex = 0,\n  treeContextProvider = null,\n  treeContextId = 1,\n  treeContextOverflow = \"\";\nfunction pushTreeFork(workInProgress, totalChildren) {\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  workInProgress = treeContextOverflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    treeContextId =\n      (1 << (32 - clz32(totalChildren) + baseLength)) |\n      (index << baseLength) |\n      baseIdWithLeadingBit;\n    treeContextOverflow = length + workInProgress;\n  } else\n    (treeContextId =\n      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n      (treeContextOverflow = workInProgress);\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  null !== workInProgress.return &&\n    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n}\nfunction popTreeContext(workInProgress) {\n  for (; workInProgress === treeForkProvider; )\n    (treeForkProvider = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null),\n      (treeForkCount = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null);\n  for (; workInProgress === treeContextProvider; )\n    (treeContextProvider = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextOverflow = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextId = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null);\n}\nvar hydrationParentFiber = null,\n  nextHydratableInstance = null,\n  isHydrating = !1,\n  hydrationErrors = null,\n  rootOrSingletonContext = !1,\n  HydrationMismatchException = Error(formatProdErrorMessage(519));\nfunction throwOnHydrationMismatch(fiber) {\n  var error = Error(formatProdErrorMessage(418, \"\"));\n  queueHydrationError(createCapturedValueAtFiber(error, fiber));\n  throw HydrationMismatchException;\n}\nfunction prepareToHydrateHostInstance(fiber) {\n  var instance = fiber.stateNode,\n    type = fiber.type,\n    props = fiber.memoizedProps;\n  instance[internalInstanceKey] = fiber;\n  instance[internalPropsKey] = props;\n  switch (type) {\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", instance);\n      listenToNonDelegatedEvent(\"close\", instance);\n      break;\n    case \"iframe\":\n    case \"object\":\n    case \"embed\":\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (type = 0; type < mediaEventTypes.length; type++)\n        listenToNonDelegatedEvent(mediaEventTypes[type], instance);\n      break;\n    case \"source\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      break;\n    case \"img\":\n    case \"image\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", instance);\n      break;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      initInput(\n        instance,\n        props.value,\n        props.defaultValue,\n        props.checked,\n        props.defaultChecked,\n        props.type,\n        props.name,\n        !0\n      );\n      track(instance);\n      break;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      break;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", instance),\n        initTextarea(instance, props.value, props.defaultValue, props.children),\n        track(instance);\n  }\n  type = props.children;\n  (\"string\" !== typeof type &&\n    \"number\" !== typeof type &&\n    \"bigint\" !== typeof type) ||\n  instance.textContent === \"\" + type ||\n  !0 === props.suppressHydrationWarning ||\n  checkForUnmatchedText(instance.textContent, type)\n    ? (null != props.popover &&\n        (listenToNonDelegatedEvent(\"beforetoggle\", instance),\n        listenToNonDelegatedEvent(\"toggle\", instance)),\n      null != props.onScroll && listenToNonDelegatedEvent(\"scroll\", instance),\n      null != props.onScrollEnd &&\n        listenToNonDelegatedEvent(\"scrollend\", instance),\n      null != props.onClick && (instance.onclick = noop$1),\n      (instance = !0))\n    : (instance = !1);\n  instance || throwOnHydrationMismatch(fiber);\n}\nfunction popToNextHostParent(fiber) {\n  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n    switch (hydrationParentFiber.tag) {\n      case 5:\n      case 13:\n        rootOrSingletonContext = !1;\n        return;\n      case 27:\n      case 3:\n        rootOrSingletonContext = !0;\n        return;\n      default:\n        hydrationParentFiber = hydrationParentFiber.return;\n    }\n}\nfunction popHydrationState(fiber) {\n  if (fiber !== hydrationParentFiber) return !1;\n  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;\n  var tag = fiber.tag,\n    JSCompiler_temp;\n  if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {\n    if ((JSCompiler_temp = 5 === tag))\n      (JSCompiler_temp = fiber.type),\n        (JSCompiler_temp =\n          !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n          shouldSetTextContent(fiber.type, fiber.memoizedProps));\n    JSCompiler_temp = !JSCompiler_temp;\n  }\n  JSCompiler_temp && nextHydratableInstance && throwOnHydrationMismatch(fiber);\n  popToNextHostParent(fiber);\n  if (13 === tag) {\n    fiber = fiber.memoizedState;\n    fiber = null !== fiber ? fiber.dehydrated : null;\n    if (!fiber) throw Error(formatProdErrorMessage(317));\n    a: {\n      fiber = fiber.nextSibling;\n      for (tag = 0; fiber; ) {\n        if (8 === fiber.nodeType)\n          if (((JSCompiler_temp = fiber.data), \"/$\" === JSCompiler_temp)) {\n            if (0 === tag) {\n              nextHydratableInstance = getNextHydratable(fiber.nextSibling);\n              break a;\n            }\n            tag--;\n          } else\n            (\"$\" !== JSCompiler_temp &&\n              \"$!\" !== JSCompiler_temp &&\n              \"$?\" !== JSCompiler_temp) ||\n              tag++;\n        fiber = fiber.nextSibling;\n      }\n      nextHydratableInstance = null;\n    }\n  } else\n    27 === tag\n      ? ((tag = nextHydratableInstance),\n        isSingletonScope(fiber.type)\n          ? ((fiber = previousHydratableOnEnteringScopedSingleton),\n            (previousHydratableOnEnteringScopedSingleton = null),\n            (nextHydratableInstance = fiber))\n          : (nextHydratableInstance = tag))\n      : (nextHydratableInstance = hydrationParentFiber\n          ? getNextHydratable(fiber.stateNode.nextSibling)\n          : null);\n  return !0;\n}\nfunction resetHydrationState() {\n  nextHydratableInstance = hydrationParentFiber = null;\n  isHydrating = !1;\n}\nfunction upgradeHydrationErrorsToRecoverable() {\n  var queuedErrors = hydrationErrors;\n  null !== queuedErrors &&\n    (null === workInProgressRootRecoverableErrors\n      ? (workInProgressRootRecoverableErrors = queuedErrors)\n      : workInProgressRootRecoverableErrors.push.apply(\n          workInProgressRootRecoverableErrors,\n          queuedErrors\n        ),\n    (hydrationErrors = null));\n  return queuedErrors;\n}\nfunction queueHydrationError(error) {\n  null === hydrationErrors\n    ? (hydrationErrors = [error])\n    : hydrationErrors.push(error);\n}\nvar valueCursor = createCursor(null),\n  currentlyRenderingFiber$1 = null,\n  lastContextDependency = null;\nfunction pushProvider(providerFiber, context, nextValue) {\n  push(valueCursor, context._currentValue);\n  context._currentValue = nextValue;\n}\nfunction popProvider(context) {\n  context._currentValue = valueCursor.current;\n  pop(valueCursor);\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  for (; null !== parent; ) {\n    var alternate = parent.alternate;\n    (parent.childLanes & renderLanes) !== renderLanes\n      ? ((parent.childLanes |= renderLanes),\n        null !== alternate && (alternate.childLanes |= renderLanes))\n      : null !== alternate &&\n        (alternate.childLanes & renderLanes) !== renderLanes &&\n        (alternate.childLanes |= renderLanes);\n    if (parent === propagationRoot) break;\n    parent = parent.return;\n  }\n}\nfunction propagateContextChanges(\n  workInProgress,\n  contexts,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  var fiber = workInProgress.child;\n  null !== fiber && (fiber.return = workInProgress);\n  for (; null !== fiber; ) {\n    var list = fiber.dependencies;\n    if (null !== list) {\n      var nextFiber = fiber.child;\n      list = list.firstContext;\n      a: for (; null !== list; ) {\n        var dependency = list;\n        list = fiber;\n        for (var i = 0; i < contexts.length; i++)\n          if (dependency.context === contexts[i]) {\n            list.lanes |= renderLanes;\n            dependency = list.alternate;\n            null !== dependency && (dependency.lanes |= renderLanes);\n            scheduleContextWorkOnParentPath(\n              list.return,\n              renderLanes,\n              workInProgress\n            );\n            forcePropagateEntireTree || (nextFiber = null);\n            break a;\n          }\n        list = dependency.next;\n      }\n    } else if (18 === fiber.tag) {\n      nextFiber = fiber.return;\n      if (null === nextFiber) throw Error(formatProdErrorMessage(341));\n      nextFiber.lanes |= renderLanes;\n      list = nextFiber.alternate;\n      null !== list && (list.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);\n      nextFiber = null;\n    } else nextFiber = fiber.child;\n    if (null !== nextFiber) nextFiber.return = fiber;\n    else\n      for (nextFiber = fiber; null !== nextFiber; ) {\n        if (nextFiber === workInProgress) {\n          nextFiber = null;\n          break;\n        }\n        fiber = nextFiber.sibling;\n        if (null !== fiber) {\n          fiber.return = nextFiber.return;\n          nextFiber = fiber;\n          break;\n        }\n        nextFiber = nextFiber.return;\n      }\n    fiber = nextFiber;\n  }\n}\nfunction propagateParentContextChanges(\n  current,\n  workInProgress,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  current = null;\n  for (\n    var parent = workInProgress, isInsidePropagationBailout = !1;\n    null !== parent;\n\n  ) {\n    if (!isInsidePropagationBailout)\n      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n      else if (0 !== (parent.flags & 262144)) break;\n    if (10 === parent.tag) {\n      var currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent = currentParent.memoizedProps;\n      if (null !== currentParent) {\n        var context = parent.type;\n        objectIs(parent.pendingProps.value, currentParent.value) ||\n          (null !== current ? current.push(context) : (current = [context]));\n      }\n    } else if (parent === hostTransitionProviderCursor.current) {\n      currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent.memoizedState.memoizedState !==\n        parent.memoizedState.memoizedState &&\n        (null !== current\n          ? current.push(HostTransitionContext)\n          : (current = [HostTransitionContext]));\n    }\n    parent = parent.return;\n  }\n  null !== current &&\n    propagateContextChanges(\n      workInProgress,\n      current,\n      renderLanes,\n      forcePropagateEntireTree\n    );\n  workInProgress.flags |= 262144;\n}\nfunction checkIfContextChanged(currentDependencies) {\n  for (\n    currentDependencies = currentDependencies.firstContext;\n    null !== currentDependencies;\n\n  ) {\n    if (\n      !objectIs(\n        currentDependencies.context._currentValue,\n        currentDependencies.memoizedValue\n      )\n    )\n      return !0;\n    currentDependencies = currentDependencies.next;\n  }\n  return !1;\n}\nfunction prepareToReadContext(workInProgress) {\n  currentlyRenderingFiber$1 = workInProgress;\n  lastContextDependency = null;\n  workInProgress = workInProgress.dependencies;\n  null !== workInProgress && (workInProgress.firstContext = null);\n}\nfunction readContext(context) {\n  return readContextForConsumer(currentlyRenderingFiber$1, context);\n}\nfunction readContextDuringReconciliation(consumer, context) {\n  null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);\n  return readContextForConsumer(consumer, context);\n}\nfunction readContextForConsumer(consumer, context) {\n  var value = context._currentValue;\n  context = { context: context, memoizedValue: value, next: null };\n  if (null === lastContextDependency) {\n    if (null === consumer) throw Error(formatProdErrorMessage(308));\n    lastContextDependency = context;\n    consumer.dependencies = { lanes: 0, firstContext: context };\n    consumer.flags |= 524288;\n  } else lastContextDependency = lastContextDependency.next = context;\n  return value;\n}\nvar AbortControllerLocal =\n    \"undefined\" !== typeof AbortController\n      ? AbortController\n      : function () {\n          var listeners = [],\n            signal = (this.signal = {\n              aborted: !1,\n              addEventListener: function (type, listener) {\n                listeners.push(listener);\n              }\n            });\n          this.abort = function () {\n            signal.aborted = !0;\n            listeners.forEach(function (listener) {\n              return listener();\n            });\n          };\n        },\n  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n  NormalPriority = Scheduler.unstable_NormalPriority,\n  CacheContext = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0\n  };\nfunction createCache() {\n  return {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction releaseCache(cache) {\n  cache.refCount--;\n  0 === cache.refCount &&\n    scheduleCallback$2(NormalPriority, function () {\n      cache.controller.abort();\n    });\n}\nvar currentEntangledListeners = null,\n  currentEntangledPendingCount = 0,\n  currentEntangledLane = 0,\n  currentEntangledActionThenable = null;\nfunction entangleAsyncAction(transition, thenable) {\n  if (null === currentEntangledListeners) {\n    var entangledListeners = (currentEntangledListeners = []);\n    currentEntangledPendingCount = 0;\n    currentEntangledLane = requestTransitionLane();\n    currentEntangledActionThenable = {\n      status: \"pending\",\n      value: void 0,\n      then: function (resolve) {\n        entangledListeners.push(resolve);\n      }\n    };\n  }\n  currentEntangledPendingCount++;\n  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n  return thenable;\n}\nfunction pingEngtangledActionScope() {\n  if (\n    0 === --currentEntangledPendingCount &&\n    null !== currentEntangledListeners\n  ) {\n    null !== currentEntangledActionThenable &&\n      (currentEntangledActionThenable.status = \"fulfilled\");\n    var listeners = currentEntangledListeners;\n    currentEntangledListeners = null;\n    currentEntangledLane = 0;\n    currentEntangledActionThenable = null;\n    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n  }\n}\nfunction chainThenableValue(thenable, result) {\n  var listeners = [],\n    thenableWithOverride = {\n      status: \"pending\",\n      value: null,\n      reason: null,\n      then: function (resolve) {\n        listeners.push(resolve);\n      }\n    };\n  thenable.then(\n    function () {\n      thenableWithOverride.status = \"fulfilled\";\n      thenableWithOverride.value = result;\n      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n    },\n    function (error) {\n      thenableWithOverride.status = \"rejected\";\n      thenableWithOverride.reason = error;\n      for (error = 0; error < listeners.length; error++)\n        (0, listeners[error])(void 0);\n    }\n  );\n  return thenableWithOverride;\n}\nvar prevOnStartTransitionFinish = ReactSharedInternals.S;\nReactSharedInternals.S = function (transition, returnValue) {\n  \"object\" === typeof returnValue &&\n    null !== returnValue &&\n    \"function\" === typeof returnValue.then &&\n    entangleAsyncAction(transition, returnValue);\n  null !== prevOnStartTransitionFinish &&\n    prevOnStartTransitionFinish(transition, returnValue);\n};\nvar resumedCache = createCursor(null);\nfunction peekCacheFromPool() {\n  var cacheResumedFromPreviousRender = resumedCache.current;\n  return null !== cacheResumedFromPreviousRender\n    ? cacheResumedFromPreviousRender\n    : workInProgressRoot.pooledCache;\n}\nfunction pushTransition(offscreenWorkInProgress, prevCachePool) {\n  null === prevCachePool\n    ? push(resumedCache, resumedCache.current)\n    : push(resumedCache, prevCachePool.pool);\n}\nfunction getSuspendedCache() {\n  var cacheFromPool = peekCacheFromPool();\n  return null === cacheFromPool\n    ? null\n    : { parent: CacheContext._currentValue, pool: cacheFromPool };\n}\nvar SuspenseException = Error(formatProdErrorMessage(460)),\n  SuspenseyCommitException = Error(formatProdErrorMessage(474)),\n  SuspenseActionException = Error(formatProdErrorMessage(542)),\n  noopSuspenseyCommitThenable = { then: function () {} };\nfunction isThenableResolved(thenable) {\n  thenable = thenable.status;\n  return \"fulfilled\" === thenable || \"rejected\" === thenable;\n}\nfunction noop$3() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw (\n        ((thenableState = thenable.reason),\n        checkIfUseWrappedInAsyncCatch(thenableState),\n        thenableState)\n      );\n    default:\n      if (\"string\" === typeof thenable.status) thenable.then(noop$3, noop$3);\n      else {\n        thenableState = workInProgressRoot;\n        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)\n          throw Error(formatProdErrorMessage(482));\n        thenableState = thenable;\n        thenableState.status = \"pending\";\n        thenableState.then(\n          function (fulfilledValue) {\n            if (\"pending\" === thenable.status) {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = \"fulfilled\";\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          function (error) {\n            if (\"pending\" === thenable.status) {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = \"rejected\";\n              rejectedThenable.reason = error;\n            }\n          }\n        );\n      }\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw (\n            ((thenableState = thenable.reason),\n            checkIfUseWrappedInAsyncCatch(thenableState),\n            thenableState)\n          );\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nfunction checkIfUseWrappedInAsyncCatch(rejectedReason) {\n  if (\n    rejectedReason === SuspenseException ||\n    rejectedReason === SuspenseActionException\n  )\n    throw Error(formatProdErrorMessage(483));\n}\nvar hasForceUpdate = !1;\nfunction initializeUpdateQueue(fiber) {\n  fiber.updateQueue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n    callbacks: null\n  };\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  current = current.updateQueue;\n  workInProgress.updateQueue === current &&\n    (workInProgress.updateQueue = {\n      baseState: current.baseState,\n      firstBaseUpdate: current.firstBaseUpdate,\n      lastBaseUpdate: current.lastBaseUpdate,\n      shared: current.shared,\n      callbacks: null\n    });\n}\nfunction createUpdate(lane) {\n  return { lane: lane, tag: 0, payload: null, callback: null, next: null };\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n  if (null === updateQueue) return null;\n  updateQueue = updateQueue.shared;\n  if (0 !== (executionContext & 2)) {\n    var pending = updateQueue.pending;\n    null === pending\n      ? (update.next = update)\n      : ((update.next = pending.next), (pending.next = update));\n    updateQueue.pending = update;\n    update = getRootForUpdatedFiber(fiber);\n    markUpdateLaneFromFiberToRoot(fiber, null, lane);\n    return update;\n  }\n  enqueueUpdate$1(fiber, updateQueue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction entangleTransitions(root, fiber, lane) {\n  fiber = fiber.updateQueue;\n  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {\n    var queueLanes = fiber.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    fiber.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  var queue = workInProgress.updateQueue,\n    current = workInProgress.alternate;\n  if (\n    null !== current &&\n    ((current = current.updateQueue), queue === current)\n  ) {\n    var newFirst = null,\n      newLast = null;\n    queue = queue.firstBaseUpdate;\n    if (null !== queue) {\n      do {\n        var clone = {\n          lane: queue.lane,\n          tag: queue.tag,\n          payload: queue.payload,\n          callback: null,\n          next: null\n        };\n        null === newLast\n          ? (newFirst = newLast = clone)\n          : (newLast = newLast.next = clone);\n        queue = queue.next;\n      } while (null !== queue);\n      null === newLast\n        ? (newFirst = newLast = capturedUpdate)\n        : (newLast = newLast.next = capturedUpdate);\n    } else newFirst = newLast = capturedUpdate;\n    queue = {\n      baseState: current.baseState,\n      firstBaseUpdate: newFirst,\n      lastBaseUpdate: newLast,\n      shared: current.shared,\n      callbacks: current.callbacks\n    };\n    workInProgress.updateQueue = queue;\n    return;\n  }\n  workInProgress = queue.lastBaseUpdate;\n  null === workInProgress\n    ? (queue.firstBaseUpdate = capturedUpdate)\n    : (workInProgress.next = capturedUpdate);\n  queue.lastBaseUpdate = capturedUpdate;\n}\nvar didReadFromEntangledAsyncAction = !1;\nfunction suspendIfUpdateReadFromEntangledAsyncAction() {\n  if (didReadFromEntangledAsyncAction) {\n    var entangledActionThenable = currentEntangledActionThenable;\n    if (null !== entangledActionThenable) throw entangledActionThenable;\n  }\n}\nfunction processUpdateQueue(\n  workInProgress$jscomp$0,\n  props,\n  instance$jscomp$0,\n  renderLanes\n) {\n  didReadFromEntangledAsyncAction = !1;\n  var queue = workInProgress$jscomp$0.updateQueue;\n  hasForceUpdate = !1;\n  var firstBaseUpdate = queue.firstBaseUpdate,\n    lastBaseUpdate = queue.lastBaseUpdate,\n    pendingQueue = queue.shared.pending;\n  if (null !== pendingQueue) {\n    queue.shared.pending = null;\n    var lastPendingUpdate = pendingQueue,\n      firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    null === lastBaseUpdate\n      ? (firstBaseUpdate = firstPendingUpdate)\n      : (lastBaseUpdate.next = firstPendingUpdate);\n    lastBaseUpdate = lastPendingUpdate;\n    var current = workInProgress$jscomp$0.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      (pendingQueue = current.lastBaseUpdate),\n      pendingQueue !== lastBaseUpdate &&\n        (null === pendingQueue\n          ? (current.firstBaseUpdate = firstPendingUpdate)\n          : (pendingQueue.next = firstPendingUpdate),\n        (current.lastBaseUpdate = lastPendingUpdate)));\n  }\n  if (null !== firstBaseUpdate) {\n    var newState = queue.baseState;\n    lastBaseUpdate = 0;\n    current = firstPendingUpdate = lastPendingUpdate = null;\n    pendingQueue = firstBaseUpdate;\n    do {\n      var updateLane = pendingQueue.lane & -536870913,\n        isHiddenUpdate = updateLane !== pendingQueue.lane;\n      if (\n        isHiddenUpdate\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        0 !== updateLane &&\n          updateLane === currentEntangledLane &&\n          (didReadFromEntangledAsyncAction = !0);\n        null !== current &&\n          (current = current.next =\n            {\n              lane: 0,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: null,\n              next: null\n            });\n        a: {\n          var workInProgress = workInProgress$jscomp$0,\n            update = pendingQueue;\n          updateLane = props;\n          var instance = instance$jscomp$0;\n          switch (update.tag) {\n            case 1:\n              workInProgress = update.payload;\n              if (\"function\" === typeof workInProgress) {\n                newState = workInProgress.call(instance, newState, updateLane);\n                break a;\n              }\n              newState = workInProgress;\n              break a;\n            case 3:\n              workInProgress.flags = (workInProgress.flags & -65537) | 128;\n            case 0:\n              workInProgress = update.payload;\n              updateLane =\n                \"function\" === typeof workInProgress\n                  ? workInProgress.call(instance, newState, updateLane)\n                  : workInProgress;\n              if (null === updateLane || void 0 === updateLane) break a;\n              newState = assign({}, newState, updateLane);\n              break a;\n            case 2:\n              hasForceUpdate = !0;\n          }\n        }\n        updateLane = pendingQueue.callback;\n        null !== updateLane &&\n          ((workInProgress$jscomp$0.flags |= 64),\n          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),\n          (isHiddenUpdate = queue.callbacks),\n          null === isHiddenUpdate\n            ? (queue.callbacks = [updateLane])\n            : isHiddenUpdate.push(updateLane));\n      } else\n        (isHiddenUpdate = {\n          lane: updateLane,\n          tag: pendingQueue.tag,\n          payload: pendingQueue.payload,\n          callback: pendingQueue.callback,\n          next: null\n        }),\n          null === current\n            ? ((firstPendingUpdate = current = isHiddenUpdate),\n              (lastPendingUpdate = newState))\n            : (current = current.next = isHiddenUpdate),\n          (lastBaseUpdate |= updateLane);\n      pendingQueue = pendingQueue.next;\n      if (null === pendingQueue)\n        if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n          break;\n        else\n          (isHiddenUpdate = pendingQueue),\n            (pendingQueue = isHiddenUpdate.next),\n            (isHiddenUpdate.next = null),\n            (queue.lastBaseUpdate = isHiddenUpdate),\n            (queue.shared.pending = null);\n    } while (1);\n    null === current && (lastPendingUpdate = newState);\n    queue.baseState = lastPendingUpdate;\n    queue.firstBaseUpdate = firstPendingUpdate;\n    queue.lastBaseUpdate = current;\n    null === firstBaseUpdate && (queue.shared.lanes = 0);\n    workInProgressRootSkippedLanes |= lastBaseUpdate;\n    workInProgress$jscomp$0.lanes = lastBaseUpdate;\n    workInProgress$jscomp$0.memoizedState = newState;\n  }\n}\nfunction callCallback(callback, context) {\n  if (\"function\" !== typeof callback)\n    throw Error(formatProdErrorMessage(191, callback));\n  callback.call(context);\n}\nfunction commitCallbacks(updateQueue, context) {\n  var callbacks = updateQueue.callbacks;\n  if (null !== callbacks)\n    for (\n      updateQueue.callbacks = null, updateQueue = 0;\n      updateQueue < callbacks.length;\n      updateQueue++\n    )\n      callCallback(callbacks[updateQueue], context);\n}\nvar currentTreeHiddenStackCursor = createCursor(null),\n  prevEntangledRenderLanesCursor = createCursor(0);\nfunction pushHiddenContext(fiber, context) {\n  fiber = entangledRenderLanes;\n  push(prevEntangledRenderLanesCursor, fiber);\n  push(currentTreeHiddenStackCursor, context);\n  entangledRenderLanes = fiber | context.baseLanes;\n}\nfunction reuseHiddenContextOnStack() {\n  push(prevEntangledRenderLanesCursor, entangledRenderLanes);\n  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);\n}\nfunction popHiddenContext() {\n  entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n  pop(currentTreeHiddenStackCursor);\n  pop(prevEntangledRenderLanesCursor);\n}\nvar renderLanes = 0,\n  currentlyRenderingFiber = null,\n  currentHook = null,\n  workInProgressHook = null,\n  didScheduleRenderPhaseUpdate = !1,\n  didScheduleRenderPhaseUpdateDuringThisPass = !1,\n  shouldDoubleInvokeUserFnsInHooksDEV = !1,\n  localIdCounter = 0,\n  thenableIndexCounter$1 = 0,\n  thenableState$1 = null,\n  globalClientIdCounter = 0;\nfunction throwInvalidHookError() {\n  throw Error(formatProdErrorMessage(321));\n}\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (null === prevDeps) return !1;\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n  return !0;\n}\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = 0;\n  ReactSharedInternals.H =\n    null === current || null === current.memoizedState\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  nextRenderLanes = Component(props, secondArg);\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  didScheduleRenderPhaseUpdateDuringThisPass &&\n    (nextRenderLanes = renderWithHooksAgain(\n      workInProgress,\n      Component,\n      props,\n      secondArg\n    ));\n  finishRenderingHooks(current);\n  return nextRenderLanes;\n}\nfunction finishRenderingHooks(current) {\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdate = !1;\n  thenableIndexCounter$1 = 0;\n  thenableState$1 = null;\n  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));\n  null === current ||\n    didReceiveUpdate ||\n    ((current = current.dependencies),\n    null !== current &&\n      checkIfContextChanged(current) &&\n      (didReceiveUpdate = !0));\n}\nfunction renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n  currentlyRenderingFiber = workInProgress;\n  var numberOfReRenders = 0;\n  do {\n    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);\n    thenableIndexCounter$1 = 0;\n    didScheduleRenderPhaseUpdateDuringThisPass = !1;\n    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));\n    numberOfReRenders += 1;\n    workInProgressHook = currentHook = null;\n    if (null != workInProgress.updateQueue) {\n      var children = workInProgress.updateQueue;\n      children.lastEffect = null;\n      children.events = null;\n      children.stores = null;\n      null != children.memoCache && (children.memoCache.index = 0);\n    }\n    ReactSharedInternals.H = HooksDispatcherOnRerender;\n    children = Component(props, secondArg);\n  } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  return children;\n}\nfunction TransitionAwareHostComponent() {\n  var dispatcher = ReactSharedInternals.H,\n    maybeThenable = dispatcher.useState()[0];\n  maybeThenable =\n    \"function\" === typeof maybeThenable.then\n      ? useThenable(maybeThenable)\n      : maybeThenable;\n  dispatcher = dispatcher.useState()[0];\n  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&\n    (currentlyRenderingFiber.flags |= 1024);\n  return maybeThenable;\n}\nfunction checkDidRenderIdHook() {\n  var didRenderIdHook = 0 !== localIdCounter;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= -2053;\n  current.lanes &= ~lanes;\n}\nfunction resetHooksOnUnwind(workInProgress) {\n  if (didScheduleRenderPhaseUpdate) {\n    for (\n      workInProgress = workInProgress.memoizedState;\n      null !== workInProgress;\n\n    ) {\n      var queue = workInProgress.queue;\n      null !== queue && (queue.pending = null);\n      workInProgress = workInProgress.next;\n    }\n    didScheduleRenderPhaseUpdate = !1;\n  }\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber = null;\n  didScheduleRenderPhaseUpdateDuringThisPass = !1;\n  thenableIndexCounter$1 = localIdCounter = 0;\n  thenableState$1 = null;\n}\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === workInProgressHook\n    ? (currentlyRenderingFiber.memoizedState = workInProgressHook = hook)\n    : (workInProgressHook = workInProgressHook.next = hook);\n  return workInProgressHook;\n}\nfunction updateWorkInProgressHook() {\n  if (null === currentHook) {\n    var nextCurrentHook = currentlyRenderingFiber.alternate;\n    nextCurrentHook =\n      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n  } else nextCurrentHook = currentHook.next;\n  var nextWorkInProgressHook =\n    null === workInProgressHook\n      ? currentlyRenderingFiber.memoizedState\n      : workInProgressHook.next;\n  if (null !== nextWorkInProgressHook)\n    (workInProgressHook = nextWorkInProgressHook),\n      (currentHook = nextCurrentHook);\n  else {\n    if (null === nextCurrentHook) {\n      if (null === currentlyRenderingFiber.alternate)\n        throw Error(formatProdErrorMessage(467));\n      throw Error(formatProdErrorMessage(310));\n    }\n    currentHook = nextCurrentHook;\n    nextCurrentHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n    null === workInProgressHook\n      ? (currentlyRenderingFiber.memoizedState = workInProgressHook =\n          nextCurrentHook)\n      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n  }\n  return workInProgressHook;\n}\nfunction createFunctionComponentUpdateQueue() {\n  return { lastEffect: null, events: null, stores: null, memoCache: null };\n}\nfunction useThenable(thenable) {\n  var index = thenableIndexCounter$1;\n  thenableIndexCounter$1 += 1;\n  null === thenableState$1 && (thenableState$1 = []);\n  thenable = trackUsedThenable(thenableState$1, thenable, index);\n  index = currentlyRenderingFiber;\n  null ===\n    (null === workInProgressHook\n      ? index.memoizedState\n      : workInProgressHook.next) &&\n    ((index = index.alternate),\n    (ReactSharedInternals.H =\n      null === index || null === index.memoizedState\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate));\n  return thenable;\n}\nfunction use(usable) {\n  if (null !== usable && \"object\" === typeof usable) {\n    if (\"function\" === typeof usable.then) return useThenable(usable);\n    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n  }\n  throw Error(formatProdErrorMessage(438, String(usable)));\n}\nfunction useMemoCache(size) {\n  var memoCache = null,\n    updateQueue = currentlyRenderingFiber.updateQueue;\n  null !== updateQueue && (memoCache = updateQueue.memoCache);\n  if (null == memoCache) {\n    var current = currentlyRenderingFiber.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      null !== current &&\n        ((current = current.memoCache),\n        null != current &&\n          (memoCache = {\n            data: current.data.map(function (array) {\n              return array.slice();\n            }),\n            index: 0\n          })));\n  }\n  null == memoCache && (memoCache = { data: [], index: 0 });\n  null === updateQueue &&\n    ((updateQueue = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = updateQueue));\n  updateQueue.memoCache = memoCache;\n  updateQueue = memoCache.data[memoCache.index];\n  if (void 0 === updateQueue)\n    for (\n      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;\n      current < size;\n      current++\n    )\n      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n  memoCache.index++;\n  return updateQueue;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction updateReducer(reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateReducerImpl(hook, currentHook, reducer);\n}\nfunction updateReducerImpl(hook, current, reducer) {\n  var queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var baseQueue = hook.baseQueue,\n    pendingQueue = queue.pending;\n  if (null !== pendingQueue) {\n    if (null !== baseQueue) {\n      var baseFirst = baseQueue.next;\n      baseQueue.next = pendingQueue.next;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  pendingQueue = hook.baseState;\n  if (null === baseQueue) hook.memoizedState = pendingQueue;\n  else {\n    current = baseQueue.next;\n    var newBaseQueueFirst = (baseFirst = null),\n      newBaseQueueLast = null,\n      update = current,\n      didReadFromEntangledAsyncAction$32 = !1;\n    do {\n      var updateLane = update.lane & -536870913;\n      if (\n        updateLane !== update.lane\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        var revertLane = update.revertLane;\n        if (0 === revertLane)\n          null !== newBaseQueueLast &&\n            (newBaseQueueLast = newBaseQueueLast.next =\n              {\n                lane: 0,\n                revertLane: 0,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n            updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction$32 = !0);\n        else if ((renderLanes & revertLane) === revertLane) {\n          update = update.next;\n          revertLane === currentEntangledLane &&\n            (didReadFromEntangledAsyncAction$32 = !0);\n          continue;\n        } else\n          (updateLane = {\n            lane: 0,\n            revertLane: update.revertLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          }),\n            null === newBaseQueueLast\n              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                (baseFirst = pendingQueue))\n              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n            (currentlyRenderingFiber.lanes |= revertLane),\n            (workInProgressRootSkippedLanes |= revertLane);\n        updateLane = update.action;\n        shouldDoubleInvokeUserFnsInHooksDEV &&\n          reducer(pendingQueue, updateLane);\n        pendingQueue = update.hasEagerState\n          ? update.eagerState\n          : reducer(pendingQueue, updateLane);\n      } else\n        (revertLane = {\n          lane: updateLane,\n          revertLane: update.revertLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        }),\n          null === newBaseQueueLast\n            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n              (baseFirst = pendingQueue))\n            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n          (currentlyRenderingFiber.lanes |= updateLane),\n          (workInProgressRootSkippedLanes |= updateLane);\n      update = update.next;\n    } while (null !== update && update !== current);\n    null === newBaseQueueLast\n      ? (baseFirst = pendingQueue)\n      : (newBaseQueueLast.next = newBaseQueueFirst);\n    if (\n      !objectIs(pendingQueue, hook.memoizedState) &&\n      ((didReceiveUpdate = !0),\n      didReadFromEntangledAsyncAction$32 &&\n        ((reducer = currentEntangledActionThenable), null !== reducer))\n    )\n      throw reducer;\n    hook.memoizedState = pendingQueue;\n    hook.baseState = baseFirst;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = pendingQueue;\n  }\n  null === baseQueue && (queue.lanes = 0);\n  return [hook.memoizedState, queue.dispatch];\n}\nfunction rerenderReducer(reducer) {\n  var hook = updateWorkInProgressHook(),\n    queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var dispatch = queue.dispatch,\n    lastRenderPhaseUpdate = queue.pending,\n    newState = hook.memoizedState;\n  if (null !== lastRenderPhaseUpdate) {\n    queue.pending = null;\n    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n    do (newState = reducer(newState, update.action)), (update = update.next);\n    while (update !== lastRenderPhaseUpdate);\n    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n    hook.memoizedState = newState;\n    null === hook.baseQueue && (hook.baseState = newState);\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber,\n    hook = updateWorkInProgressHook(),\n    isHydrating$jscomp$0 = isHydrating;\n  if (isHydrating$jscomp$0) {\n    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));\n    getServerSnapshot = getServerSnapshot();\n  } else getServerSnapshot = getSnapshot();\n  var snapshotChanged = !objectIs(\n    (currentHook || hook).memoizedState,\n    getServerSnapshot\n  );\n  snapshotChanged &&\n    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));\n  hook = hook.queue;\n  var create = subscribeToStore.bind(null, fiber, hook, subscribe);\n  updateEffectImpl(2048, 8, create, [subscribe]);\n  if (\n    hook.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)\n  ) {\n    fiber.flags |= 2048;\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        hook,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      null\n    );\n    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n    isHydrating$jscomp$0 ||\n      0 !== (renderLanes & 124) ||\n      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n  }\n  return getServerSnapshot;\n}\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= 16384;\n  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n  getSnapshot = currentlyRenderingFiber.updateQueue;\n  null === getSnapshot\n    ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n      (currentlyRenderingFiber.updateQueue = getSnapshot),\n      (getSnapshot.stores = [fiber]))\n    : ((renderedSnapshot = getSnapshot.stores),\n      null === renderedSnapshot\n        ? (getSnapshot.stores = [fiber])\n        : renderedSnapshot.push(fiber));\n}\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n}\nfunction subscribeToStore(fiber, inst, subscribe) {\n  return subscribe(function () {\n    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n  });\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, 2);\n  null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n}\nfunction mountStateImpl(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (\"function\" === typeof initialState) {\n    var initialStateInitializer = initialState;\n    initialState = initialStateInitializer();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        initialStateInitializer();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  hook.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  return hook;\n}\nfunction updateOptimisticImpl(hook, current, passthrough, reducer) {\n  hook.baseState = passthrough;\n  return updateReducerImpl(\n    hook,\n    currentHook,\n    \"function\" === typeof reducer ? reducer : basicStateReducer\n  );\n}\nfunction dispatchActionState(\n  fiber,\n  actionQueue,\n  setPendingState,\n  setState,\n  payload\n) {\n  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));\n  fiber = actionQueue.action;\n  if (null !== fiber) {\n    var actionNode = {\n      payload: payload,\n      action: fiber,\n      next: null,\n      isTransition: !0,\n      status: \"pending\",\n      value: null,\n      reason: null,\n      listeners: [],\n      then: function (listener) {\n        actionNode.listeners.push(listener);\n      }\n    };\n    null !== ReactSharedInternals.T\n      ? setPendingState(!0)\n      : (actionNode.isTransition = !1);\n    setState(actionNode);\n    setPendingState = actionQueue.pending;\n    null === setPendingState\n      ? ((actionNode.next = actionQueue.pending = actionNode),\n        runActionStateAction(actionQueue, actionNode))\n      : ((actionNode.next = setPendingState.next),\n        (actionQueue.pending = setPendingState.next = actionNode));\n  }\n}\nfunction runActionStateAction(actionQueue, node) {\n  var action = node.action,\n    payload = node.payload,\n    prevState = actionQueue.state;\n  if (node.isTransition) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    try {\n      var returnValue = action(prevState, payload),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish &&\n        onStartTransitionFinish(currentTransition, returnValue);\n      handleActionReturnValue(actionQueue, node, returnValue);\n    } catch (error) {\n      onActionError(actionQueue, node, error);\n    } finally {\n      ReactSharedInternals.T = prevTransition;\n    }\n  } else\n    try {\n      (prevTransition = action(prevState, payload)),\n        handleActionReturnValue(actionQueue, node, prevTransition);\n    } catch (error$38) {\n      onActionError(actionQueue, node, error$38);\n    }\n}\nfunction handleActionReturnValue(actionQueue, node, returnValue) {\n  null !== returnValue &&\n  \"object\" === typeof returnValue &&\n  \"function\" === typeof returnValue.then\n    ? returnValue.then(\n        function (nextState) {\n          onActionSuccess(actionQueue, node, nextState);\n        },\n        function (error) {\n          return onActionError(actionQueue, node, error);\n        }\n      )\n    : onActionSuccess(actionQueue, node, returnValue);\n}\nfunction onActionSuccess(actionQueue, actionNode, nextState) {\n  actionNode.status = \"fulfilled\";\n  actionNode.value = nextState;\n  notifyActionListeners(actionNode);\n  actionQueue.state = nextState;\n  actionNode = actionQueue.pending;\n  null !== actionNode &&\n    ((nextState = actionNode.next),\n    nextState === actionNode\n      ? (actionQueue.pending = null)\n      : ((nextState = nextState.next),\n        (actionNode.next = nextState),\n        runActionStateAction(actionQueue, nextState)));\n}\nfunction onActionError(actionQueue, actionNode, error) {\n  var last = actionQueue.pending;\n  actionQueue.pending = null;\n  if (null !== last) {\n    last = last.next;\n    do\n      (actionNode.status = \"rejected\"),\n        (actionNode.reason = error),\n        notifyActionListeners(actionNode),\n        (actionNode = actionNode.next);\n    while (actionNode !== last);\n  }\n  actionQueue.action = null;\n}\nfunction notifyActionListeners(actionNode) {\n  actionNode = actionNode.listeners;\n  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n}\nfunction actionStateReducer(oldState, newState) {\n  return newState;\n}\nfunction mountActionState(action, initialStateProp) {\n  if (isHydrating) {\n    var ssrFormState = workInProgressRoot.formState;\n    if (null !== ssrFormState) {\n      a: {\n        var JSCompiler_inline_result = currentlyRenderingFiber;\n        if (isHydrating) {\n          if (nextHydratableInstance) {\n            b: {\n              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;\n              for (\n                var inRootOrSingleton = rootOrSingletonContext;\n                8 !== JSCompiler_inline_result$jscomp$0.nodeType;\n\n              ) {\n                if (!inRootOrSingleton) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n                JSCompiler_inline_result$jscomp$0 = getNextHydratable(\n                  JSCompiler_inline_result$jscomp$0.nextSibling\n                );\n                if (null === JSCompiler_inline_result$jscomp$0) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n              }\n              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;\n              JSCompiler_inline_result$jscomp$0 =\n                \"F!\" === inRootOrSingleton || \"F\" === inRootOrSingleton\n                  ? JSCompiler_inline_result$jscomp$0\n                  : null;\n            }\n            if (JSCompiler_inline_result$jscomp$0) {\n              nextHydratableInstance = getNextHydratable(\n                JSCompiler_inline_result$jscomp$0.nextSibling\n              );\n              JSCompiler_inline_result =\n                \"F!\" === JSCompiler_inline_result$jscomp$0.data;\n              break a;\n            }\n          }\n          throwOnHydrationMismatch(JSCompiler_inline_result);\n        }\n        JSCompiler_inline_result = !1;\n      }\n      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);\n    }\n  }\n  ssrFormState = mountWorkInProgressHook();\n  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n  JSCompiler_inline_result = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: actionStateReducer,\n    lastRenderedState: initialStateProp\n  };\n  ssrFormState.queue = JSCompiler_inline_result;\n  ssrFormState = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result\n  );\n  JSCompiler_inline_result.dispatch = ssrFormState;\n  JSCompiler_inline_result = mountStateImpl(!1);\n  inRootOrSingleton = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    !1,\n    JSCompiler_inline_result.queue\n  );\n  JSCompiler_inline_result = mountWorkInProgressHook();\n  JSCompiler_inline_result$jscomp$0 = {\n    state: initialStateProp,\n    dispatch: null,\n    action: action,\n    pending: null\n  };\n  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;\n  ssrFormState = dispatchActionState.bind(\n    null,\n    currentlyRenderingFiber,\n    JSCompiler_inline_result$jscomp$0,\n    inRootOrSingleton,\n    ssrFormState\n  );\n  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;\n  JSCompiler_inline_result.memoizedState = action;\n  return [initialStateProp, ssrFormState, !1];\n}\nfunction updateActionState(action) {\n  var stateHook = updateWorkInProgressHook();\n  return updateActionStateImpl(stateHook, currentHook, action);\n}\nfunction updateActionStateImpl(stateHook, currentStateHook, action) {\n  currentStateHook = updateReducerImpl(\n    stateHook,\n    currentStateHook,\n    actionStateReducer\n  )[0];\n  stateHook = updateReducer(basicStateReducer)[0];\n  if (\n    \"object\" === typeof currentStateHook &&\n    null !== currentStateHook &&\n    \"function\" === typeof currentStateHook.then\n  )\n    try {\n      var state = useThenable(currentStateHook);\n    } catch (x) {\n      if (x === SuspenseException) throw SuspenseActionException;\n      throw x;\n    }\n  else state = currentStateHook;\n  currentStateHook = updateWorkInProgressHook();\n  var actionQueue = currentStateHook.queue,\n    dispatch = actionQueue.dispatch;\n  action !== currentStateHook.memoizedState &&\n    ((currentlyRenderingFiber.flags |= 2048),\n    pushSimpleEffect(\n      9,\n      createEffectInstance(),\n      actionStateActionEffect.bind(null, actionQueue, action),\n      null\n    ));\n  return [state, dispatch, stateHook];\n}\nfunction actionStateActionEffect(actionQueue, action) {\n  actionQueue.action = action;\n}\nfunction rerenderActionState(action) {\n  var stateHook = updateWorkInProgressHook(),\n    currentStateHook = currentHook;\n  if (null !== currentStateHook)\n    return updateActionStateImpl(stateHook, currentStateHook, action);\n  updateWorkInProgressHook();\n  stateHook = stateHook.memoizedState;\n  currentStateHook = updateWorkInProgressHook();\n  var dispatch = currentStateHook.queue.dispatch;\n  currentStateHook.memoizedState = action;\n  return [stateHook, dispatch, !1];\n}\nfunction pushSimpleEffect(tag, inst, create, createDeps) {\n  tag = { tag: tag, create: create, deps: createDeps, inst: inst, next: null };\n  inst = currentlyRenderingFiber.updateQueue;\n  null === inst &&\n    ((inst = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber.updateQueue = inst));\n  create = inst.lastEffect;\n  null === create\n    ? (inst.lastEffect = tag.next = tag)\n    : ((createDeps = create.next),\n      (create.next = tag),\n      (tag.next = createDeps),\n      (inst.lastEffect = tag));\n  return tag;\n}\nfunction createEffectInstance() {\n  return { destroy: void 0, resource: void 0 };\n}\nfunction updateRef() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {\n  var hook = mountWorkInProgressHook();\n  createDeps = void 0 === createDeps ? null : createDeps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushSimpleEffect(\n    1 | hookFlags,\n    createEffectInstance(),\n    create,\n    createDeps\n  );\n}\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var inst = hook.memoizedState.inst;\n  null !== currentHook &&\n  null !== deps &&\n  areHookInputsEqual(deps, currentHook.memoizedState.deps)\n    ? (hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps))\n    : ((currentlyRenderingFiber.flags |= fiberFlags),\n      (hook.memoizedState = pushSimpleEffect(\n        1 | hookFlags,\n        inst,\n        create,\n        deps\n      )));\n}\nfunction mountEffect(create, createDeps) {\n  mountEffectImpl(8390656, 8, create, createDeps);\n}\nfunction updateEffect(create, createDeps) {\n  updateEffectImpl(2048, 8, create, createDeps);\n}\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(4, 2, create, deps);\n}\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(4, 4, create, deps);\n}\nfunction imperativeHandleEffect(create, ref) {\n  if (\"function\" === typeof ref) {\n    create = create();\n    var refCleanup = ref(create);\n    return function () {\n      \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n    };\n  }\n  if (null !== ref && void 0 !== ref)\n    return (\n      (create = create()),\n      (ref.current = create),\n      function () {\n        ref.current = null;\n      }\n    );\n}\nfunction updateImperativeHandle(ref, create, deps) {\n  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);\n}\nfunction mountDebugValue() {}\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  hook.memoizedState = [callback, deps];\n  return callback;\n}\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  prevState = nextCreate();\n  if (shouldDoubleInvokeUserFnsInHooksDEV) {\n    setIsStrictModeForDevtools(!0);\n    try {\n      nextCreate();\n    } finally {\n      setIsStrictModeForDevtools(!1);\n    }\n  }\n  hook.memoizedState = [prevState, deps];\n  return prevState;\n}\nfunction mountDeferredValueImpl(hook, value, initialValue) {\n  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n    return (hook.memoizedState = value);\n  hook.memoizedState = initialValue;\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return initialValue;\n}\nfunction updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n  if (objectIs(value, prevValue)) return value;\n  if (null !== currentTreeHiddenStackCursor.current)\n    return (\n      (hook = mountDeferredValueImpl(hook, value, initialValue)),\n      objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n      hook\n    );\n  if (0 === (renderLanes & 42))\n    return (didReceiveUpdate = !0), (hook.memoizedState = value);\n  hook = requestDeferredLane();\n  currentlyRenderingFiber.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return prevValue;\n}\nfunction startTransition(fiber, queue, pendingState, finishedState, callback) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  ReactDOMSharedInternals.p =\n    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n  try {\n    var returnValue = callback(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    if (\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n    ) {\n      var thenableForFinishedState = chainThenableValue(\n        returnValue,\n        finishedState\n      );\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        thenableForFinishedState,\n        requestUpdateLane(fiber)\n      );\n    } else\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        finishedState,\n        requestUpdateLane(fiber)\n      );\n  } catch (error) {\n    dispatchSetStateInternal(\n      fiber,\n      queue,\n      { then: function () {}, status: \"rejected\", reason: error },\n      requestUpdateLane()\n    );\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction noop$2() {}\nfunction startHostTransition(formFiber, pendingState, action, formData) {\n  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));\n  var queue = ensureFormComponentIsStateful(formFiber).queue;\n  startTransition(\n    formFiber,\n    queue,\n    pendingState,\n    sharedNotPendingObject,\n    null === action\n      ? noop$2\n      : function () {\n          requestFormReset$1(formFiber);\n          return action(formData);\n        }\n  );\n}\nfunction ensureFormComponentIsStateful(formFiber) {\n  var existingStateHook = formFiber.memoizedState;\n  if (null !== existingStateHook) return existingStateHook;\n  existingStateHook = {\n    memoizedState: sharedNotPendingObject,\n    baseState: sharedNotPendingObject,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: sharedNotPendingObject\n    },\n    next: null\n  };\n  var initialResetState = {};\n  existingStateHook.next = {\n    memoizedState: initialResetState,\n    baseState: initialResetState,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: initialResetState\n    },\n    next: null\n  };\n  formFiber.memoizedState = existingStateHook;\n  formFiber = formFiber.alternate;\n  null !== formFiber && (formFiber.memoizedState = existingStateHook);\n  return existingStateHook;\n}\nfunction requestFormReset$1(formFiber) {\n  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());\n}\nfunction useHostTransitionStatus() {\n  return readContext(HostTransitionContext);\n}\nfunction updateId() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction updateRefresh() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction refreshCache(fiber) {\n  for (var provider = fiber.return; null !== provider; ) {\n    switch (provider.tag) {\n      case 24:\n      case 3:\n        var lane = requestUpdateLane();\n        fiber = createUpdate(lane);\n        var root$41 = enqueueUpdate(provider, fiber, lane);\n        null !== root$41 &&\n          (scheduleUpdateOnFiber(root$41, provider, lane),\n          entangleTransitions(root$41, provider, lane));\n        provider = { cache: createCache() };\n        fiber.payload = provider;\n        return;\n    }\n    provider = provider.return;\n  }\n}\nfunction dispatchReducerAction(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  action = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  isRenderPhaseUpdate(fiber)\n    ? enqueueRenderPhaseUpdate(queue, action)\n    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),\n      null !== action &&\n        (scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane)));\n}\nfunction dispatchSetState(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  dispatchSetStateInternal(fiber, queue, action, lane);\n}\nfunction dispatchSetStateInternal(fiber, queue, action, lane) {\n  var update = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n  else {\n    var alternate = fiber.alternate;\n    if (\n      0 === fiber.lanes &&\n      (null === alternate || 0 === alternate.lanes) &&\n      ((alternate = queue.lastRenderedReducer), null !== alternate)\n    )\n      try {\n        var currentState = queue.lastRenderedState,\n          eagerState = alternate(currentState, action);\n        update.hasEagerState = !0;\n        update.eagerState = eagerState;\n        if (objectIs(eagerState, currentState))\n          return (\n            enqueueUpdate$1(fiber, queue, update, 0),\n            null === workInProgressRoot && finishQueueingConcurrentUpdates(),\n            !1\n          );\n      } catch (error) {\n      } finally {\n      }\n    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (null !== action)\n      return (\n        scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane),\n        !0\n      );\n  }\n  return !1;\n}\nfunction dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {\n  action = {\n    lane: 2,\n    revertLane: requestTransitionLane(),\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) {\n    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));\n  } else\n    (throwIfDuringRender = enqueueConcurrentHookUpdate(\n      fiber,\n      queue,\n      action,\n      2\n    )),\n      null !== throwIfDuringRender &&\n        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n}\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber ||\n    (null !== alternate && alternate === currentlyRenderingFiber)\n  );\n}\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n    !0;\n  var pending = queue.pending;\n  null === pending\n    ? (update.next = update)\n    : ((update.next = pending.next), (pending.next = update));\n  queue.pending = update;\n}\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (0 !== (lane & 4194048)) {\n    var queueLanes = queue.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    queue.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nvar ContextOnlyDispatcher = {\n    readContext: readContext,\n    use: use,\n    useCallback: throwInvalidHookError,\n    useContext: throwInvalidHookError,\n    useEffect: throwInvalidHookError,\n    useImperativeHandle: throwInvalidHookError,\n    useLayoutEffect: throwInvalidHookError,\n    useInsertionEffect: throwInvalidHookError,\n    useMemo: throwInvalidHookError,\n    useReducer: throwInvalidHookError,\n    useRef: throwInvalidHookError,\n    useState: throwInvalidHookError,\n    useDebugValue: throwInvalidHookError,\n    useDeferredValue: throwInvalidHookError,\n    useTransition: throwInvalidHookError,\n    useSyncExternalStore: throwInvalidHookError,\n    useId: throwInvalidHookError,\n    useHostTransitionStatus: throwInvalidHookError,\n    useFormState: throwInvalidHookError,\n    useActionState: throwInvalidHookError,\n    useOptimistic: throwInvalidHookError,\n    useMemoCache: throwInvalidHookError,\n    useCacheRefresh: throwInvalidHookError\n  },\n  HooksDispatcherOnMount = {\n    readContext: readContext,\n    use: use,\n    useCallback: function (callback, deps) {\n      mountWorkInProgressHook().memoizedState = [\n        callback,\n        void 0 === deps ? null : deps\n      ];\n      return callback;\n    },\n    useContext: readContext,\n    useEffect: mountEffect,\n    useImperativeHandle: function (ref, create, deps) {\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n      mountEffectImpl(\n        4194308,\n        4,\n        imperativeHandleEffect.bind(null, create, ref),\n        deps\n      );\n    },\n    useLayoutEffect: function (create, deps) {\n      return mountEffectImpl(4194308, 4, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      mountEffectImpl(4, 2, create, deps);\n    },\n    useMemo: function (nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      deps = void 0 === deps ? null : deps;\n      var nextValue = nextCreate();\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          nextCreate();\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n      hook.memoizedState = [nextValue, deps];\n      return nextValue;\n    },\n    useReducer: function (reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      if (void 0 !== init) {\n        var initialState = init(initialArg);\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\n          setIsStrictModeForDevtools(!0);\n          try {\n            init(initialArg);\n          } finally {\n            setIsStrictModeForDevtools(!1);\n          }\n        }\n      } else initialState = initialArg;\n      hook.memoizedState = hook.baseState = initialState;\n      reducer = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = reducer;\n      reducer = reducer.dispatch = dispatchReducerAction.bind(\n        null,\n        currentlyRenderingFiber,\n        reducer\n      );\n      return [hook.memoizedState, reducer];\n    },\n    useRef: function (initialValue) {\n      var hook = mountWorkInProgressHook();\n      initialValue = { current: initialValue };\n      return (hook.memoizedState = initialValue);\n    },\n    useState: function (initialState) {\n      initialState = mountStateImpl(initialState);\n      var queue = initialState.queue,\n        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);\n      queue.dispatch = dispatch;\n      return [initialState.memoizedState, dispatch];\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = mountWorkInProgressHook();\n      return mountDeferredValueImpl(hook, value, initialValue);\n    },\n    useTransition: function () {\n      var stateHook = mountStateImpl(!1);\n      stateHook = startTransition.bind(\n        null,\n        currentlyRenderingFiber,\n        stateHook.queue,\n        !0,\n        !1\n      );\n      mountWorkInProgressHook().memoizedState = stateHook;\n      return [!1, stateHook];\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber,\n        hook = mountWorkInProgressHook();\n      if (isHydrating) {\n        if (void 0 === getServerSnapshot)\n          throw Error(formatProdErrorMessage(407));\n        getServerSnapshot = getServerSnapshot();\n      } else {\n        getServerSnapshot = getSnapshot();\n        if (null === workInProgressRoot)\n          throw Error(formatProdErrorMessage(349));\n        0 !== (workInProgressRootRenderLanes & 124) ||\n          pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n      }\n      hook.memoizedState = getServerSnapshot;\n      var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n        subscribe\n      ]);\n      fiber.flags |= 2048;\n      pushSimpleEffect(\n        9,\n        createEffectInstance(),\n        updateStoreInstance.bind(\n          null,\n          fiber,\n          inst,\n          getServerSnapshot,\n          getSnapshot\n        ),\n        null\n      );\n      return getServerSnapshot;\n    },\n    useId: function () {\n      var hook = mountWorkInProgressHook(),\n        identifierPrefix = workInProgressRoot.identifierPrefix;\n      if (isHydrating) {\n        var JSCompiler_inline_result = treeContextOverflow;\n        var idWithLeadingBit = treeContextId;\n        JSCompiler_inline_result =\n          (\n            idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n          ).toString(32) + JSCompiler_inline_result;\n        identifierPrefix =\n          \"\\u00ab\" + identifierPrefix + \"R\" + JSCompiler_inline_result;\n        JSCompiler_inline_result = localIdCounter++;\n        0 < JSCompiler_inline_result &&\n          (identifierPrefix += \"H\" + JSCompiler_inline_result.toString(32));\n        identifierPrefix += \"\\u00bb\";\n      } else\n        (JSCompiler_inline_result = globalClientIdCounter++),\n          (identifierPrefix =\n            \"\\u00ab\" +\n            identifierPrefix +\n            \"r\" +\n            JSCompiler_inline_result.toString(32) +\n            \"\\u00bb\");\n      return (hook.memoizedState = identifierPrefix);\n    },\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: mountActionState,\n    useActionState: mountActionState,\n    useOptimistic: function (passthrough) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = hook.baseState = passthrough;\n      var queue = {\n        pending: null,\n        lanes: 0,\n        dispatch: null,\n        lastRenderedReducer: null,\n        lastRenderedState: null\n      };\n      hook.queue = queue;\n      hook = dispatchOptimisticSetState.bind(\n        null,\n        currentlyRenderingFiber,\n        !0,\n        queue\n      );\n      queue.dispatch = hook;\n      return [passthrough, hook];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: function () {\n      return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n        null,\n        currentlyRenderingFiber\n      ));\n    }\n  },\n  HooksDispatcherOnUpdate = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: updateReducer,\n    useRef: updateRef,\n    useState: function () {\n      return updateReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return updateDeferredValueImpl(\n        hook,\n        currentHook.memoizedState,\n        value,\n        initialValue\n      );\n    },\n    useTransition: function () {\n      var booleanOrThenable = updateReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: updateActionState,\n    useActionState: updateActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  HooksDispatcherOnRerender = {\n    readContext: readContext,\n    use: use,\n    useCallback: updateCallback,\n    useContext: readContext,\n    useEffect: updateEffect,\n    useImperativeHandle: updateImperativeHandle,\n    useInsertionEffect: updateInsertionEffect,\n    useLayoutEffect: updateLayoutEffect,\n    useMemo: updateMemo,\n    useReducer: rerenderReducer,\n    useRef: updateRef,\n    useState: function () {\n      return rerenderReducer(basicStateReducer);\n    },\n    useDebugValue: mountDebugValue,\n    useDeferredValue: function (value, initialValue) {\n      var hook = updateWorkInProgressHook();\n      return null === currentHook\n        ? mountDeferredValueImpl(hook, value, initialValue)\n        : updateDeferredValueImpl(\n            hook,\n            currentHook.memoizedState,\n            value,\n            initialValue\n          );\n    },\n    useTransition: function () {\n      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n        start = updateWorkInProgressHook().memoizedState;\n      return [\n        \"boolean\" === typeof booleanOrThenable\n          ? booleanOrThenable\n          : useThenable(booleanOrThenable),\n        start\n      ];\n    },\n    useSyncExternalStore: updateSyncExternalStore,\n    useId: updateId,\n    useHostTransitionStatus: useHostTransitionStatus,\n    useFormState: rerenderActionState,\n    useActionState: rerenderActionState,\n    useOptimistic: function (passthrough, reducer) {\n      var hook = updateWorkInProgressHook();\n      if (null !== currentHook)\n        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n      hook.baseState = passthrough;\n      return [passthrough, hook.queue.dispatch];\n    },\n    useMemoCache: useMemoCache,\n    useCacheRefresh: updateRefresh\n  },\n  thenableState = null,\n  thenableIndexCounter = 0;\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  return trackUsedThenable(thenableState, thenable, index);\n}\nfunction coerceRef(workInProgress, element) {\n  element = element.props.ref;\n  workInProgress.ref = void 0 !== element ? element : null;\n}\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n    throw Error(formatProdErrorMessage(525));\n  returnFiber = Object.prototype.toString.call(newChild);\n  throw Error(\n    formatProdErrorMessage(\n      31,\n      \"[object Object]\" === returnFiber\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : returnFiber\n    )\n  );\n}\nfunction resolveLazy(lazyType) {\n  var init = lazyType._init;\n  return init(lazyType._payload);\n}\nfunction createChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (shouldTrackSideEffects) {\n      var deletions = returnFiber.deletions;\n      null === deletions\n        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))\n        : deletions.push(childToDelete);\n    }\n  }\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) return null;\n    for (; null !== currentFirstChild; )\n      deleteChild(returnFiber, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return null;\n  }\n  function mapRemainingChildren(currentFirstChild) {\n    for (var existingChildren = new Map(); null !== currentFirstChild; )\n      null !== currentFirstChild.key\n        ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n        : existingChildren.set(currentFirstChild.index, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return existingChildren;\n  }\n  function useFiber(fiber, pendingProps) {\n    fiber = createWorkInProgress(fiber, pendingProps);\n    fiber.index = 0;\n    fiber.sibling = null;\n    return fiber;\n  }\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects)\n      return (newFiber.flags |= 1048576), lastPlacedIndex;\n    newIndex = newFiber.alternate;\n    if (null !== newIndex)\n      return (\n        (newIndex = newIndex.index),\n        newIndex < lastPlacedIndex\n          ? ((newFiber.flags |= 67108866), lastPlacedIndex)\n          : newIndex\n      );\n    newFiber.flags |= 67108866;\n    return lastPlacedIndex;\n  }\n  function placeSingleChild(newFiber) {\n    shouldTrackSideEffects &&\n      null === newFiber.alternate &&\n      (newFiber.flags |= 67108866);\n    return newFiber;\n  }\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (null === current || 6 !== current.tag)\n      return (\n        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, textContent);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE)\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    if (\n      null !== current &&\n      (current.elementType === elementType ||\n        (\"object\" === typeof elementType &&\n          null !== elementType &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type))\n    )\n      return (\n        (current = useFiber(current, element.props)),\n        coerceRef(current, element),\n        (current.return = returnFiber),\n        current\n      );\n    current = createFiberFromTypeAndProps(\n      element.type,\n      element.key,\n      element.props,\n      null,\n      returnFiber.mode,\n      lanes\n    );\n    coerceRef(current, element);\n    current.return = returnFiber;\n    return current;\n  }\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      null === current ||\n      4 !== current.tag ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    )\n      return (\n        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, portal.children || []);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (null === current || 7 !== current.tag)\n      return (\n        (current = createFiberFromFragment(\n          fragment,\n          returnFiber.mode,\n          lanes,\n          key\n        )),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, fragment);\n    current.return = returnFiber;\n    return current;\n  }\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (newChild = createFiberFromText(\n          \"\" + newChild,\n          returnFiber.mode,\n          lanes\n        )),\n        (newChild.return = returnFiber),\n        newChild\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (lanes = createFiberFromTypeAndProps(\n              newChild.type,\n              newChild.key,\n              newChild.props,\n              null,\n              returnFiber.mode,\n              lanes\n            )),\n            coerceRef(lanes, newChild),\n            (lanes.return = returnFiber),\n            lanes\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (newChild = createFiberFromPortal(\n              newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            newChild\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return createChild(returnFiber, newChild, lanes);\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (newChild = createFiberFromFragment(\n            newChild,\n            returnFiber.mode,\n            lanes,\n            null\n          )),\n          (newChild.return = returnFiber),\n          newChild\n        );\n      if (\"function\" === typeof newChild.then)\n        return createChild(returnFiber, unwrapThenable(newChild), lanes);\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return createChild(\n          returnFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    var key = null !== oldFiber ? oldFiber.key : null;\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return null !== key\n        ? null\n        : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return newChild.key === key\n            ? updateElement(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_PORTAL_TYPE:\n          return newChild.key === key\n            ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            updateSlot(returnFiber, oldFiber, newChild, lanes)\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return null !== key\n          ? null\n          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      if (\"function\" === typeof newChild.then)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (existingChildren = existingChildren.get(newIdx) || null),\n        updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updateElement(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updatePortal(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            newChild,\n            lanes\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (existingChildren = existingChildren.get(newIdx) || null),\n          updateFragment(returnFiber, existingChildren, newChild, lanes, null)\n        );\n      if (\"function\" === typeof newChild.then)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null;\n      null !== oldFiber && newIdx < newChildren.length;\n      newIdx++\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (newIdx === newChildren.length)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; newIdx < newChildren.length; newIdx++)\n        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n          null !== oldFiber &&\n            ((currentFirstChild = placeChild(\n              oldFiber,\n              currentFirstChild,\n              newIdx\n            )),\n            null === previousNewFiber\n              ? (resultingFirstChild = oldFiber)\n              : (previousNewFiber.sibling = oldFiber),\n            (previousNewFiber = oldFiber));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      newIdx < newChildren.length;\n      newIdx++\n    )\n      (nextOldFiber = updateFromMap(\n        oldFiber,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      )),\n        null !== nextOldFiber &&\n          (shouldTrackSideEffects &&\n            null !== nextOldFiber.alternate &&\n            oldFiber.delete(\n              null === nextOldFiber.key ? newIdx : nextOldFiber.key\n            ),\n          (currentFirstChild = placeChild(\n            nextOldFiber,\n            currentFirstChild,\n            newIdx\n          )),\n          null === previousNewFiber\n            ? (resultingFirstChild = nextOldFiber)\n            : (previousNewFiber.sibling = nextOldFiber),\n          (previousNewFiber = nextOldFiber));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    if (null == newChildren) throw Error(formatProdErrorMessage(151));\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null,\n        step = newChildren.next();\n      null !== oldFiber && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (step.done)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; !step.done; newIdx++, step = newChildren.next())\n        (step = createChild(returnFiber, step.value, lanes)),\n          null !== step &&\n            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n            null === previousNewFiber\n              ? (resultingFirstChild = step)\n              : (previousNewFiber.sibling = step),\n            (previousNewFiber = step));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      !step.done;\n      newIdx++, step = newChildren.next()\n    )\n      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),\n        null !== step &&\n          (shouldTrackSideEffects &&\n            null !== step.alternate &&\n            oldFiber.delete(null === step.key ? newIdx : step.key),\n          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n          null === previousNewFiber\n            ? (resultingFirstChild = step)\n            : (previousNewFiber.sibling = step),\n          (previousNewFiber = step));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildFibersImpl(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    \"object\" === typeof newChild &&\n      null !== newChild &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      null === newChild.key &&\n      (newChild = newChild.props.children);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          a: {\n            for (var key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key) {\n                key = newChild.type;\n                if (key === REACT_FRAGMENT_TYPE) {\n                  if (7 === currentFirstChild.tag) {\n                    deleteRemainingChildren(\n                      returnFiber,\n                      currentFirstChild.sibling\n                    );\n                    lanes = useFiber(\n                      currentFirstChild,\n                      newChild.props.children\n                    );\n                    lanes.return = returnFiber;\n                    returnFiber = lanes;\n                    break a;\n                  }\n                } else if (\n                  currentFirstChild.elementType === key ||\n                  (\"object\" === typeof key &&\n                    null !== key &&\n                    key.$$typeof === REACT_LAZY_TYPE &&\n                    resolveLazy(key) === currentFirstChild.type)\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.props);\n                  coerceRef(lanes, newChild);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                }\n                deleteRemainingChildren(returnFiber, currentFirstChild);\n                break;\n              } else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            newChild.type === REACT_FRAGMENT_TYPE\n              ? ((lanes = createFiberFromFragment(\n                  newChild.props.children,\n                  returnFiber.mode,\n                  lanes,\n                  newChild.key\n                )),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : ((lanes = createFiberFromTypeAndProps(\n                  newChild.type,\n                  newChild.key,\n                  newChild.props,\n                  null,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes));\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_PORTAL_TYPE:\n          a: {\n            for (key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key)\n                if (\n                  4 === currentFirstChild.tag &&\n                  currentFirstChild.stateNode.containerInfo ===\n                    newChild.containerInfo &&\n                  currentFirstChild.stateNode.implementation ===\n                    newChild.implementation\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.children || []);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                } else {\n                  deleteRemainingChildren(returnFiber, currentFirstChild);\n                  break;\n                }\n              else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            lanes.return = returnFiber;\n            returnFiber = lanes;\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n      }\n      if (isArrayImpl(newChild))\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      if (getIteratorFn(newChild)) {\n        key = getIteratorFn(newChild);\n        if (\"function\" !== typeof key) throw Error(formatProdErrorMessage(150));\n        newChild = key.call(newChild);\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n      if (\"function\" === typeof newChild.then)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n      ? ((newChild = \"\" + newChild),\n        null !== currentFirstChild && 6 === currentFirstChild.tag\n          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),\n            (lanes = useFiber(currentFirstChild, newChild)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes))\n          : (deleteRemainingChildren(returnFiber, currentFirstChild),\n            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes)),\n        placeSingleChild(returnFiber))\n      : deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n  return function (returnFiber, currentFirstChild, newChild, lanes) {\n    try {\n      thenableIndexCounter = 0;\n      var firstChildFiber = reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      );\n      thenableState = null;\n      return firstChildFiber;\n    } catch (x) {\n      if (x === SuspenseException || x === SuspenseActionException) throw x;\n      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);\n      fiber.lanes = lanes;\n      fiber.return = returnFiber;\n      return fiber;\n    } finally {\n    }\n  };\n}\nvar reconcileChildFibers = createChildReconciler(!0),\n  mountChildFibers = createChildReconciler(!1),\n  suspenseHandlerStackCursor = createCursor(null),\n  shellBoundary = null;\nfunction pushPrimaryTreeSuspenseHandler(handler) {\n  var current = handler.alternate;\n  push(suspenseStackCursor, suspenseStackCursor.current & 1);\n  push(suspenseHandlerStackCursor, handler);\n  null === shellBoundary &&\n    (null === current || null !== currentTreeHiddenStackCursor.current\n      ? (shellBoundary = handler)\n      : null !== current.memoizedState && (shellBoundary = handler));\n}\nfunction pushOffscreenSuspenseHandler(fiber) {\n  if (22 === fiber.tag) {\n    if (\n      (push(suspenseStackCursor, suspenseStackCursor.current),\n      push(suspenseHandlerStackCursor, fiber),\n      null === shellBoundary)\n    ) {\n      var current = fiber.alternate;\n      null !== current &&\n        null !== current.memoizedState &&\n        (shellBoundary = fiber);\n    }\n  } else reuseSuspenseHandlerOnStack(fiber);\n}\nfunction reuseSuspenseHandlerOnStack() {\n  push(suspenseStackCursor, suspenseStackCursor.current);\n  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);\n}\nfunction popSuspenseHandler(fiber) {\n  pop(suspenseHandlerStackCursor);\n  shellBoundary === fiber && (shellBoundary = null);\n  pop(suspenseStackCursor);\n}\nvar suspenseStackCursor = createCursor(0);\nfunction findFirstSuspended(row) {\n  for (var node = row; null !== node; ) {\n    if (13 === node.tag) {\n      var state = node.memoizedState;\n      if (\n        null !== state &&\n        ((state = state.dehydrated),\n        null === state ||\n          \"$?\" === state.data ||\n          isSuspenseInstanceFallback(state))\n      )\n        return node;\n    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {\n      if (0 !== (node.flags & 128)) return node;\n    } else if (null !== node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) break;\n    for (; null === node.sibling; ) {\n      if (null === node.return || node.return === row) return null;\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  ctor = workInProgress.memoizedState;\n  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);\n  getDerivedStateFromProps =\n    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps\n      ? ctor\n      : assign({}, ctor, getDerivedStateFromProps);\n  workInProgress.memoizedState = getDerivedStateFromProps;\n  0 === workInProgress.lanes &&\n    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);\n}\nvar classComponentUpdater = {\n  enqueueSetState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 1;\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 2;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    callback = enqueueUpdate(inst, update, lane);\n    null !== callback &&\n      (scheduleUpdateOnFiber(callback, inst, lane),\n      entangleTransitions(callback, inst, lane));\n  }\n};\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  workInProgress = workInProgress.stateNode;\n  return \"function\" === typeof workInProgress.shouldComponentUpdate\n    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)\n    : ctor.prototype && ctor.prototype.isPureReactComponent\n      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n      : !0;\n}\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  workInProgress = instance.state;\n  \"function\" === typeof instance.componentWillReceiveProps &&\n    instance.componentWillReceiveProps(newProps, nextContext);\n  \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  instance.state !== workInProgress &&\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n}\nfunction resolveClassComponentProps(Component, baseProps) {\n  var newProps = baseProps;\n  if (\"ref\" in baseProps) {\n    newProps = {};\n    for (var propName in baseProps)\n      \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n  }\n  if ((Component = Component.defaultProps)) {\n    newProps === baseProps && (newProps = assign({}, newProps));\n    for (var propName$73 in Component)\n      void 0 === newProps[propName$73] &&\n        (newProps[propName$73] = Component[propName$73]);\n  }\n  return newProps;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction defaultOnUncaughtError(error) {\n  reportGlobalError(error);\n}\nfunction defaultOnCaughtError(error) {\n  console.error(error);\n}\nfunction defaultOnRecoverableError(error) {\n  reportGlobalError(error);\n}\nfunction logUncaughtError(root, errorInfo) {\n  try {\n    var onUncaughtError = root.onUncaughtError;\n    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });\n  } catch (e$74) {\n    setTimeout(function () {\n      throw e$74;\n    });\n  }\n}\nfunction logCaughtError(root, boundary, errorInfo) {\n  try {\n    var onCaughtError = root.onCaughtError;\n    onCaughtError(errorInfo.value, {\n      componentStack: errorInfo.stack,\n      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n    });\n  } catch (e$75) {\n    setTimeout(function () {\n      throw e$75;\n    });\n  }\n}\nfunction createRootErrorUpdate(root, errorInfo, lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  lane.payload = { element: null };\n  lane.callback = function () {\n    logUncaughtError(root, errorInfo);\n  };\n  return lane;\n}\nfunction createClassErrorUpdate(lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  return lane;\n}\nfunction initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (\"function\" === typeof getDerivedStateFromError) {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n    };\n  }\n  var inst = fiber.stateNode;\n  null !== inst &&\n    \"function\" === typeof inst.componentDidCatch &&\n    (update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n      \"function\" !== typeof getDerivedStateFromError &&\n        (null === legacyErrorBoundariesThatAlreadyFailed\n          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n          : legacyErrorBoundariesThatAlreadyFailed.add(this));\n      var stack = errorInfo.stack;\n      this.componentDidCatch(errorInfo.value, {\n        componentStack: null !== stack ? stack : \"\"\n      });\n    });\n}\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  sourceFiber.flags |= 32768;\n  if (\n    null !== value &&\n    \"object\" === typeof value &&\n    \"function\" === typeof value.then\n  ) {\n    returnFiber = sourceFiber.alternate;\n    null !== returnFiber &&\n      propagateParentContextChanges(\n        returnFiber,\n        sourceFiber,\n        rootRenderLanes,\n        !0\n      );\n    sourceFiber = suspenseHandlerStackCursor.current;\n    if (null !== sourceFiber) {\n      switch (sourceFiber.tag) {\n        case 13:\n          return (\n            null === shellBoundary\n              ? renderDidSuspendDelayIfPossible()\n              : null === sourceFiber.alternate &&\n                0 === workInProgressRootExitStatus &&\n                (workInProgressRootExitStatus = 3),\n            (sourceFiber.flags &= -257),\n            (sourceFiber.flags |= 65536),\n            (sourceFiber.lanes = rootRenderLanes),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? (sourceFiber.updateQueue = new Set([value]))\n                  : returnFiber.add(value),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n        case 22:\n          return (\n            (sourceFiber.flags |= 65536),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? ((returnFiber = {\n                      transitions: null,\n                      markerInstances: null,\n                      retryQueue: new Set([value])\n                    }),\n                    (sourceFiber.updateQueue = returnFiber))\n                  : ((sourceFiber = returnFiber.retryQueue),\n                    null === sourceFiber\n                      ? (returnFiber.retryQueue = new Set([value]))\n                      : sourceFiber.add(value)),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n      }\n      throw Error(formatProdErrorMessage(435, sourceFiber.tag));\n    }\n    attachPingListener(root, value, rootRenderLanes);\n    renderDidSuspendDelayIfPossible();\n    return !1;\n  }\n  if (isHydrating)\n    return (\n      (returnFiber = suspenseHandlerStackCursor.current),\n      null !== returnFiber\n        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n          (returnFiber.flags |= 65536),\n          (returnFiber.lanes = rootRenderLanes),\n          value !== HydrationMismatchException &&\n            ((root = Error(formatProdErrorMessage(422), { cause: value })),\n            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))\n        : (value !== HydrationMismatchException &&\n            ((returnFiber = Error(formatProdErrorMessage(423), {\n              cause: value\n            })),\n            queueHydrationError(\n              createCapturedValueAtFiber(returnFiber, sourceFiber)\n            )),\n          (root = root.current.alternate),\n          (root.flags |= 65536),\n          (rootRenderLanes &= -rootRenderLanes),\n          (root.lanes |= rootRenderLanes),\n          (value = createCapturedValueAtFiber(value, sourceFiber)),\n          (rootRenderLanes = createRootErrorUpdate(\n            root.stateNode,\n            value,\n            rootRenderLanes\n          )),\n          enqueueCapturedUpdate(root, rootRenderLanes),\n          4 !== workInProgressRootExitStatus &&\n            (workInProgressRootExitStatus = 2)),\n      !1\n    );\n  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });\n  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);\n  null === workInProgressRootConcurrentErrors\n    ? (workInProgressRootConcurrentErrors = [wrapperError])\n    : workInProgressRootConcurrentErrors.push(wrapperError);\n  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);\n  if (null === returnFiber) return !0;\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  sourceFiber = returnFiber;\n  do {\n    switch (sourceFiber.tag) {\n      case 3:\n        return (\n          (sourceFiber.flags |= 65536),\n          (root = rootRenderLanes & -rootRenderLanes),\n          (sourceFiber.lanes |= root),\n          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),\n          enqueueCapturedUpdate(sourceFiber, root),\n          !1\n        );\n      case 1:\n        if (\n          ((returnFiber = sourceFiber.type),\n          (wrapperError = sourceFiber.stateNode),\n          0 === (sourceFiber.flags & 128) &&\n            (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n              (null !== wrapperError &&\n                \"function\" === typeof wrapperError.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))\n        )\n          return (\n            (sourceFiber.flags |= 65536),\n            (rootRenderLanes &= -rootRenderLanes),\n            (sourceFiber.lanes |= rootRenderLanes),\n            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n            initializeClassErrorUpdate(\n              rootRenderLanes,\n              root,\n              sourceFiber,\n              value\n            ),\n            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n            !1\n          );\n    }\n    sourceFiber = sourceFiber.return;\n  } while (null !== sourceFiber);\n  return !1;\n}\nvar SelectiveHydrationException = Error(formatProdErrorMessage(461)),\n  didReceiveUpdate = !1;\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  workInProgress.child =\n    null === current\n      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n      : reconcileChildFibers(\n          workInProgress,\n          current.child,\n          nextChildren,\n          renderLanes\n        );\n}\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  Component = Component.render;\n  var ref = workInProgress.ref;\n  if (\"ref\" in nextProps) {\n    var propsWithoutRef = {};\n    for (var key in nextProps)\n      \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n  } else propsWithoutRef = nextProps;\n  prepareToReadContext(workInProgress);\n  nextProps = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    propsWithoutRef,\n    ref,\n    renderLanes\n  );\n  key = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && key && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null === current) {\n    var type = Component.type;\n    if (\n      \"function\" === typeof type &&\n      !shouldConstruct(type) &&\n      void 0 === type.defaultProps &&\n      null === Component.compare\n    )\n      return (\n        (workInProgress.tag = 15),\n        (workInProgress.type = type),\n        updateSimpleMemoComponent(\n          current,\n          workInProgress,\n          type,\n          nextProps,\n          renderLanes\n        )\n      );\n    current = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    current.ref = workInProgress.ref;\n    current.return = workInProgress;\n    return (workInProgress.child = current);\n  }\n  type = current.child;\n  if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n    var prevProps = type.memoizedProps;\n    Component = Component.compare;\n    Component = null !== Component ? Component : shallowEqual;\n    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  workInProgress.flags |= 1;\n  current = createWorkInProgress(type, nextProps);\n  current.ref = workInProgress.ref;\n  current.return = workInProgress;\n  return (workInProgress.child = current);\n}\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null !== current) {\n    var prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    )\n      if (\n        ((didReceiveUpdate = !1),\n        (workInProgress.pendingProps = nextProps = prevProps),\n        checkScheduledUpdateOrContext(current, renderLanes))\n      )\n        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n      else\n        return (\n          (workInProgress.lanes = current.lanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    nextChildren = nextProps.children,\n    prevState = null !== current ? current.memoizedState : null;\n  if (\"hidden\" === nextProps.mode) {\n    if (0 !== (workInProgress.flags & 128)) {\n      nextProps =\n        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;\n      if (null !== current) {\n        nextChildren = workInProgress.child = current.child;\n        for (prevState = 0; null !== nextChildren; )\n          (prevState =\n            prevState | nextChildren.lanes | nextChildren.childLanes),\n            (nextChildren = nextChildren.sibling);\n        workInProgress.childLanes = prevState & ~nextProps;\n      } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n      return deferHiddenOffscreenComponent(\n        current,\n        workInProgress,\n        nextProps,\n        renderLanes\n      );\n    }\n    if (0 !== (renderLanes & 536870912))\n      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n        null !== current &&\n          pushTransition(\n            workInProgress,\n            null !== prevState ? prevState.cachePool : null\n          ),\n        null !== prevState\n          ? pushHiddenContext(workInProgress, prevState)\n          : reuseHiddenContextOnStack(),\n        pushOffscreenSuspenseHandler(workInProgress);\n    else\n      return (\n        (workInProgress.lanes = workInProgress.childLanes = 536870912),\n        deferHiddenOffscreenComponent(\n          current,\n          workInProgress,\n          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,\n          renderLanes\n        )\n      );\n  } else\n    null !== prevState\n      ? (pushTransition(workInProgress, prevState.cachePool),\n        pushHiddenContext(workInProgress, prevState),\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (workInProgress.memoizedState = null))\n      : (null !== current && pushTransition(workInProgress, null),\n        reuseHiddenContextOnStack(),\n        reuseSuspenseHandlerOnStack(workInProgress));\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nfunction deferHiddenOffscreenComponent(\n  current,\n  workInProgress,\n  nextBaseLanes,\n  renderLanes\n) {\n  var JSCompiler_inline_result = peekCacheFromPool();\n  JSCompiler_inline_result =\n    null === JSCompiler_inline_result\n      ? null\n      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };\n  workInProgress.memoizedState = {\n    baseLanes: nextBaseLanes,\n    cachePool: JSCompiler_inline_result\n  };\n  null !== current && pushTransition(workInProgress, null);\n  reuseHiddenContextOnStack();\n  pushOffscreenSuspenseHandler(workInProgress);\n  null !== current &&\n    propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n  return null;\n}\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n  if (null === ref)\n    null !== current &&\n      null !== current.ref &&\n      (workInProgress.flags |= 4194816);\n  else {\n    if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n      throw Error(formatProdErrorMessage(284));\n    if (null === current || current.ref !== ref)\n      workInProgress.flags |= 4194816;\n  }\n}\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  Component = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    void 0,\n    renderLanes\n  );\n  nextProps = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, Component, renderLanes);\n  return workInProgress.child;\n}\nfunction replayFunctionComponent(\n  current,\n  workInProgress,\n  nextProps,\n  Component,\n  secondArg,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  workInProgress.updateQueue = null;\n  nextProps = renderWithHooksAgain(\n    workInProgress,\n    Component,\n    nextProps,\n    secondArg\n  );\n  finishRenderingHooks(current);\n  Component = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && Component && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  if (null === workInProgress.stateNode) {\n    var context = emptyContextObject,\n      contextType = Component.contextType;\n    \"object\" === typeof contextType &&\n      null !== contextType &&\n      (context = readContext(contextType));\n    context = new Component(nextProps, context);\n    workInProgress.memoizedState =\n      null !== context.state && void 0 !== context.state ? context.state : null;\n    context.updater = classComponentUpdater;\n    workInProgress.stateNode = context;\n    context._reactInternals = workInProgress;\n    context = workInProgress.stateNode;\n    context.props = nextProps;\n    context.state = workInProgress.memoizedState;\n    context.refs = {};\n    initializeUpdateQueue(workInProgress);\n    contextType = Component.contextType;\n    context.context =\n      \"object\" === typeof contextType && null !== contextType\n        ? readContext(contextType)\n        : emptyContextObject;\n    context.state = workInProgress.memoizedState;\n    contextType = Component.getDerivedStateFromProps;\n    \"function\" === typeof contextType &&\n      (applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        contextType,\n        nextProps\n      ),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof Component.getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate ||\n      (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n        \"function\" !== typeof context.componentWillMount) ||\n      ((contextType = context.state),\n      \"function\" === typeof context.componentWillMount &&\n        context.componentWillMount(),\n      \"function\" === typeof context.UNSAFE_componentWillMount &&\n        context.UNSAFE_componentWillMount(),\n      contextType !== context.state &&\n        classComponentUpdater.enqueueReplaceState(context, context.state, null),\n      processUpdateQueue(workInProgress, nextProps, context, renderLanes),\n      suspendIfUpdateReadFromEntangledAsyncAction(),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof context.componentDidMount &&\n      (workInProgress.flags |= 4194308);\n    nextProps = !0;\n  } else if (null === current) {\n    context = workInProgress.stateNode;\n    var unresolvedOldProps = workInProgress.memoizedProps,\n      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);\n    context.props = oldProps;\n    var oldContext = context.context,\n      contextType$jscomp$0 = Component.contextType;\n    contextType = emptyContextObject;\n    \"object\" === typeof contextType$jscomp$0 &&\n      null !== contextType$jscomp$0 &&\n      (contextType = readContext(contextType$jscomp$0));\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    contextType$jscomp$0 =\n      \"function\" === typeof getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate;\n    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n    contextType$jscomp$0 ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((unresolvedOldProps || oldContext !== contextType) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          contextType\n        ));\n    hasForceUpdate = !1;\n    var oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    oldContext = workInProgress.memoizedState;\n    unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n      ? (\"function\" === typeof getDerivedStateFromProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            getDerivedStateFromProps,\n            nextProps\n          ),\n          (oldContext = workInProgress.memoizedState)),\n        (oldProps =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            oldProps,\n            nextProps,\n            oldState,\n            oldContext,\n            contextType\n          ))\n          ? (contextType$jscomp$0 ||\n              (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n                \"function\" !== typeof context.componentWillMount) ||\n              (\"function\" === typeof context.componentWillMount &&\n                context.componentWillMount(),\n              \"function\" === typeof context.UNSAFE_componentWillMount &&\n                context.UNSAFE_componentWillMount()),\n            \"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308))\n          : (\"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = oldContext)),\n        (context.props = nextProps),\n        (context.state = oldContext),\n        (context.context = contextType),\n        (nextProps = oldProps))\n      : (\"function\" === typeof context.componentDidMount &&\n          (workInProgress.flags |= 4194308),\n        (nextProps = !1));\n  } else {\n    context = workInProgress.stateNode;\n    cloneUpdateQueue(current, workInProgress);\n    contextType = workInProgress.memoizedProps;\n    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);\n    context.props = contextType$jscomp$0;\n    getDerivedStateFromProps = workInProgress.pendingProps;\n    oldState = context.context;\n    oldContext = Component.contextType;\n    oldProps = emptyContextObject;\n    \"object\" === typeof oldContext &&\n      null !== oldContext &&\n      (oldProps = readContext(oldContext));\n    unresolvedOldProps = Component.getDerivedStateFromProps;\n    (oldContext =\n      \"function\" === typeof unresolvedOldProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate) ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          oldProps\n        ));\n    hasForceUpdate = !1;\n    oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    var newState = workInProgress.memoizedState;\n    contextType !== getDerivedStateFromProps ||\n    oldState !== newState ||\n    hasForceUpdate ||\n    (null !== current &&\n      null !== current.dependencies &&\n      checkIfContextChanged(current.dependencies))\n      ? (\"function\" === typeof unresolvedOldProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            unresolvedOldProps,\n            nextProps\n          ),\n          (newState = workInProgress.memoizedState)),\n        (contextType$jscomp$0 =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            contextType$jscomp$0,\n            nextProps,\n            oldState,\n            newState,\n            oldProps\n          ) ||\n          (null !== current &&\n            null !== current.dependencies &&\n            checkIfContextChanged(current.dependencies)))\n          ? (oldContext ||\n              (\"function\" !== typeof context.UNSAFE_componentWillUpdate &&\n                \"function\" !== typeof context.componentWillUpdate) ||\n              (\"function\" === typeof context.componentWillUpdate &&\n                context.componentWillUpdate(nextProps, newState, oldProps),\n              \"function\" === typeof context.UNSAFE_componentWillUpdate &&\n                context.UNSAFE_componentWillUpdate(\n                  nextProps,\n                  newState,\n                  oldProps\n                )),\n            \"function\" === typeof context.componentDidUpdate &&\n              (workInProgress.flags |= 4),\n            \"function\" === typeof context.getSnapshotBeforeUpdate &&\n              (workInProgress.flags |= 1024))\n          : (\"function\" !== typeof context.componentDidUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = newState)),\n        (context.props = nextProps),\n        (context.state = newState),\n        (context.context = oldProps),\n        (nextProps = contextType$jscomp$0))\n      : (\"function\" !== typeof context.componentDidUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 4),\n        \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 1024),\n        (nextProps = !1));\n  }\n  context = nextProps;\n  markRef(current, workInProgress);\n  nextProps = 0 !== (workInProgress.flags & 128);\n  context || nextProps\n    ? ((context = workInProgress.stateNode),\n      (Component =\n        nextProps && \"function\" !== typeof Component.getDerivedStateFromError\n          ? null\n          : context.render()),\n      (workInProgress.flags |= 1),\n      null !== current && nextProps\n        ? ((workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            current.child,\n            null,\n            renderLanes\n          )),\n          (workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            null,\n            Component,\n            renderLanes\n          )))\n        : reconcileChildren(current, workInProgress, Component, renderLanes),\n      (workInProgress.memoizedState = context.state),\n      (current = workInProgress.child))\n    : (current = bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderLanes\n      ));\n  return current;\n}\nfunction mountHostRootWithoutHydrating(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  resetHydrationState();\n  workInProgress.flags |= 256;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: 0,\n  hydrationErrors: null\n};\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n}\nfunction getRemainingWorkInPrimaryTree(\n  current,\n  primaryTreeDidDefer,\n  renderLanes\n) {\n  current = null !== current ? current.childLanes & ~renderLanes : 0;\n  primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n  return current;\n}\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    showFallback = !1,\n    didSuspend = 0 !== (workInProgress.flags & 128),\n    JSCompiler_temp;\n  (JSCompiler_temp = didSuspend) ||\n    (JSCompiler_temp =\n      null !== current && null === current.memoizedState\n        ? !1\n        : 0 !== (suspenseStackCursor.current & 2));\n  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));\n  JSCompiler_temp = 0 !== (workInProgress.flags & 32);\n  workInProgress.flags &= -33;\n  if (null === current) {\n    if (isHydrating) {\n      showFallback\n        ? pushPrimaryTreeSuspenseHandler(workInProgress)\n        : reuseSuspenseHandlerOnStack(workInProgress);\n      if (isHydrating) {\n        var nextInstance = nextHydratableInstance,\n          JSCompiler_temp$jscomp$0;\n        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {\n          c: {\n            JSCompiler_temp$jscomp$0 = nextInstance;\n            for (\n              nextInstance = rootOrSingletonContext;\n              8 !== JSCompiler_temp$jscomp$0.nodeType;\n\n            ) {\n              if (!nextInstance) {\n                nextInstance = null;\n                break c;\n              }\n              JSCompiler_temp$jscomp$0 = getNextHydratable(\n                JSCompiler_temp$jscomp$0.nextSibling\n              );\n              if (null === JSCompiler_temp$jscomp$0) {\n                nextInstance = null;\n                break c;\n              }\n            }\n            nextInstance = JSCompiler_temp$jscomp$0;\n          }\n          null !== nextInstance\n            ? ((workInProgress.memoizedState = {\n                dehydrated: nextInstance,\n                treeContext:\n                  null !== treeContextProvider\n                    ? { id: treeContextId, overflow: treeContextOverflow }\n                    : null,\n                retryLane: 536870912,\n                hydrationErrors: null\n              }),\n              (JSCompiler_temp$jscomp$0 = createFiberImplClass(\n                18,\n                null,\n                null,\n                0\n              )),\n              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),\n              (JSCompiler_temp$jscomp$0.return = workInProgress),\n              (workInProgress.child = JSCompiler_temp$jscomp$0),\n              (hydrationParentFiber = workInProgress),\n              (nextHydratableInstance = null),\n              (JSCompiler_temp$jscomp$0 = !0))\n            : (JSCompiler_temp$jscomp$0 = !1);\n        }\n        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);\n      }\n      nextInstance = workInProgress.memoizedState;\n      if (\n        null !== nextInstance &&\n        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)\n      )\n        return (\n          isSuspenseInstanceFallback(nextInstance)\n            ? (workInProgress.lanes = 32)\n            : (workInProgress.lanes = 536870912),\n          null\n        );\n      popSuspenseHandler(workInProgress);\n    }\n    nextInstance = nextProps.children;\n    nextProps = nextProps.fallback;\n    if (showFallback)\n      return (\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (showFallback = workInProgress.mode),\n        (nextInstance = mountWorkInProgressOffscreenFiber(\n          { mode: \"hidden\", children: nextInstance },\n          showFallback\n        )),\n        (nextProps = createFiberFromFragment(\n          nextProps,\n          showFallback,\n          renderLanes,\n          null\n        )),\n        (nextInstance.return = workInProgress),\n        (nextProps.return = workInProgress),\n        (nextInstance.sibling = nextProps),\n        (workInProgress.child = nextInstance),\n        (showFallback = workInProgress.child),\n        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),\n        (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          JSCompiler_temp,\n          renderLanes\n        )),\n        (workInProgress.memoizedState = SUSPENDED_MARKER),\n        nextProps\n      );\n    pushPrimaryTreeSuspenseHandler(workInProgress);\n    return mountSuspensePrimaryChildren(workInProgress, nextInstance);\n  }\n  JSCompiler_temp$jscomp$0 = current.memoizedState;\n  if (\n    null !== JSCompiler_temp$jscomp$0 &&\n    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),\n    null !== nextInstance)\n  ) {\n    if (didSuspend)\n      workInProgress.flags & 256\n        ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n          (workInProgress.flags &= -257),\n          (workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          )))\n        : null !== workInProgress.memoizedState\n          ? (reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.child = current.child),\n            (workInProgress.flags |= 128),\n            (workInProgress = null))\n          : (reuseSuspenseHandlerOnStack(workInProgress),\n            (showFallback = nextProps.fallback),\n            (nextInstance = workInProgress.mode),\n            (nextProps = mountWorkInProgressOffscreenFiber(\n              { mode: \"visible\", children: nextProps.children },\n              nextInstance\n            )),\n            (showFallback = createFiberFromFragment(\n              showFallback,\n              nextInstance,\n              renderLanes,\n              null\n            )),\n            (showFallback.flags |= 2),\n            (nextProps.return = workInProgress),\n            (showFallback.return = workInProgress),\n            (nextProps.sibling = showFallback),\n            (workInProgress.child = nextProps),\n            reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            ),\n            (nextProps = workInProgress.child),\n            (nextProps.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (nextProps.childLanes = getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_temp,\n              renderLanes\n            )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            (workInProgress = showFallback));\n    else if (\n      (pushPrimaryTreeSuspenseHandler(workInProgress),\n      isSuspenseInstanceFallback(nextInstance))\n    ) {\n      JSCompiler_temp =\n        nextInstance.nextSibling && nextInstance.nextSibling.dataset;\n      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;\n      JSCompiler_temp = digest;\n      nextProps = Error(formatProdErrorMessage(419));\n      nextProps.stack = \"\";\n      nextProps.digest = JSCompiler_temp;\n      queueHydrationError({ value: nextProps, source: null, stack: null });\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else if (\n      (didReceiveUpdate ||\n        propagateParentContextChanges(current, workInProgress, renderLanes, !1),\n      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),\n      didReceiveUpdate || JSCompiler_temp)\n    ) {\n      JSCompiler_temp = workInProgressRoot;\n      if (\n        null !== JSCompiler_temp &&\n        ((nextProps = renderLanes & -renderLanes),\n        (nextProps =\n          0 !== (nextProps & 42)\n            ? 1\n            : getBumpedLaneForHydrationByLane(nextProps)),\n        (nextProps =\n          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))\n            ? 0\n            : nextProps),\n        0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)\n      )\n        throw (\n          ((JSCompiler_temp$jscomp$0.retryLane = nextProps),\n          enqueueConcurrentRenderForLane(current, nextProps),\n          scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),\n          SelectiveHydrationException)\n        );\n      \"$?\" === nextInstance.data || renderDidSuspendDelayIfPossible();\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else\n      \"$?\" === nextInstance.data\n        ? ((workInProgress.flags |= 192),\n          (workInProgress.child = current.child),\n          (workInProgress = null))\n        : ((current = JSCompiler_temp$jscomp$0.treeContext),\n          (nextHydratableInstance = getNextHydratable(\n            nextInstance.nextSibling\n          )),\n          (hydrationParentFiber = workInProgress),\n          (isHydrating = !0),\n          (hydrationErrors = null),\n          (rootOrSingletonContext = !1),\n          null !== current &&\n            ((idStack[idStackIndex++] = treeContextId),\n            (idStack[idStackIndex++] = treeContextOverflow),\n            (idStack[idStackIndex++] = treeContextProvider),\n            (treeContextId = current.id),\n            (treeContextOverflow = current.overflow),\n            (treeContextProvider = workInProgress)),\n          (workInProgress = mountSuspensePrimaryChildren(\n            workInProgress,\n            nextProps.children\n          )),\n          (workInProgress.flags |= 4096));\n    return workInProgress;\n  }\n  if (showFallback)\n    return (\n      reuseSuspenseHandlerOnStack(workInProgress),\n      (showFallback = nextProps.fallback),\n      (nextInstance = workInProgress.mode),\n      (JSCompiler_temp$jscomp$0 = current.child),\n      (digest = JSCompiler_temp$jscomp$0.sibling),\n      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {\n        mode: \"hidden\",\n        children: nextProps.children\n      })),\n      (nextProps.subtreeFlags =\n        JSCompiler_temp$jscomp$0.subtreeFlags & 65011712),\n      null !== digest\n        ? (showFallback = createWorkInProgress(digest, showFallback))\n        : ((showFallback = createFiberFromFragment(\n            showFallback,\n            nextInstance,\n            renderLanes,\n            null\n          )),\n          (showFallback.flags |= 2)),\n      (showFallback.return = workInProgress),\n      (nextProps.return = workInProgress),\n      (nextProps.sibling = showFallback),\n      (workInProgress.child = nextProps),\n      (nextProps = showFallback),\n      (showFallback = workInProgress.child),\n      (nextInstance = current.child.memoizedState),\n      null === nextInstance\n        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))\n        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),\n          null !== JSCompiler_temp$jscomp$0\n            ? ((digest = CacheContext._currentValue),\n              (JSCompiler_temp$jscomp$0 =\n                JSCompiler_temp$jscomp$0.parent !== digest\n                  ? { parent: digest, pool: digest }\n                  : JSCompiler_temp$jscomp$0))\n            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),\n          (nextInstance = {\n            baseLanes: nextInstance.baseLanes | renderLanes,\n            cachePool: JSCompiler_temp$jscomp$0\n          })),\n      (showFallback.memoizedState = nextInstance),\n      (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        JSCompiler_temp,\n        renderLanes\n      )),\n      (workInProgress.memoizedState = SUSPENDED_MARKER),\n      nextProps\n    );\n  pushPrimaryTreeSuspenseHandler(workInProgress);\n  renderLanes = current.child;\n  current = renderLanes.sibling;\n  renderLanes = createWorkInProgress(renderLanes, {\n    mode: \"visible\",\n    children: nextProps.children\n  });\n  renderLanes.return = workInProgress;\n  renderLanes.sibling = null;\n  null !== current &&\n    ((JSCompiler_temp = workInProgress.deletions),\n    null === JSCompiler_temp\n      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))\n      : JSCompiler_temp.push(current));\n  workInProgress.child = renderLanes;\n  workInProgress.memoizedState = null;\n  return renderLanes;\n}\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n  primaryChildren = mountWorkInProgressOffscreenFiber(\n    { mode: \"visible\", children: primaryChildren },\n    workInProgress.mode\n  );\n  primaryChildren.return = workInProgress;\n  return (workInProgress.child = primaryChildren);\n}\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n  offscreenProps = createFiberImplClass(22, offscreenProps, null, mode);\n  offscreenProps.lanes = 0;\n  offscreenProps.stateNode = {\n    _visibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null\n  };\n  return offscreenProps;\n}\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  current = mountSuspensePrimaryChildren(\n    workInProgress,\n    workInProgress.pendingProps.children\n  );\n  current.flags |= 2;\n  workInProgress.memoizedState = null;\n  return current;\n}\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes |= renderLanes;\n  var alternate = fiber.alternate;\n  null !== alternate && (alternate.lanes |= renderLanes);\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n  null === renderState\n    ? (workInProgress.memoizedState = {\n        isBackwards: isBackwards,\n        rendering: null,\n        renderingStartTime: 0,\n        last: lastContentRow,\n        tail: tail,\n        tailMode: tailMode\n      })\n    : ((renderState.isBackwards = isBackwards),\n      (renderState.rendering = null),\n      (renderState.renderingStartTime = 0),\n      (renderState.last = lastContentRow),\n      (renderState.tail = tail),\n      (renderState.tailMode = tailMode));\n}\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    revealOrder = nextProps.revealOrder,\n    tailMode = nextProps.tail;\n  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);\n  nextProps = suspenseStackCursor.current;\n  if (0 !== (nextProps & 2))\n    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);\n  else {\n    if (null !== current && 0 !== (current.flags & 128))\n      a: for (current = workInProgress.child; null !== current; ) {\n        if (13 === current.tag)\n          null !== current.memoizedState &&\n            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (19 === current.tag)\n          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (null !== current.child) {\n          current.child.return = current;\n          current = current.child;\n          continue;\n        }\n        if (current === workInProgress) break a;\n        for (; null === current.sibling; ) {\n          if (null === current.return || current.return === workInProgress)\n            break a;\n          current = current.return;\n        }\n        current.sibling.return = current.return;\n        current = current.sibling;\n      }\n    nextProps &= 1;\n  }\n  push(suspenseStackCursor, nextProps);\n  switch (revealOrder) {\n    case \"forwards\":\n      renderLanes = workInProgress.child;\n      for (revealOrder = null; null !== renderLanes; )\n        (current = renderLanes.alternate),\n          null !== current &&\n            null === findFirstSuspended(current) &&\n            (revealOrder = renderLanes),\n          (renderLanes = renderLanes.sibling);\n      renderLanes = revealOrder;\n      null === renderLanes\n        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))\n        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));\n      initSuspenseListRenderState(\n        workInProgress,\n        !1,\n        revealOrder,\n        renderLanes,\n        tailMode\n      );\n      break;\n    case \"backwards\":\n      renderLanes = null;\n      revealOrder = workInProgress.child;\n      for (workInProgress.child = null; null !== revealOrder; ) {\n        current = revealOrder.alternate;\n        if (null !== current && null === findFirstSuspended(current)) {\n          workInProgress.child = revealOrder;\n          break;\n        }\n        current = revealOrder.sibling;\n        revealOrder.sibling = renderLanes;\n        renderLanes = revealOrder;\n        revealOrder = current;\n      }\n      initSuspenseListRenderState(\n        workInProgress,\n        !0,\n        renderLanes,\n        null,\n        tailMode\n      );\n      break;\n    case \"together\":\n      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n      break;\n    default:\n      workInProgress.memoizedState = null;\n  }\n  return workInProgress.child;\n}\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  null !== current && (workInProgress.dependencies = current.dependencies);\n  workInProgressRootSkippedLanes |= workInProgress.lanes;\n  if (0 === (renderLanes & workInProgress.childLanes))\n    if (null !== current) {\n      if (\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        0 === (renderLanes & workInProgress.childLanes))\n      )\n        return null;\n    } else return null;\n  if (null !== current && workInProgress.child !== current.child)\n    throw Error(formatProdErrorMessage(153));\n  if (null !== workInProgress.child) {\n    current = workInProgress.child;\n    renderLanes = createWorkInProgress(current, current.pendingProps);\n    workInProgress.child = renderLanes;\n    for (renderLanes.return = workInProgress; null !== current.sibling; )\n      (current = current.sibling),\n        (renderLanes = renderLanes.sibling =\n          createWorkInProgress(current, current.pendingProps)),\n        (renderLanes.return = workInProgress);\n    renderLanes.sibling = null;\n  }\n  return workInProgress.child;\n}\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  if (0 !== (current.lanes & renderLanes)) return !0;\n  current = current.dependencies;\n  return null !== current && checkIfContextChanged(current) ? !0 : !1;\n}\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  switch (workInProgress.tag) {\n    case 3:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n      resetHydrationState();\n      break;\n    case 27:\n    case 5:\n      pushHostContext(workInProgress);\n      break;\n    case 4:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case 10:\n      pushProvider(\n        workInProgress,\n        workInProgress.type,\n        workInProgress.memoizedProps.value\n      );\n      break;\n    case 13:\n      var state = workInProgress.memoizedState;\n      if (null !== state) {\n        if (null !== state.dehydrated)\n          return (\n            pushPrimaryTreeSuspenseHandler(workInProgress),\n            (workInProgress.flags |= 128),\n            null\n          );\n        if (0 !== (renderLanes & workInProgress.child.childLanes))\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n        return null !== current ? current.sibling : null;\n      }\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      break;\n    case 19:\n      var didSuspendBefore = 0 !== (current.flags & 128);\n      state = 0 !== (renderLanes & workInProgress.childLanes);\n      state ||\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        (state = 0 !== (renderLanes & workInProgress.childLanes)));\n      if (didSuspendBefore) {\n        if (state)\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        workInProgress.flags |= 128;\n      }\n      didSuspendBefore = workInProgress.memoizedState;\n      null !== didSuspendBefore &&\n        ((didSuspendBefore.rendering = null),\n        (didSuspendBefore.tail = null),\n        (didSuspendBefore.lastEffect = null));\n      push(suspenseStackCursor, suspenseStackCursor.current);\n      if (state) break;\n      else return null;\n    case 22:\n    case 23:\n      return (\n        (workInProgress.lanes = 0),\n        updateOffscreenComponent(current, workInProgress, renderLanes)\n      );\n    case 24:\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\nfunction beginWork(current, workInProgress, renderLanes) {\n  if (null !== current)\n    if (current.memoizedProps !== workInProgress.pendingProps)\n      didReceiveUpdate = !0;\n    else {\n      if (\n        !checkScheduledUpdateOrContext(current, renderLanes) &&\n        0 === (workInProgress.flags & 128)\n      )\n        return (\n          (didReceiveUpdate = !1),\n          attemptEarlyBailoutIfNoScheduledUpdate(\n            current,\n            workInProgress,\n            renderLanes\n          )\n        );\n      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n    }\n  else\n    (didReceiveUpdate = !1),\n      isHydrating &&\n        0 !== (workInProgress.flags & 1048576) &&\n        pushTreeId(workInProgress, treeForkCount, workInProgress.index);\n  workInProgress.lanes = 0;\n  switch (workInProgress.tag) {\n    case 16:\n      a: {\n        current = workInProgress.pendingProps;\n        var lazyComponent = workInProgress.elementType,\n          init = lazyComponent._init;\n        lazyComponent = init(lazyComponent._payload);\n        workInProgress.type = lazyComponent;\n        if (\"function\" === typeof lazyComponent)\n          shouldConstruct(lazyComponent)\n            ? ((current = resolveClassComponentProps(lazyComponent, current)),\n              (workInProgress.tag = 1),\n              (workInProgress = updateClassComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )))\n            : ((workInProgress.tag = 0),\n              (workInProgress = updateFunctionComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )));\n        else {\n          if (void 0 !== lazyComponent && null !== lazyComponent)\n            if (\n              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)\n            ) {\n              workInProgress.tag = 11;\n              workInProgress = updateForwardRef(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            } else if (init === REACT_MEMO_TYPE) {\n              workInProgress.tag = 14;\n              workInProgress = updateMemoComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            }\n          workInProgress =\n            getComponentNameFromType(lazyComponent) || lazyComponent;\n          throw Error(formatProdErrorMessage(306, workInProgress, \"\"));\n        }\n      }\n      return workInProgress;\n    case 0:\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 1:\n      return (\n        (lazyComponent = workInProgress.type),\n        (init = resolveClassComponentProps(\n          lazyComponent,\n          workInProgress.pendingProps\n        )),\n        updateClassComponent(\n          current,\n          workInProgress,\n          lazyComponent,\n          init,\n          renderLanes\n        )\n      );\n    case 3:\n      a: {\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        );\n        if (null === current) throw Error(formatProdErrorMessage(387));\n        lazyComponent = workInProgress.pendingProps;\n        var prevState = workInProgress.memoizedState;\n        init = prevState.element;\n        cloneUpdateQueue(current, workInProgress);\n        processUpdateQueue(workInProgress, lazyComponent, null, renderLanes);\n        var nextState = workInProgress.memoizedState;\n        lazyComponent = nextState.cache;\n        pushProvider(workInProgress, CacheContext, lazyComponent);\n        lazyComponent !== prevState.cache &&\n          propagateContextChanges(\n            workInProgress,\n            [CacheContext],\n            renderLanes,\n            !0\n          );\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        lazyComponent = nextState.element;\n        if (prevState.isDehydrated)\n          if (\n            ((prevState = {\n              element: lazyComponent,\n              isDehydrated: !1,\n              cache: nextState.cache\n            }),\n            (workInProgress.updateQueue.baseState = prevState),\n            (workInProgress.memoizedState = prevState),\n            workInProgress.flags & 256)\n          ) {\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else if (lazyComponent !== init) {\n            init = createCapturedValueAtFiber(\n              Error(formatProdErrorMessage(424)),\n              workInProgress\n            );\n            queueHydrationError(init);\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            );\n            break a;\n          } else {\n            current = workInProgress.stateNode.containerInfo;\n            switch (current.nodeType) {\n              case 9:\n                current = current.body;\n                break;\n              default:\n                current =\n                  \"HTML\" === current.nodeName\n                    ? current.ownerDocument.body\n                    : current;\n            }\n            nextHydratableInstance = getNextHydratable(current.firstChild);\n            hydrationParentFiber = workInProgress;\n            isHydrating = !0;\n            hydrationErrors = null;\n            rootOrSingletonContext = !0;\n            renderLanes = mountChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            );\n            for (workInProgress.child = renderLanes; renderLanes; )\n              (renderLanes.flags = (renderLanes.flags & -3) | 4096),\n                (renderLanes = renderLanes.sibling);\n          }\n        else {\n          resetHydrationState();\n          if (lazyComponent === init) {\n            workInProgress = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            break a;\n          }\n          reconcileChildren(\n            current,\n            workInProgress,\n            lazyComponent,\n            renderLanes\n          );\n        }\n        workInProgress = workInProgress.child;\n      }\n      return workInProgress;\n    case 26:\n      return (\n        markRef(current, workInProgress),\n        null === current\n          ? (renderLanes = getResource(\n              workInProgress.type,\n              null,\n              workInProgress.pendingProps,\n              null\n            ))\n            ? (workInProgress.memoizedState = renderLanes)\n            : isHydrating ||\n              ((renderLanes = workInProgress.type),\n              (current = workInProgress.pendingProps),\n              (lazyComponent = getOwnerDocumentFromRootContainer(\n                rootInstanceStackCursor.current\n              ).createElement(renderLanes)),\n              (lazyComponent[internalInstanceKey] = workInProgress),\n              (lazyComponent[internalPropsKey] = current),\n              setInitialProperties(lazyComponent, renderLanes, current),\n              markNodeAsHoistable(lazyComponent),\n              (workInProgress.stateNode = lazyComponent))\n          : (workInProgress.memoizedState = getResource(\n              workInProgress.type,\n              current.memoizedProps,\n              workInProgress.pendingProps,\n              current.memoizedState\n            )),\n        null\n      );\n    case 27:\n      return (\n        pushHostContext(workInProgress),\n        null === current &&\n          isHydrating &&\n          ((lazyComponent = workInProgress.stateNode =\n            resolveSingletonInstance(\n              workInProgress.type,\n              workInProgress.pendingProps,\n              rootInstanceStackCursor.current\n            )),\n          (hydrationParentFiber = workInProgress),\n          (rootOrSingletonContext = !0),\n          (init = nextHydratableInstance),\n          isSingletonScope(workInProgress.type)\n            ? ((previousHydratableOnEnteringScopedSingleton = init),\n              (nextHydratableInstance = getNextHydratable(\n                lazyComponent.firstChild\n              )))\n            : (nextHydratableInstance = init)),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        markRef(current, workInProgress),\n        null === current && (workInProgress.flags |= 4194304),\n        workInProgress.child\n      );\n    case 5:\n      if (null === current && isHydrating) {\n        if ((init = lazyComponent = nextHydratableInstance))\n          (lazyComponent = canHydrateInstance(\n            lazyComponent,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== lazyComponent\n              ? ((workInProgress.stateNode = lazyComponent),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = getNextHydratable(\n                  lazyComponent.firstChild\n                )),\n                (rootOrSingletonContext = !1),\n                (init = !0))\n              : (init = !1);\n        init || throwOnHydrationMismatch(workInProgress);\n      }\n      pushHostContext(workInProgress);\n      init = workInProgress.type;\n      prevState = workInProgress.pendingProps;\n      nextState = null !== current ? current.memoizedProps : null;\n      lazyComponent = prevState.children;\n      shouldSetTextContent(init, prevState)\n        ? (lazyComponent = null)\n        : null !== nextState &&\n          shouldSetTextContent(init, nextState) &&\n          (workInProgress.flags |= 32);\n      null !== workInProgress.memoizedState &&\n        ((init = renderWithHooks(\n          current,\n          workInProgress,\n          TransitionAwareHostComponent,\n          null,\n          null,\n          renderLanes\n        )),\n        (HostTransitionContext._currentValue = init));\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);\n      return workInProgress.child;\n    case 6:\n      if (null === current && isHydrating) {\n        if ((current = renderLanes = nextHydratableInstance))\n          (renderLanes = canHydrateTextInstance(\n            renderLanes,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== renderLanes\n              ? ((workInProgress.stateNode = renderLanes),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = null),\n                (current = !0))\n              : (current = !1);\n        current || throwOnHydrationMismatch(workInProgress);\n      }\n      return null;\n    case 13:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case 4:\n      return (\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        ),\n        (lazyComponent = workInProgress.pendingProps),\n        null === current\n          ? (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            ))\n          : reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            ),\n        workInProgress.child\n      );\n    case 11:\n      return updateForwardRef(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 7:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 8:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 12:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 10:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),\n        reconcileChildren(\n          current,\n          workInProgress,\n          lazyComponent.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 9:\n      return (\n        (init = workInProgress.type._context),\n        (lazyComponent = workInProgress.pendingProps.children),\n        prepareToReadContext(workInProgress),\n        (init = readContext(init)),\n        (lazyComponent = lazyComponent(init)),\n        (workInProgress.flags |= 1),\n        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),\n        workInProgress.child\n      );\n    case 14:\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 15:\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 19:\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    case 31:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        (renderLanes = workInProgress.mode),\n        (lazyComponent = {\n          mode: lazyComponent.mode,\n          children: lazyComponent.children\n        }),\n        null === current\n          ? ((renderLanes = mountWorkInProgressOffscreenFiber(\n              lazyComponent,\n              renderLanes\n            )),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes))\n          : ((renderLanes = createWorkInProgress(current.child, lazyComponent)),\n            (renderLanes.ref = workInProgress.ref),\n            (workInProgress.child = renderLanes),\n            (renderLanes.return = workInProgress),\n            (workInProgress = renderLanes)),\n        workInProgress\n      );\n    case 22:\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    case 24:\n      return (\n        prepareToReadContext(workInProgress),\n        (lazyComponent = readContext(CacheContext)),\n        null === current\n          ? ((init = peekCacheFromPool()),\n            null === init &&\n              ((init = workInProgressRoot),\n              (prevState = createCache()),\n              (init.pooledCache = prevState),\n              prevState.refCount++,\n              null !== prevState && (init.pooledCacheLanes |= renderLanes),\n              (init = prevState)),\n            (workInProgress.memoizedState = {\n              parent: lazyComponent,\n              cache: init\n            }),\n            initializeUpdateQueue(workInProgress),\n            pushProvider(workInProgress, CacheContext, init))\n          : (0 !== (current.lanes & renderLanes) &&\n              (cloneUpdateQueue(current, workInProgress),\n              processUpdateQueue(workInProgress, null, null, renderLanes),\n              suspendIfUpdateReadFromEntangledAsyncAction()),\n            (init = current.memoizedState),\n            (prevState = workInProgress.memoizedState),\n            init.parent !== lazyComponent\n              ? ((init = { parent: lazyComponent, cache: lazyComponent }),\n                (workInProgress.memoizedState = init),\n                0 === workInProgress.lanes &&\n                  (workInProgress.memoizedState =\n                    workInProgress.updateQueue.baseState =\n                      init),\n                pushProvider(workInProgress, CacheContext, lazyComponent))\n              : ((lazyComponent = prevState.cache),\n                pushProvider(workInProgress, CacheContext, lazyComponent),\n                lazyComponent !== init.cache &&\n                  propagateContextChanges(\n                    workInProgress,\n                    [CacheContext],\n                    renderLanes,\n                    !0\n                  ))),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 29:\n      throw workInProgress.pendingProps;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction markUpdate(workInProgress) {\n  workInProgress.flags |= 4;\n}\nfunction preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n  if (\"stylesheet\" !== resource.type || 0 !== (resource.state.loading & 4))\n    workInProgress.flags &= -16777217;\n  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {\n    resource = suspenseHandlerStackCursor.current;\n    if (\n      null !== resource &&\n      ((workInProgressRootRenderLanes & 4194048) ===\n      workInProgressRootRenderLanes\n        ? null !== shellBoundary\n        : ((workInProgressRootRenderLanes & 62914560) !==\n            workInProgressRootRenderLanes &&\n            0 === (workInProgressRootRenderLanes & 536870912)) ||\n          resource !== shellBoundary)\n    )\n      throw (\n        ((suspendedThenable = noopSuspenseyCommitThenable),\n        SuspenseyCommitException)\n      );\n    workInProgress.flags |= 8192;\n  }\n}\nfunction scheduleRetryEffect(workInProgress, retryQueue) {\n  null !== retryQueue && (workInProgress.flags |= 4);\n  workInProgress.flags & 16384 &&\n    ((retryQueue =\n      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n    (workInProgress.lanes |= retryQueue),\n    (workInProgressSuspendedRetryLanes |= retryQueue));\n}\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (!isHydrating)\n    switch (renderState.tailMode) {\n      case \"hidden\":\n        hasRenderedATailFallback = renderState.tail;\n        for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n          null !== hasRenderedATailFallback.alternate &&\n            (lastTailNode = hasRenderedATailFallback),\n            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n        null === lastTailNode\n          ? (renderState.tail = null)\n          : (lastTailNode.sibling = null);\n        break;\n      case \"collapsed\":\n        lastTailNode = renderState.tail;\n        for (var lastTailNode$113 = null; null !== lastTailNode; )\n          null !== lastTailNode.alternate && (lastTailNode$113 = lastTailNode),\n            (lastTailNode = lastTailNode.sibling);\n        null === lastTailNode$113\n          ? hasRenderedATailFallback || null === renderState.tail\n            ? (renderState.tail = null)\n            : (renderState.tail.sibling = null)\n          : (lastTailNode$113.sibling = null);\n    }\n}\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n      null !== completedWork.alternate &&\n      completedWork.alternate.child === completedWork.child,\n    newChildLanes = 0,\n    subtreeFlags = 0;\n  if (didBailout)\n    for (var child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags & 65011712),\n        (subtreeFlags |= child$114.flags & 65011712),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  else\n    for (child$114 = completedWork.child; null !== child$114; )\n      (newChildLanes |= child$114.lanes | child$114.childLanes),\n        (subtreeFlags |= child$114.subtreeFlags),\n        (subtreeFlags |= child$114.flags),\n        (child$114.return = completedWork),\n        (child$114 = child$114.sibling);\n  completedWork.subtreeFlags |= subtreeFlags;\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps;\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 31:\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return bubbleProperties(workInProgress), null;\n    case 1:\n      return bubbleProperties(workInProgress), null;\n    case 3:\n      renderLanes = workInProgress.stateNode;\n      newProps = null;\n      null !== current && (newProps = current.memoizedState.cache);\n      workInProgress.memoizedState.cache !== newProps &&\n        (workInProgress.flags |= 2048);\n      popProvider(CacheContext);\n      popHostContainer();\n      renderLanes.pendingContext &&\n        ((renderLanes.context = renderLanes.pendingContext),\n        (renderLanes.pendingContext = null));\n      if (null === current || null === current.child)\n        popHydrationState(workInProgress)\n          ? markUpdate(workInProgress)\n          : null === current ||\n            (current.memoizedState.isDehydrated &&\n              0 === (workInProgress.flags & 256)) ||\n            ((workInProgress.flags |= 1024),\n            upgradeHydrationErrorsToRecoverable());\n      bubbleProperties(workInProgress);\n      return null;\n    case 26:\n      return (\n        (renderLanes = workInProgress.memoizedState),\n        null === current\n          ? (markUpdate(workInProgress),\n            null !== renderLanes\n              ? (bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217)))\n          : renderLanes\n            ? renderLanes !== current.memoizedState\n              ? (markUpdate(workInProgress),\n                bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217))\n            : (current.memoizedProps !== newProps && markUpdate(workInProgress),\n              bubbleProperties(workInProgress),\n              (workInProgress.flags &= -16777217)),\n        null\n      );\n    case 27:\n      popHostContext(workInProgress);\n      renderLanes = rootInstanceStackCursor.current;\n      var type = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        popHydrationState(workInProgress)\n          ? prepareToHydrateHostInstance(workInProgress, current)\n          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),\n            (workInProgress.stateNode = current),\n            markUpdate(workInProgress));\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 5:\n      popHostContext(workInProgress);\n      renderLanes = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        if (popHydrationState(workInProgress))\n          prepareToHydrateHostInstance(workInProgress, current);\n        else {\n          type = getOwnerDocumentFromRootContainer(\n            rootInstanceStackCursor.current\n          );\n          switch (current) {\n            case 1:\n              current = type.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                renderLanes\n              );\n              break;\n            case 2:\n              current = type.createElementNS(\n                \"http://www.w3.org/1998/Math/MathML\",\n                renderLanes\n              );\n              break;\n            default:\n              switch (renderLanes) {\n                case \"svg\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/2000/svg\",\n                    renderLanes\n                  );\n                  break;\n                case \"math\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/1998/Math/MathML\",\n                    renderLanes\n                  );\n                  break;\n                case \"script\":\n                  current = type.createElement(\"div\");\n                  current.innerHTML = \"<script>\\x3c/script>\";\n                  current = current.removeChild(current.firstChild);\n                  break;\n                case \"select\":\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(\"select\", { is: newProps.is })\n                      : type.createElement(\"select\");\n                  newProps.multiple\n                    ? (current.multiple = !0)\n                    : newProps.size && (current.size = newProps.size);\n                  break;\n                default:\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(renderLanes, { is: newProps.is })\n                      : type.createElement(renderLanes);\n              }\n          }\n          current[internalInstanceKey] = workInProgress;\n          current[internalPropsKey] = newProps;\n          a: for (type = workInProgress.child; null !== type; ) {\n            if (5 === type.tag || 6 === type.tag)\n              current.appendChild(type.stateNode);\n            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {\n              type.child.return = type;\n              type = type.child;\n              continue;\n            }\n            if (type === workInProgress) break a;\n            for (; null === type.sibling; ) {\n              if (null === type.return || type.return === workInProgress)\n                break a;\n              type = type.return;\n            }\n            type.sibling.return = type.return;\n            type = type.sibling;\n          }\n          workInProgress.stateNode = current;\n          a: switch (\n            (setInitialProperties(current, renderLanes, newProps), renderLanes)\n          ) {\n            case \"button\":\n            case \"input\":\n            case \"select\":\n            case \"textarea\":\n              current = !!newProps.autoFocus;\n              break a;\n            case \"img\":\n              current = !0;\n              break a;\n            default:\n              current = !1;\n          }\n          current && markUpdate(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      workInProgress.flags &= -16777217;\n      return null;\n    case 6:\n      if (current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (\"string\" !== typeof newProps && null === workInProgress.stateNode)\n          throw Error(formatProdErrorMessage(166));\n        current = rootInstanceStackCursor.current;\n        if (popHydrationState(workInProgress)) {\n          current = workInProgress.stateNode;\n          renderLanes = workInProgress.memoizedProps;\n          newProps = null;\n          type = hydrationParentFiber;\n          if (null !== type)\n            switch (type.tag) {\n              case 27:\n              case 5:\n                newProps = type.memoizedProps;\n            }\n          current[internalInstanceKey] = workInProgress;\n          current =\n            current.nodeValue === renderLanes ||\n            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||\n            checkForUnmatchedText(current.nodeValue, renderLanes)\n              ? !0\n              : !1;\n          current || throwOnHydrationMismatch(workInProgress);\n        } else\n          (current =\n            getOwnerDocumentFromRootContainer(current).createTextNode(\n              newProps\n            )),\n            (current[internalInstanceKey] = workInProgress),\n            (workInProgress.stateNode = current);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 13:\n      newProps = workInProgress.memoizedState;\n      if (\n        null === current ||\n        (null !== current.memoizedState &&\n          null !== current.memoizedState.dehydrated)\n      ) {\n        type = popHydrationState(workInProgress);\n        if (null !== newProps && null !== newProps.dehydrated) {\n          if (null === current) {\n            if (!type) throw Error(formatProdErrorMessage(318));\n            type = workInProgress.memoizedState;\n            type = null !== type ? type.dehydrated : null;\n            if (!type) throw Error(formatProdErrorMessage(317));\n            type[internalInstanceKey] = workInProgress;\n          } else\n            resetHydrationState(),\n              0 === (workInProgress.flags & 128) &&\n                (workInProgress.memoizedState = null),\n              (workInProgress.flags |= 4);\n          bubbleProperties(workInProgress);\n          type = !1;\n        } else\n          (type = upgradeHydrationErrorsToRecoverable()),\n            null !== current &&\n              null !== current.memoizedState &&\n              (current.memoizedState.hydrationErrors = type),\n            (type = !0);\n        if (!type) {\n          if (workInProgress.flags & 256)\n            return popSuspenseHandler(workInProgress), workInProgress;\n          popSuspenseHandler(workInProgress);\n          return null;\n        }\n      }\n      popSuspenseHandler(workInProgress);\n      if (0 !== (workInProgress.flags & 128))\n        return (workInProgress.lanes = renderLanes), workInProgress;\n      renderLanes = null !== newProps;\n      current = null !== current && null !== current.memoizedState;\n      if (renderLanes) {\n        newProps = workInProgress.child;\n        type = null;\n        null !== newProps.alternate &&\n          null !== newProps.alternate.memoizedState &&\n          null !== newProps.alternate.memoizedState.cachePool &&\n          (type = newProps.alternate.memoizedState.cachePool.pool);\n        var cache$127 = null;\n        null !== newProps.memoizedState &&\n          null !== newProps.memoizedState.cachePool &&\n          (cache$127 = newProps.memoizedState.cachePool.pool);\n        cache$127 !== type && (newProps.flags |= 2048);\n      }\n      renderLanes !== current &&\n        renderLanes &&\n        (workInProgress.child.flags |= 8192);\n      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n      bubbleProperties(workInProgress);\n      return null;\n    case 4:\n      return (\n        popHostContainer(),\n        null === current &&\n          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 10:\n      return (\n        popProvider(workInProgress.type), bubbleProperties(workInProgress), null\n      );\n    case 19:\n      pop(suspenseStackCursor);\n      type = workInProgress.memoizedState;\n      if (null === type) return bubbleProperties(workInProgress), null;\n      newProps = 0 !== (workInProgress.flags & 128);\n      cache$127 = type.rendering;\n      if (null === cache$127)\n        if (newProps) cutOffTailIfNeeded(type, !1);\n        else {\n          if (\n            0 !== workInProgressRootExitStatus ||\n            (null !== current && 0 !== (current.flags & 128))\n          )\n            for (current = workInProgress.child; null !== current; ) {\n              cache$127 = findFirstSuspended(current);\n              if (null !== cache$127) {\n                workInProgress.flags |= 128;\n                cutOffTailIfNeeded(type, !1);\n                current = cache$127.updateQueue;\n                workInProgress.updateQueue = current;\n                scheduleRetryEffect(workInProgress, current);\n                workInProgress.subtreeFlags = 0;\n                current = renderLanes;\n                for (renderLanes = workInProgress.child; null !== renderLanes; )\n                  resetWorkInProgress(renderLanes, current),\n                    (renderLanes = renderLanes.sibling);\n                push(\n                  suspenseStackCursor,\n                  (suspenseStackCursor.current & 1) | 2\n                );\n                return workInProgress.child;\n              }\n              current = current.sibling;\n            }\n          null !== type.tail &&\n            now() > workInProgressRootRenderTargetTime &&\n            ((workInProgress.flags |= 128),\n            (newProps = !0),\n            cutOffTailIfNeeded(type, !1),\n            (workInProgress.lanes = 4194304));\n        }\n      else {\n        if (!newProps)\n          if (((current = findFirstSuspended(cache$127)), null !== current)) {\n            if (\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              (current = current.updateQueue),\n              (workInProgress.updateQueue = current),\n              scheduleRetryEffect(workInProgress, current),\n              cutOffTailIfNeeded(type, !0),\n              null === type.tail &&\n                \"hidden\" === type.tailMode &&\n                !cache$127.alternate &&\n                !isHydrating)\n            )\n              return bubbleProperties(workInProgress), null;\n          } else\n            2 * now() - type.renderingStartTime >\n              workInProgressRootRenderTargetTime &&\n              536870912 !== renderLanes &&\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              cutOffTailIfNeeded(type, !1),\n              (workInProgress.lanes = 4194304));\n        type.isBackwards\n          ? ((cache$127.sibling = workInProgress.child),\n            (workInProgress.child = cache$127))\n          : ((current = type.last),\n            null !== current\n              ? (current.sibling = cache$127)\n              : (workInProgress.child = cache$127),\n            (type.last = cache$127));\n      }\n      if (null !== type.tail)\n        return (\n          (workInProgress = type.tail),\n          (type.rendering = workInProgress),\n          (type.tail = workInProgress.sibling),\n          (type.renderingStartTime = now()),\n          (workInProgress.sibling = null),\n          (current = suspenseStackCursor.current),\n          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),\n          workInProgress\n        );\n      bubbleProperties(workInProgress);\n      return null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        (newProps = null !== workInProgress.memoizedState),\n        null !== current\n          ? (null !== current.memoizedState) !== newProps &&\n            (workInProgress.flags |= 8192)\n          : newProps && (workInProgress.flags |= 8192),\n        newProps\n          ? 0 !== (renderLanes & 536870912) &&\n            0 === (workInProgress.flags & 128) &&\n            (bubbleProperties(workInProgress),\n            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))\n          : bubbleProperties(workInProgress),\n        (renderLanes = workInProgress.updateQueue),\n        null !== renderLanes &&\n          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n        (renderLanes = null),\n        null !== current &&\n          null !== current.memoizedState &&\n          null !== current.memoizedState.cachePool &&\n          (renderLanes = current.memoizedState.cachePool.pool),\n        (newProps = null),\n        null !== workInProgress.memoizedState &&\n          null !== workInProgress.memoizedState.cachePool &&\n          (newProps = workInProgress.memoizedState.cachePool.pool),\n        newProps !== renderLanes && (workInProgress.flags |= 2048),\n        null !== current && pop(resumedCache),\n        null\n      );\n    case 24:\n      return (\n        (renderLanes = null),\n        null !== current && (renderLanes = current.memoizedState.cache),\n        workInProgress.memoizedState.cache !== renderLanes &&\n          (workInProgress.flags |= 2048),\n        popProvider(CacheContext),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 25:\n      return null;\n    case 30:\n      return null;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction unwindWork(current, workInProgress) {\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 1:\n      return (\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 3:\n      return (\n        popProvider(CacheContext),\n        popHostContainer(),\n        (current = workInProgress.flags),\n        0 !== (current & 65536) && 0 === (current & 128)\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 26:\n    case 27:\n    case 5:\n      return popHostContext(workInProgress), null;\n    case 13:\n      popSuspenseHandler(workInProgress);\n      current = workInProgress.memoizedState;\n      if (null !== current && null !== current.dehydrated) {\n        if (null === workInProgress.alternate)\n          throw Error(formatProdErrorMessage(340));\n        resetHydrationState();\n      }\n      current = workInProgress.flags;\n      return current & 65536\n        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n        : null;\n    case 19:\n      return pop(suspenseStackCursor), null;\n    case 4:\n      return popHostContainer(), null;\n    case 10:\n      return popProvider(workInProgress.type), null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        null !== current && pop(resumedCache),\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 24:\n      return popProvider(CacheContext), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction unwindInterruptedWork(current, interruptedWork) {\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case 3:\n      popProvider(CacheContext);\n      popHostContainer();\n      break;\n    case 26:\n    case 27:\n    case 5:\n      popHostContext(interruptedWork);\n      break;\n    case 4:\n      popHostContainer();\n      break;\n    case 13:\n      popSuspenseHandler(interruptedWork);\n      break;\n    case 19:\n      pop(suspenseStackCursor);\n      break;\n    case 10:\n      popProvider(interruptedWork.type);\n      break;\n    case 22:\n    case 23:\n      popSuspenseHandler(interruptedWork);\n      popHiddenContext();\n      null !== current && pop(resumedCache);\n      break;\n    case 24:\n      popProvider(CacheContext);\n  }\n}\nfunction commitHookEffectListMount(flags, finishedWork) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          lastEffect = void 0;\n          var create = updateQueue.create,\n            inst = updateQueue.inst;\n          lastEffect = create();\n          inst.destroy = lastEffect;\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor$jscomp$0\n) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          var inst = updateQueue.inst,\n            destroy = inst.destroy;\n          if (void 0 !== destroy) {\n            inst.destroy = void 0;\n            lastEffect = finishedWork;\n            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0,\n              destroy_ = destroy;\n            try {\n              destroy_();\n            } catch (error) {\n              captureCommitPhaseError(\n                lastEffect,\n                nearestMountedAncestor,\n                error\n              );\n            }\n          }\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitClassCallbacks(finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  if (null !== updateQueue) {\n    var instance = finishedWork.stateNode;\n    try {\n      commitCallbacks(updateQueue, instance);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n  }\n}\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  instance.props = resolveClassComponentProps(\n    current.type,\n    current.memoizedProps\n  );\n  instance.state = current.memoizedState;\n  try {\n    instance.componentWillUnmount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    var ref = current.ref;\n    if (null !== ref) {\n      switch (current.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var instanceToUse = current.stateNode;\n          break;\n        case 30:\n          instanceToUse = current.stateNode;\n          break;\n        default:\n          instanceToUse = current.stateNode;\n      }\n      \"function\" === typeof ref\n        ? (current.refCleanup = ref(instanceToUse))\n        : (ref.current = instanceToUse);\n    }\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref,\n    refCleanup = current.refCleanup;\n  if (null !== ref)\n    if (\"function\" === typeof refCleanup)\n      try {\n        refCleanup();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      } finally {\n        (current.refCleanup = null),\n          (current = current.alternate),\n          null != current && (current.refCleanup = null);\n      }\n    else if (\"function\" === typeof ref)\n      try {\n        ref(null);\n      } catch (error$143) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error$143);\n      }\n    else ref.current = null;\n}\nfunction commitHostMount(finishedWork) {\n  var type = finishedWork.type,\n    props = finishedWork.memoizedProps,\n    instance = finishedWork.stateNode;\n  try {\n    a: switch (type) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        props.autoFocus && instance.focus();\n        break a;\n      case \"img\":\n        props.src\n          ? (instance.src = props.src)\n          : props.srcSet && (instance.srcset = props.srcSet);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHostUpdate(finishedWork, newProps, oldProps) {\n  try {\n    var domElement = finishedWork.stateNode;\n    updateProperties(domElement, finishedWork.type, oldProps, newProps);\n    domElement[internalPropsKey] = newProps;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction isHostParent(fiber) {\n  return (\n    5 === fiber.tag ||\n    3 === fiber.tag ||\n    26 === fiber.tag ||\n    (27 === fiber.tag && isSingletonScope(fiber.type)) ||\n    4 === fiber.tag\n  );\n}\nfunction getHostSibling(fiber) {\n  a: for (;;) {\n    for (; null === fiber.sibling; ) {\n      if (null === fiber.return || isHostParent(fiber.return)) return null;\n      fiber = fiber.return;\n    }\n    fiber.sibling.return = fiber.return;\n    for (\n      fiber = fiber.sibling;\n      5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;\n\n    ) {\n      if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;\n      if (fiber.flags & 2) continue a;\n      if (null === fiber.child || 4 === fiber.tag) continue a;\n      else (fiber.child.return = fiber), (fiber = fiber.child);\n    }\n    if (!(fiber.flags & 2)) return fiber.stateNode;\n  }\n}\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before\n        ? (9 === parent.nodeType\n            ? parent.body\n            : \"HTML\" === parent.nodeName\n              ? parent.ownerDocument.body\n              : parent\n          ).insertBefore(node, before)\n        : ((before =\n            9 === parent.nodeType\n              ? parent.body\n              : \"HTML\" === parent.nodeName\n                ? parent.ownerDocument.body\n                : parent),\n          before.appendChild(node),\n          (parent = parent._reactRootContainer),\n          (null !== parent && void 0 !== parent) ||\n            null !== before.onclick ||\n            (before.onclick = noop$1));\n  else if (\n    4 !== tag &&\n    (27 === tag &&\n      isSingletonScope(node.type) &&\n      ((parent = node.stateNode), (before = null)),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        (node = node.sibling);\n}\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before ? parent.insertBefore(node, before) : parent.appendChild(node);\n  else if (\n    4 !== tag &&\n    (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),\n    (node = node.child),\n    null !== node)\n  )\n    for (\n      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);\n}\nfunction commitHostSingletonAcquisition(finishedWork) {\n  var singleton = finishedWork.stateNode,\n    props = finishedWork.memoizedProps;\n  try {\n    for (\n      var type = finishedWork.type, attributes = singleton.attributes;\n      attributes.length;\n\n    )\n      singleton.removeAttributeNode(attributes[0]);\n    setInitialProperties(singleton, type, props);\n    singleton[internalInstanceKey] = finishedWork;\n    singleton[internalPropsKey] = props;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nvar offscreenSubtreeIsHidden = !1,\n  offscreenSubtreeWasHidden = !1,\n  needsFormReset = !1,\n  PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n  nextEffect = null;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  root = root.containerInfo;\n  eventsEnabled = _enabled;\n  root = getActiveElementDeep(root);\n  if (hasSelectionCapabilities(root)) {\n    if (\"selectionStart\" in root)\n      var JSCompiler_temp = {\n        start: root.selectionStart,\n        end: root.selectionEnd\n      };\n    else\n      a: {\n        JSCompiler_temp =\n          ((JSCompiler_temp = root.ownerDocument) &&\n            JSCompiler_temp.defaultView) ||\n          window;\n        var selection =\n          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n        if (selection && 0 !== selection.rangeCount) {\n          JSCompiler_temp = selection.anchorNode;\n          var anchorOffset = selection.anchorOffset,\n            focusNode = selection.focusNode;\n          selection = selection.focusOffset;\n          try {\n            JSCompiler_temp.nodeType, focusNode.nodeType;\n          } catch (e$20) {\n            JSCompiler_temp = null;\n            break a;\n          }\n          var length = 0,\n            start = -1,\n            end = -1,\n            indexWithinAnchor = 0,\n            indexWithinFocus = 0,\n            node = root,\n            parentNode = null;\n          b: for (;;) {\n            for (var next; ; ) {\n              node !== JSCompiler_temp ||\n                (0 !== anchorOffset && 3 !== node.nodeType) ||\n                (start = length + anchorOffset);\n              node !== focusNode ||\n                (0 !== selection && 3 !== node.nodeType) ||\n                (end = length + selection);\n              3 === node.nodeType && (length += node.nodeValue.length);\n              if (null === (next = node.firstChild)) break;\n              parentNode = node;\n              node = next;\n            }\n            for (;;) {\n              if (node === root) break b;\n              parentNode === JSCompiler_temp &&\n                ++indexWithinAnchor === anchorOffset &&\n                (start = length);\n              parentNode === focusNode &&\n                ++indexWithinFocus === selection &&\n                (end = length);\n              if (null !== (next = node.nextSibling)) break;\n              node = parentNode;\n              parentNode = node.parentNode;\n            }\n            node = next;\n          }\n          JSCompiler_temp =\n            -1 === start || -1 === end ? null : { start: start, end: end };\n        } else JSCompiler_temp = null;\n      }\n    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n  } else JSCompiler_temp = null;\n  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };\n  _enabled = !1;\n  for (nextEffect = firstChild; null !== nextEffect; )\n    if (\n      ((firstChild = nextEffect),\n      (root = firstChild.child),\n      0 !== (firstChild.subtreeFlags & 1024) && null !== root)\n    )\n      (root.return = firstChild), (nextEffect = root);\n    else\n      for (; null !== nextEffect; ) {\n        firstChild = nextEffect;\n        focusNode = firstChild.alternate;\n        root = firstChild.flags;\n        switch (firstChild.tag) {\n          case 0:\n            break;\n          case 11:\n          case 15:\n            break;\n          case 1:\n            if (0 !== (root & 1024) && null !== focusNode) {\n              root = void 0;\n              JSCompiler_temp = firstChild;\n              anchorOffset = focusNode.memoizedProps;\n              focusNode = focusNode.memoizedState;\n              selection = JSCompiler_temp.stateNode;\n              try {\n                var resolvedPrevProps = resolveClassComponentProps(\n                  JSCompiler_temp.type,\n                  anchorOffset,\n                  JSCompiler_temp.elementType === JSCompiler_temp.type\n                );\n                root = selection.getSnapshotBeforeUpdate(\n                  resolvedPrevProps,\n                  focusNode\n                );\n                selection.__reactInternalSnapshotBeforeUpdate = root;\n              } catch (error) {\n                captureCommitPhaseError(\n                  JSCompiler_temp,\n                  JSCompiler_temp.return,\n                  error\n                );\n              }\n            }\n            break;\n          case 3:\n            if (0 !== (root & 1024))\n              if (\n                ((root = firstChild.stateNode.containerInfo),\n                (JSCompiler_temp = root.nodeType),\n                9 === JSCompiler_temp)\n              )\n                clearContainerSparingly(root);\n              else if (1 === JSCompiler_temp)\n                switch (root.nodeName) {\n                  case \"HEAD\":\n                  case \"HTML\":\n                  case \"BODY\":\n                    clearContainerSparingly(root);\n                    break;\n                  default:\n                    root.textContent = \"\";\n                }\n            break;\n          case 5:\n          case 26:\n          case 27:\n          case 6:\n          case 4:\n          case 17:\n            break;\n          default:\n            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));\n        }\n        root = firstChild.sibling;\n        if (null !== root) {\n          root.return = firstChild.return;\n          nextEffect = root;\n          break;\n        }\n        nextEffect = firstChild.return;\n      }\n}\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitHookEffectListMount(5, finishedWork);\n      break;\n    case 1:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 4)\n        if (((finishedRoot = finishedWork.stateNode), null === current))\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        else {\n          var prevProps = resolveClassComponentProps(\n            finishedWork.type,\n            current.memoizedProps\n          );\n          current = current.memoizedState;\n          try {\n            finishedRoot.componentDidUpdate(\n              prevProps,\n              current,\n              finishedRoot.__reactInternalSnapshotBeforeUpdate\n            );\n          } catch (error$142) {\n            captureCommitPhaseError(\n              finishedWork,\n              finishedWork.return,\n              error$142\n            );\n          }\n        }\n      flags & 64 && commitClassCallbacks(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (\n        flags & 64 &&\n        ((finishedRoot = finishedWork.updateQueue), null !== finishedRoot)\n      ) {\n        current = null;\n        if (null !== finishedWork.child)\n          switch (finishedWork.child.tag) {\n            case 27:\n            case 5:\n              current = finishedWork.child.stateNode;\n              break;\n            case 1:\n              current = finishedWork.child.stateNode;\n          }\n        try {\n          commitCallbacks(finishedRoot, current);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 27:\n      null === current &&\n        flags & 4 &&\n        commitHostSingletonAcquisition(finishedWork);\n    case 26:\n    case 5:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      null === current && flags & 4 && commitHostMount(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 12:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      flags & 64 &&\n        ((finishedRoot = finishedWork.memoizedState),\n        null !== finishedRoot &&\n          ((finishedRoot = finishedRoot.dehydrated),\n          null !== finishedRoot &&\n            ((finishedWork = retryDehydratedSuspenseBoundary.bind(\n              null,\n              finishedWork\n            )),\n            registerSuspenseInstanceRetry(finishedRoot, finishedWork))));\n      break;\n    case 22:\n      flags = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n      if (!flags) {\n        current =\n          (null !== current && null !== current.memoizedState) ||\n          offscreenSubtreeWasHidden;\n        prevProps = offscreenSubtreeIsHidden;\n        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeIsHidden = flags;\n        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden\n          ? recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              0 !== (finishedWork.subtreeFlags & 8772)\n            )\n          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n        offscreenSubtreeIsHidden = prevProps;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      }\n      break;\n    case 30:\n      break;\n    default:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n  }\n}\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n  null !== alternate &&\n    ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n  fiber.child = null;\n  fiber.deletions = null;\n  fiber.sibling = null;\n  5 === fiber.tag &&\n    ((alternate = fiber.stateNode),\n    null !== alternate && detachDeletedInstance(alternate));\n  fiber.stateNode = null;\n  fiber.return = null;\n  fiber.dependencies = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.stateNode = null;\n  fiber.updateQueue = null;\n}\nvar hostParent = null,\n  hostParentIsContainer = !1;\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  for (parent = parent.child; null !== parent; )\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),\n      (parent = parent.sibling);\n}\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberUnmount)\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n    } catch (err) {}\n  switch (deletedFiber.tag) {\n    case 26:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber.memoizedState\n        ? deletedFiber.memoizedState.count--\n        : deletedFiber.stateNode &&\n          ((deletedFiber = deletedFiber.stateNode),\n          deletedFiber.parentNode.removeChild(deletedFiber));\n      break;\n    case 27:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      var prevHostParent = hostParent,\n        prevHostParentIsContainer = hostParentIsContainer;\n      isSingletonScope(deletedFiber.type) &&\n        ((hostParent = deletedFiber.stateNode), (hostParentIsContainer = !1));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      releaseSingletonInstance(deletedFiber.stateNode);\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 5:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n    case 6:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = null;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      if (null !== hostParent)\n        if (hostParentIsContainer)\n          try {\n            (9 === hostParent.nodeType\n              ? hostParent.body\n              : \"HTML\" === hostParent.nodeName\n                ? hostParent.ownerDocument.body\n                : hostParent\n            ).removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n        else\n          try {\n            hostParent.removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n      break;\n    case 18:\n      null !== hostParent &&\n        (hostParentIsContainer\n          ? ((finishedRoot = hostParent),\n            clearSuspenseBoundary(\n              9 === finishedRoot.nodeType\n                ? finishedRoot.body\n                : \"HTML\" === finishedRoot.nodeName\n                  ? finishedRoot.ownerDocument.body\n                  : finishedRoot,\n              deletedFiber.stateNode\n            ),\n            retryIfBlockedOn(finishedRoot))\n          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n      break;\n    case 4:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode.containerInfo;\n      hostParentIsContainer = !0;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 1:\n      offscreenSubtreeWasHidden ||\n        (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n        (prevHostParent = deletedFiber.stateNode),\n        \"function\" === typeof prevHostParent.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            prevHostParent\n          ));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 21:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 22:\n      offscreenSubtreeWasHidden =\n        (prevHostParent = offscreenSubtreeWasHidden) ||\n        null !== deletedFiber.memoizedState;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      offscreenSubtreeWasHidden = prevHostParent;\n      break;\n    default:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n  }\n}\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n  if (\n    null === finishedWork.memoizedState &&\n    ((finishedRoot = finishedWork.alternate),\n    null !== finishedRoot &&\n      ((finishedRoot = finishedRoot.memoizedState),\n      null !== finishedRoot &&\n        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n  )\n    try {\n      retryIfBlockedOn(finishedRoot);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n}\nfunction getRetryCache(finishedWork) {\n  switch (finishedWork.tag) {\n    case 13:\n    case 19:\n      var retryCache = finishedWork.stateNode;\n      null === retryCache &&\n        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n      return retryCache;\n    case 22:\n      return (\n        (finishedWork = finishedWork.stateNode),\n        (retryCache = finishedWork._retryCache),\n        null === retryCache &&\n          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n        retryCache\n      );\n    default:\n      throw Error(formatProdErrorMessage(435, finishedWork.tag));\n  }\n}\nfunction attachSuspenseRetryListeners(finishedWork, wakeables) {\n  var retryCache = getRetryCache(finishedWork);\n  wakeables.forEach(function (wakeable) {\n    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n    retryCache.has(wakeable) ||\n      (retryCache.add(wakeable), wakeable.then(retry, retry));\n  });\n}\nfunction recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (null !== deletions)\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i],\n        root = root$jscomp$0,\n        returnFiber = parentFiber,\n        parent = returnFiber;\n      a: for (; null !== parent; ) {\n        switch (parent.tag) {\n          case 27:\n            if (isSingletonScope(parent.type)) {\n              hostParent = parent.stateNode;\n              hostParentIsContainer = !1;\n              break a;\n            }\n            break;\n          case 5:\n            hostParent = parent.stateNode;\n            hostParentIsContainer = !1;\n            break a;\n          case 3:\n          case 4:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n        }\n        parent = parent.return;\n      }\n      if (null === hostParent) throw Error(formatProdErrorMessage(160));\n      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);\n      hostParent = null;\n      hostParentIsContainer = !1;\n      root = childToDelete.alternate;\n      null !== root && (root.return = null);\n      childToDelete.return = null;\n    }\n  if (parentFiber.subtreeFlags & 13878)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n        (parentFiber = parentFiber.sibling);\n}\nvar currentHoistableRoot = null;\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  var current = finishedWork.alternate,\n    flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),\n        commitHookEffectListMount(3, finishedWork),\n        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));\n      break;\n    case 1:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      flags & 64 &&\n        offscreenSubtreeIsHidden &&\n        ((finishedWork = finishedWork.updateQueue),\n        null !== finishedWork &&\n          ((flags = finishedWork.callbacks),\n          null !== flags &&\n            ((current = finishedWork.shared.hiddenCallbacks),\n            (finishedWork.shared.hiddenCallbacks =\n              null === current ? flags : current.concat(flags)))));\n      break;\n    case 26:\n      var hoistableRoot = currentHoistableRoot;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (flags & 4) {\n        var currentResource = null !== current ? current.memoizedState : null;\n        flags = finishedWork.memoizedState;\n        if (null === current)\n          if (null === flags)\n            if (null === finishedWork.stateNode) {\n              a: {\n                flags = finishedWork.type;\n                current = finishedWork.memoizedProps;\n                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n                b: switch (flags) {\n                  case \"title\":\n                    currentResource =\n                      hoistableRoot.getElementsByTagName(\"title\")[0];\n                    if (\n                      !currentResource ||\n                      currentResource[internalHoistableMarker] ||\n                      currentResource[internalInstanceKey] ||\n                      \"http://www.w3.org/2000/svg\" ===\n                        currentResource.namespaceURI ||\n                      currentResource.hasAttribute(\"itemprop\")\n                    )\n                      (currentResource = hoistableRoot.createElement(flags)),\n                        hoistableRoot.head.insertBefore(\n                          currentResource,\n                          hoistableRoot.querySelector(\"head > title\")\n                        );\n                    setInitialProperties(currentResource, flags, current);\n                    currentResource[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(currentResource);\n                    flags = currentResource;\n                    break a;\n                  case \"link\":\n                    var maybeNodes = getHydratableHoistableCache(\n                      \"link\",\n                      \"href\",\n                      hoistableRoot\n                    ).get(flags + (current.href || \"\"));\n                    if (maybeNodes)\n                      for (var i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"href\") ===\n                            (null == current.href || \"\" === current.href\n                              ? null\n                              : current.href) &&\n                            currentResource.getAttribute(\"rel\") ===\n                              (null == current.rel ? null : current.rel) &&\n                            currentResource.getAttribute(\"title\") ===\n                              (null == current.title ? null : current.title) &&\n                            currentResource.getAttribute(\"crossorigin\") ===\n                              (null == current.crossOrigin\n                                ? null\n                                : current.crossOrigin))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  case \"meta\":\n                    if (\n                      (maybeNodes = getHydratableHoistableCache(\n                        \"meta\",\n                        \"content\",\n                        hoistableRoot\n                      ).get(flags + (current.content || \"\")))\n                    )\n                      for (i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"content\") ===\n                            (null == current.content\n                              ? null\n                              : \"\" + current.content) &&\n                            currentResource.getAttribute(\"name\") ===\n                              (null == current.name ? null : current.name) &&\n                            currentResource.getAttribute(\"property\") ===\n                              (null == current.property\n                                ? null\n                                : current.property) &&\n                            currentResource.getAttribute(\"http-equiv\") ===\n                              (null == current.httpEquiv\n                                ? null\n                                : current.httpEquiv) &&\n                            currentResource.getAttribute(\"charset\") ===\n                              (null == current.charSet\n                                ? null\n                                : current.charSet))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  default:\n                    throw Error(formatProdErrorMessage(468, flags));\n                }\n                currentResource[internalInstanceKey] = finishedWork;\n                markNodeAsHoistable(currentResource);\n                flags = currentResource;\n              }\n              finishedWork.stateNode = flags;\n            } else\n              mountHoistable(\n                hoistableRoot,\n                finishedWork.type,\n                finishedWork.stateNode\n              );\n          else\n            finishedWork.stateNode = acquireResource(\n              hoistableRoot,\n              flags,\n              finishedWork.memoizedProps\n            );\n        else\n          currentResource !== flags\n            ? (null === currentResource\n                ? null !== current.stateNode &&\n                  ((current = current.stateNode),\n                  current.parentNode.removeChild(current))\n                : currentResource.count--,\n              null === flags\n                ? mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  )\n                : acquireResource(\n                    hoistableRoot,\n                    flags,\n                    finishedWork.memoizedProps\n                  ))\n            : null === flags &&\n              null !== finishedWork.stateNode &&\n              commitHostUpdate(\n                finishedWork,\n                finishedWork.memoizedProps,\n                current.memoizedProps\n              );\n      }\n      break;\n    case 27:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      null !== current &&\n        flags & 4 &&\n        commitHostUpdate(\n          finishedWork,\n          finishedWork.memoizedProps,\n          current.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (finishedWork.flags & 32) {\n        hoistableRoot = finishedWork.stateNode;\n        try {\n          setTextContent(hoistableRoot, \"\");\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      flags & 4 &&\n        null != finishedWork.stateNode &&\n        ((hoistableRoot = finishedWork.memoizedProps),\n        commitHostUpdate(\n          finishedWork,\n          hoistableRoot,\n          null !== current ? current.memoizedProps : hoistableRoot\n        ));\n      flags & 1024 && (needsFormReset = !0);\n      break;\n    case 6:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4) {\n        if (null === finishedWork.stateNode)\n          throw Error(formatProdErrorMessage(162));\n        flags = finishedWork.memoizedProps;\n        current = finishedWork.stateNode;\n        try {\n          current.nodeValue = flags;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 3:\n      tagCaches = null;\n      hoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(root.containerInfo);\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      currentHoistableRoot = hoistableRoot;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)\n        try {\n          retryIfBlockedOn(root.containerInfo);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      needsFormReset &&\n        ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n      break;\n    case 4:\n      flags = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(\n        finishedWork.stateNode.containerInfo\n      );\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      currentHoistableRoot = flags;\n      break;\n    case 12:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      finishedWork.child.flags & 8192 &&\n        (null !== finishedWork.memoizedState) !==\n          (null !== current && null !== current.memoizedState) &&\n        (globalMostRecentFallbackTime = now());\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 22:\n      hoistableRoot = null !== finishedWork.memoizedState;\n      var wasHidden = null !== current && null !== current.memoizedState,\n        prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n        prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 8192)\n        a: for (\n          root = finishedWork.stateNode,\n            root._visibility = hoistableRoot\n              ? root._visibility & -2\n              : root._visibility | 1,\n            hoistableRoot &&\n              (null === current ||\n                wasHidden ||\n                offscreenSubtreeIsHidden ||\n                offscreenSubtreeWasHidden ||\n                recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n            current = null,\n            root = finishedWork;\n          ;\n\n        ) {\n          if (5 === root.tag || 26 === root.tag) {\n            if (null === current) {\n              wasHidden = current = root;\n              try {\n                if (((currentResource = wasHidden.stateNode), hoistableRoot))\n                  (maybeNodes = currentResource.style),\n                    \"function\" === typeof maybeNodes.setProperty\n                      ? maybeNodes.setProperty(\"display\", \"none\", \"important\")\n                      : (maybeNodes.display = \"none\");\n                else {\n                  i = wasHidden.stateNode;\n                  var styleProp = wasHidden.memoizedProps.style,\n                    display =\n                      void 0 !== styleProp &&\n                      null !== styleProp &&\n                      styleProp.hasOwnProperty(\"display\")\n                        ? styleProp.display\n                        : null;\n                  i.style.display =\n                    null == display || \"boolean\" === typeof display\n                      ? \"\"\n                      : (\"\" + display).trim();\n                }\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (6 === root.tag) {\n            if (null === current) {\n              wasHidden = root;\n              try {\n                wasHidden.stateNode.nodeValue = hoistableRoot\n                  ? \"\"\n                  : wasHidden.memoizedProps;\n              } catch (error) {\n                captureCommitPhaseError(wasHidden, wasHidden.return, error);\n              }\n            }\n          } else if (\n            ((22 !== root.tag && 23 !== root.tag) ||\n              null === root.memoizedState ||\n              root === finishedWork) &&\n            null !== root.child\n          ) {\n            root.child.return = root;\n            root = root.child;\n            continue;\n          }\n          if (root === finishedWork) break a;\n          for (; null === root.sibling; ) {\n            if (null === root.return || root.return === finishedWork) break a;\n            current === root && (current = null);\n            root = root.return;\n          }\n          current === root && (current = null);\n          root.sibling.return = root.return;\n          root = root.sibling;\n        }\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((current = flags.retryQueue),\n          null !== current &&\n            ((flags.retryQueue = null),\n            attachSuspenseRetryListeners(finishedWork, current))));\n      break;\n    case 19:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 30:\n      break;\n    case 21:\n      break;\n    default:\n      recursivelyTraverseMutationEffects(root, finishedWork),\n        commitReconciliationEffects(finishedWork);\n  }\n}\nfunction commitReconciliationEffects(finishedWork) {\n  var flags = finishedWork.flags;\n  if (flags & 2) {\n    try {\n      for (\n        var hostParentFiber, parentFiber = finishedWork.return;\n        null !== parentFiber;\n\n      ) {\n        if (isHostParent(parentFiber)) {\n          hostParentFiber = parentFiber;\n          break;\n        }\n        parentFiber = parentFiber.return;\n      }\n      if (null == hostParentFiber) throw Error(formatProdErrorMessage(160));\n      switch (hostParentFiber.tag) {\n        case 27:\n          var parent = hostParentFiber.stateNode,\n            before = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before, parent);\n          break;\n        case 5:\n          var parent$144 = hostParentFiber.stateNode;\n          hostParentFiber.flags & 32 &&\n            (setTextContent(parent$144, \"\"), (hostParentFiber.flags &= -33));\n          var before$145 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNode(finishedWork, before$145, parent$144);\n          break;\n        case 3:\n        case 4:\n          var parent$146 = hostParentFiber.stateNode.containerInfo,\n            before$147 = getHostSibling(finishedWork);\n          insertOrAppendPlacementNodeIntoContainer(\n            finishedWork,\n            before$147,\n            parent$146\n          );\n          break;\n        default:\n          throw Error(formatProdErrorMessage(161));\n      }\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    finishedWork.flags &= -3;\n  }\n  flags & 4096 && (finishedWork.flags &= -4097);\n}\nfunction recursivelyResetForms(parentFiber) {\n  if (parentFiber.subtreeFlags & 1024)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var fiber = parentFiber;\n      recursivelyResetForms(fiber);\n      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n      parentFiber = parentFiber.sibling;\n    }\n}\nfunction recursivelyTraverseLayoutEffects(root, parentFiber) {\n  if (parentFiber.subtreeFlags & 8772)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedWork = parentFiber;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 1:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        var instance = finishedWork.stateNode;\n        \"function\" === typeof instance.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            finishedWork,\n            finishedWork.return,\n            instance\n          );\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 27:\n        releaseSingletonInstance(finishedWork.stateNode);\n      case 26:\n      case 5:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 30:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      default:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseReappearLayoutEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var current = parentFiber.alternate,\n      finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(4, finishedWork);\n        break;\n      case 1:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        current = finishedWork;\n        finishedRoot = current.stateNode;\n        if (\"function\" === typeof finishedRoot.componentDidMount)\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        current = finishedWork;\n        finishedRoot = current.updateQueue;\n        if (null !== finishedRoot) {\n          var instance = current.stateNode;\n          try {\n            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;\n            if (null !== hiddenCallbacks)\n              for (\n                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;\n                finishedRoot < hiddenCallbacks.length;\n                finishedRoot++\n              )\n                callCallback(hiddenCallbacks[finishedRoot], instance);\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        }\n        includeWorkInProgressEffects &&\n          flags & 64 &&\n          commitClassCallbacks(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 27:\n        commitHostSingletonAcquisition(finishedWork);\n      case 26:\n      case 5:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          null === current &&\n          flags & 4 &&\n          commitHostMount(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 12:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        break;\n      case 13:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 4 &&\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 30:\n        break;\n      default:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitOffscreenPassiveMountEffects(current, finishedWork) {\n  var previousCache = null;\n  null !== current &&\n    null !== current.memoizedState &&\n    null !== current.memoizedState.cachePool &&\n    (previousCache = current.memoizedState.cachePool.pool);\n  current = null;\n  null !== finishedWork.memoizedState &&\n    null !== finishedWork.memoizedState.cachePool &&\n    (current = finishedWork.memoizedState.cachePool.pool);\n  current !== previousCache &&\n    (null != current && current.refCount++,\n    null != previousCache && releaseCache(previousCache));\n}\nfunction commitCachePassiveMountEffect(current, finishedWork) {\n  current = null;\n  null !== finishedWork.alternate &&\n    (current = finishedWork.alternate.memoizedState.cache);\n  finishedWork = finishedWork.memoizedState.cache;\n  finishedWork !== current &&\n    (finishedWork.refCount++, null != current && releaseCache(current));\n}\nfunction recursivelyTraversePassiveMountEffects(\n  root,\n  parentFiber,\n  committedLanes,\n  committedTransitions\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveMountOnFiber(\n        root,\n        parentFiber,\n        committedLanes,\n        committedTransitions\n      ),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 && commitHookEffectListMount(9, finishedWork);\n      break;\n    case 1:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 3:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        ((finishedRoot = null),\n        null !== finishedWork.alternate &&\n          (finishedRoot = finishedWork.alternate.memoizedState.cache),\n        (finishedWork = finishedWork.memoizedState.cache),\n        finishedWork !== finishedRoot &&\n          (finishedWork.refCount++,\n          null != finishedRoot && releaseCache(finishedRoot)));\n      break;\n    case 12:\n      if (flags & 2048) {\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n        finishedRoot = finishedWork.stateNode;\n        try {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            id = _finishedWork$memoize2.id,\n            onPostCommit = _finishedWork$memoize2.onPostCommit;\n          \"function\" === typeof onPostCommit &&\n            onPostCommit(\n              id,\n              null === finishedWork.alternate ? \"mount\" : \"update\",\n              finishedRoot.passiveEffectDuration,\n              -0\n            );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      } else\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n      break;\n    case 13:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      break;\n    case 23:\n      break;\n    case 22:\n      _finishedWork$memoize2 = finishedWork.stateNode;\n      id = finishedWork.alternate;\n      null !== finishedWork.memoizedState\n        ? _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)\n        : _finishedWork$memoize2._visibility & 2\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : ((_finishedWork$memoize2._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              0 !== (finishedWork.subtreeFlags & 10256)\n            ));\n      flags & 2048 && commitOffscreenPassiveMountEffects(id, finishedWork);\n      break;\n    case 24:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n  }\n}\nfunction recursivelyTraverseReconnectPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  committedLanes$jscomp$0,\n  committedTransitions$jscomp$0,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      committedLanes = committedLanes$jscomp$0,\n      committedTransitions = committedTransitions$jscomp$0,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(8, finishedWork);\n        break;\n      case 23:\n        break;\n      case 22:\n        var instance = finishedWork.stateNode;\n        null !== finishedWork.memoizedState\n          ? instance._visibility & 2\n            ? recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              )\n            : recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              )\n          : ((instance._visibility |= 2),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              includeWorkInProgressEffects\n            ));\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitOffscreenPassiveMountEffects(\n            finishedWork.alternate,\n            finishedWork\n          );\n        break;\n      case 24:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n        break;\n      default:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseAtomicPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var finishedRoot = finishedRoot$jscomp$0,\n        finishedWork = parentFiber,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 22:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n      }\n      parentFiber = parentFiber.sibling;\n    }\n}\nvar suspenseyCommitFlag = 8192;\nfunction recursivelyAccumulateSuspenseyCommit(parentFiber) {\n  if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      accumulateSuspenseyCommitOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction accumulateSuspenseyCommitOnFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      fiber.flags & suspenseyCommitFlag &&\n        null !== fiber.memoizedState &&\n        suspendResource(\n          currentHoistableRoot,\n          fiber.memoizedState,\n          fiber.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      break;\n    case 3:\n    case 4:\n      var previousHoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      currentHoistableRoot = previousHoistableRoot;\n      break;\n    case 22:\n      null === fiber.memoizedState &&\n        ((previousHoistableRoot = fiber.alternate),\n        null !== previousHoistableRoot &&\n        null !== previousHoistableRoot.memoizedState\n          ? ((previousHoistableRoot = suspenseyCommitFlag),\n            (suspenseyCommitFlag = 16777216),\n            recursivelyAccumulateSuspenseyCommit(fiber),\n            (suspenseyCommitFlag = previousHoistableRoot))\n          : recursivelyAccumulateSuspenseyCommit(fiber));\n      break;\n    default:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n  }\n}\nfunction detachAlternateSiblings(parentFiber) {\n  var previousFiber = parentFiber.alternate;\n  if (\n    null !== previousFiber &&\n    ((parentFiber = previousFiber.child), null !== parentFiber)\n  ) {\n    previousFiber.child = null;\n    do\n      (previousFiber = parentFiber.sibling),\n        (parentFiber.sibling = null),\n        (parentFiber = previousFiber);\n    while (null !== parentFiber);\n  }\n}\nfunction recursivelyTraversePassiveUnmountEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveUnmountOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      finishedWork.flags & 2048 &&\n        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 12:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 22:\n      var instance = finishedWork.stateNode;\n      null !== finishedWork.memoizedState &&\n      instance._visibility & 2 &&\n      (null === finishedWork.return || 13 !== finishedWork.return.tag)\n        ? ((instance._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n        : recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n  }\n}\nfunction recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    deletions = parentFiber;\n    switch (deletions.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, deletions, deletions.return);\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n        break;\n      case 22:\n        i = deletions.stateNode;\n        i._visibility & 2 &&\n          ((i._visibility &= -3),\n          recursivelyTraverseDisconnectPassiveEffects(deletions));\n        break;\n      default:\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  for (; null !== nextEffect; ) {\n    var fiber = nextEffect;\n    switch (fiber.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);\n        break;\n      case 23:\n      case 22:\n        if (\n          null !== fiber.memoizedState &&\n          null !== fiber.memoizedState.cachePool\n        ) {\n          var cache = fiber.memoizedState.cachePool.pool;\n          null != cache && cache.refCount++;\n        }\n        break;\n      case 24:\n        releaseCache(fiber.memoizedState.cache);\n    }\n    cache = fiber.child;\n    if (null !== cache) (cache.return = fiber), (nextEffect = cache);\n    else\n      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n        cache = nextEffect;\n        var sibling = cache.sibling,\n          returnFiber = cache.return;\n        detachFiberAfterEffects(cache);\n        if (cache === fiber) {\n          nextEffect = null;\n          break a;\n        }\n        if (null !== sibling) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          break a;\n        }\n        nextEffect = returnFiber;\n      }\n  }\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var cache = readContext(CacheContext),\n        cacheForType = cache.data.get(resourceType);\n      void 0 === cacheForType &&\n        ((cacheForType = resourceType()),\n        cache.data.set(resourceType, cacheForType));\n      return cacheForType;\n    }\n  },\n  PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n  executionContext = 0,\n  workInProgressRoot = null,\n  workInProgress = null,\n  workInProgressRootRenderLanes = 0,\n  workInProgressSuspendedReason = 0,\n  workInProgressThrownValue = null,\n  workInProgressRootDidSkipSuspendedSiblings = !1,\n  workInProgressRootIsPrerendering = !1,\n  workInProgressRootDidAttachPingListener = !1,\n  entangledRenderLanes = 0,\n  workInProgressRootExitStatus = 0,\n  workInProgressRootSkippedLanes = 0,\n  workInProgressRootInterleavedUpdatedLanes = 0,\n  workInProgressRootPingedLanes = 0,\n  workInProgressDeferredLane = 0,\n  workInProgressSuspendedRetryLanes = 0,\n  workInProgressRootConcurrentErrors = null,\n  workInProgressRootRecoverableErrors = null,\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n  globalMostRecentFallbackTime = 0,\n  workInProgressRootRenderTargetTime = Infinity,\n  workInProgressTransitions = null,\n  legacyErrorBoundariesThatAlreadyFailed = null,\n  pendingEffectsStatus = 0,\n  pendingEffectsRoot = null,\n  pendingFinishedWork = null,\n  pendingEffectsLanes = 0,\n  pendingEffectsRemainingLanes = 0,\n  pendingPassiveTransitions = null,\n  pendingRecoverableErrors = null,\n  nestedUpdateCount = 0,\n  rootWithNestedUpdates = null;\nfunction requestUpdateLane() {\n  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)\n    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n  if (null !== ReactSharedInternals.T) {\n    var actionScopeLane = currentEntangledLane;\n    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();\n  }\n  return resolveUpdatePriority();\n}\nfunction requestDeferredLane() {\n  0 === workInProgressDeferredLane &&\n    (workInProgressDeferredLane =\n      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n        ? claimNextTransitionLane()\n        : 536870912);\n  var suspenseHandler = suspenseHandlerStackCursor.current;\n  null !== suspenseHandler && (suspenseHandler.flags |= 32);\n  return workInProgressDeferredLane;\n}\nfunction scheduleUpdateOnFiber(root, fiber, lane) {\n  if (\n    (root === workInProgressRoot &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    prepareFreshStack(root, 0),\n      markRootSuspended(\n        root,\n        workInProgressRootRenderLanes,\n        workInProgressDeferredLane,\n        !1\n      );\n  markRootUpdated$1(root, lane);\n  if (0 === (executionContext & 2) || root !== workInProgressRoot)\n    root === workInProgressRoot &&\n      (0 === (executionContext & 2) &&\n        (workInProgressRootInterleavedUpdatedLanes |= lane),\n      4 === workInProgressRootExitStatus &&\n        markRootSuspended(\n          root,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        )),\n      ensureRootIsScheduled(root);\n}\nfunction performWorkOnRoot(root$jscomp$0, lanes, forceSync) {\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var shouldTimeSlice =\n      (!forceSync &&\n        0 === (lanes & 124) &&\n        0 === (lanes & root$jscomp$0.expiredLanes)) ||\n      checkIfRootIsPrerendering(root$jscomp$0, lanes),\n    exitStatus = shouldTimeSlice\n      ? renderRootConcurrent(root$jscomp$0, lanes)\n      : renderRootSync(root$jscomp$0, lanes, !0),\n    renderWasConcurrent = shouldTimeSlice;\n  do {\n    if (0 === exitStatus) {\n      workInProgressRootIsPrerendering &&\n        !shouldTimeSlice &&\n        markRootSuspended(root$jscomp$0, lanes, 0, !1);\n      break;\n    } else {\n      forceSync = root$jscomp$0.current.alternate;\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(forceSync)\n      ) {\n        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);\n        renderWasConcurrent = !1;\n        continue;\n      }\n      if (2 === exitStatus) {\n        renderWasConcurrent = lanes;\n        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)\n          var JSCompiler_inline_result = 0;\n        else\n          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),\n            (JSCompiler_inline_result =\n              0 !== JSCompiler_inline_result\n                ? JSCompiler_inline_result\n                : JSCompiler_inline_result & 536870912\n                  ? 536870912\n                  : 0);\n        if (0 !== JSCompiler_inline_result) {\n          lanes = JSCompiler_inline_result;\n          a: {\n            var root = root$jscomp$0;\n            exitStatus = workInProgressRootConcurrentErrors;\n            var wasRootDehydrated = root.current.memoizedState.isDehydrated;\n            wasRootDehydrated &&\n              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);\n            JSCompiler_inline_result = renderRootSync(\n              root,\n              JSCompiler_inline_result,\n              !1\n            );\n            if (2 !== JSCompiler_inline_result) {\n              if (\n                workInProgressRootDidAttachPingListener &&\n                !wasRootDehydrated\n              ) {\n                root.errorRecoveryDisabledLanes |= renderWasConcurrent;\n                workInProgressRootInterleavedUpdatedLanes |=\n                  renderWasConcurrent;\n                exitStatus = 4;\n                break a;\n              }\n              renderWasConcurrent = workInProgressRootRecoverableErrors;\n              workInProgressRootRecoverableErrors = exitStatus;\n              null !== renderWasConcurrent &&\n                (null === workInProgressRootRecoverableErrors\n                  ? (workInProgressRootRecoverableErrors = renderWasConcurrent)\n                  : workInProgressRootRecoverableErrors.push.apply(\n                      workInProgressRootRecoverableErrors,\n                      renderWasConcurrent\n                    ));\n            }\n            exitStatus = JSCompiler_inline_result;\n          }\n          renderWasConcurrent = !1;\n          if (2 !== exitStatus) continue;\n        }\n      }\n      if (1 === exitStatus) {\n        prepareFreshStack(root$jscomp$0, 0);\n        markRootSuspended(root$jscomp$0, lanes, 0, !0);\n        break;\n      }\n      a: {\n        shouldTimeSlice = root$jscomp$0;\n        renderWasConcurrent = exitStatus;\n        switch (renderWasConcurrent) {\n          case 0:\n          case 1:\n            throw Error(formatProdErrorMessage(345));\n          case 4:\n            if ((lanes & 4194048) !== lanes) break;\n          case 6:\n            markRootSuspended(\n              shouldTimeSlice,\n              lanes,\n              workInProgressDeferredLane,\n              !workInProgressRootDidSkipSuspendedSiblings\n            );\n            break a;\n          case 2:\n            workInProgressRootRecoverableErrors = null;\n            break;\n          case 3:\n          case 5:\n            break;\n          default:\n            throw Error(formatProdErrorMessage(329));\n        }\n        if (\n          (lanes & 62914560) === lanes &&\n          ((exitStatus = globalMostRecentFallbackTime + 300 - now()),\n          10 < exitStatus)\n        ) {\n          markRootSuspended(\n            shouldTimeSlice,\n            lanes,\n            workInProgressDeferredLane,\n            !workInProgressRootDidSkipSuspendedSiblings\n          );\n          if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;\n          shouldTimeSlice.timeoutHandle = scheduleTimeout(\n            commitRootWhenReady.bind(\n              null,\n              shouldTimeSlice,\n              forceSync,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n              workInProgressRootDidIncludeRecursiveRenderUpdate,\n              lanes,\n              workInProgressDeferredLane,\n              workInProgressRootInterleavedUpdatedLanes,\n              workInProgressSuspendedRetryLanes,\n              workInProgressRootDidSkipSuspendedSiblings,\n              renderWasConcurrent,\n              2,\n              -0,\n              0\n            ),\n            exitStatus\n          );\n          break a;\n        }\n        commitRootWhenReady(\n          shouldTimeSlice,\n          forceSync,\n          workInProgressRootRecoverableErrors,\n          workInProgressTransitions,\n          workInProgressRootDidIncludeRecursiveRenderUpdate,\n          lanes,\n          workInProgressDeferredLane,\n          workInProgressRootInterleavedUpdatedLanes,\n          workInProgressSuspendedRetryLanes,\n          workInProgressRootDidSkipSuspendedSiblings,\n          renderWasConcurrent,\n          0,\n          -0,\n          0\n        );\n      }\n    }\n    break;\n  } while (1);\n  ensureRootIsScheduled(root$jscomp$0);\n}\nfunction commitRootWhenReady(\n  root,\n  finishedWork,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  lanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  didSkipSuspendedSiblings,\n  exitStatus,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  root.timeoutHandle = -1;\n  suspendedCommitReason = finishedWork.subtreeFlags;\n  if (\n    suspendedCommitReason & 8192 ||\n    16785408 === (suspendedCommitReason & 16785408)\n  )\n    if (\n      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n      accumulateSuspenseyCommitOnFiber(finishedWork),\n      (suspendedCommitReason = waitForCommitToBeReady()),\n      null !== suspendedCommitReason)\n    ) {\n      root.cancelPendingCommit = suspendedCommitReason(\n        commitRoot.bind(\n          null,\n          root,\n          finishedWork,\n          lanes,\n          recoverableErrors,\n          transitions,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes,\n          exitStatus,\n          1,\n          completedRenderStartTime,\n          completedRenderEndTime\n        )\n      );\n      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);\n      return;\n    }\n  commitRoot(\n    root,\n    finishedWork,\n    lanes,\n    recoverableErrors,\n    transitions,\n    didIncludeRenderPhaseUpdate,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes\n  );\n}\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  for (var node = finishedWork; ; ) {\n    var tag = node.tag;\n    if (\n      (0 === tag || 11 === tag || 15 === tag) &&\n      node.flags & 16384 &&\n      ((tag = node.updateQueue),\n      null !== tag && ((tag = tag.stores), null !== tag))\n    )\n      for (var i = 0; i < tag.length; i++) {\n        var check = tag[i],\n          getSnapshot = check.getSnapshot;\n        check = check.value;\n        try {\n          if (!objectIs(getSnapshot(), check)) return !1;\n        } catch (error) {\n          return !1;\n        }\n      }\n    tag = node.child;\n    if (node.subtreeFlags & 16384 && null !== tag)\n      (tag.return = node), (node = tag);\n    else {\n      if (node === finishedWork) break;\n      for (; null === node.sibling; ) {\n        if (null === node.return || node.return === finishedWork) return !0;\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return !0;\n}\nfunction markRootSuspended(\n  root,\n  suspendedLanes,\n  spawnedLane,\n  didAttemptEntireTree\n) {\n  suspendedLanes &= ~workInProgressRootPingedLanes;\n  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n  didAttemptEntireTree = root.expirationTimes;\n  for (var lanes = suspendedLanes; 0 < lanes; ) {\n    var index$4 = 31 - clz32(lanes),\n      lane = 1 << index$4;\n    didAttemptEntireTree[index$4] = -1;\n    lanes &= ~lane;\n  }\n  0 !== spawnedLane &&\n    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n}\nfunction flushSyncWork$1() {\n  return 0 === (executionContext & 6)\n    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n    : !0;\n}\nfunction resetWorkInProgressStack() {\n  if (null !== workInProgress) {\n    if (0 === workInProgressSuspendedReason)\n      var interruptedWork = workInProgress.return;\n    else\n      (interruptedWork = workInProgress),\n        (lastContextDependency = currentlyRenderingFiber$1 = null),\n        resetHooksOnUnwind(interruptedWork),\n        (thenableState = null),\n        (thenableIndexCounter = 0),\n        (interruptedWork = workInProgress);\n    for (; null !== interruptedWork; )\n      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n        (interruptedWork = interruptedWork.return);\n    workInProgress = null;\n  }\n}\nfunction prepareFreshStack(root, lanes) {\n  var timeoutHandle = root.timeoutHandle;\n  -1 !== timeoutHandle &&\n    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));\n  timeoutHandle = root.cancelPendingCommit;\n  null !== timeoutHandle &&\n    ((root.cancelPendingCommit = null), timeoutHandle());\n  resetWorkInProgressStack();\n  workInProgressRoot = root;\n  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = lanes;\n  workInProgressSuspendedReason = 0;\n  workInProgressThrownValue = null;\n  workInProgressRootDidSkipSuspendedSiblings = !1;\n  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n  workInProgressRootDidAttachPingListener = !1;\n  workInProgressSuspendedRetryLanes =\n    workInProgressDeferredLane =\n    workInProgressRootPingedLanes =\n    workInProgressRootInterleavedUpdatedLanes =\n    workInProgressRootSkippedLanes =\n    workInProgressRootExitStatus =\n      0;\n  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n    null;\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n  0 !== (lanes & 8) && (lanes |= lanes & 32);\n  var allEntangledLanes = root.entangledLanes;\n  if (0 !== allEntangledLanes)\n    for (\n      root = root.entanglements, allEntangledLanes &= lanes;\n      0 < allEntangledLanes;\n\n    ) {\n      var index$2 = 31 - clz32(allEntangledLanes),\n        lane = 1 << index$2;\n      lanes |= root[index$2];\n      allEntangledLanes &= ~lane;\n    }\n  entangledRenderLanes = lanes;\n  finishQueueingConcurrentUpdates();\n  return timeoutHandle;\n}\nfunction handleThrow(root, thrownValue) {\n  currentlyRenderingFiber = null;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  thrownValue === SuspenseException || thrownValue === SuspenseActionException\n    ? ((thrownValue = getSuspendedThenable()),\n      (workInProgressSuspendedReason = 3))\n    : thrownValue === SuspenseyCommitException\n      ? ((thrownValue = getSuspendedThenable()),\n        (workInProgressSuspendedReason = 4))\n      : (workInProgressSuspendedReason =\n          thrownValue === SelectiveHydrationException\n            ? 8\n            : null !== thrownValue &&\n                \"object\" === typeof thrownValue &&\n                \"function\" === typeof thrownValue.then\n              ? 6\n              : 1);\n  workInProgressThrownValue = thrownValue;\n  null === workInProgress &&\n    ((workInProgressRootExitStatus = 1),\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    ));\n}\nfunction pushDispatcher() {\n  var prevDispatcher = ReactSharedInternals.H;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n}\nfunction pushAsyncDispatcher() {\n  var prevAsyncDispatcher = ReactSharedInternals.A;\n  ReactSharedInternals.A = DefaultAsyncDispatcher;\n  return prevAsyncDispatcher;\n}\nfunction renderDidSuspendDelayIfPossible() {\n  workInProgressRootExitStatus = 4;\n  workInProgressRootDidSkipSuspendedSiblings ||\n    ((workInProgressRootRenderLanes & 4194048) !==\n      workInProgressRootRenderLanes &&\n      null !== suspenseHandlerStackCursor.current) ||\n    (workInProgressRootIsPrerendering = !0);\n  (0 === (workInProgressRootSkippedLanes & 134217727) &&\n    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n    null === workInProgressRoot ||\n    markRootSuspended(\n      workInProgressRoot,\n      workInProgressRootRenderLanes,\n      workInProgressDeferredLane,\n      !1\n    );\n}\nfunction renderRootSync(root, lanes, shouldYieldForPrerendering) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)\n    (workInProgressTransitions = null), prepareFreshStack(root, lanes);\n  lanes = !1;\n  var exitStatus = workInProgressRootExitStatus;\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        var unitOfWork = workInProgress,\n          thrownValue = workInProgressThrownValue;\n        switch (workInProgressSuspendedReason) {\n          case 8:\n            resetWorkInProgressStack();\n            exitStatus = 6;\n            break a;\n          case 3:\n          case 2:\n          case 9:\n          case 6:\n            null === suspenseHandlerStackCursor.current && (lanes = !0);\n            var reason = workInProgressSuspendedReason;\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            if (\n              shouldYieldForPrerendering &&\n              workInProgressRootIsPrerendering\n            ) {\n              exitStatus = 0;\n              break a;\n            }\n            break;\n          default:\n            (reason = workInProgressSuspendedReason),\n              (workInProgressSuspendedReason = 0),\n              (workInProgressThrownValue = null),\n              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n        }\n      }\n      workLoopSync();\n      exitStatus = workInProgressRootExitStatus;\n      break;\n    } catch (thrownValue$167) {\n      handleThrow(root, thrownValue$167);\n    }\n  while (1);\n  lanes && root.shellSuspendCounter++;\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  executionContext = prevExecutionContext;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  null === workInProgress &&\n    ((workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0),\n    finishQueueingConcurrentUpdates());\n  return exitStatus;\n}\nfunction workLoopSync() {\n  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n}\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes\n    ? ((workInProgressTransitions = null),\n      (workInProgressRootRenderTargetTime = now() + 500),\n      prepareFreshStack(root, lanes))\n    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n        root,\n        lanes\n      ));\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        lanes = workInProgress;\n        var thrownValue = workInProgressThrownValue;\n        b: switch (workInProgressSuspendedReason) {\n          case 1:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);\n            break;\n          case 2:\n          case 9:\n            if (isThenableResolved(thrownValue)) {\n              workInProgressSuspendedReason = 0;\n              workInProgressThrownValue = null;\n              replaySuspendedUnitOfWork(lanes);\n              break;\n            }\n            lanes = function () {\n              (2 !== workInProgressSuspendedReason &&\n                9 !== workInProgressSuspendedReason) ||\n                workInProgressRoot !== root ||\n                (workInProgressSuspendedReason = 7);\n              ensureRootIsScheduled(root);\n            };\n            thrownValue.then(lanes, lanes);\n            break a;\n          case 3:\n            workInProgressSuspendedReason = 7;\n            break a;\n          case 4:\n            workInProgressSuspendedReason = 5;\n            break a;\n          case 7:\n            isThenableResolved(thrownValue)\n              ? ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                replaySuspendedUnitOfWork(lanes))\n              : ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));\n            break;\n          case 5:\n            var resource = null;\n            switch (workInProgress.tag) {\n              case 26:\n                resource = workInProgress.memoizedState;\n              case 5:\n              case 27:\n                var hostFiber = workInProgress;\n                if (resource ? preloadResource(resource) : 1) {\n                  workInProgressSuspendedReason = 0;\n                  workInProgressThrownValue = null;\n                  var sibling = hostFiber.sibling;\n                  if (null !== sibling) workInProgress = sibling;\n                  else {\n                    var returnFiber = hostFiber.return;\n                    null !== returnFiber\n                      ? ((workInProgress = returnFiber),\n                        completeUnitOfWork(returnFiber))\n                      : (workInProgress = null);\n                  }\n                  break b;\n                }\n            }\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);\n            break;\n          case 6:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);\n            break;\n          case 8:\n            resetWorkInProgressStack();\n            workInProgressRootExitStatus = 6;\n            break a;\n          default:\n            throw Error(formatProdErrorMessage(462));\n        }\n      }\n      workLoopConcurrentByScheduler();\n      break;\n    } catch (thrownValue$169) {\n      handleThrow(root, thrownValue$169);\n    }\n  while (1);\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  executionContext = prevExecutionContext;\n  if (null !== workInProgress) return 0;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = 0;\n  finishQueueingConcurrentUpdates();\n  return workInProgressRootExitStatus;\n}\nfunction workLoopConcurrentByScheduler() {\n  for (; null !== workInProgress && !shouldYield(); )\n    performUnitOfWork(workInProgress);\n}\nfunction performUnitOfWork(unitOfWork) {\n  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction replaySuspendedUnitOfWork(unitOfWork) {\n  var next = unitOfWork;\n  var current = next.alternate;\n  switch (next.tag) {\n    case 15:\n    case 0:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type,\n        void 0,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 11:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type.render,\n        next.ref,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 5:\n      resetHooksOnUnwind(next);\n    default:\n      unwindInterruptedWork(current, next),\n        (next = workInProgress =\n          resetWorkInProgress(next, entangledRenderLanes)),\n        (next = beginWork(current, next, entangledRenderLanes));\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction throwAndUnwindWorkLoop(\n  root,\n  unitOfWork,\n  thrownValue,\n  suspendedReason\n) {\n  lastContextDependency = currentlyRenderingFiber$1 = null;\n  resetHooksOnUnwind(unitOfWork);\n  thenableState = null;\n  thenableIndexCounter = 0;\n  var returnFiber = unitOfWork.return;\n  try {\n    if (\n      throwException(\n        root,\n        returnFiber,\n        unitOfWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      )\n    ) {\n      workInProgressRootExitStatus = 1;\n      logUncaughtError(\n        root,\n        createCapturedValueAtFiber(thrownValue, root.current)\n      );\n      workInProgress = null;\n      return;\n    }\n  } catch (error) {\n    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n    workInProgressRootExitStatus = 1;\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    );\n    workInProgress = null;\n    return;\n  }\n  if (unitOfWork.flags & 32768) {\n    if (isHydrating || 1 === suspendedReason) root = !0;\n    else if (\n      workInProgressRootIsPrerendering ||\n      0 !== (workInProgressRootRenderLanes & 536870912)\n    )\n      root = !1;\n    else if (\n      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n      2 === suspendedReason ||\n        9 === suspendedReason ||\n        3 === suspendedReason ||\n        6 === suspendedReason)\n    )\n      (suspendedReason = suspenseHandlerStackCursor.current),\n        null !== suspendedReason &&\n          13 === suspendedReason.tag &&\n          (suspendedReason.flags |= 16384);\n    unwindUnitOfWork(unitOfWork, root);\n  } else completeUnitOfWork(unitOfWork);\n}\nfunction completeUnitOfWork(unitOfWork) {\n  var completedWork = unitOfWork;\n  do {\n    if (0 !== (completedWork.flags & 32768)) {\n      unwindUnitOfWork(\n        completedWork,\n        workInProgressRootDidSkipSuspendedSiblings\n      );\n      return;\n    }\n    unitOfWork = completedWork.return;\n    var next = completeWork(\n      completedWork.alternate,\n      completedWork,\n      entangledRenderLanes\n    );\n    if (null !== next) {\n      workInProgress = next;\n      return;\n    }\n    completedWork = completedWork.sibling;\n    if (null !== completedWork) {\n      workInProgress = completedWork;\n      return;\n    }\n    workInProgress = completedWork = unitOfWork;\n  } while (null !== completedWork);\n  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);\n}\nfunction unwindUnitOfWork(unitOfWork, skipSiblings) {\n  do {\n    var next = unwindWork(unitOfWork.alternate, unitOfWork);\n    if (null !== next) {\n      next.flags &= 32767;\n      workInProgress = next;\n      return;\n    }\n    next = unitOfWork.return;\n    null !== next &&\n      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));\n    if (\n      !skipSiblings &&\n      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n    ) {\n      workInProgress = unitOfWork;\n      return;\n    }\n    workInProgress = unitOfWork = next;\n  } while (null !== unitOfWork);\n  workInProgressRootExitStatus = 6;\n  workInProgress = null;\n}\nfunction commitRoot(\n  root,\n  finishedWork,\n  lanes,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  root.cancelPendingCommit = null;\n  do flushPendingEffects();\n  while (0 !== pendingEffectsStatus);\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  if (null !== finishedWork) {\n    if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));\n    didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;\n    didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;\n    markRootFinished(\n      root,\n      lanes,\n      didIncludeRenderPhaseUpdate,\n      spawnedLane,\n      updatedLanes,\n      suspendedRetryLanes\n    );\n    root === workInProgressRoot &&\n      ((workInProgress = workInProgressRoot = null),\n      (workInProgressRootRenderLanes = 0));\n    pendingFinishedWork = finishedWork;\n    pendingEffectsRoot = root;\n    pendingEffectsLanes = lanes;\n    pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;\n    pendingPassiveTransitions = transitions;\n    pendingRecoverableErrors = recoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? ((root.callbackNode = null),\n        (root.callbackPriority = 0),\n        scheduleCallback$1(NormalPriority$1, function () {\n          flushPassiveEffects(!0);\n          return null;\n        }))\n      : ((root.callbackNode = null), (root.callbackPriority = 0));\n    recoverableErrors = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {\n      recoverableErrors = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      transitions = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      spawnedLane = executionContext;\n      executionContext |= 4;\n      try {\n        commitBeforeMutationEffects(root, finishedWork, lanes);\n      } finally {\n        (executionContext = spawnedLane),\n          (ReactDOMSharedInternals.p = transitions),\n          (ReactSharedInternals.T = recoverableErrors);\n      }\n    }\n    pendingEffectsStatus = 1;\n    flushMutationEffects();\n    flushLayoutEffects();\n    flushSpawnedWork();\n  }\n}\nfunction flushMutationEffects() {\n  if (1 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);\n    if (0 !== (finishedWork.subtreeFlags & 13878) || rootMutationHasEffect) {\n      rootMutationHasEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitMutationEffectsOnFiber(finishedWork, root);\n        var priorSelectionInformation = selectionInformation,\n          curFocusedElem = getActiveElementDeep(root.containerInfo),\n          priorFocusedElem = priorSelectionInformation.focusedElem,\n          priorSelectionRange = priorSelectionInformation.selectionRange;\n        if (\n          curFocusedElem !== priorFocusedElem &&\n          priorFocusedElem &&\n          priorFocusedElem.ownerDocument &&\n          containsNode(\n            priorFocusedElem.ownerDocument.documentElement,\n            priorFocusedElem\n          )\n        ) {\n          if (\n            null !== priorSelectionRange &&\n            hasSelectionCapabilities(priorFocusedElem)\n          ) {\n            var start = priorSelectionRange.start,\n              end = priorSelectionRange.end;\n            void 0 === end && (end = start);\n            if (\"selectionStart\" in priorFocusedElem)\n              (priorFocusedElem.selectionStart = start),\n                (priorFocusedElem.selectionEnd = Math.min(\n                  end,\n                  priorFocusedElem.value.length\n                ));\n            else {\n              var doc = priorFocusedElem.ownerDocument || document,\n                win = (doc && doc.defaultView) || window;\n              if (win.getSelection) {\n                var selection = win.getSelection(),\n                  length = priorFocusedElem.textContent.length,\n                  start$jscomp$0 = Math.min(priorSelectionRange.start, length),\n                  end$jscomp$0 =\n                    void 0 === priorSelectionRange.end\n                      ? start$jscomp$0\n                      : Math.min(priorSelectionRange.end, length);\n                !selection.extend &&\n                  start$jscomp$0 > end$jscomp$0 &&\n                  ((curFocusedElem = end$jscomp$0),\n                  (end$jscomp$0 = start$jscomp$0),\n                  (start$jscomp$0 = curFocusedElem));\n                var startMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    start$jscomp$0\n                  ),\n                  endMarker = getNodeForCharacterOffset(\n                    priorFocusedElem,\n                    end$jscomp$0\n                  );\n                if (\n                  startMarker &&\n                  endMarker &&\n                  (1 !== selection.rangeCount ||\n                    selection.anchorNode !== startMarker.node ||\n                    selection.anchorOffset !== startMarker.offset ||\n                    selection.focusNode !== endMarker.node ||\n                    selection.focusOffset !== endMarker.offset)\n                ) {\n                  var range = doc.createRange();\n                  range.setStart(startMarker.node, startMarker.offset);\n                  selection.removeAllRanges();\n                  start$jscomp$0 > end$jscomp$0\n                    ? (selection.addRange(range),\n                      selection.extend(endMarker.node, endMarker.offset))\n                    : (range.setEnd(endMarker.node, endMarker.offset),\n                      selection.addRange(range));\n                }\n              }\n            }\n          }\n          doc = [];\n          for (\n            selection = priorFocusedElem;\n            (selection = selection.parentNode);\n\n          )\n            1 === selection.nodeType &&\n              doc.push({\n                element: selection,\n                left: selection.scrollLeft,\n                top: selection.scrollTop\n              });\n          \"function\" === typeof priorFocusedElem.focus &&\n            priorFocusedElem.focus();\n          for (\n            priorFocusedElem = 0;\n            priorFocusedElem < doc.length;\n            priorFocusedElem++\n          ) {\n            var info = doc[priorFocusedElem];\n            info.element.scrollLeft = info.left;\n            info.element.scrollTop = info.top;\n          }\n        }\n        _enabled = !!eventsEnabled;\n        selectionInformation = eventsEnabled = null;\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootMutationHasEffect);\n      }\n    }\n    root.current = finishedWork;\n    pendingEffectsStatus = 2;\n  }\n}\nfunction flushLayoutEffects() {\n  if (2 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);\n    if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {\n      rootHasLayoutEffect = ReactSharedInternals.T;\n      ReactSharedInternals.T = null;\n      var previousPriority = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      var prevExecutionContext = executionContext;\n      executionContext |= 4;\n      try {\n        commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork);\n      } finally {\n        (executionContext = prevExecutionContext),\n          (ReactDOMSharedInternals.p = previousPriority),\n          (ReactSharedInternals.T = rootHasLayoutEffect);\n      }\n    }\n    pendingEffectsStatus = 3;\n  }\n}\nfunction flushSpawnedWork() {\n  if (4 === pendingEffectsStatus || 3 === pendingEffectsStatus) {\n    pendingEffectsStatus = 0;\n    requestPaint();\n    var root = pendingEffectsRoot,\n      finishedWork = pendingFinishedWork,\n      lanes = pendingEffectsLanes,\n      recoverableErrors = pendingRecoverableErrors;\n    0 !== (finishedWork.subtreeFlags & 10256) ||\n    0 !== (finishedWork.flags & 10256)\n      ? (pendingEffectsStatus = 5)\n      : ((pendingEffectsStatus = 0),\n        (pendingFinishedWork = pendingEffectsRoot = null),\n        releaseRootPooledCache(root, root.pendingLanes));\n    var remainingLanes = root.pendingLanes;\n    0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n    lanesToEventPriority(lanes);\n    finishedWork = finishedWork.stateNode;\n    if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberRoot)\n      try {\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          finishedWork,\n          void 0,\n          128 === (finishedWork.current.flags & 128)\n        );\n      } catch (err) {}\n    if (null !== recoverableErrors) {\n      finishedWork = ReactSharedInternals.T;\n      remainingLanes = ReactDOMSharedInternals.p;\n      ReactDOMSharedInternals.p = 2;\n      ReactSharedInternals.T = null;\n      try {\n        for (\n          var onRecoverableError = root.onRecoverableError, i = 0;\n          i < recoverableErrors.length;\n          i++\n        ) {\n          var recoverableError = recoverableErrors[i];\n          onRecoverableError(recoverableError.value, {\n            componentStack: recoverableError.stack\n          });\n        }\n      } finally {\n        (ReactSharedInternals.T = finishedWork),\n          (ReactDOMSharedInternals.p = remainingLanes);\n      }\n    }\n    0 !== (pendingEffectsLanes & 3) && flushPendingEffects();\n    ensureRootIsScheduled(root);\n    remainingLanes = root.pendingLanes;\n    0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42)\n      ? root === rootWithNestedUpdates\n        ? nestedUpdateCount++\n        : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))\n      : (nestedUpdateCount = 0);\n    flushSyncWorkAcrossRoots_impl(0, !1);\n  }\n}\nfunction releaseRootPooledCache(root, remainingLanes) {\n  0 === (root.pooledCacheLanes &= remainingLanes) &&\n    ((remainingLanes = root.pooledCache),\n    null != remainingLanes &&\n      ((root.pooledCache = null), releaseCache(remainingLanes)));\n}\nfunction flushPendingEffects(wasDelayedCommit) {\n  flushMutationEffects();\n  flushLayoutEffects();\n  flushSpawnedWork();\n  return flushPassiveEffects(wasDelayedCommit);\n}\nfunction flushPassiveEffects() {\n  if (5 !== pendingEffectsStatus) return !1;\n  var root = pendingEffectsRoot,\n    remainingLanes = pendingEffectsRemainingLanes;\n  pendingEffectsRemainingLanes = 0;\n  var renderPriority = lanesToEventPriority(pendingEffectsLanes),\n    prevTransition = ReactSharedInternals.T,\n    previousPriority = ReactDOMSharedInternals.p;\n  try {\n    ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;\n    ReactSharedInternals.T = null;\n    renderPriority = pendingPassiveTransitions;\n    pendingPassiveTransitions = null;\n    var root$jscomp$0 = pendingEffectsRoot,\n      lanes = pendingEffectsLanes;\n    pendingEffectsStatus = 0;\n    pendingFinishedWork = pendingEffectsRoot = null;\n    pendingEffectsLanes = 0;\n    if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(331));\n    var prevExecutionContext = executionContext;\n    executionContext |= 4;\n    commitPassiveUnmountOnFiber(root$jscomp$0.current);\n    commitPassiveMountOnFiber(\n      root$jscomp$0,\n      root$jscomp$0.current,\n      lanes,\n      renderPriority\n    );\n    executionContext = prevExecutionContext;\n    flushSyncWorkAcrossRoots_impl(0, !1);\n    if (\n      injectedHook &&\n      \"function\" === typeof injectedHook.onPostCommitFiberRoot\n    )\n      try {\n        injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);\n      } catch (err) {}\n    return !0;\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition),\n      releaseRootPooledCache(root, remainingLanes);\n  }\n}\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n  null !== rootFiber &&\n    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n}\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {\n  if (3 === sourceFiber.tag)\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n  else\n    for (; null !== nearestMountedAncestor; ) {\n      if (3 === nearestMountedAncestor.tag) {\n        captureCommitPhaseErrorOnRoot(\n          nearestMountedAncestor,\n          sourceFiber,\n          error\n        );\n        break;\n      } else if (1 === nearestMountedAncestor.tag) {\n        var instance = nearestMountedAncestor.stateNode;\n        if (\n          \"function\" ===\n            typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n          (\"function\" === typeof instance.componentDidCatch &&\n            (null === legacyErrorBoundariesThatAlreadyFailed ||\n              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n        ) {\n          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n          error = createClassErrorUpdate(2);\n          instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n          null !== instance &&\n            (initializeClassErrorUpdate(\n              error,\n              instance,\n              nearestMountedAncestor,\n              sourceFiber\n            ),\n            markRootUpdated$1(instance, 2),\n            ensureRootIsScheduled(instance));\n          break;\n        }\n      }\n      nearestMountedAncestor = nearestMountedAncestor.return;\n    }\n}\nfunction attachPingListener(root, wakeable, lanes) {\n  var pingCache = root.pingCache;\n  if (null === pingCache) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    var threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else\n    (threadIDs = pingCache.get(wakeable)),\n      void 0 === threadIDs &&\n        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n  threadIDs.has(lanes) ||\n    ((workInProgressRootDidAttachPingListener = !0),\n    threadIDs.add(lanes),\n    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n    wakeable.then(root, root));\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n  null !== pingCache && pingCache.delete(wakeable);\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n  root.warmLanes &= ~pingedLanes;\n  workInProgressRoot === root &&\n    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n    (4 === workInProgressRootExitStatus ||\n    (3 === workInProgressRootExitStatus &&\n      (workInProgressRootRenderLanes & 62914560) ===\n        workInProgressRootRenderLanes &&\n      300 > now() - globalMostRecentFallbackTime)\n      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)\n      : (workInProgressRootPingedLanes |= pingedLanes),\n    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n      (workInProgressSuspendedRetryLanes = 0));\n  ensureRootIsScheduled(root);\n}\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  0 === retryLane && (retryLane = claimNextRetryLane());\n  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  null !== boundaryFiber &&\n    (markRootUpdated$1(boundaryFiber, retryLane),\n    ensureRootIsScheduled(boundaryFiber));\n}\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState,\n    retryLane = 0;\n  null !== suspenseState && (retryLane = suspenseState.retryLane);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = 0;\n  switch (boundaryFiber.tag) {\n    case 13:\n      var retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      break;\n    case 19:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    case 22:\n      retryCache = boundaryFiber.stateNode._retryCache;\n      break;\n    default:\n      throw Error(formatProdErrorMessage(314));\n  }\n  null !== retryCache && retryCache.delete(wakeable);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction scheduleCallback$1(priorityLevel, callback) {\n  return scheduleCallback$3(priorityLevel, callback);\n}\nvar firstScheduledRoot = null,\n  lastScheduledRoot = null,\n  didScheduleMicrotask = !1,\n  mightHavePendingSyncWork = !1,\n  isFlushingWork = !1,\n  currentEventTransitionLane = 0;\nfunction ensureRootIsScheduled(root) {\n  root !== lastScheduledRoot &&\n    null === root.next &&\n    (null === lastScheduledRoot\n      ? (firstScheduledRoot = lastScheduledRoot = root)\n      : (lastScheduledRoot = lastScheduledRoot.next = root));\n  mightHavePendingSyncWork = !0;\n  didScheduleMicrotask ||\n    ((didScheduleMicrotask = !0), scheduleImmediateRootScheduleTask());\n}\nfunction flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n  if (!isFlushingWork && mightHavePendingSyncWork) {\n    isFlushingWork = !0;\n    do {\n      var didPerformSomeWork = !1;\n      for (var root$174 = firstScheduledRoot; null !== root$174; ) {\n        if (!onlyLegacy)\n          if (0 !== syncTransitionLanes) {\n            var pendingLanes = root$174.pendingLanes;\n            if (0 === pendingLanes) var JSCompiler_inline_result = 0;\n            else {\n              var suspendedLanes = root$174.suspendedLanes,\n                pingedLanes = root$174.pingedLanes;\n              JSCompiler_inline_result =\n                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n              JSCompiler_inline_result &=\n                pendingLanes & ~(suspendedLanes & ~pingedLanes);\n              JSCompiler_inline_result =\n                JSCompiler_inline_result & 201326741\n                  ? (JSCompiler_inline_result & 201326741) | 1\n                  : JSCompiler_inline_result\n                    ? JSCompiler_inline_result | 2\n                    : 0;\n            }\n            0 !== JSCompiler_inline_result &&\n              ((didPerformSomeWork = !0),\n              performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n          } else\n            (JSCompiler_inline_result = workInProgressRootRenderLanes),\n              (JSCompiler_inline_result = getNextLanes(\n                root$174,\n                root$174 === workInProgressRoot ? JSCompiler_inline_result : 0,\n                null !== root$174.cancelPendingCommit ||\n                  -1 !== root$174.timeoutHandle\n              )),\n              0 === (JSCompiler_inline_result & 3) ||\n                checkIfRootIsPrerendering(root$174, JSCompiler_inline_result) ||\n                ((didPerformSomeWork = !0),\n                performSyncWorkOnRoot(root$174, JSCompiler_inline_result));\n        root$174 = root$174.next;\n      }\n    } while (didPerformSomeWork);\n    isFlushingWork = !1;\n  }\n}\nfunction processRootScheduleInImmediateTask() {\n  processRootScheduleInMicrotask();\n}\nfunction processRootScheduleInMicrotask() {\n  mightHavePendingSyncWork = didScheduleMicrotask = !1;\n  var syncTransitionLanes = 0;\n  0 !== currentEventTransitionLane &&\n    (shouldAttemptEagerTransition() &&\n      (syncTransitionLanes = currentEventTransitionLane),\n    (currentEventTransitionLane = 0));\n  for (\n    var currentTime = now(), prev = null, root = firstScheduledRoot;\n    null !== root;\n\n  ) {\n    var next = root.next,\n      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n    if (0 === nextLanes)\n      (root.next = null),\n        null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n        null === next && (lastScheduledRoot = prev);\n    else if (\n      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n    )\n      mightHavePendingSyncWork = !0;\n    root = next;\n  }\n  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n}\nfunction scheduleTaskForRootDuringMicrotask(root, currentTime) {\n  for (\n    var suspendedLanes = root.suspendedLanes,\n      pingedLanes = root.pingedLanes,\n      expirationTimes = root.expirationTimes,\n      lanes = root.pendingLanes & -62914561;\n    0 < lanes;\n\n  ) {\n    var index$3 = 31 - clz32(lanes),\n      lane = 1 << index$3,\n      expirationTime = expirationTimes[index$3];\n    if (-1 === expirationTime) {\n      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n        expirationTimes[index$3] = computeExpirationTime(lane, currentTime);\n    } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n    lanes &= ~lane;\n  }\n  currentTime = workInProgressRoot;\n  suspendedLanes = workInProgressRootRenderLanes;\n  suspendedLanes = getNextLanes(\n    root,\n    root === currentTime ? suspendedLanes : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  pingedLanes = root.callbackNode;\n  if (\n    0 === suspendedLanes ||\n    (root === currentTime &&\n      (2 === workInProgressSuspendedReason ||\n        9 === workInProgressSuspendedReason)) ||\n    null !== root.cancelPendingCommit\n  )\n    return (\n      null !== pingedLanes &&\n        null !== pingedLanes &&\n        cancelCallback$1(pingedLanes),\n      (root.callbackNode = null),\n      (root.callbackPriority = 0)\n    );\n  if (\n    0 === (suspendedLanes & 3) ||\n    checkIfRootIsPrerendering(root, suspendedLanes)\n  ) {\n    currentTime = suspendedLanes & -suspendedLanes;\n    if (currentTime === root.callbackPriority) return currentTime;\n    null !== pingedLanes && cancelCallback$1(pingedLanes);\n    switch (lanesToEventPriority(suspendedLanes)) {\n      case 2:\n      case 8:\n        suspendedLanes = UserBlockingPriority;\n        break;\n      case 32:\n        suspendedLanes = NormalPriority$1;\n        break;\n      case 268435456:\n        suspendedLanes = IdlePriority;\n        break;\n      default:\n        suspendedLanes = NormalPriority$1;\n    }\n    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);\n    root.callbackPriority = currentTime;\n    root.callbackNode = suspendedLanes;\n    return currentTime;\n  }\n  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);\n  root.callbackPriority = 2;\n  root.callbackNode = null;\n  return 2;\n}\nfunction performWorkOnRootViaSchedulerTask(root, didTimeout) {\n  if (0 !== pendingEffectsStatus && 5 !== pendingEffectsStatus)\n    return (root.callbackNode = null), (root.callbackPriority = 0), null;\n  var originalCallbackNode = root.callbackNode;\n  if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode)\n    return null;\n  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;\n  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0,\n    null !== root.cancelPendingCommit || -1 !== root.timeoutHandle\n  );\n  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);\n  scheduleTaskForRootDuringMicrotask(root, now());\n  return null != root.callbackNode && root.callbackNode === originalCallbackNode\n    ? performWorkOnRootViaSchedulerTask.bind(null, root)\n    : null;\n}\nfunction performSyncWorkOnRoot(root, lanes) {\n  if (flushPendingEffects()) return null;\n  performWorkOnRoot(root, lanes, !0);\n}\nfunction scheduleImmediateRootScheduleTask() {\n  scheduleMicrotask(function () {\n    0 !== (executionContext & 6)\n      ? scheduleCallback$3(\n          ImmediatePriority,\n          processRootScheduleInImmediateTask\n        )\n      : processRootScheduleInMicrotask();\n  });\n}\nfunction requestTransitionLane() {\n  0 === currentEventTransitionLane &&\n    (currentEventTransitionLane = claimNextTransitionLane());\n  return currentEventTransitionLane;\n}\nfunction coerceFormActionProp(actionProp) {\n  return null == actionProp ||\n    \"symbol\" === typeof actionProp ||\n    \"boolean\" === typeof actionProp\n    ? null\n    : \"function\" === typeof actionProp\n      ? actionProp\n      : sanitizeURL(\"\" + actionProp);\n}\nfunction createFormDataWithSubmitter(form, submitter) {\n  var temp = submitter.ownerDocument.createElement(\"input\");\n  temp.name = submitter.name;\n  temp.value = submitter.value;\n  form.id && temp.setAttribute(\"form\", form.id);\n  submitter.parentNode.insertBefore(temp, submitter);\n  form = new FormData(form);\n  temp.parentNode.removeChild(temp);\n  return form;\n}\nfunction extractEvents$1(\n  dispatchQueue,\n  domEventName,\n  maybeTargetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (\n    \"submit\" === domEventName &&\n    maybeTargetInst &&\n    maybeTargetInst.stateNode === nativeEventTarget\n  ) {\n    var action = coerceFormActionProp(\n        (nativeEventTarget[internalPropsKey] || null).action\n      ),\n      submitter = nativeEvent.submitter;\n    submitter &&\n      ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n        ? coerceFormActionProp(domEventName.formAction)\n        : submitter.getAttribute(\"formAction\")),\n      null !== domEventName && ((action = domEventName), (submitter = null)));\n    var event = new SyntheticEvent(\n      \"action\",\n      \"action\",\n      null,\n      nativeEvent,\n      nativeEventTarget\n    );\n    dispatchQueue.push({\n      event: event,\n      listeners: [\n        {\n          instance: null,\n          listener: function () {\n            if (nativeEvent.defaultPrevented) {\n              if (0 !== currentEventTransitionLane) {\n                var formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget);\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  null,\n                  formData\n                );\n              }\n            } else\n              \"function\" === typeof action &&\n                (event.preventDefault(),\n                (formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget)),\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  action,\n                  formData\n                ));\n          },\n          currentTarget: nativeEventTarget\n        }\n      ]\n    });\n  }\n}\nfor (\n  var i$jscomp$inline_1528 = 0;\n  i$jscomp$inline_1528 < simpleEventPluginEvents.length;\n  i$jscomp$inline_1528++\n) {\n  var eventName$jscomp$inline_1529 =\n      simpleEventPluginEvents[i$jscomp$inline_1528],\n    domEventName$jscomp$inline_1530 =\n      eventName$jscomp$inline_1529.toLowerCase(),\n    capitalizedEvent$jscomp$inline_1531 =\n      eventName$jscomp$inline_1529[0].toUpperCase() +\n      eventName$jscomp$inline_1529.slice(1);\n  registerSimpleEvent(\n    domEventName$jscomp$inline_1530,\n    \"on\" + capitalizedEvent$jscomp$inline_1531\n  );\n}\nregisterSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\nregisterSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\nregisterSimpleEvent(ANIMATION_START, \"onAnimationStart\");\nregisterSimpleEvent(\"dblclick\", \"onDoubleClick\");\nregisterSimpleEvent(\"focusin\", \"onFocus\");\nregisterSimpleEvent(\"focusout\", \"onBlur\");\nregisterSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\nregisterSimpleEvent(TRANSITION_START, \"onTransitionStart\");\nregisterSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\nregisterSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\nregisterDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\nregisterDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\nregisterTwoPhaseEvent(\n  \"onChange\",\n  \"change click focusin focusout input keydown keyup selectionchange\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onSelect\",\n  \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n    \" \"\n  )\n);\nregisterTwoPhaseEvent(\"onBeforeInput\", [\n  \"compositionend\",\n  \"keypress\",\n  \"textInput\",\n  \"paste\"\n]);\nregisterTwoPhaseEvent(\n  \"onCompositionEnd\",\n  \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionStart\",\n  \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionUpdate\",\n  \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n);\nvar mediaEventTypes =\n    \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n      \" \"\n    ),\n  nonDelegatedEvents = new Set(\n    \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n      .split(\" \")\n      .concat(mediaEventTypes)\n  );\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  eventSystemFlags = 0 !== (eventSystemFlags & 4);\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n      event = _dispatchQueue$i.event;\n    _dispatchQueue$i = _dispatchQueue$i.listeners;\n    a: {\n      var previousInstance = void 0;\n      if (eventSystemFlags)\n        for (\n          var i$jscomp$0 = _dispatchQueue$i.length - 1;\n          0 <= i$jscomp$0;\n          i$jscomp$0--\n        ) {\n          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n      else\n        for (\n          i$jscomp$0 = 0;\n          i$jscomp$0 < _dispatchQueue$i.length;\n          i$jscomp$0++\n        ) {\n          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n          instance = _dispatchListeners$i.instance;\n          currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n    }\n  }\n}\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];\n  void 0 === JSCompiler_inline_result &&\n    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =\n      new Set());\n  var listenerSetKey = domEventName + \"__bubble\";\n  JSCompiler_inline_result.has(listenerSetKey) ||\n    (addTrappedEventListener(targetElement, domEventName, 2, !1),\n    JSCompiler_inline_result.add(listenerSetKey));\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  var eventSystemFlags = 0;\n  isCapturePhaseListener && (eventSystemFlags |= 4);\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener\n  );\n}\nvar listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = !0;\n    allNativeEvents.forEach(function (domEventName) {\n      \"selectionchange\" !== domEventName &&\n        (nonDelegatedEvents.has(domEventName) ||\n          listenToNativeEvent(domEventName, !1, rootContainerElement),\n        listenToNativeEvent(domEventName, !0, rootContainerElement));\n    });\n    var ownerDocument =\n      9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    null === ownerDocument ||\n      ownerDocument[listeningMarker] ||\n      ((ownerDocument[listeningMarker] = !0),\n      listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n  }\n}\nfunction addTrappedEventListener(\n  targetContainer,\n  domEventName,\n  eventSystemFlags,\n  isCapturePhaseListener\n) {\n  switch (getEventPriority(domEventName)) {\n    case 2:\n      var listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case 8:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    default:\n      listenerWrapper = dispatchEvent;\n  }\n  eventSystemFlags = listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n  listenerWrapper = void 0;\n  !passiveBrowserEventsSupported ||\n    (\"touchstart\" !== domEventName &&\n      \"touchmove\" !== domEventName &&\n      \"wheel\" !== domEventName) ||\n    (listenerWrapper = !0);\n  isCapturePhaseListener\n    ? void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          capture: !0,\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n    : void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);\n}\nfunction dispatchEventForPluginEventSystem(\n  domEventName,\n  eventSystemFlags,\n  nativeEvent,\n  targetInst$jscomp$0,\n  targetContainer\n) {\n  var ancestorInst = targetInst$jscomp$0;\n  if (\n    0 === (eventSystemFlags & 1) &&\n    0 === (eventSystemFlags & 2) &&\n    null !== targetInst$jscomp$0\n  )\n    a: for (;;) {\n      if (null === targetInst$jscomp$0) return;\n      var nodeTag = targetInst$jscomp$0.tag;\n      if (3 === nodeTag || 4 === nodeTag) {\n        var container = targetInst$jscomp$0.stateNode.containerInfo;\n        if (container === targetContainer) break;\n        if (4 === nodeTag)\n          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n            var grandTag = nodeTag.tag;\n            if (\n              (3 === grandTag || 4 === grandTag) &&\n              nodeTag.stateNode.containerInfo === targetContainer\n            )\n              return;\n            nodeTag = nodeTag.return;\n          }\n        for (; null !== container; ) {\n          nodeTag = getClosestInstanceFromNode(container);\n          if (null === nodeTag) return;\n          grandTag = nodeTag.tag;\n          if (\n            5 === grandTag ||\n            6 === grandTag ||\n            26 === grandTag ||\n            27 === grandTag\n          ) {\n            targetInst$jscomp$0 = ancestorInst = nodeTag;\n            continue a;\n          }\n          container = container.parentNode;\n        }\n      }\n      targetInst$jscomp$0 = targetInst$jscomp$0.return;\n    }\n  batchedUpdates$1(function () {\n    var targetInst = ancestorInst,\n      nativeEventTarget = getEventTarget(nativeEvent),\n      dispatchQueue = [];\n    a: {\n      var reactName = topLevelEventsToReactNames.get(domEventName);\n      if (void 0 !== reactName) {\n        var SyntheticEventCtor = SyntheticEvent,\n          reactEventType = domEventName;\n        switch (domEventName) {\n          case \"keypress\":\n            if (0 === getEventCharCode(nativeEvent)) break a;\n          case \"keydown\":\n          case \"keyup\":\n            SyntheticEventCtor = SyntheticKeyboardEvent;\n            break;\n          case \"focusin\":\n            reactEventType = \"focus\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"focusout\":\n            reactEventType = \"blur\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"beforeblur\":\n          case \"afterblur\":\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"click\":\n            if (2 === nativeEvent.button) break a;\n          case \"auxclick\":\n          case \"dblclick\":\n          case \"mousedown\":\n          case \"mousemove\":\n          case \"mouseup\":\n          case \"mouseout\":\n          case \"mouseover\":\n          case \"contextmenu\":\n            SyntheticEventCtor = SyntheticMouseEvent;\n            break;\n          case \"drag\":\n          case \"dragend\":\n          case \"dragenter\":\n          case \"dragexit\":\n          case \"dragleave\":\n          case \"dragover\":\n          case \"dragstart\":\n          case \"drop\":\n            SyntheticEventCtor = SyntheticDragEvent;\n            break;\n          case \"touchcancel\":\n          case \"touchend\":\n          case \"touchmove\":\n          case \"touchstart\":\n            SyntheticEventCtor = SyntheticTouchEvent;\n            break;\n          case ANIMATION_END:\n          case ANIMATION_ITERATION:\n          case ANIMATION_START:\n            SyntheticEventCtor = SyntheticAnimationEvent;\n            break;\n          case TRANSITION_END:\n            SyntheticEventCtor = SyntheticTransitionEvent;\n            break;\n          case \"scroll\":\n          case \"scrollend\":\n            SyntheticEventCtor = SyntheticUIEvent;\n            break;\n          case \"wheel\":\n            SyntheticEventCtor = SyntheticWheelEvent;\n            break;\n          case \"copy\":\n          case \"cut\":\n          case \"paste\":\n            SyntheticEventCtor = SyntheticClipboardEvent;\n            break;\n          case \"gotpointercapture\":\n          case \"lostpointercapture\":\n          case \"pointercancel\":\n          case \"pointerdown\":\n          case \"pointermove\":\n          case \"pointerout\":\n          case \"pointerover\":\n          case \"pointerup\":\n            SyntheticEventCtor = SyntheticPointerEvent;\n            break;\n          case \"toggle\":\n          case \"beforetoggle\":\n            SyntheticEventCtor = SyntheticToggleEvent;\n        }\n        var inCapturePhase = 0 !== (eventSystemFlags & 4),\n          accumulateTargetOnly =\n            !inCapturePhase &&\n            (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n          reactEventName = inCapturePhase\n            ? null !== reactName\n              ? reactName + \"Capture\"\n              : null\n            : reactName;\n        inCapturePhase = [];\n        for (\n          var instance = targetInst, lastHostComponent;\n          null !== instance;\n\n        ) {\n          var _instance = instance;\n          lastHostComponent = _instance.stateNode;\n          _instance = _instance.tag;\n          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||\n            null === lastHostComponent ||\n            null === reactEventName ||\n            ((_instance = getListener(instance, reactEventName)),\n            null != _instance &&\n              inCapturePhase.push(\n                createDispatchListener(instance, _instance, lastHostComponent)\n              ));\n          if (accumulateTargetOnly) break;\n          instance = instance.return;\n        }\n        0 < inCapturePhase.length &&\n          ((reactName = new SyntheticEventCtor(\n            reactName,\n            reactEventType,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));\n      }\n    }\n    if (0 === (eventSystemFlags & 7)) {\n      a: {\n        reactName =\n          \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n        SyntheticEventCtor =\n          \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n        if (\n          reactName &&\n          nativeEvent !== currentReplayingEvent &&\n          (reactEventType =\n            nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n          (getClosestInstanceFromNode(reactEventType) ||\n            reactEventType[internalContainerInstanceKey])\n        )\n          break a;\n        if (SyntheticEventCtor || reactName) {\n          reactName =\n            nativeEventTarget.window === nativeEventTarget\n              ? nativeEventTarget\n              : (reactName = nativeEventTarget.ownerDocument)\n                ? reactName.defaultView || reactName.parentWindow\n                : window;\n          if (SyntheticEventCtor) {\n            if (\n              ((reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.toElement),\n              (SyntheticEventCtor = targetInst),\n              (reactEventType = reactEventType\n                ? getClosestInstanceFromNode(reactEventType)\n                : null),\n              null !== reactEventType &&\n                ((accumulateTargetOnly =\n                  getNearestMountedFiber(reactEventType)),\n                (inCapturePhase = reactEventType.tag),\n                reactEventType !== accumulateTargetOnly ||\n                  (5 !== inCapturePhase &&\n                    27 !== inCapturePhase &&\n                    6 !== inCapturePhase)))\n            )\n              reactEventType = null;\n          } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n          if (SyntheticEventCtor !== reactEventType) {\n            inCapturePhase = SyntheticMouseEvent;\n            _instance = \"onMouseLeave\";\n            reactEventName = \"onMouseEnter\";\n            instance = \"mouse\";\n            if (\"pointerout\" === domEventName || \"pointerover\" === domEventName)\n              (inCapturePhase = SyntheticPointerEvent),\n                (_instance = \"onPointerLeave\"),\n                (reactEventName = \"onPointerEnter\"),\n                (instance = \"pointer\");\n            accumulateTargetOnly =\n              null == SyntheticEventCtor\n                ? reactName\n                : getNodeFromInstance(SyntheticEventCtor);\n            lastHostComponent =\n              null == reactEventType\n                ? reactName\n                : getNodeFromInstance(reactEventType);\n            reactName = new inCapturePhase(\n              _instance,\n              instance + \"leave\",\n              SyntheticEventCtor,\n              nativeEvent,\n              nativeEventTarget\n            );\n            reactName.target = accumulateTargetOnly;\n            reactName.relatedTarget = lastHostComponent;\n            _instance = null;\n            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n              ((inCapturePhase = new inCapturePhase(\n                reactEventName,\n                instance + \"enter\",\n                reactEventType,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              (inCapturePhase.target = lastHostComponent),\n              (inCapturePhase.relatedTarget = accumulateTargetOnly),\n              (_instance = inCapturePhase));\n            accumulateTargetOnly = _instance;\n            if (SyntheticEventCtor && reactEventType)\n              b: {\n                inCapturePhase = SyntheticEventCtor;\n                reactEventName = reactEventType;\n                instance = 0;\n                for (\n                  lastHostComponent = inCapturePhase;\n                  lastHostComponent;\n                  lastHostComponent = getParent(lastHostComponent)\n                )\n                  instance++;\n                lastHostComponent = 0;\n                for (\n                  _instance = reactEventName;\n                  _instance;\n                  _instance = getParent(_instance)\n                )\n                  lastHostComponent++;\n                for (; 0 < instance - lastHostComponent; )\n                  (inCapturePhase = getParent(inCapturePhase)), instance--;\n                for (; 0 < lastHostComponent - instance; )\n                  (reactEventName = getParent(reactEventName)),\n                    lastHostComponent--;\n                for (; instance--; ) {\n                  if (\n                    inCapturePhase === reactEventName ||\n                    (null !== reactEventName &&\n                      inCapturePhase === reactEventName.alternate)\n                  )\n                    break b;\n                  inCapturePhase = getParent(inCapturePhase);\n                  reactEventName = getParent(reactEventName);\n                }\n                inCapturePhase = null;\n              }\n            else inCapturePhase = null;\n            null !== SyntheticEventCtor &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                reactName,\n                SyntheticEventCtor,\n                inCapturePhase,\n                !1\n              );\n            null !== reactEventType &&\n              null !== accumulateTargetOnly &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                accumulateTargetOnly,\n                reactEventType,\n                inCapturePhase,\n                !0\n              );\n          }\n        }\n      }\n      a: {\n        reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n        SyntheticEventCtor =\n          reactName.nodeName && reactName.nodeName.toLowerCase();\n        if (\n          \"select\" === SyntheticEventCtor ||\n          (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n        )\n          var getTargetInstFunc = getTargetInstForChangeEvent;\n        else if (isTextInputElement(reactName))\n          if (isInputEventSupported)\n            getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n          else {\n            getTargetInstFunc = getTargetInstForInputEventPolyfill;\n            var handleEventFunc = handleEventsForInputEventPolyfill;\n          }\n        else\n          (SyntheticEventCtor = reactName.nodeName),\n            !SyntheticEventCtor ||\n            \"input\" !== SyntheticEventCtor.toLowerCase() ||\n            (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n              ? targetInst &&\n                isCustomElement(targetInst.elementType) &&\n                (getTargetInstFunc = getTargetInstForChangeEvent)\n              : (getTargetInstFunc = getTargetInstForClickEvent);\n        if (\n          getTargetInstFunc &&\n          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n        ) {\n          createAndAccumulateChangeEvent(\n            dispatchQueue,\n            getTargetInstFunc,\n            nativeEvent,\n            nativeEventTarget\n          );\n          break a;\n        }\n        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);\n        \"focusout\" === domEventName &&\n          targetInst &&\n          \"number\" === reactName.type &&\n          null != targetInst.memoizedProps.value &&\n          setDefaultValue(reactName, \"number\", reactName.value);\n      }\n      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;\n      switch (domEventName) {\n        case \"focusin\":\n          if (\n            isTextInputElement(handleEventFunc) ||\n            \"true\" === handleEventFunc.contentEditable\n          )\n            (activeElement = handleEventFunc),\n              (activeElementInst = targetInst),\n              (lastSelection = null);\n          break;\n        case \"focusout\":\n          lastSelection = activeElementInst = activeElement = null;\n          break;\n        case \"mousedown\":\n          mouseDown = !0;\n          break;\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          mouseDown = !1;\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n          break;\n        case \"selectionchange\":\n          if (skipSelectionChangeEvent) break;\n        case \"keydown\":\n        case \"keyup\":\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      }\n      var fallbackData;\n      if (canUseCompositionEvent)\n        b: {\n          switch (domEventName) {\n            case \"compositionstart\":\n              var eventType = \"onCompositionStart\";\n              break b;\n            case \"compositionend\":\n              eventType = \"onCompositionEnd\";\n              break b;\n            case \"compositionupdate\":\n              eventType = \"onCompositionUpdate\";\n              break b;\n          }\n          eventType = void 0;\n        }\n      else\n        isComposing\n          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n            (eventType = \"onCompositionEnd\")\n          : \"keydown\" === domEventName &&\n            229 === nativeEvent.keyCode &&\n            (eventType = \"onCompositionStart\");\n      eventType &&\n        (useFallbackCompositionData &&\n          \"ko\" !== nativeEvent.locale &&\n          (isComposing || \"onCompositionStart\" !== eventType\n            ? \"onCompositionEnd\" === eventType &&\n              isComposing &&\n              (fallbackData = getData())\n            : ((root = nativeEventTarget),\n              (startText = \"value\" in root ? root.value : root.textContent),\n              (isComposing = !0))),\n        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),\n        0 < handleEventFunc.length &&\n          ((eventType = new SyntheticCompositionEvent(\n            eventType,\n            domEventName,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),\n          fallbackData\n            ? (eventType.data = fallbackData)\n            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n              null !== fallbackData && (eventType.data = fallbackData))));\n      if (\n        (fallbackData = canUseTextInputEvent\n          ? getNativeBeforeInputChars(domEventName, nativeEvent)\n          : getFallbackBeforeInputChars(domEventName, nativeEvent))\n      )\n        (eventType = accumulateTwoPhaseListeners(targetInst, \"onBeforeInput\")),\n          0 < eventType.length &&\n            ((handleEventFunc = new SyntheticCompositionEvent(\n              \"onBeforeInput\",\n              \"beforeinput\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({\n              event: handleEventFunc,\n              listeners: eventType\n            }),\n            (handleEventFunc.data = fallbackData));\n      extractEvents$1(\n        dispatchQueue,\n        domEventName,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n    }\n    processDispatchQueue(dispatchQueue, eventSystemFlags);\n  });\n}\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  for (\n    var captureName = reactName + \"Capture\", listeners = [];\n    null !== targetFiber;\n\n  ) {\n    var _instance2 = targetFiber,\n      stateNode = _instance2.stateNode;\n    _instance2 = _instance2.tag;\n    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n      null === stateNode ||\n      ((_instance2 = getListener(targetFiber, captureName)),\n      null != _instance2 &&\n        listeners.unshift(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ),\n      (_instance2 = getListener(targetFiber, reactName)),\n      null != _instance2 &&\n        listeners.push(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ));\n    if (3 === targetFiber.tag) return listeners;\n    targetFiber = targetFiber.return;\n  }\n  return [];\n}\nfunction getParent(inst) {\n  if (null === inst) return null;\n  do inst = inst.return;\n  while (inst && 5 !== inst.tag && 27 !== inst.tag);\n  return inst ? inst : null;\n}\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue,\n  event,\n  target,\n  common,\n  inCapturePhase\n) {\n  for (\n    var registrationName = event._reactName, listeners = [];\n    null !== target && target !== common;\n\n  ) {\n    var _instance3 = target,\n      alternate = _instance3.alternate,\n      stateNode = _instance3.stateNode;\n    _instance3 = _instance3.tag;\n    if (null !== alternate && alternate === common) break;\n    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n      null === stateNode ||\n      ((alternate = stateNode),\n      inCapturePhase\n        ? ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.unshift(\n              createDispatchListener(target, stateNode, alternate)\n            ))\n        : inCapturePhase ||\n          ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.push(\n              createDispatchListener(target, stateNode, alternate)\n            )));\n    target = target.return;\n  }\n  0 !== listeners.length &&\n    dispatchQueue.push({ event: event, listeners: listeners });\n}\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  return (\"string\" === typeof markup ? markup : \"\" + markup)\n    .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n}\nfunction checkForUnmatchedText(serverText, clientText) {\n  clientText = normalizeMarkupForTextOrAttribute(clientText);\n  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;\n}\nfunction noop$1() {}\nfunction setProp(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"children\":\n      \"string\" === typeof value\n        ? \"body\" === tag ||\n          (\"textarea\" === tag && \"\" === value) ||\n          setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          \"body\" !== tag &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"className\":\n      setValueForKnownAttribute(domElement, \"class\", value);\n      break;\n    case \"tabIndex\":\n      setValueForKnownAttribute(domElement, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      setValueForKnownAttribute(domElement, key, value);\n      break;\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"data\":\n      if (\"object\" !== tag) {\n        setValueForKnownAttribute(domElement, \"data\", value);\n        break;\n      }\n    case \"src\":\n    case \"href\":\n      if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"action\":\n    case \"formAction\":\n      if (\"function\" === typeof value) {\n        domElement.setAttribute(\n          key,\n          \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n        );\n        break;\n      } else\n        \"function\" === typeof prevValue &&\n          (\"formAction\" === key\n            ? (\"input\" !== tag &&\n                setProp(domElement, tag, \"name\", props.name, props, null),\n              setProp(\n                domElement,\n                tag,\n                \"formEncType\",\n                props.formEncType,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formMethod\",\n                props.formMethod,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formTarget\",\n                props.formTarget,\n                props,\n                null\n              ))\n            : (setProp(domElement, tag, \"encType\", props.encType, props, null),\n              setProp(domElement, tag, \"method\", props.method, props, null),\n              setProp(domElement, tag, \"target\", props.target, props, null)));\n      if (\n        null == value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"multiple\":\n      domElement.multiple =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"muted\":\n      domElement.muted =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n      break;\n    case \"xlinkHref\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"boolean\" === typeof value ||\n        \"symbol\" === typeof value\n      ) {\n        domElement.removeAttribute(\"xlink:href\");\n        break;\n      }\n      key = sanitizeURL(\"\" + value);\n      domElement.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        key\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      null != value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\" + value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\")\n        : domElement.removeAttribute(key);\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? domElement.setAttribute(key, \"\")\n        : !1 !== value &&\n            null != value &&\n            \"function\" !== typeof value &&\n            \"symbol\" !== typeof value\n          ? domElement.setAttribute(key, value)\n          : domElement.removeAttribute(key);\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      null != value &&\n      \"function\" !== typeof value &&\n      \"symbol\" !== typeof value &&\n      !isNaN(value) &&\n      1 <= value\n        ? domElement.setAttribute(key, value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      null == value ||\n      \"function\" === typeof value ||\n      \"symbol\" === typeof value ||\n      isNaN(value)\n        ? domElement.removeAttribute(key)\n        : domElement.setAttribute(key, value);\n      break;\n    case \"popover\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      setValueForAttribute(domElement, \"popover\", value);\n      break;\n    case \"xlinkActuate\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:actuate\",\n        value\n      );\n      break;\n    case \"xlinkArcrole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:arcrole\",\n        value\n      );\n      break;\n    case \"xlinkRole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:role\",\n        value\n      );\n      break;\n    case \"xlinkShow\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:show\",\n        value\n      );\n      break;\n    case \"xlinkTitle\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:title\",\n        value\n      );\n      break;\n    case \"xlinkType\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:type\",\n        value\n      );\n      break;\n    case \"xmlBase\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:base\",\n        value\n      );\n      break;\n    case \"xmlLang\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:lang\",\n        value\n      );\n      break;\n    case \"xmlSpace\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:space\",\n        value\n      );\n      break;\n    case \"is\":\n      setValueForAttribute(domElement, \"is\", value);\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (\n        !(2 < key.length) ||\n        (\"o\" !== key[0] && \"O\" !== key[0]) ||\n        (\"n\" !== key[1] && \"N\" !== key[1])\n      )\n        (key = aliases.get(key) || key),\n          setValueForAttribute(domElement, key, value);\n  }\n}\nfunction setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"children\":\n      \"string\" === typeof value\n        ? setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (!registrationNameDependencies.hasOwnProperty(key))\n        a: {\n          if (\n            \"o\" === key[0] &&\n            \"n\" === key[1] &&\n            ((props = key.endsWith(\"Capture\")),\n            (tag = key.slice(2, props ? key.length - 7 : void 0)),\n            (prevValue = domElement[internalPropsKey] || null),\n            (prevValue = null != prevValue ? prevValue[key] : null),\n            \"function\" === typeof prevValue &&\n              domElement.removeEventListener(tag, prevValue, props),\n            \"function\" === typeof value)\n          ) {\n            \"function\" !== typeof prevValue &&\n              null !== prevValue &&\n              (key in domElement\n                ? (domElement[key] = null)\n                : domElement.hasAttribute(key) &&\n                  domElement.removeAttribute(key));\n            domElement.addEventListener(tag, value, props);\n            break a;\n          }\n          key in domElement\n            ? (domElement[key] = value)\n            : !0 === value\n              ? domElement.setAttribute(key, \"\")\n              : setValueForAttribute(domElement, key, value);\n        }\n  }\n}\nfunction setInitialProperties(domElement, tag, props) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"img\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      var hasSrc = !1,\n        hasSrcSet = !1,\n        propKey;\n      for (propKey in props)\n        if (props.hasOwnProperty(propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"src\":\n                hasSrc = !0;\n                break;\n              case \"srcSet\":\n                hasSrcSet = !0;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(formatProdErrorMessage(137, tag));\n              default:\n                setProp(domElement, tag, propKey, propValue, props, null);\n            }\n        }\n      hasSrcSet &&\n        setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n      hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n      return;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      var defaultValue = (propKey = propValue = hasSrcSet = null),\n        checked = null,\n        defaultChecked = null;\n      for (hasSrc in props)\n        if (props.hasOwnProperty(hasSrc)) {\n          var propValue$188 = props[hasSrc];\n          if (null != propValue$188)\n            switch (hasSrc) {\n              case \"name\":\n                hasSrcSet = propValue$188;\n                break;\n              case \"type\":\n                propValue = propValue$188;\n                break;\n              case \"checked\":\n                checked = propValue$188;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$188;\n                break;\n              case \"value\":\n                propKey = propValue$188;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$188;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                if (null != propValue$188)\n                  throw Error(formatProdErrorMessage(137, tag));\n                break;\n              default:\n                setProp(domElement, tag, hasSrc, propValue$188, props, null);\n            }\n        }\n      initInput(\n        domElement,\n        propKey,\n        defaultValue,\n        checked,\n        defaultChecked,\n        propValue,\n        hasSrcSet,\n        !1\n      );\n      track(domElement);\n      return;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      hasSrc = propValue = propKey = null;\n      for (hasSrcSet in props)\n        if (\n          props.hasOwnProperty(hasSrcSet) &&\n          ((defaultValue = props[hasSrcSet]), null != defaultValue)\n        )\n          switch (hasSrcSet) {\n            case \"value\":\n              propKey = defaultValue;\n              break;\n            case \"defaultValue\":\n              propValue = defaultValue;\n              break;\n            case \"multiple\":\n              hasSrc = defaultValue;\n            default:\n              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);\n          }\n      tag = propKey;\n      props = propValue;\n      domElement.multiple = !!hasSrc;\n      null != tag\n        ? updateOptions(domElement, !!hasSrc, tag, !1)\n        : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n      return;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      propKey = hasSrcSet = hasSrc = null;\n      for (propValue in props)\n        if (\n          props.hasOwnProperty(propValue) &&\n          ((defaultValue = props[propValue]), null != defaultValue)\n        )\n          switch (propValue) {\n            case \"value\":\n              hasSrc = defaultValue;\n              break;\n            case \"defaultValue\":\n              hasSrcSet = defaultValue;\n              break;\n            case \"children\":\n              propKey = defaultValue;\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != defaultValue) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              setProp(domElement, tag, propValue, defaultValue, props, null);\n          }\n      initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n      track(domElement);\n      return;\n    case \"option\":\n      for (checked in props)\n        if (\n          props.hasOwnProperty(checked) &&\n          ((hasSrc = props[checked]), null != hasSrc)\n        )\n          switch (checked) {\n            case \"selected\":\n              domElement.selected =\n                hasSrc &&\n                \"function\" !== typeof hasSrc &&\n                \"symbol\" !== typeof hasSrc;\n              break;\n            default:\n              setProp(domElement, tag, checked, hasSrc, props, null);\n          }\n      return;\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      listenToNonDelegatedEvent(\"cancel\", domElement);\n      listenToNonDelegatedEvent(\"close\", domElement);\n      break;\n    case \"iframe\":\n    case \"object\":\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n      break;\n    case \"image\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      break;\n    case \"embed\":\n    case \"source\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", domElement),\n        listenToNonDelegatedEvent(\"load\", domElement);\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (defaultChecked in props)\n        if (\n          props.hasOwnProperty(defaultChecked) &&\n          ((hasSrc = props[defaultChecked]), null != hasSrc)\n        )\n          switch (defaultChecked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              throw Error(formatProdErrorMessage(137, tag));\n            default:\n              setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (propValue$188 in props)\n          props.hasOwnProperty(propValue$188) &&\n            ((hasSrc = props[propValue$188]),\n            void 0 !== hasSrc &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propValue$188,\n                hasSrc,\n                props,\n                void 0\n              ));\n        return;\n      }\n  }\n  for (defaultValue in props)\n    props.hasOwnProperty(defaultValue) &&\n      ((hasSrc = props[defaultValue]),\n      null != hasSrc &&\n        setProp(domElement, tag, defaultValue, hasSrc, props, null));\n}\nfunction updateProperties(domElement, tag, lastProps, nextProps) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"input\":\n      var name = null,\n        type = null,\n        value = null,\n        defaultValue = null,\n        lastDefaultValue = null,\n        checked = null,\n        defaultChecked = null;\n      for (propKey in lastProps) {\n        var lastProp = lastProps[propKey];\n        if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n          switch (propKey) {\n            case \"checked\":\n              break;\n            case \"value\":\n              break;\n            case \"defaultValue\":\n              lastDefaultValue = lastProp;\n            default:\n              nextProps.hasOwnProperty(propKey) ||\n                setProp(domElement, tag, propKey, null, nextProps, lastProp);\n          }\n      }\n      for (var propKey$205 in nextProps) {\n        var propKey = nextProps[propKey$205];\n        lastProp = lastProps[propKey$205];\n        if (\n          nextProps.hasOwnProperty(propKey$205) &&\n          (null != propKey || null != lastProp)\n        )\n          switch (propKey$205) {\n            case \"type\":\n              type = propKey;\n              break;\n            case \"name\":\n              name = propKey;\n              break;\n            case \"checked\":\n              checked = propKey;\n              break;\n            case \"defaultChecked\":\n              defaultChecked = propKey;\n              break;\n            case \"value\":\n              value = propKey;\n              break;\n            case \"defaultValue\":\n              defaultValue = propKey;\n              break;\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              propKey !== lastProp &&\n                setProp(\n                  domElement,\n                  tag,\n                  propKey$205,\n                  propKey,\n                  nextProps,\n                  lastProp\n                );\n          }\n      }\n      updateInput(\n        domElement,\n        value,\n        defaultValue,\n        lastDefaultValue,\n        checked,\n        defaultChecked,\n        type,\n        name\n      );\n      return;\n    case \"select\":\n      propKey = value = defaultValue = propKey$205 = null;\n      for (type in lastProps)\n        if (\n          ((lastDefaultValue = lastProps[type]),\n          lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n        )\n          switch (type) {\n            case \"value\":\n              break;\n            case \"multiple\":\n              propKey = lastDefaultValue;\n            default:\n              nextProps.hasOwnProperty(type) ||\n                setProp(\n                  domElement,\n                  tag,\n                  type,\n                  null,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      for (name in nextProps)\n        if (\n          ((type = nextProps[name]),\n          (lastDefaultValue = lastProps[name]),\n          nextProps.hasOwnProperty(name) &&\n            (null != type || null != lastDefaultValue))\n        )\n          switch (name) {\n            case \"value\":\n              propKey$205 = type;\n              break;\n            case \"defaultValue\":\n              defaultValue = type;\n              break;\n            case \"multiple\":\n              value = type;\n            default:\n              type !== lastDefaultValue &&\n                setProp(\n                  domElement,\n                  tag,\n                  name,\n                  type,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      tag = defaultValue;\n      lastProps = value;\n      nextProps = propKey;\n      null != propKey$205\n        ? updateOptions(domElement, !!lastProps, propKey$205, !1)\n        : !!nextProps !== !!lastProps &&\n          (null != tag\n            ? updateOptions(domElement, !!lastProps, tag, !0)\n            : updateOptions(domElement, !!lastProps, lastProps ? [] : \"\", !1));\n      return;\n    case \"textarea\":\n      propKey = propKey$205 = null;\n      for (defaultValue in lastProps)\n        if (\n          ((name = lastProps[defaultValue]),\n          lastProps.hasOwnProperty(defaultValue) &&\n            null != name &&\n            !nextProps.hasOwnProperty(defaultValue))\n        )\n          switch (defaultValue) {\n            case \"value\":\n              break;\n            case \"children\":\n              break;\n            default:\n              setProp(domElement, tag, defaultValue, null, nextProps, name);\n          }\n      for (value in nextProps)\n        if (\n          ((name = nextProps[value]),\n          (type = lastProps[value]),\n          nextProps.hasOwnProperty(value) && (null != name || null != type))\n        )\n          switch (value) {\n            case \"value\":\n              propKey$205 = name;\n              break;\n            case \"defaultValue\":\n              propKey = name;\n              break;\n            case \"children\":\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != name) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              name !== type &&\n                setProp(domElement, tag, value, name, nextProps, type);\n          }\n      updateTextarea(domElement, propKey$205, propKey);\n      return;\n    case \"option\":\n      for (var propKey$221 in lastProps)\n        if (\n          ((propKey$205 = lastProps[propKey$221]),\n          lastProps.hasOwnProperty(propKey$221) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$221))\n        )\n          switch (propKey$221) {\n            case \"selected\":\n              domElement.selected = !1;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                propKey$221,\n                null,\n                nextProps,\n                propKey$205\n              );\n          }\n      for (lastDefaultValue in nextProps)\n        if (\n          ((propKey$205 = nextProps[lastDefaultValue]),\n          (propKey = lastProps[lastDefaultValue]),\n          nextProps.hasOwnProperty(lastDefaultValue) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (lastDefaultValue) {\n            case \"selected\":\n              domElement.selected =\n                propKey$205 &&\n                \"function\" !== typeof propKey$205 &&\n                \"symbol\" !== typeof propKey$205;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                lastDefaultValue,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    case \"img\":\n    case \"link\":\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (var propKey$226 in lastProps)\n        (propKey$205 = lastProps[propKey$226]),\n          lastProps.hasOwnProperty(propKey$226) &&\n            null != propKey$205 &&\n            !nextProps.hasOwnProperty(propKey$226) &&\n            setProp(domElement, tag, propKey$226, null, nextProps, propKey$205);\n      for (checked in nextProps)\n        if (\n          ((propKey$205 = nextProps[checked]),\n          (propKey = lastProps[checked]),\n          nextProps.hasOwnProperty(checked) &&\n            propKey$205 !== propKey &&\n            (null != propKey$205 || null != propKey))\n        )\n          switch (checked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey$205)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                checked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (var propKey$231 in lastProps)\n          (propKey$205 = lastProps[propKey$231]),\n            lastProps.hasOwnProperty(propKey$231) &&\n              void 0 !== propKey$205 &&\n              !nextProps.hasOwnProperty(propKey$231) &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propKey$231,\n                void 0,\n                nextProps,\n                propKey$205\n              );\n        for (defaultChecked in nextProps)\n          (propKey$205 = nextProps[defaultChecked]),\n            (propKey = lastProps[defaultChecked]),\n            !nextProps.hasOwnProperty(defaultChecked) ||\n              propKey$205 === propKey ||\n              (void 0 === propKey$205 && void 0 === propKey) ||\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                defaultChecked,\n                propKey$205,\n                nextProps,\n                propKey\n              );\n        return;\n      }\n  }\n  for (var propKey$236 in lastProps)\n    (propKey$205 = lastProps[propKey$236]),\n      lastProps.hasOwnProperty(propKey$236) &&\n        null != propKey$205 &&\n        !nextProps.hasOwnProperty(propKey$236) &&\n        setProp(domElement, tag, propKey$236, null, nextProps, propKey$205);\n  for (lastProp in nextProps)\n    (propKey$205 = nextProps[lastProp]),\n      (propKey = lastProps[lastProp]),\n      !nextProps.hasOwnProperty(lastProp) ||\n        propKey$205 === propKey ||\n        (null == propKey$205 && null == propKey) ||\n        setProp(domElement, tag, lastProp, propKey$205, nextProps, propKey);\n}\nvar eventsEnabled = null,\n  selectionInformation = null;\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return 9 === rootContainerElement.nodeType\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n}\nfunction getOwnHostContext(namespaceURI) {\n  switch (namespaceURI) {\n    case \"http://www.w3.org/2000/svg\":\n      return 1;\n    case \"http://www.w3.org/1998/Math/MathML\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getChildHostContextProd(parentNamespace, type) {\n  if (0 === parentNamespace)\n    switch (type) {\n      case \"svg\":\n        return 1;\n      case \"math\":\n        return 2;\n      default:\n        return 0;\n    }\n  return 1 === parentNamespace && \"foreignObject\" === type\n    ? 0\n    : parentNamespace;\n}\nfunction shouldSetTextContent(type, props) {\n  return (\n    \"textarea\" === type ||\n    \"noscript\" === type ||\n    \"string\" === typeof props.children ||\n    \"number\" === typeof props.children ||\n    \"bigint\" === typeof props.children ||\n    (\"object\" === typeof props.dangerouslySetInnerHTML &&\n      null !== props.dangerouslySetInnerHTML &&\n      null != props.dangerouslySetInnerHTML.__html)\n  );\n}\nvar currentPopstateTransitionEvent = null;\nfunction shouldAttemptEagerTransition() {\n  var event = window.event;\n  if (event && \"popstate\" === event.type) {\n    if (event === currentPopstateTransitionEvent) return !1;\n    currentPopstateTransitionEvent = event;\n    return !0;\n  }\n  currentPopstateTransitionEvent = null;\n  return !1;\n}\nvar scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n  cancelTimeout = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n  localPromise = \"function\" === typeof Promise ? Promise : void 0,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : \"undefined\" !== typeof localPromise\n        ? function (callback) {\n            return localPromise\n              .resolve(null)\n              .then(callback)\n              .catch(handleErrorInNextTick);\n          }\n        : scheduleTimeout;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nfunction isSingletonScope(type) {\n  return \"head\" === type;\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance,\n    possiblePreambleContribution = 0,\n    depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && 8 === nextNode.nodeType)\n      if (((node = nextNode.data), \"/$\" === node)) {\n        if (\n          0 < possiblePreambleContribution &&\n          8 > possiblePreambleContribution\n        ) {\n          node = possiblePreambleContribution;\n          var ownerDocument = parentInstance.ownerDocument;\n          node & 1 && releaseSingletonInstance(ownerDocument.documentElement);\n          node & 2 && releaseSingletonInstance(ownerDocument.body);\n          if (node & 4)\n            for (\n              node = ownerDocument.head,\n                releaseSingletonInstance(node),\n                ownerDocument = node.firstChild;\n              ownerDocument;\n\n            ) {\n              var nextNode$jscomp$0 = ownerDocument.nextSibling,\n                nodeName = ownerDocument.nodeName;\n              ownerDocument[internalHoistableMarker] ||\n                \"SCRIPT\" === nodeName ||\n                \"STYLE\" === nodeName ||\n                (\"LINK\" === nodeName &&\n                  \"stylesheet\" === ownerDocument.rel.toLowerCase()) ||\n                node.removeChild(ownerDocument);\n              ownerDocument = nextNode$jscomp$0;\n            }\n        }\n        if (0 === depth) {\n          parentInstance.removeChild(nextNode);\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        }\n        depth--;\n      } else\n        \"$\" === node || \"$?\" === node || \"$!\" === node\n          ? depth++\n          : (possiblePreambleContribution = node.charCodeAt(0) - 48);\n    else possiblePreambleContribution = 0;\n    node = nextNode;\n  } while (node);\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearContainerSparingly(container) {\n  var nextNode = container.firstChild;\n  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n  for (; nextNode; ) {\n    var node = nextNode;\n    nextNode = nextNode.nextSibling;\n    switch (node.nodeName) {\n      case \"HTML\":\n      case \"HEAD\":\n      case \"BODY\":\n        clearContainerSparingly(node);\n        detachDeletedInstance(node);\n        continue;\n      case \"SCRIPT\":\n      case \"STYLE\":\n        continue;\n      case \"LINK\":\n        if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n    }\n    container.removeChild(node);\n  }\n}\nfunction canHydrateInstance(instance, type, props, inRootOrSingleton) {\n  for (; 1 === instance.nodeType; ) {\n    var anyProps = props;\n    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n      if (\n        !inRootOrSingleton &&\n        (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n      )\n        break;\n    } else if (!inRootOrSingleton)\n      if (\"input\" === type && \"hidden\" === instance.type) {\n        var name = null == anyProps.name ? null : \"\" + anyProps.name;\n        if (\n          \"hidden\" === anyProps.type &&\n          instance.getAttribute(\"name\") === name\n        )\n          return instance;\n      } else return instance;\n    else if (!instance[internalHoistableMarker])\n      switch (type) {\n        case \"meta\":\n          if (!instance.hasAttribute(\"itemprop\")) break;\n          return instance;\n        case \"link\":\n          name = instance.getAttribute(\"rel\");\n          if (\"stylesheet\" === name && instance.hasAttribute(\"data-precedence\"))\n            break;\n          else if (\n            name !== anyProps.rel ||\n            instance.getAttribute(\"href\") !==\n              (null == anyProps.href || \"\" === anyProps.href\n                ? null\n                : anyProps.href) ||\n            instance.getAttribute(\"crossorigin\") !==\n              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||\n            instance.getAttribute(\"title\") !==\n              (null == anyProps.title ? null : anyProps.title)\n          )\n            break;\n          return instance;\n        case \"style\":\n          if (instance.hasAttribute(\"data-precedence\")) break;\n          return instance;\n        case \"script\":\n          name = instance.getAttribute(\"src\");\n          if (\n            (name !== (null == anyProps.src ? null : anyProps.src) ||\n              instance.getAttribute(\"type\") !==\n                (null == anyProps.type ? null : anyProps.type) ||\n              instance.getAttribute(\"crossorigin\") !==\n                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&\n            name &&\n            instance.hasAttribute(\"async\") &&\n            !instance.hasAttribute(\"itemprop\")\n          )\n            break;\n          return instance;\n        default:\n          return instance;\n      }\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) break;\n  }\n  return null;\n}\nfunction canHydrateTextInstance(instance, text, inRootOrSingleton) {\n  if (\"\" === text) return null;\n  for (; 3 !== instance.nodeType; ) {\n    if (\n      (1 !== instance.nodeType ||\n        \"INPUT\" !== instance.nodeName ||\n        \"hidden\" !== instance.type) &&\n      !inRootOrSingleton\n    )\n      return null;\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) return null;\n  }\n  return instance;\n}\nfunction isSuspenseInstanceFallback(instance) {\n  return (\n    \"$!\" === instance.data ||\n    (\"$?\" === instance.data && \"complete\" === instance.ownerDocument.readyState)\n  );\n}\nfunction registerSuspenseInstanceRetry(instance, callback) {\n  var ownerDocument = instance.ownerDocument;\n  if (\"$?\" !== instance.data || \"complete\" === ownerDocument.readyState)\n    callback();\n  else {\n    var listener = function () {\n      callback();\n      ownerDocument.removeEventListener(\"DOMContentLoaded\", listener);\n    };\n    ownerDocument.addEventListener(\"DOMContentLoaded\", listener);\n    instance._reactRetry = listener;\n  }\n}\nfunction getNextHydratable(node) {\n  for (; null != node; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n    if (1 === nodeType || 3 === nodeType) break;\n    if (8 === nodeType) {\n      nodeType = node.data;\n      if (\n        \"$\" === nodeType ||\n        \"$!\" === nodeType ||\n        \"$?\" === nodeType ||\n        \"F!\" === nodeType ||\n        \"F\" === nodeType\n      )\n        break;\n      if (\"/$\" === nodeType) return null;\n    }\n  }\n  return node;\n}\nvar previousHydratableOnEnteringScopedSingleton = null;\nfunction getParentSuspenseInstance(targetInstance) {\n  targetInstance = targetInstance.previousSibling;\n  for (var depth = 0; targetInstance; ) {\n    if (8 === targetInstance.nodeType) {\n      var data = targetInstance.data;\n      if (\"$\" === data || \"$!\" === data || \"$?\" === data) {\n        if (0 === depth) return targetInstance;\n        depth--;\n      } else \"/$\" === data && depth++;\n    }\n    targetInstance = targetInstance.previousSibling;\n  }\n  return null;\n}\nfunction resolveSingletonInstance(type, props, rootContainerInstance) {\n  props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n  switch (type) {\n    case \"html\":\n      type = props.documentElement;\n      if (!type) throw Error(formatProdErrorMessage(452));\n      return type;\n    case \"head\":\n      type = props.head;\n      if (!type) throw Error(formatProdErrorMessage(453));\n      return type;\n    case \"body\":\n      type = props.body;\n      if (!type) throw Error(formatProdErrorMessage(454));\n      return type;\n    default:\n      throw Error(formatProdErrorMessage(451));\n  }\n}\nfunction releaseSingletonInstance(instance) {\n  for (var attributes = instance.attributes; attributes.length; )\n    instance.removeAttributeNode(attributes[0]);\n  detachDeletedInstance(instance);\n}\nvar preloadPropsMap = new Map(),\n  preconnectsSet = new Set();\nfunction getHoistableRoot(container) {\n  return \"function\" === typeof container.getRootNode\n    ? container.getRootNode()\n    : 9 === container.nodeType\n      ? container\n      : container.ownerDocument;\n}\nvar previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: flushSyncWork,\n  r: requestFormReset,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction flushSyncWork() {\n  var previousWasRendering = previousDispatcher.f(),\n    wasRendering = flushSyncWork$1();\n  return previousWasRendering || wasRendering;\n}\nfunction requestFormReset(form) {\n  var formInst = getInstanceFromNode(form);\n  null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n    ? requestFormReset$1(formInst)\n    : previousDispatcher.r(form);\n}\nvar globalDocument = \"undefined\" === typeof document ? null : document;\nfunction preconnectAs(rel, href, crossOrigin) {\n  var ownerDocument = globalDocument;\n  if (ownerDocument && \"string\" === typeof href && href) {\n    var limitedEscapedHref =\n      escapeSelectorAttributeValueInsideDoubleQuotes(href);\n    limitedEscapedHref =\n      'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n    \"string\" === typeof crossOrigin &&\n      (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n    preconnectsSet.has(limitedEscapedHref) ||\n      (preconnectsSet.add(limitedEscapedHref),\n      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n      null === ownerDocument.querySelector(limitedEscapedHref) &&\n        ((href = ownerDocument.createElement(\"link\")),\n        setInitialProperties(href, \"link\", rel),\n        markNodeAsHoistable(href),\n        ownerDocument.head.appendChild(href)));\n  }\n}\nfunction prefetchDNS(href) {\n  previousDispatcher.D(href);\n  preconnectAs(\"dns-prefetch\", href, null);\n}\nfunction preconnect(href, crossOrigin) {\n  previousDispatcher.C(href, crossOrigin);\n  preconnectAs(\"preconnect\", href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  previousDispatcher.L(href, as, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href && as) {\n    var preloadSelector =\n      'link[rel=\"preload\"][as=\"' +\n      escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n      '\"]';\n    \"image\" === as\n      ? options && options.imageSrcSet\n        ? ((preloadSelector +=\n            '[imagesrcset=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(\n              options.imageSrcSet\n            ) +\n            '\"]'),\n          \"string\" === typeof options.imageSizes &&\n            (preloadSelector +=\n              '[imagesizes=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                options.imageSizes\n              ) +\n              '\"]'))\n        : (preloadSelector +=\n            '[href=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n            '\"]')\n      : (preloadSelector +=\n          '[href=\"' +\n          escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n          '\"]');\n    var key = preloadSelector;\n    switch (as) {\n      case \"style\":\n        key = getStyleKey(href);\n        break;\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    preloadPropsMap.has(key) ||\n      ((href = assign(\n        {\n          rel: \"preload\",\n          href:\n            \"image\" === as && options && options.imageSrcSet ? void 0 : href,\n          as: as\n        },\n        options\n      )),\n      preloadPropsMap.set(key, href),\n      null !== ownerDocument.querySelector(preloadSelector) ||\n        (\"style\" === as &&\n          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||\n        (\"script\" === as &&\n          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n        ((as = ownerDocument.createElement(\"link\")),\n        setInitialProperties(as, \"link\", href),\n        markNodeAsHoistable(as),\n        ownerDocument.head.appendChild(as)));\n  }\n}\nfunction preloadModule(href, options) {\n  previousDispatcher.m(href, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var as = options && \"string\" === typeof options.as ? options.as : \"script\",\n      preloadSelector =\n        'link[rel=\"modulepreload\"][as=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n        '\"][href=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n        '\"]',\n      key = preloadSelector;\n    switch (as) {\n      case \"audioworklet\":\n      case \"paintworklet\":\n      case \"serviceworker\":\n      case \"sharedworker\":\n      case \"worker\":\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    if (\n      !preloadPropsMap.has(key) &&\n      ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n      preloadPropsMap.set(key, href),\n      null === ownerDocument.querySelector(preloadSelector))\n    ) {\n      switch (as) {\n        case \"audioworklet\":\n        case \"paintworklet\":\n        case \"serviceworker\":\n        case \"sharedworker\":\n        case \"worker\":\n        case \"script\":\n          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n            return;\n      }\n      as = ownerDocument.createElement(\"link\");\n      setInitialProperties(as, \"link\", href);\n      markNodeAsHoistable(as);\n      ownerDocument.head.appendChild(as);\n    }\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  previousDispatcher.S(href, precedence, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n      key = getStyleKey(href);\n    precedence = precedence || \"default\";\n    var resource = styles.get(key);\n    if (!resource) {\n      var state = { loading: 0, preload: null };\n      if (\n        (resource = ownerDocument.querySelector(\n          getStylesheetSelectorFromKey(key)\n        ))\n      )\n        state.loading = 5;\n      else {\n        href = assign(\n          { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n          options\n        );\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForStylesheet(href, options);\n        var link = (resource = ownerDocument.createElement(\"link\"));\n        markNodeAsHoistable(link);\n        setInitialProperties(link, \"link\", href);\n        link._p = new Promise(function (resolve, reject) {\n          link.onload = resolve;\n          link.onerror = reject;\n        });\n        link.addEventListener(\"load\", function () {\n          state.loading |= 1;\n        });\n        link.addEventListener(\"error\", function () {\n          state.loading |= 2;\n        });\n        state.loading |= 4;\n        insertStylesheet(resource, precedence, ownerDocument);\n      }\n      resource = {\n        type: \"stylesheet\",\n        instance: resource,\n        count: 1,\n        state: state\n      };\n      styles.set(key, resource);\n    }\n  }\n}\nfunction preinitScript(src, options) {\n  previousDispatcher.X(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0 }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction preinitModuleScript(src, options) {\n  previousDispatcher.M(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction getResource(type, currentProps, pendingProps, currentResource) {\n  var JSCompiler_inline_result = (JSCompiler_inline_result =\n    rootInstanceStackCursor.current)\n    ? getHoistableRoot(JSCompiler_inline_result)\n    : null;\n  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return null;\n    case \"style\":\n      return \"string\" === typeof pendingProps.precedence &&\n        \"string\" === typeof pendingProps.href\n        ? ((currentProps = getStyleKey(pendingProps.href)),\n          (pendingProps = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles),\n          (currentResource = pendingProps.get(currentProps)),\n          currentResource ||\n            ((currentResource = {\n              type: \"style\",\n              instance: null,\n              count: 0,\n              state: null\n            }),\n            pendingProps.set(currentProps, currentResource)),\n          currentResource)\n        : { type: \"void\", instance: null, count: 0, state: null };\n    case \"link\":\n      if (\n        \"stylesheet\" === pendingProps.rel &&\n        \"string\" === typeof pendingProps.href &&\n        \"string\" === typeof pendingProps.precedence\n      ) {\n        type = getStyleKey(pendingProps.href);\n        var styles$244 = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles,\n          resource$245 = styles$244.get(type);\n        resource$245 ||\n          ((JSCompiler_inline_result =\n            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),\n          (resource$245 = {\n            type: \"stylesheet\",\n            instance: null,\n            count: 0,\n            state: { loading: 0, preload: null }\n          }),\n          styles$244.set(type, resource$245),\n          (styles$244 = JSCompiler_inline_result.querySelector(\n            getStylesheetSelectorFromKey(type)\n          )) &&\n            !styles$244._p &&\n            ((resource$245.instance = styles$244),\n            (resource$245.state.loading = 5)),\n          preloadPropsMap.has(type) ||\n            ((pendingProps = {\n              rel: \"preload\",\n              as: \"style\",\n              href: pendingProps.href,\n              crossOrigin: pendingProps.crossOrigin,\n              integrity: pendingProps.integrity,\n              media: pendingProps.media,\n              hrefLang: pendingProps.hrefLang,\n              referrerPolicy: pendingProps.referrerPolicy\n            }),\n            preloadPropsMap.set(type, pendingProps),\n            styles$244 ||\n              preloadStylesheet(\n                JSCompiler_inline_result,\n                type,\n                pendingProps,\n                resource$245.state\n              )));\n        if (currentProps && null === currentResource)\n          throw Error(formatProdErrorMessage(528, \"\"));\n        return resource$245;\n      }\n      if (currentProps && null !== currentResource)\n        throw Error(formatProdErrorMessage(529, \"\"));\n      return null;\n    case \"script\":\n      return (\n        (currentProps = pendingProps.async),\n        (pendingProps = pendingProps.src),\n        \"string\" === typeof pendingProps &&\n        currentProps &&\n        \"function\" !== typeof currentProps &&\n        \"symbol\" !== typeof currentProps\n          ? ((currentProps = getScriptKey(pendingProps)),\n            (pendingProps = getResourcesFromRoot(\n              JSCompiler_inline_result\n            ).hoistableScripts),\n            (currentResource = pendingProps.get(currentProps)),\n            currentResource ||\n              ((currentResource = {\n                type: \"script\",\n                instance: null,\n                count: 0,\n                state: null\n              }),\n              pendingProps.set(currentProps, currentResource)),\n            currentResource)\n          : { type: \"void\", instance: null, count: 0, state: null }\n      );\n    default:\n      throw Error(formatProdErrorMessage(444, type));\n  }\n}\nfunction getStyleKey(href) {\n  return 'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"';\n}\nfunction getStylesheetSelectorFromKey(key) {\n  return 'link[rel=\"stylesheet\"][' + key + \"]\";\n}\nfunction stylesheetPropsFromRawProps(rawProps) {\n  return assign({}, rawProps, {\n    \"data-precedence\": rawProps.precedence,\n    precedence: null\n  });\n}\nfunction preloadStylesheet(ownerDocument, key, preloadProps, state) {\n  ownerDocument.querySelector('link[rel=\"preload\"][as=\"style\"][' + key + \"]\")\n    ? (state.loading = 1)\n    : ((key = ownerDocument.createElement(\"link\")),\n      (state.preload = key),\n      key.addEventListener(\"load\", function () {\n        return (state.loading |= 1);\n      }),\n      key.addEventListener(\"error\", function () {\n        return (state.loading |= 2);\n      }),\n      setInitialProperties(key, \"link\", preloadProps),\n      markNodeAsHoistable(key),\n      ownerDocument.head.appendChild(key));\n}\nfunction getScriptKey(src) {\n  return '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]';\n}\nfunction getScriptSelectorFromKey(key) {\n  return \"script[async]\" + key;\n}\nfunction acquireResource(hoistableRoot, resource, props) {\n  resource.count++;\n  if (null === resource.instance)\n    switch (resource.type) {\n      case \"style\":\n        var instance = hoistableRoot.querySelector(\n          'style[data-href~=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n            '\"]'\n        );\n        if (instance)\n          return (\n            (resource.instance = instance),\n            markNodeAsHoistable(instance),\n            instance\n          );\n        var styleProps = assign({}, props, {\n          \"data-href\": props.href,\n          \"data-precedence\": props.precedence,\n          href: null,\n          precedence: null\n        });\n        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(\n          \"style\"\n        );\n        markNodeAsHoistable(instance);\n        setInitialProperties(instance, \"style\", styleProps);\n        insertStylesheet(instance, props.precedence, hoistableRoot);\n        return (resource.instance = instance);\n      case \"stylesheet\":\n        styleProps = getStyleKey(props.href);\n        var instance$250 = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(styleProps)\n        );\n        if (instance$250)\n          return (\n            (resource.state.loading |= 4),\n            (resource.instance = instance$250),\n            markNodeAsHoistable(instance$250),\n            instance$250\n          );\n        instance = stylesheetPropsFromRawProps(props);\n        (styleProps = preloadPropsMap.get(styleProps)) &&\n          adoptPreloadPropsForStylesheet(instance, styleProps);\n        instance$250 = (\n          hoistableRoot.ownerDocument || hoistableRoot\n        ).createElement(\"link\");\n        markNodeAsHoistable(instance$250);\n        var linkInstance = instance$250;\n        linkInstance._p = new Promise(function (resolve, reject) {\n          linkInstance.onload = resolve;\n          linkInstance.onerror = reject;\n        });\n        setInitialProperties(instance$250, \"link\", instance);\n        resource.state.loading |= 4;\n        insertStylesheet(instance$250, props.precedence, hoistableRoot);\n        return (resource.instance = instance$250);\n      case \"script\":\n        instance$250 = getScriptKey(props.src);\n        if (\n          (styleProps = hoistableRoot.querySelector(\n            getScriptSelectorFromKey(instance$250)\n          ))\n        )\n          return (\n            (resource.instance = styleProps),\n            markNodeAsHoistable(styleProps),\n            styleProps\n          );\n        instance = props;\n        if ((styleProps = preloadPropsMap.get(instance$250)))\n          (instance = assign({}, props)),\n            adoptPreloadPropsForScript(instance, styleProps);\n        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n        styleProps = hoistableRoot.createElement(\"script\");\n        markNodeAsHoistable(styleProps);\n        setInitialProperties(styleProps, \"link\", instance);\n        hoistableRoot.head.appendChild(styleProps);\n        return (resource.instance = styleProps);\n      case \"void\":\n        return null;\n      default:\n        throw Error(formatProdErrorMessage(443, resource.type));\n    }\n  else\n    \"stylesheet\" === resource.type &&\n      0 === (resource.state.loading & 4) &&\n      ((instance = resource.instance),\n      (resource.state.loading |= 4),\n      insertStylesheet(instance, props.precedence, hoistableRoot));\n  return resource.instance;\n}\nfunction insertStylesheet(instance, precedence, root) {\n  for (\n    var nodes = root.querySelectorAll(\n        'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n      ),\n      last = nodes.length ? nodes[nodes.length - 1] : null,\n      prior = last,\n      i = 0;\n    i < nodes.length;\n    i++\n  ) {\n    var node = nodes[i];\n    if (node.dataset.precedence === precedence) prior = node;\n    else if (prior !== last) break;\n  }\n  prior\n    ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n    : ((precedence = 9 === root.nodeType ? root.head : root),\n      precedence.insertBefore(instance, precedence.firstChild));\n}\nfunction adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n  null == stylesheetProps.crossOrigin &&\n    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n  null == stylesheetProps.referrerPolicy &&\n    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);\n}\nfunction adoptPreloadPropsForScript(scriptProps, preloadProps) {\n  null == scriptProps.crossOrigin &&\n    (scriptProps.crossOrigin = preloadProps.crossOrigin);\n  null == scriptProps.referrerPolicy &&\n    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == scriptProps.integrity &&\n    (scriptProps.integrity = preloadProps.integrity);\n}\nvar tagCaches = null;\nfunction getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n  if (null === tagCaches) {\n    var cache = new Map();\n    var caches = (tagCaches = new Map());\n    caches.set(ownerDocument, cache);\n  } else\n    (caches = tagCaches),\n      (cache = caches.get(ownerDocument)),\n      cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n  if (cache.has(type)) return cache;\n  cache.set(type, null);\n  ownerDocument = ownerDocument.getElementsByTagName(type);\n  for (caches = 0; caches < ownerDocument.length; caches++) {\n    var node = ownerDocument[caches];\n    if (\n      !(\n        node[internalHoistableMarker] ||\n        node[internalInstanceKey] ||\n        (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n      ) &&\n      \"http://www.w3.org/2000/svg\" !== node.namespaceURI\n    ) {\n      var nodeKey = node.getAttribute(keyAttribute) || \"\";\n      nodeKey = type + nodeKey;\n      var existing = cache.get(nodeKey);\n      existing ? existing.push(node) : cache.set(nodeKey, [node]);\n    }\n  }\n  return cache;\n}\nfunction mountHoistable(hoistableRoot, type, instance) {\n  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n  hoistableRoot.head.insertBefore(\n    instance,\n    \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n  );\n}\nfunction isHostHoistableType(type, props, hostContext) {\n  if (1 === hostContext || null != props.itemProp) return !1;\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return !0;\n    case \"style\":\n      if (\n        \"string\" !== typeof props.precedence ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href\n      )\n        break;\n      return !0;\n    case \"link\":\n      if (\n        \"string\" !== typeof props.rel ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href ||\n        props.onLoad ||\n        props.onError\n      )\n        break;\n      switch (props.rel) {\n        case \"stylesheet\":\n          return (\n            (type = props.disabled),\n            \"string\" === typeof props.precedence && null == type\n          );\n        default:\n          return !0;\n      }\n    case \"script\":\n      if (\n        props.async &&\n        \"function\" !== typeof props.async &&\n        \"symbol\" !== typeof props.async &&\n        !props.onLoad &&\n        !props.onError &&\n        props.src &&\n        \"string\" === typeof props.src\n      )\n        return !0;\n  }\n  return !1;\n}\nfunction preloadResource(resource) {\n  return \"stylesheet\" === resource.type && 0 === (resource.state.loading & 3)\n    ? !1\n    : !0;\n}\nvar suspendedState = null;\nfunction noop() {}\nfunction suspendResource(hoistableRoot, resource, props) {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  if (\n    \"stylesheet\" === resource.type &&\n    (\"string\" !== typeof props.media ||\n      !1 !== matchMedia(props.media).matches) &&\n    0 === (resource.state.loading & 4)\n  ) {\n    if (null === resource.instance) {\n      var key = getStyleKey(props.href),\n        instance = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(key)\n        );\n      if (instance) {\n        hoistableRoot = instance._p;\n        null !== hoistableRoot &&\n          \"object\" === typeof hoistableRoot &&\n          \"function\" === typeof hoistableRoot.then &&\n          (state.count++,\n          (state = onUnsuspend.bind(state)),\n          hoistableRoot.then(state, state));\n        resource.state.loading |= 4;\n        resource.instance = instance;\n        markNodeAsHoistable(instance);\n        return;\n      }\n      instance = hoistableRoot.ownerDocument || hoistableRoot;\n      props = stylesheetPropsFromRawProps(props);\n      (key = preloadPropsMap.get(key)) &&\n        adoptPreloadPropsForStylesheet(props, key);\n      instance = instance.createElement(\"link\");\n      markNodeAsHoistable(instance);\n      var linkInstance = instance;\n      linkInstance._p = new Promise(function (resolve, reject) {\n        linkInstance.onload = resolve;\n        linkInstance.onerror = reject;\n      });\n      setInitialProperties(instance, \"link\", props);\n      resource.instance = instance;\n    }\n    null === state.stylesheets && (state.stylesheets = new Map());\n    state.stylesheets.set(resource, hoistableRoot);\n    (hoistableRoot = resource.state.preload) &&\n      0 === (resource.state.loading & 3) &&\n      (state.count++,\n      (resource = onUnsuspend.bind(state)),\n      hoistableRoot.addEventListener(\"load\", resource),\n      hoistableRoot.addEventListener(\"error\", resource));\n  }\n}\nfunction waitForCommitToBeReady() {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  state.stylesheets &&\n    0 === state.count &&\n    insertSuspendedStylesheets(state, state.stylesheets);\n  return 0 < state.count\n    ? function (commit) {\n        var stylesheetTimer = setTimeout(function () {\n          state.stylesheets &&\n            insertSuspendedStylesheets(state, state.stylesheets);\n          if (state.unsuspend) {\n            var unsuspend = state.unsuspend;\n            state.unsuspend = null;\n            unsuspend();\n          }\n        }, 6e4);\n        state.unsuspend = commit;\n        return function () {\n          state.unsuspend = null;\n          clearTimeout(stylesheetTimer);\n        };\n      }\n    : null;\n}\nfunction onUnsuspend() {\n  this.count--;\n  if (0 === this.count)\n    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);\n    else if (this.unsuspend) {\n      var unsuspend = this.unsuspend;\n      this.unsuspend = null;\n      unsuspend();\n    }\n}\nvar precedencesByRoot = null;\nfunction insertSuspendedStylesheets(state, resources) {\n  state.stylesheets = null;\n  null !== state.unsuspend &&\n    (state.count++,\n    (precedencesByRoot = new Map()),\n    resources.forEach(insertStylesheetIntoRoot, state),\n    (precedencesByRoot = null),\n    onUnsuspend.call(state));\n}\nfunction insertStylesheetIntoRoot(root, resource) {\n  if (!(resource.state.loading & 4)) {\n    var precedences = precedencesByRoot.get(root);\n    if (precedences) var last = precedences.get(null);\n    else {\n      precedences = new Map();\n      precedencesByRoot.set(root, precedences);\n      for (\n        var nodes = root.querySelectorAll(\n            \"link[data-precedence],style[data-precedence]\"\n          ),\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (\n          \"LINK\" === node.nodeName ||\n          \"not all\" !== node.getAttribute(\"media\")\n        )\n          precedences.set(node.dataset.precedence, node), (last = node);\n      }\n      last && precedences.set(null, last);\n    }\n    nodes = resource.instance;\n    node = nodes.getAttribute(\"data-precedence\");\n    i = precedences.get(node) || last;\n    i === last && precedences.set(null, nodes);\n    precedences.set(node, nodes);\n    this.count++;\n    last = onUnsuspend.bind(this);\n    nodes.addEventListener(\"load\", last);\n    nodes.addEventListener(\"error\", last);\n    i\n      ? i.parentNode.insertBefore(nodes, i.nextSibling)\n      : ((root = 9 === root.nodeType ? root.head : root),\n        root.insertBefore(nodes, root.firstChild));\n    resource.state.loading |= 4;\n  }\n}\nvar HostTransitionContext = {\n  $$typeof: REACT_CONTEXT_TYPE,\n  Provider: null,\n  Consumer: null,\n  _currentValue: sharedNotPendingObject,\n  _currentValue2: sharedNotPendingObject,\n  _threadCount: 0\n};\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  formState\n) {\n  this.tag = 1;\n  this.containerInfo = containerInfo;\n  this.pingCache = this.current = this.pendingChildren = null;\n  this.timeoutHandle = -1;\n  this.callbackNode =\n    this.next =\n    this.pendingContext =\n    this.context =\n    this.cancelPendingCommit =\n      null;\n  this.callbackPriority = 0;\n  this.expirationTimes = createLaneMap(-1);\n  this.entangledLanes =\n    this.shellSuspendCounter =\n    this.errorRecoveryDisabledLanes =\n    this.expiredLanes =\n    this.warmLanes =\n    this.pingedLanes =\n    this.suspendedLanes =\n    this.pendingLanes =\n      0;\n  this.entanglements = createLaneMap(0);\n  this.hiddenUpdates = createLaneMap(null);\n  this.identifierPrefix = identifierPrefix;\n  this.onUncaughtError = onUncaughtError;\n  this.onCaughtError = onCaughtError;\n  this.onRecoverableError = onRecoverableError;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = formState;\n  this.incompleteTransitions = new Map();\n}\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  transitionCallbacks,\n  formState\n) {\n  containerInfo = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    formState\n  );\n  tag = 1;\n  !0 === isStrictMode && (tag |= 24);\n  isStrictMode = createFiberImplClass(3, null, null, tag);\n  containerInfo.current = isStrictMode;\n  isStrictMode.stateNode = containerInfo;\n  tag = createCache();\n  tag.refCount++;\n  containerInfo.pooledCache = tag;\n  tag.refCount++;\n  isStrictMode.memoizedState = {\n    element: initialChildren,\n    isDehydrated: hydrate,\n    cache: tag\n  };\n  initializeUpdateQueue(isStrictMode);\n  return containerInfo;\n}\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) return emptyContextObject;\n  parentComponent = emptyContextObject;\n  return parentComponent;\n}\nfunction updateContainerImpl(\n  rootFiber,\n  lane,\n  element,\n  container,\n  parentComponent,\n  callback\n) {\n  parentComponent = getContextForSubtree(parentComponent);\n  null === container.context\n    ? (container.context = parentComponent)\n    : (container.pendingContext = parentComponent);\n  container = createUpdate(lane);\n  container.payload = { element: element };\n  callback = void 0 === callback ? null : callback;\n  null !== callback && (container.callback = callback);\n  element = enqueueUpdate(rootFiber, container, lane);\n  null !== element &&\n    (scheduleUpdateOnFiber(element, rootFiber, lane),\n    entangleTransitions(element, rootFiber, lane));\n}\nfunction markRetryLaneImpl(fiber, retryLane) {\n  fiber = fiber.memoizedState;\n  if (null !== fiber && null !== fiber.dehydrated) {\n    var a = fiber.retryLane;\n    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n  }\n}\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n}\nfunction attemptContinuousHydration(fiber) {\n  if (13 === fiber.tag) {\n    var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n    markRetryLaneIfNotHydrated(fiber, 67108864);\n  }\n}\nvar _enabled = !0;\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 8),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchEvent(\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (_enabled) {\n    var blockedOn = findInstanceBlockingEvent(nativeEvent);\n    if (null === blockedOn)\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        return_targetInst,\n        targetContainer\n      ),\n        clearIfContinuousEvent(domEventName, nativeEvent);\n    else if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      )\n    )\n      nativeEvent.stopPropagation();\n    else if (\n      (clearIfContinuousEvent(domEventName, nativeEvent),\n      eventSystemFlags & 4 &&\n        -1 < discreteReplayableEvents.indexOf(domEventName))\n    ) {\n      for (; null !== blockedOn; ) {\n        var fiber = getInstanceFromNode(blockedOn);\n        if (null !== fiber)\n          switch (fiber.tag) {\n            case 3:\n              fiber = fiber.stateNode;\n              if (fiber.current.memoizedState.isDehydrated) {\n                var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                if (0 !== lanes) {\n                  var root = fiber;\n                  root.pendingLanes |= 2;\n                  for (root.entangledLanes |= 2; lanes; ) {\n                    var lane = 1 << (31 - clz32(lanes));\n                    root.entanglements[1] |= lane;\n                    lanes &= ~lane;\n                  }\n                  ensureRootIsScheduled(fiber);\n                  0 === (executionContext & 6) &&\n                    ((workInProgressRootRenderTargetTime = now() + 500),\n                    flushSyncWorkAcrossRoots_impl(0, !1));\n                }\n              }\n              break;\n            case 13:\n              (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                flushSyncWork$1(),\n                markRetryLaneIfNotHydrated(fiber, 2);\n          }\n        fiber = findInstanceBlockingEvent(nativeEvent);\n        null === fiber &&\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          );\n        if (fiber === blockedOn) break;\n        blockedOn = fiber;\n      }\n      null !== blockedOn && nativeEvent.stopPropagation();\n    } else\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n        targetContainer\n      );\n  }\n}\nfunction findInstanceBlockingEvent(nativeEvent) {\n  nativeEvent = getEventTarget(nativeEvent);\n  return findInstanceBlockingTarget(nativeEvent);\n}\nvar return_targetInst = null;\nfunction findInstanceBlockingTarget(targetNode) {\n  return_targetInst = null;\n  targetNode = getClosestInstanceFromNode(targetNode);\n  if (null !== targetNode) {\n    var nearestMounted = getNearestMountedFiber(targetNode);\n    if (null === nearestMounted) targetNode = null;\n    else {\n      var tag = nearestMounted.tag;\n      if (13 === tag) {\n        targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n        if (null !== targetNode) return targetNode;\n        targetNode = null;\n      } else if (3 === tag) {\n        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n          return 3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        targetNode = null;\n      } else nearestMounted !== targetNode && (targetNode = null);\n    }\n  }\n  return_targetInst = targetNode;\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    case \"beforetoggle\":\n    case \"cancel\":\n    case \"click\":\n    case \"close\":\n    case \"contextmenu\":\n    case \"copy\":\n    case \"cut\":\n    case \"auxclick\":\n    case \"dblclick\":\n    case \"dragend\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"focusin\":\n    case \"focusout\":\n    case \"input\":\n    case \"invalid\":\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n    case \"mousedown\":\n    case \"mouseup\":\n    case \"paste\":\n    case \"pause\":\n    case \"play\":\n    case \"pointercancel\":\n    case \"pointerdown\":\n    case \"pointerup\":\n    case \"ratechange\":\n    case \"reset\":\n    case \"resize\":\n    case \"seeked\":\n    case \"submit\":\n    case \"toggle\":\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchstart\":\n    case \"volumechange\":\n    case \"change\":\n    case \"selectionchange\":\n    case \"textInput\":\n    case \"compositionstart\":\n    case \"compositionend\":\n    case \"compositionupdate\":\n    case \"beforeblur\":\n    case \"afterblur\":\n    case \"beforeinput\":\n    case \"blur\":\n    case \"fullscreenchange\":\n    case \"focus\":\n    case \"hashchange\":\n    case \"popstate\":\n    case \"select\":\n    case \"selectstart\":\n      return 2;\n    case \"drag\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"pointermove\":\n    case \"pointerout\":\n    case \"pointerover\":\n    case \"scroll\":\n    case \"touchmove\":\n    case \"wheel\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n      return 8;\n    case \"message\":\n      switch (getCurrentPriorityLevel()) {\n        case ImmediatePriority:\n          return 2;\n        case UserBlockingPriority:\n          return 8;\n        case NormalPriority$1:\n        case LowPriority:\n          return 32;\n        case IdlePriority:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar hasScheduledReplayAttempt = !1,\n  queuedFocus = null,\n  queuedDrag = null,\n  queuedMouse = null,\n  queuedPointers = new Map(),\n  queuedPointerCaptures = new Map(),\n  queuedExplicitHydrationTargets = [],\n  discreteReplayableEvents =\n    \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n      \" \"\n    );\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"focusin\":\n    case \"focusout\":\n      queuedFocus = null;\n      break;\n    case \"dragenter\":\n    case \"dragleave\":\n      queuedDrag = null;\n      break;\n    case \"mouseover\":\n    case \"mouseout\":\n      queuedMouse = null;\n      break;\n    case \"pointerover\":\n    case \"pointerout\":\n      queuedPointers.delete(nativeEvent.pointerId);\n      break;\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n      queuedPointerCaptures.delete(nativeEvent.pointerId);\n  }\n}\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent,\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (\n    null === existingQueuedEvent ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  )\n    return (\n      (existingQueuedEvent = {\n        blockedOn: blockedOn,\n        domEventName: domEventName,\n        eventSystemFlags: eventSystemFlags,\n        nativeEvent: nativeEvent,\n        targetContainers: [targetContainer]\n      }),\n      null !== blockedOn &&\n        ((blockedOn = getInstanceFromNode(blockedOn)),\n        null !== blockedOn && attemptContinuousHydration(blockedOn)),\n      existingQueuedEvent\n    );\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  blockedOn = existingQueuedEvent.targetContainers;\n  null !== targetContainer &&\n    -1 === blockedOn.indexOf(targetContainer) &&\n    blockedOn.push(targetContainer);\n  return existingQueuedEvent;\n}\nfunction queueIfContinuousEvent(\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  switch (domEventName) {\n    case \"focusin\":\n      return (\n        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedFocus,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"dragenter\":\n      return (\n        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedDrag,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"mouseover\":\n      return (\n        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedMouse,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"pointerover\":\n      var pointerId = nativeEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )\n      );\n      return !0;\n    case \"gotpointercapture\":\n      return (\n        (pointerId = nativeEvent.pointerId),\n        queuedPointerCaptures.set(\n          pointerId,\n          accumulateOrCreateContinuousQueuedReplayableEvent(\n            queuedPointerCaptures.get(pointerId) || null,\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        ),\n        !0\n      );\n  }\n  return !1;\n}\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (null !== targetInst) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n    if (null !== nearestMounted)\n      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n        if (\n          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n          null !== targetInst)\n        ) {\n          queuedTarget.blockedOn = targetInst;\n          runWithPriority(queuedTarget.priority, function () {\n            if (13 === nearestMounted.tag) {\n              var lane = requestUpdateLane();\n              lane = getBumpedLaneForHydrationByLane(lane);\n              var root = enqueueConcurrentRenderForLane(nearestMounted, lane);\n              null !== root &&\n                scheduleUpdateOnFiber(root, nearestMounted, lane);\n              markRetryLaneIfNotHydrated(nearestMounted, lane);\n            }\n          });\n          return;\n        }\n      } else if (\n        3 === targetInst &&\n        nearestMounted.stateNode.current.memoizedState.isDehydrated\n      ) {\n        queuedTarget.blockedOn =\n          3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        return;\n      }\n  }\n  queuedTarget.blockedOn = null;\n}\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (null !== queuedEvent.blockedOn) return !1;\n  for (\n    var targetContainers = queuedEvent.targetContainers;\n    0 < targetContainers.length;\n\n  ) {\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n    if (null === nextBlockedOn) {\n      nextBlockedOn = queuedEvent.nativeEvent;\n      var nativeEventClone = new nextBlockedOn.constructor(\n        nextBlockedOn.type,\n        nextBlockedOn\n      );\n      currentReplayingEvent = nativeEventClone;\n      nextBlockedOn.target.dispatchEvent(nativeEventClone);\n      currentReplayingEvent = null;\n    } else\n      return (\n        (targetContainers = getInstanceFromNode(nextBlockedOn)),\n        null !== targetContainers &&\n          attemptContinuousHydration(targetContainers),\n        (queuedEvent.blockedOn = nextBlockedOn),\n        !1\n      );\n    targetContainers.shift();\n  }\n  return !0;\n}\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n}\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = !1;\n  null !== queuedFocus &&\n    attemptReplayContinuousQueuedEvent(queuedFocus) &&\n    (queuedFocus = null);\n  null !== queuedDrag &&\n    attemptReplayContinuousQueuedEvent(queuedDrag) &&\n    (queuedDrag = null);\n  null !== queuedMouse &&\n    attemptReplayContinuousQueuedEvent(queuedMouse) &&\n    (queuedMouse = null);\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  queuedEvent.blockedOn === unblocked &&\n    ((queuedEvent.blockedOn = null),\n    hasScheduledReplayAttempt ||\n      ((hasScheduledReplayAttempt = !0),\n      Scheduler.unstable_scheduleCallback(\n        Scheduler.unstable_NormalPriority,\n        replayUnblockedEvents\n      )));\n}\nvar lastScheduledReplayQueue = null;\nfunction scheduleReplayQueueIfNeeded(formReplayingQueue) {\n  lastScheduledReplayQueue !== formReplayingQueue &&\n    ((lastScheduledReplayQueue = formReplayingQueue),\n    Scheduler.unstable_scheduleCallback(\n      Scheduler.unstable_NormalPriority,\n      function () {\n        lastScheduledReplayQueue === formReplayingQueue &&\n          (lastScheduledReplayQueue = null);\n        for (var i = 0; i < formReplayingQueue.length; i += 3) {\n          var form = formReplayingQueue[i],\n            submitterOrAction = formReplayingQueue[i + 1],\n            formData = formReplayingQueue[i + 2];\n          if (\"function\" !== typeof submitterOrAction)\n            if (null === findInstanceBlockingTarget(submitterOrAction || form))\n              continue;\n            else break;\n          var formInst = getInstanceFromNode(form);\n          null !== formInst &&\n            (formReplayingQueue.splice(i, 3),\n            (i -= 3),\n            startHostTransition(\n              formInst,\n              {\n                pending: !0,\n                data: formData,\n                method: form.method,\n                action: submitterOrAction\n              },\n              submitterOrAction,\n              formData\n            ));\n        }\n      }\n    ));\n}\nfunction retryIfBlockedOn(unblocked) {\n  function unblock(queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  }\n  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[i];\n    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n  }\n  for (\n    ;\n    0 < queuedExplicitHydrationTargets.length &&\n    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n  )\n    attemptExplicitHydrationTarget(i),\n      null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n  if (null != i)\n    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n      var form = i[queuedTarget],\n        submitterOrAction = i[queuedTarget + 1],\n        formProps = form[internalPropsKey] || null;\n      if (\"function\" === typeof submitterOrAction)\n        formProps || scheduleReplayQueueIfNeeded(i);\n      else if (formProps) {\n        var action = null;\n        if (submitterOrAction && submitterOrAction.hasAttribute(\"formAction\"))\n          if (\n            ((form = submitterOrAction),\n            (formProps = submitterOrAction[internalPropsKey] || null))\n          )\n            action = formProps.formAction;\n          else {\n            if (null !== findInstanceBlockingTarget(form)) continue;\n          }\n        else action = formProps.action;\n        \"function\" === typeof action\n          ? (i[queuedTarget + 1] = action)\n          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n        scheduleReplayQueueIfNeeded(i);\n      }\n    }\n}\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n  function (children) {\n    var root = this._internalRoot;\n    if (null === root) throw Error(formatProdErrorMessage(409));\n    var current = root.current,\n      lane = requestUpdateLane();\n    updateContainerImpl(current, lane, children, root, null, null);\n  };\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n  function () {\n    var root = this._internalRoot;\n    if (null !== root) {\n      this._internalRoot = null;\n      var container = root.containerInfo;\n      updateContainerImpl(root.current, 2, null, root, null, null);\n      flushSyncWork$1();\n      container[internalContainerInstanceKey] = null;\n    }\n  };\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {\n  if (target) {\n    var updatePriority = resolveUpdatePriority();\n    target = { blockedOn: null, target: target, priority: updatePriority };\n    for (\n      var i = 0;\n      i < queuedExplicitHydrationTargets.length &&\n      0 !== updatePriority &&\n      updatePriority < queuedExplicitHydrationTargets[i].priority;\n      i++\n    );\n    queuedExplicitHydrationTargets.splice(i, 0, target);\n    0 === i && attemptExplicitHydrationTarget(target);\n  }\n};\nvar isomorphicReactPackageVersion$jscomp$inline_1785 = React.version;\nif (\n  \"19.1.1\" !==\n  isomorphicReactPackageVersion$jscomp$inline_1785\n)\n  throw Error(\n    formatProdErrorMessage(\n      527,\n      isomorphicReactPackageVersion$jscomp$inline_1785,\n      \"19.1.1\"\n    )\n  );\nReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n  var fiber = componentOrElement._reactInternals;\n  if (void 0 === fiber) {\n    if (\"function\" === typeof componentOrElement.render)\n      throw Error(formatProdErrorMessage(188));\n    componentOrElement = Object.keys(componentOrElement).join(\",\");\n    throw Error(formatProdErrorMessage(268, componentOrElement));\n  }\n  componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n  componentOrElement =\n    null !== componentOrElement\n      ? findCurrentHostFiberImpl(componentOrElement)\n      : null;\n  componentOrElement =\n    null === componentOrElement ? null : componentOrElement.stateNode;\n  return componentOrElement;\n};\nvar internals$jscomp$inline_2256 = {\n  bundleType: 0,\n  version: \"19.1.1\",\n  rendererPackageName: \"react-dom\",\n  currentDispatcherRef: ReactSharedInternals,\n  reconcilerVersion: \"19.1.1\"\n};\nif (\"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var hook$jscomp$inline_2257 = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (\n    !hook$jscomp$inline_2257.isDisabled &&\n    hook$jscomp$inline_2257.supportsFiber\n  )\n    try {\n      (rendererID = hook$jscomp$inline_2257.inject(\n        internals$jscomp$inline_2256\n      )),\n        (injectedHook = hook$jscomp$inline_2257);\n    } catch (err) {}\n}\nexports.createRoot = function (container, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks));\n  options = createFiberRoot(\n    container,\n    1,\n    !1,\n    null,\n    null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    null\n  );\n  container[internalContainerInstanceKey] = options.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMRoot(options);\n};\nexports.hydrateRoot = function (container, initialChildren, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null,\n    formState = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks),\n    void 0 !== options.formState && (formState = options.formState));\n  initialChildren = createFiberRoot(\n    container,\n    1,\n    !0,\n    initialChildren,\n    null != options ? options : null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    formState\n  );\n  initialChildren.context = getContextForSubtree(null);\n  options = initialChildren.current;\n  isStrictMode = requestUpdateLane();\n  isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);\n  identifierPrefix = createUpdate(isStrictMode);\n  identifierPrefix.callback = null;\n  enqueueUpdate(options, identifierPrefix, isStrictMode);\n  options = isStrictMode;\n  initialChildren.current.lanes = options;\n  markRootUpdated$1(initialChildren, options);\n  ensureRootIsScheduled(initialChildren);\n  container[internalContainerInstanceKey] = initialChildren.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMHydrationRoot(initialChildren);\n};\nexports.version = \"19.1.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null, V: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, createDeps, update) {\n  var dispatcher = ReactSharedInternals.H;\n  if (\"function\" === typeof update)\n    throw Error(\n      \"useEffect CRUD overload is not enabled in this build of React.\"\n    );\n  return dispatcher.useEffect(create, createDeps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.1.1\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom-client.production.js');\n} else {\n  module.exports = require('./cjs/react-dom-client.development.js');\n}\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.1.1\";\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  needsPaint = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return needsPaint\n    ? !0\n    : exports.unstable_now() - startTime < frameInterval\n      ? !1\n      : !0;\n}\nfunction performWorkUntilDeadline() {\n  needsPaint = !1;\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_requestPaint = function () {\n  needsPaint = !0;\n};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline())));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","// Minimal fetch wrapper to add X-Chain-Id and X-Op-Id automatically\n// - Fetches chain id once at app start and caches it\n// - Generates UUID v4 for op-id per call unless provided\n\nlet __chainIdPromise: Promise<string> | null = null;\nlet __cachedChainId: string | null = null;\n\nfunction uuidv4(): string {\n  // RFC4122 v4 UUID using crypto.getRandomValues\n  const buf = new Uint8Array(16);\n  (typeof crypto !== 'undefined' && crypto.getRandomValues) ? crypto.getRandomValues(buf) : buf.fill(0);\n  buf[6] = (buf[6] & 0x0f) | 0x40;\n  buf[8] = (buf[8] & 0x3f) | 0x80;\n  const bth = Array.from(buf).map(b => b.toString(16).padStart(2, '0'));\n  return `${bth[0]}${bth[1]}${bth[2]}${bth[3]}-${bth[4]}${bth[5]}-${bth[6]}${bth[7]}-${bth[8]}${bth[9]}-${bth[10]}${bth[11]}${bth[12]}${bth[13]}${bth[14]}${bth[15]}`;\n}\n\nasync function getChainId(): Promise<string> {\n  if (__cachedChainId) return __cachedChainId;\n  if (!__chainIdPromise) {\n    __chainIdPromise = fetch('/chain/info')\n      .then(r => r.ok ? r.json() : Promise.reject(new Error(`chain_info_http_${r.status}`)))\n      .then(j => String(j?.chain_id || 'volchain-main'))\n      .catch(() => 'volchain-main')\n      .then(cid => { __cachedChainId = cid; return cid; });\n  }\n  return __chainIdPromise;\n}\n\nexport type RequestOptions = {\n  method?: string;\n  headers?: Record<string, string>;\n  body?: any;\n  requireOpId?: boolean;\n};\n\nexport async function apiFetch(input: string, opts: RequestOptions = {}): Promise<Response> {\n  const method = (opts.method || 'GET').toUpperCase();\n  const requireOp = opts.requireOpId ?? (method !== 'GET' && method !== 'HEAD');\n  const headers: Record<string, string> = Object.assign({}, opts.headers || {});\n\n  // Always attach session token if available\n  const session = (typeof window !== 'undefined') ? (localStorage.getItem('session_token') || '') : '';\n  if (session && !headers['X-Session-Token']) headers['X-Session-Token'] = session;\n\n  // Content type default for JSON bodies\n  if (opts.body && !headers['Content-Type']) headers['Content-Type'] = 'application/json';\n\n  // Chain id and op id for mutations\n  if (method === 'POST' || method === 'PATCH' || method === 'DELETE' || method === 'PUT') {\n    try {\n      const cid = await getChainId();\n      if (!headers['X-Chain-Id']) headers['X-Chain-Id'] = cid;\n    } catch {}\n    if (requireOp && !headers['X-Op-Id']) headers['X-Op-Id'] = uuidv4();\n  }\n\n  const init: RequestInit = {\n    method,\n    headers,\n    body: opts.body ? (typeof opts.body === 'string' ? opts.body : JSON.stringify(opts.body)) : undefined\n  };\n  return fetch(input, init);\n}\n\nexport async function withRetry(input: string, opts: RequestOptions = {}, retries = 1): Promise<Response> {\n  let lastErr: any = null;\n  for (let i = 0; i <= retries; i++) {\n    try {\n      const res = await apiFetch(input, opts);\n      if (res.status === 400) {\n        try {\n          const j = await res.clone().json();\n          if (j && (j.error === 'CHAIN_ID mismatch' || j.error === 'CHAIN_ID required')) {\n            __cachedChainId = null; __chainIdPromise = null; await getChainId();\n            continue;\n          }\n        } catch {}\n      }\n      return res;\n    } catch (e) {\n      lastErr = e;\n      if (i === retries) throw e;\n    }\n  }\n  if (lastErr) throw lastErr;\n  return apiFetch(input, opts);\n}\n\n\n","import React, { useEffect, useState, useCallback, Dispatch, SetStateAction, useRef } from \"react\";\nimport { withRetry } from './components/request';\nimport { createPortal } from \"react-dom\";\nimport \"./Grid.css\";\n\ntype Props = {\n  username: string;\n  userColor: string;\n  showSettings: boolean;\n  setShowSettings: Dispatch<SetStateAction<boolean>>;\n  handleLogout: () => void;\n  setUsername: Dispatch<SetStateAction<string | null>>;\n  tokenBalance: number;\n  setTokenBalance: Dispatch<SetStateAction<number>>;\n  blockData: Block[];\n  setBlockData: Dispatch<SetStateAction<Block[]>>;\n};\n\ntype Block = {\n  index: number;\n  dugBy: string | null;\n  color?: string | null;\n  visual?: string | null;\n  // PoW-related fields (optional)\n  height?: number;\n  nonce?: number;\n  hash?: string;\n};\n\ntype BlockState = \"idle\" | \"digging\" | \"dug\";\ntype MiningStatus = 'idle' | 'fetching_challenge' | 'mining' | 'submitting' | 'success' | 'error';\n\n// POW endpoint (Nginx'te /pow/ --> 4001'e gidiyor)\nconst POW_API = '/pow';\n\n// Kullanıcı pubkey'ini al (64 hex bekliyoruz, yoksa dummy)\nconst getUserPubkeyHex = () => {\n  const v = localStorage.getItem('user_pubkey') || '';\n  return /^[0-9a-fA-F]{64}$/.test(v) ? v : '0'.repeat(64);\n};\n\n// Arka planda PoW'u UI'ı bekletmeden tetikle (shadow)\nasync function kickPowShadow(pubkeyHex: string) {\n  try {\n    const t = await fetch(`${POW_API}/target`).then(r => r.json());\n    const w = new Worker('/powWorker.js?v=1');\n    w.postMessage({ ...t, pubkey: pubkeyHex, apiBase: POW_API });\n    // sonucu önemsemiyoruz; worker kendi kendine kapanır\n    w.onmessage = () => w.terminate();\n    w.onerror = () => w.terminate();\n  } catch {}\n}\n\n// Grid is always 10x10\nconst API_BASE = \"\";\nconst USE_POW_MINING = false; // Set to true to enable PoW mining, false for 10s timer\n\nconst Grid: React.FC<Props> = ({ username, userColor, showSettings, setShowSettings, handleLogout, setUsername, tokenBalance, setTokenBalance, blockData, setBlockData }) => {\n  const [blockStates, setBlockStates] = useState<BlockState[]>([]);\n  const [miningStatus, setMiningStatus] = useState<MiningStatus>('idle');\n  const [isMining, setIsMining] = useState<boolean>(false);\n  const [selectedBlockIndex, setSelectedBlockIndex] = useState<number | null>(null);\n  const [newlyDugBlocks, setNewlyDugBlocks] = useState<Set<number>>(new Set());\n  \n  // Block Info Modal State\n  const [showBlockModal, setShowBlockModal] = useState<boolean>(false);\n  const blockRefs = useRef<(HTMLDivElement | null)[]>([]);\n  const isInitialLoad = useRef(true);\n  \n  // Get safe modal width based on screen size\n  const getModalWidth = () => {\n    const screenWidth = window.screen.width || window.innerWidth;\n    return screenWidth < 400 ? '280px' : '300px';\n  };\n  \n  // Device detection\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const isAndroid = /android/i.test(navigator.userAgent);\n  const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n  \n  // Aggressive modal CSS protection with Safari-specific handling\n  useEffect(() => {\n    if (!showBlockModal) return;\n    \n    // Lock body scroll on modal open (Safari fix)\n    const originalBodyStyle = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n    document.body.style.position = 'fixed';\n    document.body.style.width = '100%';\n    \n    const forceModalCSS = () => {\n      // Find modal elements\n      const overlay = document.querySelector('[style*=\"z-index: 99999\"]');\n      const content = document.querySelector('[style*=\"border-radius: 12px\"][style*=\"background\"]');\n      \n      if (overlay) {\n        const overlayEl = overlay as HTMLElement;\n        overlayEl.style.position = 'fixed';\n        overlayEl.style.top = '0px';\n        overlayEl.style.left = '0px';\n        \n        if (isIOS) {\n          // iOS (Safari + Chrome): Use screen dimensions instead of viewport units\n          overlayEl.style.width = `${window.screen.width}px`;\n          overlayEl.style.height = `${window.screen.height}px`;\n          overlayEl.style.right = '0px';\n          overlayEl.style.bottom = '0px';\n          overlayEl.style.setProperty('-webkit-transform', 'none');\n          overlayEl.style.setProperty('-webkit-zoom', 'normal');\n          overlayEl.style.setProperty('zoom', 'normal');\n        } else if (isAndroid) {\n          // Android-specific: Use visualViewport if available, fallback to window\n          const viewportHeight = window.visualViewport?.height || window.innerHeight;\n          overlayEl.style.width = '100vw';\n          overlayEl.style.height = `${viewportHeight}px`;\n          overlayEl.style.setProperty('zoom', '1');\n          overlayEl.style.setProperty('transform', 'none');\n        } else {\n          // Desktop and other browsers\n          overlayEl.style.width = '100vw';\n          overlayEl.style.height = '100vh';\n          overlayEl.style.setProperty('zoom', '1');\n        }\n        \n        overlayEl.style.transform = 'none';\n        overlayEl.style.zIndex = '2147483647';\n        overlayEl.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n        overlayEl.style.display = 'flex';\n        overlayEl.style.justifyContent = 'center';\n        overlayEl.style.alignItems = 'center';\n      }\n      \n      if (content) {\n        const contentEl = content as HTMLElement;\n        const modalWidth = isIOS ? (window.screen.width < 400 ? '280px' : '300px') : getModalWidth();\n        \n        contentEl.style.width = modalWidth;\n        contentEl.style.minWidth = modalWidth;\n        contentEl.style.maxWidth = modalWidth;\n        contentEl.style.transform = 'none';\n        contentEl.style.fontSize = '14px';\n        contentEl.style.position = 'relative';\n        contentEl.style.backgroundColor = 'white';\n        contentEl.style.padding = '20px';\n        contentEl.style.borderRadius = '12px';\n        contentEl.style.textAlign = 'center';\n        contentEl.style.margin = '0';\n        contentEl.style.border = 'none';\n        contentEl.style.outline = 'none';\n        \n        if (isIOS) {\n          contentEl.style.setProperty('-webkit-transform', 'none');\n          contentEl.style.setProperty('-webkit-zoom', 'normal');\n          contentEl.style.setProperty('zoom', 'normal');\n          contentEl.style.setProperty('will-change', 'auto');\n        } else {\n          contentEl.style.setProperty('zoom', '1');\n        }\n      }\n    };\n    \n    // Force CSS immediately and frequently for Safari\n    const timer = setInterval(forceModalCSS, isSafari ? 16 : 50); // 60fps for Safari\n    \n    // MutationObserver to watch for style changes\n    const observer = new MutationObserver(forceModalCSS);\n    \n    // Start observing after modal appears\n    setTimeout(() => {\n      const overlay = document.querySelector('[style*=\"z-index: 99999\"]');\n      const content = document.querySelector('[style*=\"border-radius: 12px\"][style*=\"background\"]');\n      \n      if (overlay) {\n        observer.observe(overlay, { \n          attributes: true, \n          attributeFilter: ['style', 'class'] \n        });\n      }\n      \n      if (content) {\n        observer.observe(content, { \n          attributes: true, \n          attributeFilter: ['style', 'class'] \n        });\n      }\n    }, 10);\n    \n    return () => {\n      clearInterval(timer);\n      observer.disconnect();\n      // Restore body scroll\n      document.body.style.overflow = originalBodyStyle;\n      document.body.style.position = '';\n      document.body.style.width = '';\n    };\n  }, [showBlockModal, isAndroid, isIOS, isSafari]);\n\n  // Create user color map\n  const [userColors, setUserColors] = useState<{ [username: string]: string }>({});\n\n  const fetchGrid = useCallback(async () => {\n    try {\n      const response = await withRetry(`${API_BASE}/grid`, { method: 'GET' }, 1);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data: Block[] = await response.json();\n\n      const newStates: BlockState[] = data.map((block) =>\n        block.dugBy ? \"dug\" : \"idle\"\n      );\n      setBlockStates(newStates);\n      setBlockData(data);\n      // Update token balance from Volchain (Single Source of Truth)\n      try {\n        const volchainRes = await withRetry(`/volchain/user/${username}`, { method: 'GET' }, 1);\n        if (volchainRes.ok) {\n          const volchainData = await volchainRes.json();\n          setTokenBalance(volchainData.balance || 0);\n        } else {\n          // Fallback to Digzone count for compatibility\n          setTokenBalance(data.filter((block) => block.dugBy === username).length);\n        }\n      } catch {\n        // Fallback to Digzone count for compatibility\n        setTokenBalance(data.filter((block) => block.dugBy === username).length);\n      }\n      const dugCount = data.filter((block) => block.dugBy !== null).length;\n      if (dugCount === data.length) {\n        try {\n          const expandResponse = await withRetry(`${API_BASE}/expand`, { method: 'POST', headers: { 'Content-Type': 'application/json' } }, 1);\n          if (!expandResponse.ok) {\n            return;\n          }\n          const newData: Block[] = await (await withRetry(`${API_BASE}/grid`, { method: 'GET' }, 1)).json();\n          const newStates: BlockState[] = newData.map((block) =>\n            block.dugBy ? \"dug\" : \"idle\"\n          );\n          setBlockStates(newStates);\n          setBlockData(newData);\n          setTokenBalance(newData.filter((block) => block.dugBy === username).length);\n        } catch {}\n      }\n    } catch {}\n  }, [username, setBlockData, setTokenBalance]);\n\n  useEffect(() => {\n    fetchGrid();\n  }, [fetchGrid]);\n\n  // Also update tokenBalance when blockData changes\n  useEffect(() => {\n    setTokenBalance(blockData.filter((block) => block.dugBy === username).length);\n  }, [blockData, username, setTokenBalance]);\n\n  useEffect(() => {\n    // Fetch colors of all users in grid\n    const uniqueUsers = Array.from(new Set(blockData.filter(b => b.dugBy).map(b => b.dugBy)));\n    Promise.all(uniqueUsers.map(async (u) => {\n      const res = await withRetry(`/auth/user?username=${u}`, { method: 'GET' }, 1);\n      const data = await res.json();\n      return [u, data.color];\n    })).then(results => {\n      const colorMap: { [username: string]: string } = {};\n      results.forEach(([u, color]) => { colorMap[u] = color; });\n      setUserColors(colorMap);\n    });\n  }, [blockData]);\n\n  useEffect(() => {\n    if (isInitialLoad.current && blockStates.length > 0) {\n      const firstIdleIndex = blockStates.findIndex(state => state === 'idle');\n\n      if (firstIdleIndex !== -1) {\n        setTimeout(() => {\n          const blockElement = blockRefs.current[firstIdleIndex];\n          if (blockElement) {\n            const rect = blockElement.getBoundingClientRect();\n            const isInViewport =\n              rect.top >= 0 &&\n              rect.left >= 0 &&\n              rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n              rect.right <= (window.innerWidth || document.documentElement.clientWidth);\n\n            if (!isInViewport) {\n              blockElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            }\n            isInitialLoad.current = false;\n          }\n        }, 100);\n      }\n    }\n  }, [blockStates]);\n\n  const handleBlockClick = (index: number) => {\n    setSelectedBlockIndex(index);\n    setShowBlockModal(true);\n  };\n\n  const handleDigBlock = async (index: number) => {\n    if (isMining || !username) return;\n\n    if (USE_POW_MINING) {\n      if (miningStatus !== 'idle') return;\n\n      setShowBlockModal(false);\n      setIsMining(true);\n      setMiningStatus('fetching_challenge');\n\n      try {\n        // 1. Fetch the mining challenge from our new PoW service\n        const targetRes = await fetch('/pow/target');\n        if (!targetRes.ok) {\n          throw new Error('Failed to fetch mining challenge.');\n        }\n        const challenge = await targetRes.json();\n\n        setMiningStatus('mining');\n\n        // 2. Start the Web Worker to solve the challenge\n        const worker = new Worker('/powWorker.js?v=1');\n\n        worker.postMessage({\n          ...challenge,\n          pubkey: getUserPubkeyHex(),      // <-- '0'.repeat(64) yerine bu\n          apiBase: POW_API                 // <-- window.location.origin yerine bu\n        });\n\n        worker.onmessage = async (event) => {\n          worker.terminate();\n          const { ok, error, nonce, hash } = event.data;\n\n          if (ok) {\n            setMiningStatus('submitting');\n            \n            // 3. Submit the solved block to the main backend\n            const response = await withRetry(`${API_BASE}/grid/${index}`, {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: {\n                dugBy: username,\n                color: userColor,\n                visual: null,\n                height: challenge.height,\n                nonce: nonce,\n                hash: hash\n              }\n            }, 1);\n            \n            if (!response.ok) {\n              const result = await response.json();\n               if (response.status === 401 || result.error === 'Unauthorized: Invalid or missing session token') {\n                alert('Your session has expired. Please log in again.');\n                localStorage.removeItem('session_token');\n                localStorage.removeItem('username');\n                localStorage.removeItem(`color_${username}`);\n                window.location.reload();\n                return;\n              }\n              if (response.status === 429) {\n                alert(result?.error || 'Daily mining limit reached');\n                return;\n              }\n              throw new Error(result.error || \"Submitting block failed\");\n            }\n\n            setMiningStatus('success');\n            // Visual feedback for newly dug block\n            setNewlyDugBlocks(prev => new Set(prev).add(index));\n            setTimeout(() => {\n              setNewlyDugBlocks(prev => {\n                const newSet = new Set(prev);\n                newSet.delete(index);\n                return newSet;\n              });\n            }, 6000);\n\n            await fetchGrid(); // Refresh grid state\n\n          } else {\n            throw new Error(error || 'Mining worker failed.');\n          }\n        };\n\n        worker.onerror = (err) => {\n          worker.terminate();\n          throw err;\n        };\n\n      } catch (error) {\n        console.error(\"Mining process failed:\", error);\n        alert(`Mining failed: ${error instanceof Error ? error.message : String(error)}`);\n        setMiningStatus('error');\n      } finally {\n        // Reset status after a delay to show success/error message\n        setTimeout(() => {\n          setIsMining(false);\n          setMiningStatus('idle');\n        }, 2000);\n      }\n    } else {\n      // Original 10-second timer logic\n      if (blockStates[index] !== \"idle\") return;\n\n      setShowBlockModal(false);\n      setIsMining(true);\n      const newStates = [...blockStates];\n      newStates[index] = \"digging\";\n      setBlockStates(newStates);\n\n      try {\n        await new Promise((resolve) => setTimeout(resolve, 3000));\n\n        const response = await withRetry(`${API_BASE}/grid/${index}`, {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: {\n            dugBy: username,\n            color: userColor,\n            visual: null,\n          },\n        }, 1);\n\n        if (!response.ok) {\n          const result = await response.json();\n          if (response.status === 401 || result.error === 'Unauthorized: Invalid or missing session token') {\n            alert('Your session has expired. Please log in again.');\n            localStorage.removeItem('session_token');\n            localStorage.removeItem('username');\n            localStorage.removeItem(`color_${username}`);\n            window.location.reload();\n            return;\n          }\n          if (response.status === 429) {\n            alert(result?.error || 'Daily mining limit reached');\n            newStates[index] = \"idle\";\n            setBlockStates(newStates);\n            return;\n          }\n          alert(result.error || \"Digging failed\");\n          newStates[index] = \"idle\";\n          setBlockStates(newStates);\n          await fetchGrid();\n        } else {\n          // No additional wait needed - backend is now fast\n          setNewlyDugBlocks(prev => new Set(prev).add(index));\n          setTimeout(() => {\n            setNewlyDugBlocks(prev => {\n              const newSet = new Set(prev);\n              newSet.delete(index);\n              return newSet;\n            });\n          }, 6000);\n\n          await fetchGrid();\n\n          // >>> shadow PoW (opsiyonel)\n          kickPowShadow(getUserPubkeyHex());\n        }\n      } catch (error) {\n        console.error(\"Failed to save digging:\", error);\n        alert(\"Digging failed\");\n        newStates[index] = \"idle\";\n        setBlockStates(newStates);\n        await fetchGrid();\n      } finally {\n        setIsMining(false);\n      }\n    }\n  };\n\n\n  const selectedBlock = selectedBlockIndex !== null ? blockData[selectedBlockIndex] : null;\n  const selectedBlockState = selectedBlockIndex !== null ? blockStates[selectedBlockIndex] : null;\n  const isOwner = selectedBlock?.dugBy === username;\n  const isEmpty = selectedBlockState === \"idle\";\n\n  return (\n    <>\n      <div style={{\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '0 env(safe-area-inset-right) 0 env(safe-area-inset-left)'\n      }}>\n        <div className=\"grid-container\" style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(10, 1fr)',\n          gap: '1px',\n          width: '100%',\n          maxWidth: '400px',\n          margin: '0 auto',\n          padding: '1px',\n          boxSizing: 'border-box'\n        }}>\n        {blockStates.map((state, index) => {\n          const block = blockData[index];\n          const isUserBlock = block?.dugBy === username;\n          const blockColor = block?.dugBy && userColors[block.dugBy] ? userColors[block.dugBy] : \"transparent\";\n          const bgColor = state === \"dug\" ? blockColor : \"transparent\";\n          \n          let visualContent = \"\";\n          if (state === 'digging' || (isMining && selectedBlockIndex === index)) {\n            if (USE_POW_MINING) {\n              switch (miningStatus) {\n                case 'fetching_challenge': visualContent = '⚙️'; break;\n                case 'mining': visualContent = '⛏️'; break;\n                case 'submitting': visualContent = '🔗'; break;\n                case 'success': visualContent = '✅'; break;\n                case 'error': visualContent = '❌'; break;\n                default: visualContent = '⏳';\n              }\n            } else {\n              visualContent = '⏳';\n            }\n          }\n\n          return (\n            <div\n              ref={el => { blockRefs.current[index] = el; }}\n              key={index}\n              className={`grid-block ${state}${isUserBlock ? \" my-block\" : \"\"}`}\n              title={\n                state === \"dug\"\n                  ? `Block #${block?.index} - Dug by: ${block?.dugBy || \"Unknown\"}`\n                  : `Block #${block?.index}`\n              }\n              style={{\n                backgroundColor: bgColor,\n                width: '100%',\n                height: '100%',\n                aspectRatio: '1',\n                minWidth: 0,\n                minHeight: 0\n              }}\n              onClick={() => handleBlockClick(index)}\n            >\n              <div style={{ position: 'relative', width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                {visualContent}\n                {newlyDugBlocks.has(index) && (\n                  <div className=\"newly-dug-visual\">😊</div>\n                )}\n              </div>\n            </div>\n          );\n        })}\n        </div>\n      </div>\n\n      {/* Block Info Modal - Rendered via Portal to body */}\n      {showBlockModal && selectedBlock && selectedBlockIndex !== null && createPortal(\n        <div \n          className=\"block-modal-overlay\" \n          data-modal=\"block-info\"\n          data-safari={isSafari ? \"true\" : \"false\"}\n          onClick={() => setShowBlockModal(false)}\n          style={{\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            bottom: '0',\n            right: '0',\n            zIndex: 2147483647,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            transform: 'none',\n            transformOrigin: '0 0',\n            zoom: 1,\n            WebkitTransform: 'none',\n            MozTransform: 'none',\n            msTransform: 'none',\n          }}\n        >\n          <div \n            className=\"block-modal-content\" \n            data-modal-content=\"block-info\"\n            data-safari={isSafari ? \"true\" : \"false\"}\n            onClick={(e) => e.stopPropagation()}\n            style={{\n              backgroundColor: 'white',\n              padding: '20px',\n              borderRadius: '12px',\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n              textAlign: 'center',\n              width: getModalWidth(),\n              maxWidth: getModalWidth(),\n              minWidth: getModalWidth(),\n              height: 'auto',\n              maxHeight: '400px',\n              position: 'relative',\n              transform: 'none',\n              transformOrigin: 'center center',\n              zoom: 1,\n              fontSize: '14px',\n              WebkitTransform: 'none',\n              MozTransform: 'none',\n              msTransform: 'none',\n              margin: '0',\n              border: 'none',\n              outline: 'none',\n            }}\n          >\n            <h3 style={{ margin: '0 0 16px 0', color: '#333', fontSize: '20px' }}>\n              Block #{selectedBlock.index}\n            </h3>\n            {isEmpty ? (\n              <p style={{ margin: '8px 0 20px 0', color: '#666', fontSize: '16px' }}>Empty Block</p>\n            ) : isOwner ? (\n              <p style={{ margin: '8px 0 20px 0', color: '#666', fontSize: '16px' }}>Owner: You</p>\n            ) : (\n              <p style={{ margin: '8px 0 20px 0', color: '#666', fontSize: '16px' }}>Owner: {selectedBlock.dugBy}</p>\n            )}\n            \n            <div style={{ display: 'flex', gap: '12px', justifyContent: 'center', flexWrap: 'wrap' }}>\n              {isEmpty && (\n                <button \n                  className=\"block-modal-button dig-button\" \n                  onClick={() => handleDigBlock(selectedBlockIndex)}\n                  disabled={isMining}\n                  style={{\n                    padding: '10px 20px',\n                    border: 'none',\n                    borderRadius: '6px',\n                    fontSize: '14px',\n                    fontWeight: '600',\n                    cursor: 'pointer',\n                    backgroundColor: '#4CAF50',\n                    color: 'white',\n                    minWidth: '80px',\n                  }}\n                >\n                  {isMining ? (USE_POW_MINING ? `Mining... (${miningStatus})` : \"Mining...\") : \"Dig\"}\n                </button>\n              )}\n              <button \n                className=\"block-modal-button close-button\" \n                onClick={() => setShowBlockModal(false)}\n                style={{\n                  padding: '10px 20px',\n                  border: 'none',\n                  borderRadius: '6px',\n                  fontSize: '14px',\n                  fontWeight: '600',\n                  cursor: 'pointer',\n                  backgroundColor: '#9E9E9E',\n                  color: 'white',\n                  minWidth: '80px',\n                }}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>,\n        document.body\n      )}\n    </>\n  );\n};\n\nexport default Grid;","import React, { useState } from 'react';\nimport './Login.css';\n\ntype Props = {\n  onLogin: (username: string, color: string) => void;\n};\n\nconst colorOptions = [\n  \"#FFCDD2\", \"#F8BBD0\", \"#E1BEE7\", \"#D1C4E9\", \"#C5CAE9\",\n  \"#BBDEFB\", \"#B2EBF2\", \"#C8E6C9\", \"#DCEDC8\", \"#FFF9C4\",\n  \"#FFE0B2\", \"#FFCCBC\", \"#D7CCC8\", \"#26A69A\", \"#CFD8DC\",\n  \"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\",\n  \"#2196F3\", \"#03A9F4\", \"#00BCD4\", \"#009688\", \"#4CAF50\",\n  \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\",\n  \"#FF5722\", \"#795548\", \"#607D8B\"\n];\n\nconst Login: React.FC<Props> = ({ onLogin }) => {\n  const [isSignup, setIsSignup] = useState(false);\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const [isResetPassword, setIsResetPassword] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [selectedColor, setSelectedColor] = useState<string | null>(null);\n  const [resetToken, setResetToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  // Check URL for reset token on component mount\n  React.useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get('token');\n    const emailParam = urlParams.get('email');\n    \n    if (token && emailParam) {\n      setResetToken(token);\n      setEmail(emailParam);\n      setIsResetPassword(true);\n      setIsForgotPassword(false);\n      setIsSignup(false);\n    }\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const endpoint = isSignup ? '/auth/signup' : '/login';\n    const body = isSignup\n      ? {\n          email,\n          password,\n          username: username.trim(),\n          color: selectedColor || colorOptions[Math.floor(Math.random() * colorOptions.length)]\n        }\n      : { email, password };\n\n    if (isSignup && !username.trim()) {\n      alert(\"Username is required\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n\n      const result = await response.json();\n      if (!response.ok) {\n        alert(result.error || \"Authentication failed\");\n        return;\n      }\n\n      if (isSignup) {\n        alert(\"Signup successful! Please verify your email.\");\n      } else {\n        if (result.sessionToken) {\n          localStorage.setItem(\"session_token\", result.sessionToken);\n        }\n        try {\n          // Store the login password temporarily for keystore encrypt/decrypt (cleared after use)\n          sessionStorage.setItem('login_password', password);\n        } catch {}\n        onLogin(result.username, result.color);\n      }\n    } catch (error: any) {\n      alert(\"Connection error: \" + error.message);\n    }\n  };\n\n  const handleForgotPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!email.trim()) {\n      alert(\"Please enter your email address\");\n      return;\n    }\n\n    try {\n      const response = await fetch('/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      const result = await response.json();\n      if (!response.ok) {\n        alert(result.error || \"Failed to send reset email\");\n        return;\n      }\n\n      alert(result.message);\n      setIsForgotPassword(false);\n      setEmail('');\n    } catch (error: any) {\n      alert(\"Connection error: \" + error.message);\n    }\n  };\n\n  const handleResetPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!newPassword || !confirmPassword) {\n      alert(\"Please fill in both password fields\");\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n\n    if (newPassword.length < 8) {\n      alert(\"Password must be at least 8 characters long\");\n      return;\n    }\n\n    try {\n      const response = await fetch('/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          email, \n          token: resetToken, \n          newPassword \n        }),\n      });\n\n      const result = await response.json();\n      if (!response.ok) {\n        alert(result.error || \"Failed to reset password\");\n        return;\n      }\n\n      alert(result.message);\n      setIsResetPassword(false);\n      setResetToken('');\n      setNewPassword('');\n      setConfirmPassword('');\n      setEmail('');\n      // Clear URL parameters\n      window.history.replaceState({}, document.title, window.location.pathname);\n    } catch (error: any) {\n      alert(\"Connection error: \" + error.message);\n    }\n  };\n\n  // Forgot Password Form\n  if (isForgotPassword) {\n    return (\n      <div className=\"login-container\">\n        <h2>Reset Password</h2>\n        <form onSubmit={handleForgotPassword}>\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input\n              className=\"login-input\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email address\"\n              required\n              title=\"Please enter a valid email address\"\n              onInvalid={(e) => e.currentTarget.setCustomValidity('Please enter a valid email address')}\n              onInput={(e) => e.currentTarget.setCustomValidity('')}\n            />\n          </div>\n          <div className=\"login-button-group\">\n            <button className=\"login-button\" type=\"submit\">\n              Send Reset Link\n            </button>\n            <button\n              className=\"login-button\"\n              type=\"button\"\n              onClick={() => {\n                setIsForgotPassword(false);\n                setEmail('');\n              }}\n            >\n              Back to Login\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  // Reset Password Form\n  if (isResetPassword) {\n    return (\n      <div className=\"login-container\">\n        <h2>Set New Password</h2>\n        <form onSubmit={handleResetPassword}>\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input\n              className=\"login-input\"\n              type=\"email\"\n              value={email}\n              disabled\n              style={{ backgroundColor: '#f5f5f5' }}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>New Password:</label>\n            <input\n              className=\"login-input\"\n              type=\"password\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              placeholder=\"Enter your new password\"\n              required\n              minLength={8}\n              title=\"Password must be at least 8 characters\"\n              onInvalid={(e) => e.currentTarget.setCustomValidity('Password must be at least 8 characters')}\n              onInput={(e) => e.currentTarget.setCustomValidity('')}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Confirm Password:</label>\n            <input\n              className=\"login-input\"\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              placeholder=\"Confirm your new password\"\n              required\n              minLength={8}\n              title=\"Please confirm your password\"\n              onInvalid={(e) => e.currentTarget.setCustomValidity('Please confirm your password')}\n              onInput={(e) => e.currentTarget.setCustomValidity('')}\n            />\n          </div>\n          <div className=\"login-button-group\">\n            <button className=\"login-button\" type=\"submit\">\n              Reset Password\n            </button>\n            <button\n              className=\"login-button\"\n              type=\"button\"\n              onClick={() => {\n                setIsResetPassword(false);\n                setResetToken('');\n                setNewPassword('');\n                setConfirmPassword('');\n                setEmail('');\n                window.history.replaceState({}, document.title, window.location.pathname);\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  // Main Login/Signup Form\n  return (\n    <div className=\"login-container\">\n      <h2>{isSignup ? \"Sign Up\" : \"Log In\"}</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            className=\"login-input\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            required\n            title=\"Please enter a valid email address\"\n            onInvalid={(e) => e.currentTarget.setCustomValidity('Please enter a valid email address')}\n            onInput={(e) => e.currentTarget.setCustomValidity('')}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            className=\"login-input\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Enter your password\"\n            required\n            title=\"Please enter your password\"\n            onInvalid={(e) => e.currentTarget.setCustomValidity('Please enter your password')}\n            onInput={(e) => e.currentTarget.setCustomValidity('')}\n          />\n        </div>\n        \n        {!isSignup && (\n          <div className=\"forgot-password-link\">\n            <button\n              type=\"button\"\n              className=\"link-button\"\n              onClick={() => {\n                setIsForgotPassword(true);\n                setEmail('');\n                setPassword('');\n              }}\n            >\n              Forgot your password?\n            </button>\n          </div>\n        )}\n        \n        <div className=\"login-button-group\">\n          <button className=\"login-button\" type=\"submit\">\n            {isSignup ? \"Sign Up\" : \"Log In\"}\n          </button>\n          <button\n            className=\"login-button\"\n            type=\"button\"\n            onClick={() => setIsSignup(!isSignup)}\n          >\n            {isSignup ? \"Log In\" : \"Sign Up\"}\n          </button>\n        </div>\n\n        {isSignup && (\n          <>\n            <div className=\"form-group\">\n              <label>Username:</label>\n              <input\n                className=\"login-input\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder=\"Enter your username\"\n                required\n                title=\"Please enter your username\"\n                onInvalid={(e) => e.currentTarget.setCustomValidity('Please enter your username')}\n                onInput={(e) => e.currentTarget.setCustomValidity('')}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Color Selection:</label>\n              <div className=\"color-picker\">\n                {colorOptions.map((color) => (\n                  <div\n                    key={color}\n                    onClick={() => setSelectedColor(color)}\n                    style={{\n                      width: \"40px\",\n                      height: \"40px\",\n                      backgroundColor: color,\n                      border: selectedColor === color ? \"3px solid black\" : \"1px solid #888\",\n                      cursor: \"pointer\",\n                      borderRadius: \"4px\",\n                    }}\n                    title={color}\n                  />\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","import type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Gets the original marked default options.\n */\nexport function _getDefaults(): MarkedOptions {\n  return {\n    async: false,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    hooks: null,\n    pedantic: false,\n    renderer: null,\n    silent: false,\n    tokenizer: null,\n    walkTokens: null,\n  };\n}\n\nexport let _defaults = _getDefaults();\n\nexport function changeDefaults(newDefaults: MarkedOptions) {\n  _defaults = newDefaults;\n}\n","const noopTest = { exec: () => null } as unknown as RegExp;\n\nfunction edit(regex: string | RegExp, opt = '') {\n  let source = typeof regex === 'string' ? regex : regex.source;\n  const obj = {\n    replace: (name: string | RegExp, val: string | RegExp) => {\n      let valSource = typeof val === 'string' ? val : val.source;\n      valSource = valSource.replace(other.caret, '$1');\n      source = source.replace(name, valSource);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(source, opt);\n    },\n  };\n  return obj;\n}\n\nexport const other = {\n  codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n  outputLinkReplace: /\\\\([\\[\\]])/g,\n  indentCodeCompensation: /^(\\s+)(?:```)/,\n  beginningSpace: /^\\s+/,\n  endingHash: /#$/,\n  startingSpaceChar: /^ /,\n  endingSpaceChar: / $/,\n  nonSpaceChar: /[^ ]/,\n  newLineCharGlobal: /\\n/g,\n  tabCharGlobal: /\\t/g,\n  multipleSpaceGlobal: /\\s+/g,\n  blankLine: /^[ \\t]*$/,\n  doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n  blockquoteStart: /^ {0,3}>/,\n  blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n  blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n  listReplaceTabs: /^\\t+/,\n  listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n  listIsTask: /^\\[[ xX]\\] /,\n  listReplaceTask: /^\\[[ xX]\\] +/,\n  anyLine: /\\n.*\\n/,\n  hrefBrackets: /^<(.*)>$/,\n  tableDelimiter: /[:|]/,\n  tableAlignChars: /^\\||\\| *$/g,\n  tableRowBlankLine: /\\n[ \\t]*$/,\n  tableAlignRight: /^ *-+: *$/,\n  tableAlignCenter: /^ *:-+: *$/,\n  tableAlignLeft: /^ *:-+ *$/,\n  startATag: /^<a /i,\n  endATag: /^<\\/a>/i,\n  startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n  endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n  startAngleBracket: /^</,\n  endAngleBracket: />$/,\n  pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n  unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n  escapeTest: /[&<>\"']/,\n  escapeReplace: /[&<>\"']/g,\n  escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n  escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n  unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n  caret: /(^|[^\\[])\\^/g,\n  percentDecode: /%25/g,\n  findPipe: /\\|/g,\n  splitPipe: / \\|/,\n  slashPipe: /\\\\\\|/g,\n  carriageReturn: /\\r\\n|\\r/g,\n  spaceLine: /^ +$/gm,\n  notSpaceStart: /^\\S*/,\n  endingNewline: /\\n$/,\n  listItemRegex: (bull: string) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n  nextBulletRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n  hrRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n  fencesBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n  headingBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n  htmlBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n\n/**\n * Block-Level Grammar\n */\n\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n  .replace(/bull/g, bullet) // lists can interrupt\n  .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n  .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n  .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n  .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n  .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n  .replace(/\\|table/g, '') // table not in commonmark\n  .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n  .replace(/bull/g, bullet) // lists can interrupt\n  .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n  .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n  .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n  .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n  .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n  .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n  .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n  .replace('label', _blockLabel)\n  .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n  .getRegex();\n\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n  .replace(/bull/g, bullet)\n  .getRegex();\n\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n  + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit(\n  '^ {0,3}(?:' // optional indentation\n+ '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n+ '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n+ '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n+ '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n+ '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n+ '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n+ '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n+ '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n+ ')', 'i')\n  .replace('comment', _comment)\n  .replace('tag', _tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nconst paragraph = edit(_paragraph)\n  .replace('hr', hr)\n  .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n  .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n  .replace('paragraph', paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nconst blockNormal = {\n  blockquote,\n  code: blockCode,\n  def,\n  fences,\n  heading,\n  hr,\n  html,\n  lheading,\n  list,\n  newline,\n  paragraph,\n  table: noopTest,\n  text: blockText,\n};\n\ntype BlockKeys = keyof typeof blockNormal;\n\n/**\n * GFM Block Grammar\n */\n\nconst gfmTable = edit(\n  '^ *([^\\\\n ].*)\\\\n' // Header\n+ ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n+ '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n  .replace('hr', hr)\n  .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nconst blockGfm: Record<BlockKeys, RegExp> = {\n  ...blockNormal,\n  lheading: lheadingGfm,\n  table: gfmTable,\n  paragraph: edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('table', gfmTable) // interrupt paragraphs with table\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex(),\n};\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nconst blockPedantic: Record<BlockKeys, RegExp> = {\n  ...blockNormal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', _comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', lheading)\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .replace('|tag', '')\n    .getRegex(),\n};\n\n/**\n * Inline-Level Grammar\n */\n\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n  .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\n\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\n\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n  .replace(/punct/g, _punctuationGfmStrongEm)\n  .getRegex();\n\nconst emStrongRDelimAstCore =\n  '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n+ '|[^*]+(?=[^*])' // Consume to delim\n+ '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n+ '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n+ '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n+ '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n+ '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n+ '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\n\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n  .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n  .replace(/punctSpace/g, _punctuationOrSpace)\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n  .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n  .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n  .replace(/punct/g, _punctuationGfmStrongEm)\n  .getRegex();\n\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit(\n  '^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n+ '|[^_]+(?=[^_])' // Consume to delim\n+ '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n+ '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n+ '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n+ '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n+ '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n  .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n  .replace(/punctSpace/g, _punctuationOrSpace)\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n  .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n  .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n  .getRegex();\n\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit(\n  '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n  .replace('comment', _inlineComment)\n  .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:(?:[ \\t]*(?:\\n[ \\t]*)?)(title))?\\s*\\)/)\n  .replace('label', _inlineLabel)\n  .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^ \\t\\n\\x00-\\x1f]*/)\n  .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n  .getRegex();\n\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n  .replace('label', _inlineLabel)\n  .replace('ref', _blockLabel)\n  .getRegex();\n\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n  .replace('ref', _blockLabel)\n  .getRegex();\n\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n  .replace('reflink', reflink)\n  .replace('nolink', nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\nconst inlineNormal = {\n  _backpedal: noopTest, // only used for GFM url\n  anyPunctuation,\n  autolink,\n  blockSkip,\n  br,\n  code: inlineCode,\n  del: noopTest,\n  emStrongLDelim,\n  emStrongRDelimAst,\n  emStrongRDelimUnd,\n  escape,\n  link,\n  nolink,\n  punctuation,\n  reflink,\n  reflinkSearch,\n  tag,\n  text: inlineText,\n  url: noopTest,\n};\n\ntype InlineKeys = keyof typeof inlineNormal;\n\n/**\n * Pedantic Inline Grammar\n */\n\nconst inlinePedantic: Record<InlineKeys, RegExp> = {\n  ...inlineNormal,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', _inlineLabel)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', _inlineLabel)\n    .getRegex(),\n};\n\n/**\n * GFM Inline Grammar\n */\n\nconst inlineGfm: Record<InlineKeys, RegExp> = {\n  ...inlineNormal,\n  emStrongRDelimAst: emStrongRDelimAstGfm,\n  emStrongLDelim: emStrongLDelimGfm,\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n    .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\nconst inlineBreaks: Record<InlineKeys, RegExp> = {\n  ...inlineGfm,\n  br: edit(br).replace('{2,}', '*').getRegex(),\n  text: edit(inlineGfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex(),\n};\n\n/**\n * exports\n */\n\nexport const block = {\n  normal: blockNormal,\n  gfm: blockGfm,\n  pedantic: blockPedantic,\n};\n\nexport const inline = {\n  normal: inlineNormal,\n  gfm: inlineGfm,\n  breaks: inlineBreaks,\n  pedantic: inlinePedantic,\n};\n\nexport interface Rules {\n  other: typeof other\n  block: Record<BlockKeys, RegExp>\n  inline: Record<InlineKeys, RegExp>\n}\n","import { other } from './rules.ts';\n\n/**\n * Helpers\n */\nconst escapeReplacements: { [index: string]: string } = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch: string) => escapeReplacements[ch];\n\nexport function escape(html: string, encode?: boolean) {\n  if (encode) {\n    if (other.escapeTest.test(html)) {\n      return html.replace(other.escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (other.escapeTestNoEncode.test(html)) {\n      return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nexport function unescape(html: string) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(other.unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nexport function cleanUrl(href: string) {\n  try {\n    href = encodeURI(href).replace(other.percentDecode, '%');\n  } catch {\n    return null;\n  }\n  return href;\n}\n\nexport function splitCells(tableRow: string, count?: number) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n      let escaped = false;\n      let curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(other.splitPipe);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) {\n    cells.shift();\n  }\n  if (cells.length > 0 && !cells.at(-1)?.trim()) {\n    cells.pop();\n  }\n\n  if (count) {\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) cells.push('');\n    }\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nexport function rtrim(str: string, c: string, invert?: boolean) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nexport function findClosingBracket(str: string, b: string) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n\n  let level = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  if (level > 0) {\n    return -2;\n  }\n\n  return -1;\n}\n","import { _defaults } from './defaults.ts';\nimport {\n  rtrim,\n  splitCells,\n  findClosingBracket,\n} from './helpers.ts';\nimport type { Rules } from './rules.ts';\nimport type { _Lexer } from './Lexer.ts';\nimport type { Links, Tokens, Token } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\nfunction outputLink(cap: string[], link: Pick<Tokens.Link, 'href' | 'title'>, raw: string, lexer: _Lexer, rules: Rules): Tokens.Link | Tokens.Image {\n  const href = link.href;\n  const title = link.title || null;\n  const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n\n  lexer.state.inLink = true;\n  const token: Tokens.Link | Tokens.Image = {\n    type: cap[0].charAt(0) === '!' ? 'image' : 'link',\n    raw,\n    href,\n    title,\n    text,\n    tokens: lexer.inlineTokens(text),\n  };\n  lexer.state.inLink = false;\n  return token;\n}\n\nfunction indentCodeCompensation(raw: string, text: string, rules: Rules) {\n  const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(rules.other.beginningSpace);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nexport class _Tokenizer {\n  options: MarkedOptions;\n  rules!: Rules; // set by the lexer\n  lexer!: _Lexer; // set by the lexer\n\n  constructor(options?: MarkedOptions) {\n    this.options = options || _defaults;\n  }\n\n  space(src: string): Tokens.Space | undefined {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0],\n      };\n    }\n  }\n\n  code(src: string): Tokens.Code | undefined {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text,\n      };\n    }\n  }\n\n  fences(src: string): Tokens.Code | undefined {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n        text,\n      };\n    }\n  }\n\n  heading(src: string): Tokens.Heading | undefined {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (this.rules.other.endingHash.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text),\n      };\n    }\n  }\n\n  hr(src: string): Tokens.Hr | undefined {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: rtrim(cap[0], '\\n'),\n      };\n    }\n  }\n\n  blockquote(src: string): Tokens.Blockquote | undefined {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      let lines = rtrim(cap[0], '\\n').split('\\n');\n      let raw = '';\n      let text = '';\n      const tokens: Token[] = [];\n\n      while (lines.length > 0) {\n        let inBlockquote = false;\n        const currentLines = [];\n\n        let i;\n        for (i = 0; i < lines.length; i++) {\n          // get lines up to a continuation\n          if (this.rules.other.blockquoteStart.test(lines[i])) {\n            currentLines.push(lines[i]);\n            inBlockquote = true;\n          } else if (!inBlockquote) {\n            currentLines.push(lines[i]);\n          } else {\n            break;\n          }\n        }\n        lines = lines.slice(i);\n\n        const currentRaw = currentLines.join('\\n');\n        const currentText = currentRaw\n          // precede setext continuation with 4 spaces so it isn't a setext\n          .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n          .replace(this.rules.other.blockquoteSetextReplace2, '');\n        raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n        text = text ? `${text}\\n${currentText}` : currentText;\n\n        // parse blockquote lines as top level tokens\n        // merge paragraphs if this is a continuation\n        const top = this.lexer.state.top;\n        this.lexer.state.top = true;\n        this.lexer.blockTokens(currentText, tokens, true);\n        this.lexer.state.top = top;\n\n        // if there is no continuation then we are done\n        if (lines.length === 0) {\n          break;\n        }\n\n        const lastToken = tokens.at(-1);\n\n        if (lastToken?.type === 'code') {\n          // blockquote continuation cannot be preceded by a code block\n          break;\n        } else if (lastToken?.type === 'blockquote') {\n          // include continuation in nested blockquote\n          const oldToken = lastToken as Tokens.Blockquote;\n          const newText = oldToken.raw + '\\n' + lines.join('\\n');\n          const newToken = this.blockquote(newText)!;\n          tokens[tokens.length - 1] = newToken;\n\n          raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n          break;\n        } else if (lastToken?.type === 'list') {\n          // include continuation in nested list\n          const oldToken = lastToken as Tokens.List;\n          const newText = oldToken.raw + '\\n' + lines.join('\\n');\n          const newToken = this.list(newText)!;\n          tokens[tokens.length - 1] = newToken;\n\n          raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n          lines = newText.substring(tokens.at(-1)!.raw.length).split('\\n');\n          continue;\n        }\n      }\n\n      return {\n        type: 'blockquote',\n        raw,\n        tokens,\n        text,\n      };\n    }\n  }\n\n  list(src: string): Tokens.List | undefined {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list: Tokens.List = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: [],\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = this.rules.other.listItemRegex(bull);\n      let endsWithBlankLine = false;\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        let endEarly = false;\n        let raw = '';\n        let itemContents = '';\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t: string) => ' '.repeat(3 * t.length));\n        let nextLine = src.split('\\n', 1)[0];\n        let blankLine = !line.trim();\n\n        let indent = 0;\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimStart();\n        } else if (blankLine) {\n          indent = cap[1].length + 1;\n        } else {\n          indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n          const hrRegex = this.rules.other.hrRegex(indent);\n          const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n          const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n          const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            const rawLine = src.split('\\n', 1)[0];\n            let nextLineWithoutTabs;\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n              nextLineWithoutTabs = nextLine;\n            } else {\n              nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of html block\n            if (htmlBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(nextLine)) {\n              break;\n            }\n\n            if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLineWithoutTabs.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (this.rules.other.doubleBlankLine.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        let istask: RegExpExecArray | null = null;\n        let ischecked: boolean | undefined;\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = this.rules.other.listIsTask.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents,\n          tokens: [],\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      const lastItem = list.items.at(-1);\n      if (lastItem) {\n        lastItem.raw = lastItem.raw.trimEnd();\n        lastItem.text = lastItem.text.trimEnd();\n      } else {\n        // not a list since there were no items\n        return;\n      }\n      list.raw = list.raw.trimEnd();\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (let i = 0; i < list.items.length; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (let i = 0; i < list.items.length; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src: string): Tokens.HTML | undefined {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token: Tokens.HTML = {\n        type: 'html',\n        block: true,\n        raw: cap[0],\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0],\n      };\n      return token;\n    }\n  }\n\n  def(src: string): Tokens.Def | undefined {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n      const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title,\n      };\n    }\n  }\n\n  table(src: string): Tokens.Table | undefined {\n    const cap = this.rules.block.table.exec(src);\n    if (!cap) {\n      return;\n    }\n\n    if (!this.rules.other.tableDelimiter.test(cap[2])) {\n      // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n      return;\n    }\n\n    const headers = splitCells(cap[1]);\n    const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n    const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n\n    const item: Tokens.Table = {\n      type: 'table',\n      raw: cap[0],\n      header: [],\n      align: [],\n      rows: [],\n    };\n\n    if (headers.length !== aligns.length) {\n      // header and align columns must be equal, rows can be different.\n      return;\n    }\n\n    for (const align of aligns) {\n      if (this.rules.other.tableAlignRight.test(align)) {\n        item.align.push('right');\n      } else if (this.rules.other.tableAlignCenter.test(align)) {\n        item.align.push('center');\n      } else if (this.rules.other.tableAlignLeft.test(align)) {\n        item.align.push('left');\n      } else {\n        item.align.push(null);\n      }\n    }\n\n    for (let i = 0; i < headers.length; i++) {\n      item.header.push({\n        text: headers[i],\n        tokens: this.lexer.inline(headers[i]),\n        header: true,\n        align: item.align[i],\n      });\n    }\n\n    for (const row of rows) {\n      item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n        return {\n          text: cell,\n          tokens: this.lexer.inline(cell),\n          header: false,\n          align: item.align[i],\n        };\n      }));\n    }\n\n    return item;\n  }\n\n  lheading(src: string): Tokens.Heading | undefined {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1]),\n      };\n    }\n  }\n\n  paragraph(src: string): Tokens.Paragraph | undefined {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text),\n      };\n    }\n  }\n\n  text(src: string): Tokens.Text | undefined {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0]),\n      };\n    }\n  }\n\n  escape(src: string): Tokens.Escape | undefined {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: cap[1],\n      };\n    }\n  }\n\n  tag(src: string): Tokens.Tag | undefined {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        block: false,\n        text: cap[0],\n      };\n    }\n  }\n\n  link(src: string): Tokens.Link | Tokens.Image | undefined {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex === -2) {\n          // more open parens than closed\n          return;\n        }\n\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = this.rules.other.pedanticHrefTitle.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (this.rules.other.startAngleBracket.test(href)) {\n        if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n        title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n      }, cap[0], this.lexer, this.rules);\n    }\n  }\n\n  reflink(src: string, links: Links): Tokens.Link | Tokens.Image | Tokens.Text | undefined {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n      || (cap = this.rules.inline.nolink.exec(src))) {\n      const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n      const link = links[linkString.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text,\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer, this.rules);\n    }\n  }\n\n  emStrong(src: string, maskedSrc: string, prevChar = ''): Tokens.Em | Tokens.Strong | undefined {\n    let match = this.rules.inline.emStrongLDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n      // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n      const lLength = [...match[0]].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = [...rDelim].length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n        // char length can be >1 for unicode characters;\n        const lastCharLength = [...match[0]][0].length;\n        const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text),\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text),\n        };\n      }\n    }\n  }\n\n  codespan(src: string): Tokens.Codespan | undefined {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n      const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n      const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text,\n      };\n    }\n  }\n\n  br(src: string): Tokens.Br | undefined {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0],\n      };\n    }\n  }\n\n  del(src: string): Tokens.Del | undefined {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2]),\n      };\n    }\n  }\n\n  autolink(src: string): Tokens.Link | undefined {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = cap[1];\n        href = 'mailto:' + text;\n      } else {\n        text = cap[1];\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text,\n          },\n        ],\n      };\n    }\n  }\n\n  url(src: string): Tokens.Link | undefined {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = cap[0];\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n        } while (prevCapZero !== cap[0]);\n        text = cap[0];\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text,\n          },\n        ],\n      };\n    }\n  }\n\n  inlineText(src: string): Tokens.Text | undefined {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      const escaped = this.lexer.state.inRawBlock;\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        escaped,\n      };\n    }\n  }\n}\n","import { _Tokenizer } from './Tokenizer.ts';\nimport { _defaults } from './defaults.ts';\nimport { other, block, inline } from './rules.ts';\nimport type { Token, TokensList, Tokens } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Block Lexer\n */\nexport class _Lexer {\n  tokens: TokensList;\n  options: MarkedOptions;\n  state: {\n    inLink: boolean;\n    inRawBlock: boolean;\n    top: boolean;\n  };\n\n  private tokenizer: _Tokenizer;\n  private inlineQueue: { src: string, tokens: Token[] }[];\n\n  constructor(options?: MarkedOptions) {\n    // TokenList cannot be created in one go\n    this.tokens = [] as unknown as TokensList;\n    this.tokens.links = Object.create(null);\n    this.options = options || _defaults;\n    this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true,\n    };\n\n    const rules = {\n      other,\n      block: block.normal,\n      inline: inline.normal,\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline,\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src: string, options?: MarkedOptions) {\n    const lexer = new _Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src: string, options?: MarkedOptions) {\n    const lexer = new _Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src: string) {\n    src = src.replace(other.carriageReturn, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    for (let i = 0; i < this.inlineQueue.length; i++) {\n      const next = this.inlineQueue[i];\n      this.inlineTokens(next.src, next.tokens);\n    }\n    this.inlineQueue = [];\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src: string, tokens?: Token[], lastParagraphClipped?: boolean): Token[];\n  blockTokens(src: string, tokens?: TokensList, lastParagraphClipped?: boolean): TokensList;\n  blockTokens(src: string, tokens: Token[] = [], lastParagraphClipped = false) {\n    if (this.options.pedantic) {\n      src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n    }\n\n    while (src) {\n      let token: Tokens.Generic | undefined;\n\n      if (this.options.extensions?.block?.some((extTokenizer) => {\n        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.raw.length === 1 && lastToken !== undefined) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unnecessary paragraph tags\n          lastToken.raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title,\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      let cutSrc = src;\n      if (this.options.extensions?.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach((getStartIndex) => {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        const lastToken = tokens.at(-1);\n        if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = cutSrc.length !== src.length;\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src: string, tokens: Token[] = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src: string, tokens: Token[] = []): Token[] {\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match: RegExpExecArray | null = null;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index)\n              + '[' + 'a'.repeat(match[0].length - 2) + ']'\n              + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n\n    // Mask out escaped characters\n    while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n    }\n\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    let keepPrevChar = false;\n    let prevChar = '';\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      let token: Tokens.Generic | undefined;\n\n      // extensions\n      if (this.options.extensions?.inline?.some((extTokenizer) => {\n        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.type === 'text' && lastToken?.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      let cutSrc = src;\n      if (this.options.extensions?.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach((getStartIndex) => {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n","import { _defaults } from './defaults.ts';\nimport {\n  cleanUrl,\n  escape,\n} from './helpers.ts';\nimport { other } from './rules.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\nimport type { Tokens } from './Tokens.ts';\nimport type { _Parser } from './Parser.ts';\n\n/**\n * Renderer\n */\nexport class _Renderer {\n  options: MarkedOptions;\n  parser!: _Parser; // set by the parser\n  constructor(options?: MarkedOptions) {\n    this.options = options || _defaults;\n  }\n\n  space(token: Tokens.Space): string {\n    return '';\n  }\n\n  code({ text, lang, escaped }: Tokens.Code): string {\n    const langString = (lang || '').match(other.notSpaceStart)?.[0];\n\n    const code = text.replace(other.endingNewline, '') + '\\n';\n\n    if (!langString) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"language-'\n      + escape(langString)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote({ tokens }: Tokens.Blockquote): string {\n    const body = this.parser.parse(tokens);\n    return `<blockquote>\\n${body}</blockquote>\\n`;\n  }\n\n  html({ text }: Tokens.HTML | Tokens.Tag) : string {\n    return text;\n  }\n\n  heading({ tokens, depth }: Tokens.Heading): string {\n    return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n  }\n\n  hr(token: Tokens.Hr): string {\n    return '<hr>\\n';\n  }\n\n  list(token: Tokens.List): string {\n    const ordered = token.ordered;\n    const start = token.start;\n\n    let body = '';\n    for (let j = 0; j < token.items.length; j++) {\n      const item = token.items[j];\n      body += this.listitem(item);\n    }\n\n    const type = ordered ? 'ol' : 'ul';\n    const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(item: Tokens.ListItem): string {\n    let itemBody = '';\n    if (item.task) {\n      const checkbox = this.checkbox({ checked: !!item.checked });\n      if (item.loose) {\n        if (item.tokens[0]?.type === 'paragraph') {\n          item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n          if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n            item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n            item.tokens[0].tokens[0].escaped = true;\n          }\n        } else {\n          item.tokens.unshift({\n            type: 'text',\n            raw: checkbox + ' ',\n            text: checkbox + ' ',\n            escaped: true,\n          });\n        }\n      } else {\n        itemBody += checkbox + ' ';\n      }\n    }\n\n    itemBody += this.parser.parse(item.tokens, !!item.loose);\n\n    return `<li>${itemBody}</li>\\n`;\n  }\n\n  checkbox({ checked }: Tokens.Checkbox): string {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\">';\n  }\n\n  paragraph({ tokens }: Tokens.Paragraph): string {\n    return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n  }\n\n  table(token: Tokens.Table): string {\n    let header = '';\n\n    // header\n    let cell = '';\n    for (let j = 0; j < token.header.length; j++) {\n      cell += this.tablecell(token.header[j]);\n    }\n    header += this.tablerow({ text: cell });\n\n    let body = '';\n    for (let j = 0; j < token.rows.length; j++) {\n      const row = token.rows[j];\n\n      cell = '';\n      for (let k = 0; k < row.length; k++) {\n        cell += this.tablecell(row[k]);\n      }\n\n      body += this.tablerow({ text: cell });\n    }\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow({ text }: Tokens.TableRow): string {\n    return `<tr>\\n${text}</tr>\\n`;\n  }\n\n  tablecell(token: Tokens.TableCell): string {\n    const content = this.parser.parseInline(token.tokens);\n    const type = token.header ? 'th' : 'td';\n    const tag = token.align\n      ? `<${type} align=\"${token.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   */\n  strong({ tokens }: Tokens.Strong): string {\n    return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n  }\n\n  em({ tokens }: Tokens.Em): string {\n    return `<em>${this.parser.parseInline(tokens)}</em>`;\n  }\n\n  codespan({ text }: Tokens.Codespan): string {\n    return `<code>${escape(text, true)}</code>`;\n  }\n\n  br(token: Tokens.Br): string {\n    return '<br>';\n  }\n\n  del({ tokens }: Tokens.Del): string {\n    return `<del>${this.parser.parseInline(tokens)}</del>`;\n  }\n\n  link({ href, title, tokens }: Tokens.Link): string {\n    const text = this.parser.parseInline(tokens);\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return text;\n    }\n    href = cleanHref;\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + (escape(title)) + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image({ href, title, text, tokens }: Tokens.Image): string {\n    if (tokens) {\n      text = this.parser.parseInline(tokens, this.parser.textRenderer);\n    }\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return escape(text);\n    }\n    href = cleanHref;\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${escape(title)}\"`;\n    }\n    out += '>';\n    return out;\n  }\n\n  text(token: Tokens.Text | Tokens.Escape) : string {\n    return 'tokens' in token && token.tokens\n      ? this.parser.parseInline(token.tokens)\n      : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n  }\n}\n","import type { Tokens } from './Tokens.ts';\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nexport class _TextRenderer {\n  // no need for block level renderers\n  strong({ text }: Tokens.Strong) {\n    return text;\n  }\n\n  em({ text }: Tokens.Em) {\n    return text;\n  }\n\n  codespan({ text }: Tokens.Codespan) {\n    return text;\n  }\n\n  del({ text }: Tokens.Del) {\n    return text;\n  }\n\n  html({ text }: Tokens.HTML | Tokens.Tag) {\n    return text;\n  }\n\n  text({ text }: Tokens.Text | Tokens.Escape | Tokens.Tag) {\n    return text;\n  }\n\n  link({ text }: Tokens.Link) {\n    return '' + text;\n  }\n\n  image({ text }: Tokens.Image) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n","import { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _defaults } from './defaults.ts';\nimport type { MarkedToken, Token, Tokens } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Parsing & Compiling\n */\nexport class _Parser {\n  options: MarkedOptions;\n  renderer: _Renderer;\n  textRenderer: _TextRenderer;\n  constructor(options?: MarkedOptions) {\n    this.options = options || _defaults;\n    this.options.renderer = this.options.renderer || new _Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.renderer.parser = this;\n    this.textRenderer = new _TextRenderer();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens: Token[], options?: MarkedOptions) {\n    const parser = new _Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens: Token[], options?: MarkedOptions) {\n    const parser = new _Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens: Token[], top = true): string {\n    let out = '';\n\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const genericToken = anyToken as Tokens.Generic;\n        const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      const token = anyToken as MarkedToken;\n\n      switch (token.type) {\n        case 'space': {\n          out += this.renderer.space(token);\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr(token);\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(token);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token);\n          continue;\n        }\n        case 'table': {\n          out += this.renderer.table(token);\n          continue;\n        }\n        case 'blockquote': {\n          out += this.renderer.blockquote(token);\n          continue;\n        }\n        case 'list': {\n          out += this.renderer.list(token);\n          continue;\n        }\n        case 'html': {\n          out += this.renderer.html(token);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(token);\n          continue;\n        }\n        case 'text': {\n          let textToken = token;\n          let body = this.renderer.text(textToken);\n          while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n            textToken = tokens[++i] as Tokens.Text;\n            body += '\\n' + this.renderer.text(textToken);\n          }\n          if (top) {\n            out += this.renderer.paragraph({\n              type: 'paragraph',\n              raw: body,\n              text: body,\n              tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n            });\n          } else {\n            out += body;\n          }\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return '';\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens: Token[], renderer: _Renderer | _TextRenderer = this.renderer): string {\n    let out = '';\n\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      const token = anyToken as MarkedToken;\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token);\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(token);\n          break;\n        }\n        case 'em': {\n          out += renderer.em(token);\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token);\n          break;\n        }\n        case 'br': {\n          out += renderer.br(token);\n          break;\n        }\n        case 'del': {\n          out += renderer.del(token);\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return '';\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n","import { _defaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, TokensList } from './Tokens.ts';\n\nexport class _Hooks {\n  options: MarkedOptions;\n  block?: boolean;\n\n  constructor(options?: MarkedOptions) {\n    this.options = options || _defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess',\n    'processAllTokens',\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown: string) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html: string) {\n    return html;\n  }\n\n  /**\n   * Process all tokens before walk tokens\n   */\n  processAllTokens(tokens: Token[] | TokensList) {\n    return tokens;\n  }\n\n  /**\n   * Provide function to tokenize markdown\n   */\n  provideLexer() {\n    return this.block ? _Lexer.lex : _Lexer.lexInline;\n  }\n\n  /**\n   * Provide function to parse tokens\n   */\n  provideParser() {\n    return this.block ? _Parser.parse : _Parser.parseInline;\n  }\n}\n","import { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { Marked } from './Instance.ts';\nimport {\n  _getDefaults,\n  changeDefaults,\n  _defaults,\n} from './defaults.ts';\nimport type { MarkedExtension, MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, TokensList } from './Tokens.ts';\nimport type { MaybePromise } from './Instance.ts';\n\nconst markedInstance = new Marked();\n\n/**\n * Compiles markdown to HTML asynchronously.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options, having async: true\n * @return Promise of string of compiled HTML\n */\nexport function marked(src: string, options: MarkedOptions & { async: true }): Promise<string>;\n\n/**\n * Compiles markdown to HTML.\n *\n * @param src String of markdown source to be compiled\n * @param options Optional hash of options\n * @return String of compiled HTML. Will be a Promise of string if async is set to true by any extensions.\n */\nexport function marked(src: string, options: MarkedOptions & { async: false }): string;\nexport function marked(src: string, options: MarkedOptions & { async: true }): Promise<string>;\nexport function marked(src: string, options?: MarkedOptions | null): string | Promise<string>;\nexport function marked(src: string, opt?: MarkedOptions | null): string | Promise<string> {\n  return markedInstance.parse(src, opt);\n}\n\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\nmarked.setOptions = function(options: MarkedOptions) {\n  markedInstance.setOptions(options);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\n\nmarked.defaults = _defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args: MarkedExtension[]) {\n  markedInstance.use(...args);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens: Token[] | TokensList, callback: (token: Token) => MaybePromise | MaybePromise[]) {\n  return markedInstance.walkTokens(tokens, callback);\n};\n\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\n\nexport const options = marked.options;\nexport const setOptions = marked.setOptions;\nexport const use = marked.use;\nexport const walkTokens = marked.walkTokens;\nexport const parseInline = marked.parseInline;\nexport const parse = marked;\nexport const parser = _Parser.parse;\nexport const lexer = _Lexer.lex;\nexport { _defaults as defaults, _getDefaults as getDefaults } from './defaults.ts';\nexport { _Lexer as Lexer } from './Lexer.ts';\nexport { _Parser as Parser } from './Parser.ts';\nexport { _Tokenizer as Tokenizer } from './Tokenizer.ts';\nexport { _Renderer as Renderer } from './Renderer.ts';\nexport { _TextRenderer as TextRenderer } from './TextRenderer.ts';\nexport { _Hooks as Hooks } from './Hooks.ts';\nexport { Marked } from './Instance.ts';\nexport type * from './MarkedOptions.ts';\nexport type * from './Tokens.ts';\n","import { _getDefaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { escape } from './helpers.ts';\nimport type { MarkedExtension, MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, Tokens, TokensList } from './Tokens.ts';\n\nexport type MaybePromise = void | Promise<void>;\n\ntype UnknownFunction = (...args: unknown[]) => unknown;\ntype GenericRendererFunction = (...args: unknown[]) => string | false;\n\nexport class Marked {\n  defaults = _getDefaults();\n  options = this.setOptions;\n\n  parse = this.parseMarkdown(true);\n  parseInline = this.parseMarkdown(false);\n\n  Parser = _Parser;\n  Renderer = _Renderer;\n  TextRenderer = _TextRenderer;\n  Lexer = _Lexer;\n  Tokenizer = _Tokenizer;\n  Hooks = _Hooks;\n\n  constructor(...args: MarkedExtension[]) {\n    this.use(...args);\n  }\n\n  /**\n   * Run callback for every token\n   */\n  walkTokens(tokens: Token[] | TokensList, callback: (token: Token) => MaybePromise | MaybePromise[]) {\n    let values: MaybePromise[] = [];\n    for (const token of tokens) {\n      values = values.concat(callback.call(this, token));\n      switch (token.type) {\n        case 'table': {\n          const tableToken = token as Tokens.Table;\n          for (const cell of tableToken.header) {\n            values = values.concat(this.walkTokens(cell.tokens, callback));\n          }\n          for (const row of tableToken.rows) {\n            for (const cell of row) {\n              values = values.concat(this.walkTokens(cell.tokens, callback));\n            }\n          }\n          break;\n        }\n        case 'list': {\n          const listToken = token as Tokens.List;\n          values = values.concat(this.walkTokens(listToken.items, callback));\n          break;\n        }\n        default: {\n          const genericToken = token as Tokens.Generic;\n          if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n            this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n              const tokens = genericToken[childTokens].flat(Infinity) as Token[] | TokensList;\n              values = values.concat(this.walkTokens(tokens, callback));\n            });\n          } else if (genericToken.tokens) {\n            values = values.concat(this.walkTokens(genericToken.tokens, callback));\n          }\n        }\n      }\n    }\n    return values;\n  }\n\n  use(...args: MarkedExtension[]) {\n    const extensions: MarkedOptions['extensions'] = this.defaults.extensions || { renderers: {}, childTokens: {} };\n\n    args.forEach((pack) => {\n      // copy options to new object\n      const opts = { ...pack } as MarkedOptions;\n\n      // set async to true if it was set to true before\n      opts.async = this.defaults.async || opts.async || false;\n\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        pack.extensions.forEach((ext) => {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if ('renderer' in ext) { // Renderer extensions\n            const prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function(...args) {\n                let ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if ('tokenizer' in ext) { // Tokenizer Extensions\n            if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            const extLevel = extensions[ext.level];\n            if (extLevel) {\n              extLevel.unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) { // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n\n      // ==-- Parse \"overwrite\" extensions --== //\n      if (pack.renderer) {\n        const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n        for (const prop in pack.renderer) {\n          if (!(prop in renderer)) {\n            throw new Error(`renderer '${prop}' does not exist`);\n          }\n          if (['options', 'parser'].includes(prop)) {\n            // ignore options property\n            continue;\n          }\n          const rendererProp = prop as Exclude<keyof _Renderer, 'options' | 'parser'>;\n          const rendererFunc = pack.renderer[rendererProp] as GenericRendererFunction;\n          const prevRenderer = renderer[rendererProp] as GenericRendererFunction;\n          // Replace renderer with func to run extension, but fall back if false\n          renderer[rendererProp] = (...args: unknown[]) => {\n            let ret = rendererFunc.apply(renderer, args);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n            return ret || '';\n          };\n        }\n        opts.renderer = renderer;\n      }\n      if (pack.tokenizer) {\n        const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n        for (const prop in pack.tokenizer) {\n          if (!(prop in tokenizer)) {\n            throw new Error(`tokenizer '${prop}' does not exist`);\n          }\n          if (['options', 'rules', 'lexer'].includes(prop)) {\n            // ignore options, rules, and lexer properties\n            continue;\n          }\n          const tokenizerProp = prop as Exclude<keyof _Tokenizer, 'options' | 'rules' | 'lexer'>;\n          const tokenizerFunc = pack.tokenizer[tokenizerProp] as UnknownFunction;\n          const prevTokenizer = tokenizer[tokenizerProp] as UnknownFunction;\n          // Replace tokenizer with func to run extension, but fall back if false\n          // @ts-expect-error cannot type tokenizer function dynamically\n          tokenizer[tokenizerProp] = (...args: unknown[]) => {\n            let ret = tokenizerFunc.apply(tokenizer, args);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n            return ret;\n          };\n        }\n        opts.tokenizer = tokenizer;\n      }\n\n      // ==-- Parse Hooks extensions --== //\n      if (pack.hooks) {\n        const hooks = this.defaults.hooks || new _Hooks();\n        for (const prop in pack.hooks) {\n          if (!(prop in hooks)) {\n            throw new Error(`hook '${prop}' does not exist`);\n          }\n          if (['options', 'block'].includes(prop)) {\n            // ignore options and block properties\n            continue;\n          }\n          const hooksProp = prop as Exclude<keyof _Hooks, 'options' | 'block'>;\n          const hooksFunc = pack.hooks[hooksProp] as UnknownFunction;\n          const prevHook = hooks[hooksProp] as UnknownFunction;\n          if (_Hooks.passThroughHooks.has(prop)) {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = (arg: unknown) => {\n              if (this.defaults.async) {\n                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                  return prevHook.call(hooks, ret);\n                });\n              }\n\n              const ret = hooksFunc.call(hooks, arg);\n              return prevHook.call(hooks, ret);\n            };\n          } else {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = (...args: unknown[]) => {\n              let ret = hooksFunc.apply(hooks, args);\n              if (ret === false) {\n                ret = prevHook.apply(hooks, args);\n              }\n              return ret;\n            };\n          }\n        }\n        opts.hooks = hooks;\n      }\n\n      // ==-- Parse WalkTokens extensions --== //\n      if (pack.walkTokens) {\n        const walkTokens = this.defaults.walkTokens;\n        const packWalktokens = pack.walkTokens;\n        opts.walkTokens = function(token) {\n          let values: MaybePromise[] = [];\n          values.push(packWalktokens.call(this, token));\n          if (walkTokens) {\n            values = values.concat(walkTokens.call(this, token));\n          }\n          return values;\n        };\n      }\n\n      this.defaults = { ...this.defaults, ...opts };\n    });\n\n    return this;\n  }\n\n  setOptions(opt: MarkedOptions) {\n    this.defaults = { ...this.defaults, ...opt };\n    return this;\n  }\n\n  lexer(src: string, options?: MarkedOptions) {\n    return _Lexer.lex(src, options ?? this.defaults);\n  }\n\n  parser(tokens: Token[], options?: MarkedOptions) {\n    return _Parser.parse(tokens, options ?? this.defaults);\n  }\n\n  private parseMarkdown(blockType: boolean) {\n    type overloadedParse = {\n      (src: string, options: MarkedOptions & { async: true }): Promise<string>;\n      (src: string, options: MarkedOptions & { async: false }): string;\n      (src: string, options?: MarkedOptions | null): string | Promise<string>;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const parse: overloadedParse = (src: string, options?: MarkedOptions | null): any => {\n      const origOpt = { ...options };\n      const opt = { ...this.defaults, ...origOpt };\n\n      const throwError = this.onError(!!opt.silent, !!opt.async);\n\n      // throw error if an extension set async to true but parse was called with async: false\n      if (this.defaults.async === true && origOpt.async === false) {\n        return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n      }\n\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type '\n          + Object.prototype.toString.call(src) + ', string expected'));\n      }\n\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n        opt.hooks.block = blockType;\n      }\n\n      const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n      const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n          .then(src => lexer(src, opt))\n          .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n          .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n          .then(tokens => parser(tokens, opt))\n          .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n          .catch(throwError);\n      }\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src) as string;\n        }\n        let tokens = lexer(src, opt);\n        if (opt.hooks) {\n          tokens = opt.hooks.processAllTokens(tokens);\n        }\n        if (opt.walkTokens) {\n          this.walkTokens(tokens, opt.walkTokens);\n        }\n        let html = parser(tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html) as string;\n        }\n        return html;\n      } catch(e) {\n        return throwError(e as Error);\n      }\n    };\n\n    return parse;\n  }\n\n  private onError(silent: boolean, async: boolean) {\n    return (e: Error): string | Promise<string> => {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (silent) {\n        const msg = '<p>An error occurred:</p><pre>'\n          + escape(e.message + '', true)\n          + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        return msg;\n      }\n\n      if (async) {\n        return Promise.reject(e);\n      }\n      throw e;\n    };\n  }\n}\n","import React from \"react\";\nimport { marked } from \"marked\";\nimport \"./App.css\";\n\ntype Props = {\n  setShowAbout: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst aboutContent = `\n# 🎮 BlockMiningGame\n\nMine blocks, battle in Warzone, and grow your territory. Your Volore balance is always equal to your mined blocks.\n\n## 🎯 Core Rules\n\n- **1 Block = 1 Volore**. Your total Volore always matches your total mined blocks in Digzone.\n- **Daily Mining Limit**: You can dig up to **20 blocks/day**.\n- **Castle Bonus Timing**: On your first dig of the day, your castles auto-mine as a **single aggregated bonus** (amount = number of your castles). This appears in Activity as one MINT entry, not many separate +1 lines.\n- **Dynamic Grid**: The grid expands automatically when it fills up.\n\n## ⛏️ Digzone (Mining)\n\n- Tap/click to mine empty blocks and claim them in your color.\n- Each successful dig increases your mined block count by 1 (and thus your Volore by 1).\n\n## 🏰 Castles\n\n- A block with **defense ≥ 10** becomes a **Castle** (black border + golden glow).\n- **Auto-Mining (Aggregated)**: Each Castle contributes **+1/day**; the sum is minted at once on your first dig of the day (reason \\'castle_bonus\\').\n- **First-Placement Protection**: Castles cannot be attacked on a player's very first placement.\n\n## ⚔️ Warzone (PvP)\n\n- **First Placement**: Your first Warzone block can be placed anywhere.\n- **Neighbor Rule**: After your first placement, new placements/attacks must be adjacent to your existing Warzone blocks.\n- **Support (Defend)**: Supporting your own block increases its defense by +1. This consumes your stock but does not change your total mined blocks.\n- **Attack**: Attacking an opponent's block reduces its defense by 1 (ownerless at 0).\n- **Attack Cost (Invariant)**: Each attack causes both attacker and defender to lose 1 mined block (most recent). The invariant (Volore = Mined Blocks) always holds.\n\n## 💼 Transfers\n\n- Send Volore to another registered user by entering their Volchain address.\n- Sending N Volore moves your last N mined Digzone blocks to the receiver. Both balances remain equal to their mined blocks.\n\n## 📦 Stock, Used, Available\n\n- **Used Volore** (Warzone): Sum of the defense values of your Warzone blocks.\n- **Available Volore**: (Mined − Used). This is how many new Warzone actions (placements/supports) you can perform.\n\n## 📊 Stats & Activity\n\n- **Top Volore Miners**: Leaderboard based on mined blocks.\n- **Volchain Activity**: Shows mint/burn/transfer events with usernames. Castle bonus appears as a single aggregated MINT.\n- **Consistency**: UI and VolChain totals are verified; supply equals mined. System verification runs against Digzone + GridB + VolChain.\n\n## 🔐 Accounts & Wallet\n\n- No external wallet needed. Your **Volchain address** is managed in Settings and used for in-game transfers.\n- Email verification and session-based login are supported.\n- Technical: Requests include chain and operation IDs automatically for safety.\n\n---\n\nStart mining, build castles, and dominate the Warzone!\n`;\n\nconst About: React.FC<Props> = ({ setShowAbout }) => {\n  const htmlContent = marked.parse(aboutContent) as string;\n\n  return (\n    <div className=\"settings-modal\">\n      <div className=\"settings-content\">\n        <div className=\"modal-header\">\n          <h3 className=\"modal-title\">🎮 BlockGame Info</h3>\n          <button \n            className=\"modal-close-x\" \n            onClick={() => setShowAbout(false)}\n            aria-label=\"Close\"\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div \n            dangerouslySetInnerHTML={{ __html: htmlContent }}\n            style={{\n              textAlign: 'left',\n              lineHeight: '1.6',\n              color: '#333',\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport { withRetry } from './components/request';\nimport { createPortal } from \"react-dom\";\nimport \"./Grid.css\";\n\n// Removed unused function\n\nfunction getNeighbors(index: number, totalBlocks: number, columnCount: number): number[] {\n  const neighbors: number[] = [];\n  const col = index % columnCount;\n\n  // Top\n  if (index >= columnCount) {\n    neighbors.push(index - columnCount);\n  }\n\n  // Bottom\n  const bottomNeighbor = index + columnCount;\n  if (bottomNeighbor < totalBlocks) {\n    neighbors.push(bottomNeighbor);\n  }\n\n  // Left\n  if (col > 0) {\n    neighbors.push(index - 1);\n  }\n\n  // Right\n  // Check that we are not on the rightmost column\n  if (col < columnCount - 1) {\n    const rightNeighbor = index + 1;\n    // and the neighbor is within grid bounds\n    if (rightNeighbor < totalBlocks) {\n        neighbors.push(rightNeighbor);\n    }\n  }\n\n  return neighbors;\n}\n\ntype Props = {\n  totalBlocks: number;\n  username: string;\n  userColor: string;\n  tokenBalance: number;\n  setTokenBalance: React.Dispatch<React.SetStateAction<number>>;\n  setBlockData: React.Dispatch<React.SetStateAction<any[]>>;\n};\n\nconst GridB: React.FC<Props> = ({ totalBlocks, username, userColor, tokenBalance, setTokenBalance, setBlockData }) => {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  \n  // Mobile detection function\n  const isMobile = useCallback(() => windowSize.width <= 800, [windowSize.width]);\n  \n  // Warzone her zaman 50 sütun olmalı\n  const columnCount = 50;\n  const rows = Math.ceil(totalBlocks / columnCount);\n  const blocks = Array.from({ length: totalBlocks }, (_, i) => i);\n\n  const [gridB, setGridB] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [userColors, setUserColors] = useState<{ [username: string]: string }>({});\n  const [showBlockModal, setShowBlockModal] = useState<boolean>(false);\n  const [selectedBlockIndex, setSelectedBlockIndex] = useState<number | null>(null);\n  const [warMode, setWarMode] = useState<'stake' | 'unstake'>('stake');\n  \n  const getModalWidth = () => {\n    const screenWidth = window.screen.width || window.innerWidth;\n    return screenWidth < 400 ? '280px' : '300px';\n  };\n  \n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const isAndroid = /android/i.test(navigator.userAgent);\n  const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n  \n  useEffect(() => {\n    if (!showBlockModal) return;\n    \n    const originalBodyStyle = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n    document.body.style.position = 'fixed';\n    document.body.style.width = '100%';\n    \n    const forceModalCSS = () => {\n      const overlay = document.querySelector('[style*=\"z-index: 99999\"]');\n      const content = document.querySelector('[style*=\"border-radius: 12px\"][style*=\"background\"]');\n      \n      if (overlay) {\n        const overlayEl = overlay as HTMLElement;\n        overlayEl.style.position = 'fixed';\n        overlayEl.style.top = '0px';\n        overlayEl.style.left = '0px';\n        \n        if (isIOS) {\n          overlayEl.style.width = `${window.screen.width}px`;\n          overlayEl.style.height = `${window.screen.height}px`;\n          overlayEl.style.right = '0px';\n          overlayEl.style.bottom = '0px';\n          overlayEl.style.setProperty('-webkit-transform', 'none');\n          overlayEl.style.setProperty('-webkit-zoom', 'normal');\n          overlayEl.style.setProperty('zoom', 'normal');\n        } else if (isAndroid) {\n          const viewportHeight = window.visualViewport?.height || window.innerHeight;\n          overlayEl.style.width = '100vw';\n          overlayEl.style.height = `${viewportHeight}px`;\n          overlayEl.style.setProperty('zoom', '1');\n          overlayEl.style.setProperty('transform', 'none');\n        } else {\n          overlayEl.style.width = '100vw';\n          overlayEl.style.height = '100vh';\n          overlayEl.style.setProperty('zoom', '1');\n        }\n        \n        overlayEl.style.transform = 'none';\n        overlayEl.style.zIndex = '2147483647';\n        overlayEl.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n        overlayEl.style.display = 'flex';\n        overlayEl.style.justifyContent = 'center';\n        overlayEl.style.alignItems = 'center';\n      }\n      \n      if (content) {\n        const contentEl = content as HTMLElement;\n        const modalWidth = isIOS ? (window.screen.width < 400 ? '280px' : '300px') : getModalWidth();\n        \n        contentEl.style.width = modalWidth;\n        contentEl.style.minWidth = modalWidth;\n        contentEl.style.maxWidth = modalWidth;\n        contentEl.style.transform = 'none';\n        contentEl.style.fontSize = '14px';\n        contentEl.style.position = 'relative';\n        contentEl.style.backgroundColor = 'white';\n        contentEl.style.padding = '20px';\n        contentEl.style.borderRadius = '12px';\n        contentEl.style.textAlign = 'center';\n        contentEl.style.margin = '0';\n        contentEl.style.border = 'none';\n        contentEl.style.outline = 'none';\n        \n        if (isIOS) {\n          contentEl.style.setProperty('-webkit-transform', 'none');\n          contentEl.style.setProperty('-webkit-zoom', 'normal');\n          contentEl.style.setProperty('zoom', 'normal');\n          contentEl.style.setProperty('will-change', 'auto');\n        } else {\n          contentEl.style.setProperty('zoom', '1');\n        }\n      }\n    };\n    \n    const timer = setInterval(forceModalCSS, isSafari ? 16 : 50);\n    const observer = new MutationObserver(forceModalCSS);\n    \n    setTimeout(() => {\n      const overlay = document.querySelector('[style*=\"z-index: 99999\"]');\n      const content = document.querySelector('[style*=\"border-radius: 12px\"][style*=\"background\"]');\n      \n      if (overlay) {\n        observer.observe(overlay, { \n          attributes: true, \n          attributeFilter: ['style', 'class'] \n        });\n      }\n      \n      if (content) {\n        observer.observe(content, { \n          attributes: true, \n          attributeFilter: ['style', 'class'] \n        });\n      }\n    }, 10);\n    \n    return () => {\n      clearInterval(timer);\n      observer.disconnect();\n      document.body.style.overflow = originalBodyStyle;\n      document.body.style.position = '';\n      document.body.style.width = '';\n    };\n  }, [showBlockModal, isAndroid, isIOS, isSafari]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const calculateBlockSize = useCallback(() => {\n    const { width } = windowSize;\n    // Ekranın %95'ini kullan ve gap'leri hesaba kat\n    const availableWidth = width * 0.95;\n    const totalGaps = (columnCount - 1) * 0.5; // Her gap 0.5px\n    const blockSize = Math.floor((availableWidth - totalGaps) / columnCount);\n    // Minimum blok boyutu 4px, maksimum 20px\n    return Math.min(Math.max(blockSize, 4), 20);\n  }, [windowSize, columnCount]);\n\n  const blockWidth = calculateBlockSize();\n\n  const fetchGridB = async () => {\n    setLoading(true);\n    const res = await fetch('/gridb');\n    const data = await res.json();\n    setGridB(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchGridB();\n  }, [totalBlocks]);\n\n  useEffect(() => {\n    const uniqueUsers = Array.from(new Set(gridB.filter(b => b && typeof b === 'object' && b.owner).map(b => b.owner)));\n    Promise.all(uniqueUsers.map(async (u) => {\n      const res = await fetch(`/auth/user?username=${u}`);\n      const data = await res.json();\n      return [u, data.color];\n    })).then(results => {\n      const colorMap: { [username: string]: string } = {};\n      results.forEach(([u, color]) => { colorMap[u] = color; });\n      setUserColors(colorMap);\n    });\n  }, [gridB]);\n\n  const userBlocksInGridB = gridB.filter(b => b && typeof b === 'object' && b.owner === username);\n  const totalDefenseUsed = userBlocksInGridB.reduce((sum, b) => sum + (Number(b.defense || 1) || 1), 0);\n  const currentStock = tokenBalance - totalDefenseUsed;\n\n  const handleBlockClick = useCallback((index: number) => {\n    if (loading) return;\n    const selectedBlock = (gridB[index] && typeof gridB[index] === 'object') ? gridB[index] : null;\n\n    if (warMode === 'stake') {\n      const realTimeCurrentStock = tokenBalance - totalDefenseUsed;\n      const needsStock = !selectedBlock?.owner || selectedBlock.owner !== username;\n      if (needsStock && realTimeCurrentStock <= 0) {\n        alert('⚠️ No available blocks for war! Mine more blocks in Digzone first.');\n        return;\n      }\n\n      if (!selectedBlock?.owner) {\n        const userHasNoBlocksInGridB = gridB.filter(b => b && typeof b === 'object' && b.owner === username).length === 0;\n        const isFirstPlacement = userHasNoBlocksInGridB;\n        if (!isFirstPlacement) {\n          const neighbors = getNeighbors(index, totalBlocks, columnCount);\n          const hasNeighbor = neighbors.some(n => gridB[n] && typeof gridB[n] === 'object' && gridB[n].owner === username);\n          if (!hasNeighbor) {\n            alert('⚠️ You must place blocks adjacent to your existing blocks! Expand step by step.');\n            return;\n          }\n        }\n      }\n    }\n\n    setSelectedBlockIndex(index);\n    setShowBlockModal(true);\n  }, [loading, tokenBalance, totalDefenseUsed, gridB, username, totalBlocks, columnCount, warMode]);\n\n  const handleBlockAction = useCallback(async (index: number) => {\n    if (loading) return;\n    \n    const realTimeCurrentStock = tokenBalance - totalDefenseUsed;\n    const selectedBlock = (gridB[index] && typeof gridB[index] === 'object') ? gridB[index] : null;\n    const needsStock = !selectedBlock?.owner || selectedBlock.owner !== username;\n    \n    if (needsStock && realTimeCurrentStock <= 0) {\n      alert('⚠️ No available blocks for war! Mine more blocks in Digzone first.');\n      setShowBlockModal(false);\n      return;\n    }\n    \n    if (!selectedBlock?.owner) {\n      const userHasNoBlocksInGridB = gridB.filter(b => b && typeof b === 'object' && b.owner === username).length === 0;\n      const isFirstPlacement = userHasNoBlocksInGridB;\n      \n      if (!isFirstPlacement) {\n        const neighbors = getNeighbors(index, totalBlocks, columnCount);\n        const hasNeighbor = neighbors.some(n => gridB[n] && typeof gridB[n] === 'object' && gridB[n].owner === username);\n        if (!hasNeighbor) {\n          alert('⚠️ You must place blocks adjacent to your existing blocks! Expand step by step.');\n          setShowBlockModal(false);\n          return;\n        }\n      }\n    }\n    \n    setShowBlockModal(false);\n    setLoading(true);\n    const prevOwner = selectedBlock?.owner || null;\n    const prevDefense = typeof selectedBlock?.defense === 'number' ? selectedBlock!.defense : (selectedBlock?.owner ? 1 : 0);\n    \n    await new Promise(resolve => setTimeout(resolve, 100));\n    \n    // Retry mechanism for guard system failures\n    let attempts = 0;\n    const maxAttempts = 3;\n    \n    while (attempts < maxAttempts) {\n      try {\n        const res = await withRetry(`/gridb/${index}`, { \n          method: 'PATCH', \n          headers: { 'Content-Type': 'application/json' },\n          body: { action: 'attack' }\n        }, 1);\n        \n        if (res.ok) {\n          const data = await res.json();\n          \n          // Handle new attack response format\n          if (data.ok && data.gridb) {\n            setGridB(data.gridb);\n            console.log(`[ATTACK] Success: ${data.mode}, effects:`, data.effects);\n          } else if (Array.isArray(data)) {\n            // Legacy format\n            setGridB(data);\n          } else {\n            console.warn('[ATTACK] Unexpected response format:', data);\n            setGridB(data);\n          }\n          \n          // If target cell appears unchanged in returned payload, force a fresh read\n          const gridData = data.gridb || data;\n          try {\n            const updated = (gridData[index] && typeof gridData[index] === 'object') ? gridData[index] : null;\n            const updatedOwner = updated?.owner || null;\n            const updatedDefense = typeof updated?.defense === 'number' ? updated.defense : (updated?.owner ? 1 : 0);\n            const changed = (updatedOwner !== prevOwner) || (updatedDefense !== prevDefense);\n            if (!changed) {\n              const gbRes = await withRetry('/gridb', { method: 'GET', requireOpId: false }, 1);\n              if (gbRes.ok) {\n                const gb = await gbRes.json();\n                setGridB(gb);\n              }\n            }\n          } catch {}\n          \n          try {\n            const gridRes = await withRetry('/grid', { method: 'GET', requireOpId: false }, 1);\n            if (gridRes.ok) {\n              const gridData = await gridRes.json();\n              setBlockData(gridData);\n              const userGridBlocks = gridData.filter((block: any) => block.dugBy === username);\n              const newTokenBalance = userGridBlocks.length;\n              setTokenBalance(newTokenBalance);\n              console.log(`🔄 Token balance updated: ${tokenBalance} → ${newTokenBalance}`);\n            }\n          } catch (error) {\n            console.error('Failed to update grid data:', error);\n          }\n          \n          const ownersSource = Array.isArray(gridData)\n            ? gridData\n            : (Array.isArray((data as any)?.gridb) ? (data as any).gridb : []);\n          const uniqueOwners = Array.from(new Set(\n            ownersSource\n              .filter((b: any) => b && typeof b === 'object' && b.owner)\n              .map((b: any) => b.owner)\n          )) as string[];\n          const colorPromises = uniqueOwners.map(async (owner: string) => {\n            try {\n              const userRes = await withRetry(`/auth/user?username=${owner}`, { method: 'GET', requireOpId: false }, 1);\n              if (userRes.ok) {\n                const userData = await userRes.json();\n                return { [owner]: userData.color };\n              }\n            } catch (e) {\n              console.log('Color fetch failed for', owner);\n            }\n            return {};\n          });\n          \n          const colors = await Promise.all(colorPromises);\n          const newUserColors = colors.reduce((acc, colorObj) => ({ ...acc, ...colorObj }), {});\n          setUserColors(prev => ({ ...prev, ...newUserColors }));\n          \n          setLoading(false);\n          return; // Success, exit retry loop\n        } else {\n          const err = await res.json();\n          if (err.error === 'guard_system_failed') {\n            attempts++;\n            if (attempts < maxAttempts) {\n              console.log(`Guard system busy, retrying... (${attempts}/${maxAttempts})`);\n              await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second before retry\n              continue;\n            } else {\n              alert('⚠️ System temporarily busy. Please try again in a moment.');\n            }\n          } else {\n            alert(err.error || 'Block action failed');\n          }\n          break;\n        }\n      } catch (error) {\n        attempts++;\n        console.error('Request failed:', error);\n        if (attempts < maxAttempts) {\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          continue;\n        } else {\n          alert('⚠️ Connection error. Please try again.');\n        }\n      }\n    }\n    setLoading(false);\n  }, [loading, setBlockData, setTokenBalance, username, tokenBalance, totalDefenseUsed, gridB, columnCount, totalBlocks]);\n\n  // Stake (defense +1) for own block\n  const handleStake = useCallback(async (index: number) => {\n    if (loading) return;\n    const selectedBlock = (gridB[index] && typeof gridB[index] === 'object') ? gridB[index] : null;\n    if (!selectedBlock || selectedBlock.owner !== username) return;\n\n    if ((selectedBlock.defense || 1) >= 10) {\n      alert('🏰 Maximum defense reached! Cannot stake further.');\n      return;\n    }\n\n    setShowBlockModal(false);\n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 100));\n\n    const res = await withRetry(`/gridb/${index}/stake`, { method: 'POST', headers: { 'Content-Type': 'application/json' } }, 1);\n\n    if (res.ok) {\n      const data = await res.json();\n      console.log('Stake response:', data); // Debug log\n\n      // If data is object with success property, refresh gridB instead\n      if (data.success) {\n        // Refresh gridB to get updated data (no info modal)\n        fetchGridB();\n      } else if (Array.isArray(data)) {\n        // Legacy format\n        setGridB(data);\n      } else {\n        console.error('Unexpected response format:', data);\n        fetchGridB();\n      }\n\n      try {\n        const gridRes = await withRetry('/grid', { method: 'GET', requireOpId: false }, 1);\n        if (gridRes.ok) {\n          const gridData = await gridRes.json();\n          setBlockData(gridData);\n          const userGridBlocks = gridData.filter((block: any) => block.dugBy === username);\n          const newTokenBalance = userGridBlocks.length;\n          setTokenBalance(newTokenBalance);\n        }\n      } catch (error) {\n        console.error('Failed to update grid data:', error);\n      }\n    } else {\n      const err = await res.json().catch(() => ({} as any));\n      if (err.error === 'guard_system_failed') {\n        alert('⚠️ System temporarily busy. Please try again in a moment.');\n      } else {\n        alert(err.error || 'Stake failed');\n      }\n    }\n    setLoading(false);\n  }, [loading, gridB, setBlockData, setTokenBalance, username]);\n\n  // Unstake (defense -1) for own block\n  const handleUnstake = useCallback(async (index: number) => {\n    if (loading) return;\n    const selectedBlock = (gridB[index] && typeof gridB[index] === 'object') ? gridB[index] : null;\n    if (!selectedBlock || selectedBlock.owner !== username) return;\n\n    // Remove extra confirmation: initial modal is sufficient\n\n    setShowBlockModal(false);\n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 100));\n\n    const res = await withRetry(`/gridb/${index}/unstake`, { method: 'POST', headers: { 'Content-Type': 'application/json' } }, 1);\n\n    if (res.ok) {\n      const data = await res.json();\n      console.log('Unstake response:', data); // Debug log\n\n      // If data is object with success property, refresh gridB instead\n      if (data.success) {\n        // Refresh gridB to get updated data (no info modal)\n        fetchGridB();\n      } else if (Array.isArray(data)) {\n        // Legacy format\n        setGridB(data);\n      } else {\n        console.error('Unexpected response format:', data);\n        fetchGridB();\n      }\n\n      try {\n        const gridRes = await withRetry('/grid', { method: 'GET', requireOpId: false }, 1);\n        if (gridRes.ok) {\n          const gridData = await gridRes.json();\n          setBlockData(gridData);\n          const userGridBlocks = gridData.filter((block: any) => block.dugBy === username);\n          const newTokenBalance = userGridBlocks.length;\n          setTokenBalance(newTokenBalance);\n        }\n      } catch (error) {\n        console.error('Failed to update grid data:', error);\n      }\n    } else {\n      const err = await res.json().catch(() => ({} as any));\n      if (err.error === 'guard_system_failed') {\n        alert('⚠️ System temporarily busy. Please try again in a moment.');\n      } else {\n        alert(err.error || 'Unstake failed');\n      }\n    }\n    setLoading(false);\n  }, [loading, gridB, setBlockData, setTokenBalance, username]);\n\n  // Remove block (full unstake) for own block with defense 1\n  const handleRemove = useCallback(async (index: number) => {\n    if (loading) return;\n    const selectedBlock = gridB[index];\n    if (!selectedBlock || selectedBlock.owner !== username) return;\n\n    // Remove extra confirmation: initial modal is sufficient\n\n    setShowBlockModal(false);\n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 100));\n\n    const res = await withRetry(`/gridb/${index}`, { method: 'DELETE', headers: { 'Content-Type': 'application/json' } }, 1);\n\n    if (res.ok) {\n      const data = await res.json();\n      console.log('Remove response:', data); // Debug log\n\n      // If data is object with success property, refresh gridB instead\n      if (data.success) {\n        // Refresh gridB to get updated data (no info modal)\n        fetchGridB();\n      } else if (Array.isArray(data)) {\n        // Legacy format\n        setGridB(data);\n      } else {\n        console.error('Unexpected response format:', data);\n        fetchGridB();\n      }\n\n      try {\n        const gridRes = await withRetry('/grid', { method: 'GET', requireOpId: false }, 1);\n        if (gridRes.ok) {\n          const gridData = await gridRes.json();\n          setBlockData(gridData);\n          const userGridBlocks = gridData.filter((block: any) => block.dugBy === username);\n          const newTokenBalance = userGridBlocks.length;\n          setTokenBalance(newTokenBalance);\n        }\n      } catch (error) {\n        console.error('Failed to update grid data:', error);\n      }\n    } else {\n      const err = await res.json().catch(() => ({} as any));\n      if (err.error === 'guard_system_failed') {\n        alert('⚠️ System temporarily busy. Please try again in a moment.');\n      } else {\n        alert(err.error || 'Remove failed');\n      }\n    }\n    setLoading(false);\n  }, [loading, gridB, setBlockData, setTokenBalance, username]);\n\n  const [touchStartPos, setTouchStartPos] = useState<{ x: number; y: number; time: number } | null>(null);\n  const [isMultiTouch, setIsMultiTouch] = useState(false);\n  const wasPinching = useRef(false);\n\n  // Pinch-zoom states\n  const [scale, setScale] = useState(1);\n  const [lastScale, setLastScale] = useState(1);\n  const [initialDistance, setInitialDistance] = useState(0);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [lastPosition, setLastPosition] = useState({ x: 0, y: 0 });\n  const gridRef = useRef<HTMLDivElement>(null);\n  // Touch/click management\n  const isTouchDeviceRef = useRef<boolean>(false);\n  const suppressNextClickRef = useRef<boolean>(false);\n  \n  // Min/max zoom limits\n  const MIN_SCALE = 1;\n  const MAX_SCALE = 4;\n  \n  // Pan boundaries - grid'in ne kadar hareket edebileceğini sınırla\n  const [momentum, setMomentum] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const momentumRef = useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n  const lastTimeRef = useRef<number>(0);\n  const animationFrameRef = useRef<number | null>(null);\n\n  // Setup environment flags once\n  useEffect(() => {\n    try {\n      isTouchDeviceRef.current = ('ontouchstart' in window) || (navigator.maxTouchPoints || 0) > 0;\n    } catch {\n      isTouchDeviceRef.current = false;\n    }\n  }, []);\n\n  // Pan sınırlarını hesapla\n  const getPanBoundaries = useCallback(() => {\n    if (!gridRef.current || !gridRef.current.parentElement) {\n      return { minX: 0, maxX: 0, minY: 0, maxY: 0 };\n    }\n\n    const parentRect = gridRef.current.parentElement.getBoundingClientRect();\n    // Use offsetWidth/Height to get the raw, untransformed dimensions\n    const gridWidth = gridRef.current.offsetWidth;\n    const gridHeight = gridRef.current.offsetHeight;\n\n    const scaledGridWidth = gridWidth * scale;\n    const scaledGridHeight = gridHeight * scale;\n\n    // If the scaled grid is smaller than the container, it should not be pannable.\n    // We calculate a position to keep it centered.\n    if (scaledGridWidth <= parentRect.width && scaledGridHeight <= parentRect.height) {\n        // Since we want to center it, min and max are the same.\n        // But our logic is based on transform from center, so position should be 0.\n        // We will handle centering with CSS for this case if needed.\n        return { minX: 0, maxX: 0, minY: 0, maxY: 0 };\n    }\n\n    // Calculate the overflow\n    const overflowX = scaledGridWidth > parentRect.width ? scaledGridWidth - parentRect.width : 0;\n    const overflowY = scaledGridHeight > parentRect.height ? scaledGridHeight - parentRect.height : 0;\n    \n    // The maximum translation is half of the overflow, adjusted for the current scale\n    const maxX = overflowX / 2 / scale;\n    const maxY = overflowY / 2 / scale;\n\n    return {\n      minX: -maxX,\n      maxX: maxX,\n      minY: -maxY,\n      maxY: maxY,\n    };\n  }, [scale]);\n\n\n  // Momentum-based panning\n  const updatePosition = useCallback(() => {\n    if (isDragging || (!isDragging && Math.abs(momentum.x) < 0.01 && Math.abs(momentum.y) < 0.01)) {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n      return;\n    }\n\n    const now = Date.now();\n    const deltaTime = now - lastTimeRef.current;\n    lastTimeRef.current = now;\n\n    // Apply damping to momentum\n    const dampingFactor = 0.92;\n    const newMomentum = {\n      x: momentum.x * Math.pow(dampingFactor, deltaTime / 16),\n      y: momentum.y * Math.pow(dampingFactor, deltaTime / 16),\n    };\n\n    const boundaries = getPanBoundaries();\n    const newPosition = {\n      x: position.x + newMomentum.x,\n      y: position.y + newMomentum.y,\n    };\n\n    // Clamp position to boundaries\n    const clampedPosition = {\n        x: Math.max(boundaries.minX, Math.min(boundaries.maxX, newPosition.x)),\n        y: Math.max(boundaries.minY, Math.min(boundaries.maxY, newPosition.y)),\n    };\n\n    if (gridRef.current) {\n      gridRef.current.style.transform = `scale(${scale}) translate(${clampedPosition.x}px, ${clampedPosition.y}px)`;\n    }\n\n    setPosition(clampedPosition);\n    setMomentum(newMomentum);\n\n    animationFrameRef.current = requestAnimationFrame(updatePosition);\n  }, [momentum, isDragging, position, scale, getPanBoundaries]);\n\n  useEffect(() => {\n    if (!isDragging && (Math.abs(momentum.x) > 0.01 || Math.abs(momentum.y) > 0.01)) {\n      lastTimeRef.current = Date.now();\n      animationFrameRef.current = requestAnimationFrame(updatePosition);\n    }\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n    };\n  }, [momentum, isDragging, updatePosition]);\n\n\n\n  const getDistance = useCallback((touch1: React.Touch, touch2: React.Touch) => {\n    const dx = touch1.clientX - touch2.clientX;\n    const dy = touch1.clientY - touch2.clientY;\n    return Math.sqrt(dx * dx + dy * dy);\n  }, []);\n\n  const handleTouchStart = useCallback((e: React.TouchEvent, index: number) => {\n    if (e.touches.length >= 2) {\n      // Pinch start, invalidate any single-touch actions\n      setTouchStartPos(null); \n      wasPinching.current = true;\n      setIsMultiTouch(true);\n      const dist = getDistance(e.touches[0], e.touches[1]);\n      setInitialDistance(dist);\n      setLastScale(scale);\n      e.preventDefault();\n      return;\n    }\n    \n    // Single touch start\n    wasPinching.current = false;\n    setIsMultiTouch(false);\n    setIsDragging(true);\n    const touch = e.touches[0];\n    setTouchStartPos({\n      x: touch.clientX,\n      y: touch.clientY,\n      time: Date.now()\n    });\n    setLastPosition(position);\n    setMomentum({ x: 0, y: 0 });\n    momentumRef.current = { x: 0, y: 0 };\n    \n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  }, [getDistance, scale, position]);\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (e.touches.length === 2 && isMultiTouch) {\n      // Pinch zoom\n      const dist = getDistance(e.touches[0], e.touches[1]);\n      const newScale = Math.min(Math.max(lastScale * (dist / initialDistance), MIN_SCALE), MAX_SCALE);\n      \n      if (gridRef.current) {\n        requestAnimationFrame(() => {\n          setScale(newScale);\n          const transform = `scale(${newScale}) translate(${position.x}px, ${position.y}px)`;\n          gridRef.current!.style.transform = transform;\n        });\n      }\n      e.preventDefault();\n      return;\n    }\n\n    if (!touchStartPos || e.touches.length !== 1 || !isDragging) {\n      return;\n    }\n\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - touchStartPos.x;\n    const deltaY = touch.clientY - touchStartPos.y;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n    // If the user has moved their finger more than the tap threshold,\n    // we can immediately decide this is not a tap.\n    if (distance > 10 && touchStartPos) {\n        // You could set a flag here, e.g., setIsTap(false)\n        // For simplicity, we'll just handle it in touchend, \n        // but this is a good place for more complex gesture detection.\n    }\n    \n    // Pan logic with momentum calculation\n    // Calculate velocity for momentum\n    const now = Date.now();\n    const deltaTime = now - touchStartPos.time;\n    if (deltaTime > 10) { // a small delta threshold to avoid division by zero\n        const velocityX = deltaX / deltaTime;\n        const velocityY = deltaY / deltaTime;\n        momentumRef.current = { x: velocityX * 16.67, y: velocityY * 16.67 }; // Extrapolate to 60fps\n    }\n    \n    const boundaries = getPanBoundaries();\n    const newX = Math.min(Math.max(lastPosition.x + deltaX, boundaries.minX), boundaries.maxX);\n    const newY = Math.min(Math.max(lastPosition.y + deltaY, boundaries.minY), boundaries.maxY);\n    \n    if (gridRef.current) {\n      requestAnimationFrame(() => {\n        const transform = `scale(${scale}) translate(${newX}px, ${newY}px)`;\n        gridRef.current!.style.transform = transform;\n        setPosition({ x: newX, y: newY });\n      });\n    }\n  }, [isMultiTouch, getDistance, initialDistance, lastScale, touchStartPos, lastPosition, scale, getPanBoundaries, isDragging, position]);\n\n  // Pinch sonrası ilk tap'i yoksaymak için flag\n  const justPinched = useRef(false);\n\n  const handleTouchEnd = useCallback((e: React.TouchEvent, index: number) => {\n    // Pinch bitiminde, bir veya iki parmak kalksa da tap engelle\n    if (wasPinching.current || isMultiTouch) {\n      setIsMultiTouch(false);\n      wasPinching.current = false;\n      justPinched.current = true;\n      return;\n    }\n\n    // Only fire on the last finger up\n    if (e.touches.length > 0) {\n      return;\n    }\n\n    setIsDragging(false);\n\n    if (!touchStartPos) {\n      return;\n    }\n\n    const touch = e.changedTouches[0];\n    const deltaX = Math.abs(touch.clientX - touchStartPos.x);\n    const deltaY = Math.abs(touch.clientY - touchStartPos.y);\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const duration = Date.now() - touchStartPos.time;\n\n    // A valid tap should be short in duration and move a very small distance.\n    // Make tap detection stricter at higher zoom to avoid accidental taps\n    const TAP_DURATION_MS = 250;\n    const baseMoveThresholdPx = 10; // at scale=1\n    const moveThresholdPx = Math.max(2, baseMoveThresholdPx / Math.max(1, scale));\n    const isTap = duration < TAP_DURATION_MS && distance < moveThresholdPx;\n\n    // Pinch sonrası ilk tap'i yoksay\n    if (isTap) {\n      if (justPinched.current) {\n        justPinched.current = false;\n        setTouchStartPos(null);\n        return;\n      }\n      // It's a click\n      e.preventDefault();\n      handleBlockClick(index);\n    } else {\n      // It's a pan/drag, apply momentum and suppress any synthetic click\n      setMomentum(momentumRef.current);\n      try {\n        // Prevent the subsequent synthetic click\n        (e as unknown as Event).preventDefault?.();\n      } catch {}\n      suppressNextClickRef.current = true;\n      window.setTimeout(() => { suppressNextClickRef.current = false; }, 250);\n    }\n\n    setTouchStartPos(null);\n  }, [touchStartPos, handleBlockClick, isMultiTouch]);\n\n  return (\n    <div className=\"gridb-container\" style={{ \n      display: \"flex\", \n      flexDirection: \"column\", \n      alignItems: \"center\", \n      width: \"100%\",\n      padding: isMobile() ? \"8px\" : \"16px\",\n      boxSizing: \"border-box\"\n    }}>\n      <div style={{ display: 'flex', gap: 8, alignItems: 'center', marginTop: isMobile() ? 40 : 0, marginBottom: isMobile() ? 8 : 12 }}>\n        <div style={{ display: 'inline-flex', border: '1px solid #ddd', borderRadius: 8, overflow: 'hidden' }}>\n          <button\n            onClick={() => setWarMode('stake')}\n            disabled={loading}\n            style={{\n              padding: isMobile() ? '6px 10px' : '8px 14px',\n              fontSize: isMobile() ? 12 : 14,\n              border: 'none',\n              background: warMode === 'stake' ? '#2196F3' : '#f5f5f5',\n              color: warMode === 'stake' ? '#fff' : '#333',\n              cursor: 'pointer',\n              fontWeight: 700\n            }}\n          >Stake</button>\n          <button\n            onClick={() => setWarMode('unstake')}\n            disabled={loading}\n            style={{\n              padding: isMobile() ? '6px 10px' : '8px 14px',\n              fontSize: isMobile() ? 12 : 14,\n              border: 'none',\n              background: warMode === 'unstake' ? '#ff9800' : '#f5f5f5',\n              color: warMode === 'unstake' ? '#fff' : '#333',\n              cursor: 'pointer',\n              fontWeight: 700\n            }}\n          >Unstake</button>\n        </div>\n        <div style={{ fontSize: isMobile() ? 12 : 13, color: '#666' }}>\n          Mode: {warMode === 'stake' ? 'Place/Support/Attack' : 'Decrease defense or remove your blocks'}\n        </div>\n      </div>\n\n      {/* Uyarı metni kaldırıldı: Digzone/Warzone ayrı gridler */}\n      <div style={{\n        fontSize: isMobile() ? 14 : 16,\n        marginBottom: isMobile() ? \"8px\" : \"12px\",\n                            color: currentStock > 0 ? \"#2196f3\" : \"#ff5722\",\n          fontWeight: currentStock < 0 ? \"bold\" : 600\n      }}>\n        💰 Total: {tokenBalance} | 🏗️ Used: {totalDefenseUsed} | Available: {currentStock >= 0 ? currentStock : `${currentStock} (NEGATIVE!)`}\n      </div>\n      <div className=\"gridb-wrapper\" style={{\n        width: '100%',\n        maxWidth: '95vw',\n        overflowX: 'auto',\n        overflowY: 'hidden',\n        WebkitOverflowScrolling: 'touch',\n        scrollbarWidth: 'none',\n        msOverflowStyle: 'none',\n        padding: '2px',\n        margin: '0 auto',\n        boxSizing: 'border-box',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '4px',\n        position: 'relative'\n      }}>\n        <div\n          ref={gridRef}\n        className=\"grid-container gridb-grid\"\n        style={{\n            display: 'grid',\n            gridTemplateColumns: `repeat(${columnCount}, ${blockWidth}px)`,\n          gridTemplateRows: `repeat(${rows}, ${blockWidth}px)`,\n            gap: '0.5px',\n            width: `${blockWidth * columnCount + (columnCount - 1) * 0.5}px`,\n            transformOrigin: 'center',\n            willChange: 'transform',\n            contain: 'paint layout',\n            touchAction: 'none'\n          }}>\n        {blocks.map((index) => {\n          const filled = (gridB[index] && typeof gridB[index] === 'object') ? gridB[index] : null;\n          const isUserBlock = filled && filled.owner === username;\n          const blockColor = filled && filled.owner && userColors[filled.owner] ? userColors[filled.owner] : \"#f5f5f5\";\n          const isCastle = filled && filled.defense >= 10;\n\n          // Digzone/Warzone ayrımı: İlk 10x10 = Digzone, geri kalan = Warzone\n          const row = Math.floor(index / columnCount);\n          const col = index % columnCount;\n          const isDigzone = row < 10 && col < 10;\n          const isWarzone = !isDigzone;\n          \n          const fontSize = isMobile() \n            ? Math.max(4, Math.min(8, Math.floor(blockWidth * 0.3)))\n            : Math.max(Math.floor(blockWidth * 0.4), 10);\n            \n          return (\n            <div\n              key={index}\n              className={`grid-block${isUserBlock ? \" my-block\" : \"\"}${isDigzone ? \" digzone-block\" : \" warzone-block\"}`}\n\n              style={{\n                backgroundColor: filled && filled.owner ? blockColor : \"#ffffff\",\n                border: `0.5px solid ${filled && filled.owner ? (isCastle ? \"#000\" : \"#999\") : \"#dddddd\"}`,\n                background: filled && filled.owner ? blockColor : \"#ffffff\",\n                color: filled && filled.owner ? \"#222\" : \"#888\",\n                fontSize: fontSize,\n                lineHeight: 1,\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                textAlign: \"center\",\n                height: `${blockWidth}px`,\n                width: `${blockWidth}px`,\n                userSelect: \"none\",\n                boxSizing: \"border-box\",\n                cursor: loading ? \"wait\" : \"pointer\",\n                fontWeight: filled && filled.owner ? (isMobile() ? 700 : 600) : 400,\n                opacity: loading ? 0.5 : 1,\n                pointerEvents: loading ? \"none\" : \"auto\",\n                transition: isMobile() ? \"none\" : \"transform 0.1s\",\n                minWidth: isMobile() ? \"8px\" : \"auto\",\n                minHeight: isMobile() ? \"8px\" : \"auto\",\n              }}\n              title={\n                filled && filled.owner\n                  ? `Block #${index} - Owner: ${filled.owner}`\n                  : `Block #${index}`\n              }\n              onClick={(ev) => {\n                if (suppressNextClickRef.current) {\n                  ev.preventDefault();\n                  return;\n                }\n                handleBlockClick(index);\n              }}\n              onTouchStart={(e) => handleTouchStart(e, index)}\n              onTouchMove={handleTouchMove}\n              onTouchEnd={(e) => handleTouchEnd(e, index)}\n            >\n              {filled && filled.owner ? (typeof filled.defense === 'number' ? filled.defense : 1) : ''}\n            </div>\n          );\n        })}\n        </div>\n      </div>\n    \n      {showBlockModal && selectedBlockIndex !== null && createPortal(\n        <div \n          className=\"block-modal-overlay\" \n          data-modal=\"block-info\"\n          data-ios={isIOS ? \"true\" : \"false\"}\n          onClick={() => setShowBlockModal(false)}\n          style={{\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            bottom: '0',\n            right: '0',\n            zIndex: 2147483647,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            transform: 'none',\n            transformOrigin: '0 0',\n            zoom: 1,\n            WebkitTransform: 'none',\n            MozTransform: 'none',\n            msTransform: 'none',\n          }}\n        >\n          <div \n            className=\"block-modal-content\" \n            data-modal-content=\"block-info\"\n            data-ios={isIOS ? \"true\" : \"false\"}\n            onClick={(e) => e.stopPropagation()}\n            style={{\n              backgroundColor: 'white',\n              padding: '20px',\n              borderRadius: '12px',\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n              textAlign: 'center',\n              width: getModalWidth(),\n              maxWidth: getModalWidth(),\n              minWidth: getModalWidth(),\n              height: 'auto',\n              maxHeight: '400px',\n              position: 'relative',\n              transform: 'none',\n              transformOrigin: 'center center',\n              zoom: 1,\n              fontSize: '14px',\n              WebkitTransform: 'none',\n              MozTransform: 'none',\n              msTransform: 'none',\n              margin: '0',\n              border: 'none',\n              outline: 'none',\n            }}\n          >\n            {(() => {\n              const selectedBlock = gridB.find(b => b && typeof b === 'object' && b.index === selectedBlockIndex);\n              const isOwner = selectedBlock?.owner === username;\n              const isEmpty = !selectedBlock?.owner;\n              const isOthersBlock = selectedBlock?.owner && selectedBlock?.owner !== username;\n              const isCastle = selectedBlock?.defense >= 10;\n              const userHasNoBlocksInGridB = gridB.filter(b => b.owner === username).length === 0;\n              const emptyBlocks = gridB.filter(b => !b.owner);\n              const isFirstPlacement = userHasNoBlocksInGridB && emptyBlocks.length === 0;\n              \n              return (\n                <>\n                  <h3 style={{ margin: '0 0 16px 0', color: '#333', fontSize: '20px' }}>\n                    Block #{selectedBlockIndex}\n                  </h3>\n                  {isEmpty ? (\n                    <p style={{ margin: '8px 0 20px 0', color: '#666', fontSize: '16px' }}>Empty Block</p>\n                  ) : isOwner ? (\n                    <div style={{ margin: '8px 0 20px 0' }}>\n                      <p style={{ margin: '0 0 8px 0', color: '#666', fontSize: '16px' }}>\n                        Owner: You (Defense: {selectedBlock?.defense || 1})\n                      </p>\n                      {isCastle && (\n                        <p style={{ margin: '0', color: '#f57c00', fontSize: '14px', fontWeight: 'bold' }}>\n                          Castle: +1 auto-mining per day\n                        </p>\n                      )}\n                    </div>\n                  ) : (\n                    <div style={{ margin: '8px 0 20px 0' }}>\n                      <p style={{ margin: '0 0 8px 0', color: '#666', fontSize: '16px' }}>\n                        Owner: {selectedBlock?.owner} (Defense: {selectedBlock?.defense || 1})\n                      </p>\n                      {isCastle && (\n                        <p style={{ margin: '0 0 8px 0', color: '#f57c00', fontSize: '14px', fontWeight: 'bold' }}>\n                          Enemy Castle: Generates +1 block/day\n                        </p>\n                      )}\n                      {isFirstPlacement && isCastle && (\n                        <p style={{ margin: '0', color: '#f44336', fontSize: '13px', fontStyle: 'italic' }}>\n                          Castle Protection: Attack neighboring blocks first\n                        </p>\n                      )}\n                    </div>\n                  )}\n                  \n                  <div style={{ display: 'flex', gap: '12px', justifyContent: 'center', flexWrap: 'wrap' }}>\n                    {warMode === 'stake' && (\n                      <>\n                        {(isEmpty || isOthersBlock) && (\n                          <button \n                            className=\"block-modal-button attack-button\" \n                            onClick={() => selectedBlockIndex !== null && handleBlockAction(selectedBlockIndex)}\n                            disabled={loading || (isFirstPlacement && isCastle)}\n                            style={{\n                              padding: '10px 20px',\n                              border: 'none',\n                              borderRadius: '6px',\n                              fontSize: '14px',\n                              fontWeight: '600',\n                              cursor: (loading || (isFirstPlacement && isCastle)) ? 'not-allowed' : 'pointer',\n                              backgroundColor: (isFirstPlacement && isCastle) ? '#9E9E9E' : '#f44336',\n                              color: 'white',\n                              minWidth: '80px',\n                              opacity: (isFirstPlacement && isCastle) ? 0.6 : 1,\n                            }}\n                            title={isFirstPlacement && isCastle ? 'Cannot attack castles on first placement' : ''}\n                          >\n                            {loading ? 'Processing...' : (isFirstPlacement && isCastle) ? 'Protected' : (isEmpty ? 'Claim' : 'Attack')}\n                          </button>\n                        )}\n                        {isOwner && (\n                          <button\n                            className=\"block-modal-button support-button\"\n                            onClick={() => selectedBlockIndex !== null && handleStake(selectedBlockIndex)}\n                            disabled={loading}\n                            style={{\n                              padding: '10px 20px',\n                              border: 'none',\n                              borderRadius: '6px',\n                              fontSize: '14px',\n                              fontWeight: '600',\n                              cursor: 'pointer',\n                              backgroundColor: (selectedBlock?.defense === 9) ? '#ff9800' : '#2196F3',\n                              color: 'white',\n                              minWidth: '80px',\n                            }}\n                            title={selectedBlock?.defense === 9 ? 'Upgrade to Castle! (+1 auto-mining/day)' : 'Increase defense by 1'}\n                          >\n                            {loading ? 'Processing...' : (selectedBlock?.defense === 9) ? 'Castle!' : 'Support'}\n                          </button>\n                        )}\n                      </>\n                    )}\n\n                    {warMode === 'unstake' && isOwner && (\n                      <>\n                        {(selectedBlock?.defense || 1) > 1 && (\n                          <button \n                            className=\"block-modal-button unstake-button\" \n                            onClick={() => selectedBlockIndex !== null && handleUnstake(selectedBlockIndex)}\n                            disabled={loading}\n                            style={{\n                              padding: '10px 20px',\n                              border: 'none',\n                              borderRadius: '6px',\n                              fontSize: '14px',\n                              fontWeight: '600',\n                              cursor: 'pointer',\n                              backgroundColor: '#ff9800',\n                              color: 'white',\n                              minWidth: '80px',\n                            }}\n                            title={isCastle ? 'Drop castle defense by 1' : 'Decrease defense by 1'}\n                          >\n                            {loading ? 'Processing...' : 'Unstake -1'}\n                          </button>\n                        )}\n                        {(selectedBlock?.defense || 1) === 1 && (\n                          <button \n                            className=\"block-modal-button remove-button\" \n                            onClick={() => selectedBlockIndex !== null && handleRemove(selectedBlockIndex)}\n                            disabled={loading}\n                            style={{\n                              padding: '10px 20px',\n                              border: 'none',\n                              borderRadius: '6px',\n                              fontSize: '14px',\n                              fontWeight: '600',\n                              cursor: 'pointer',\n                              backgroundColor: '#e53935',\n                              color: 'white',\n                              minWidth: '80px',\n                            }}\n                            title={'Remove this block (full unstake)'}\n                          >\n                            {loading ? 'Processing...' : 'Remove'}\n                          </button>\n                        )}\n                      </>\n                    )}\n\n                    <button \n                      className=\"block-modal-button close-button\" \n                      onClick={() => setShowBlockModal(false)}\n                      style={{\n                        padding: '10px 20px',\n                        border: 'none',\n                        borderRadius: '6px',\n                        fontSize: '14px',\n                        fontWeight: '600',\n                        cursor: 'pointer',\n                        backgroundColor: '#9E9E9E',\n                        color: 'white',\n                        minWidth: '80px',\n                      }}\n                    >\n                      Close\n                    </button>\n                  </div>\n                </>\n              );\n            })()}\n          </div>\n        </div>,\n        document.body\n      )}\n    </div>\n  );\n};\n\nexport default GridB; ","import React, { useState, useEffect, useCallback } from 'react';\nimport './BlockchainStats.css';\nimport { withRetry } from './components/request';\n\ninterface BlockchainStatsProps {\n  isVisible: boolean;\n  onClose: () => void;\n  username?: string | null;\n}\n\ninterface TopMiner {\n  name: string;\n  blockCount: number;\n  color: string;\n}\n\ninterface CurrentUser {\n  username: string;\n  totalBlocks: number;\n  remainingMines: number;\n  color: string;\n}\n\ninterface GameStats {\n      // New detailed information\n  totalBlocks: number;\n  minedBlocks: number;\n  emptyBlocks: number;\n  topMiners: TopMiner[];\n  currentUser: CurrentUser | null;\n  \n      // Legacy values (for compatibility)\n  totalBlocksMined: number;\n  gridExpansions: number;\n  \n  // Teknik bilgiler\n  programId?: string;\n  gameStatsPDA?: string;\n}\n\ninterface StatsResponse {\n  success: boolean;\n  grid: GameStats;\n  source: string;\n  volchain?: { totalSupply: number; currentUser?: { balance?: number } };\n}\n\nconst BlockchainStats: React.FC<BlockchainStatsProps> = ({ isVisible, onClose, username }) => {\n  const [stats, setStats] = useState<GameStats | null>(null);\n  const [castlesCount, setCastlesCount] = useState<number | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [source, setSource] = useState<string>('');\n  const [error, setError] = useState<string | null>(null);\n  const [holders, setHolders] = useState<Array<{ name: string; balance: number; color: string; pubkey: string }>>([]);\n  const [chainTotal, setChainTotal] = useState<number>(0);\n  const [chainUserBalance, setChainUserBalance] = useState<number>(0);\n  const [isSyncing, setIsSyncing] = useState<boolean>(false);\n\n  const fetchStats = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const url = username \n        ? `/stats/volchain?username=${encodeURIComponent(username)}`\n        : '/stats/volchain';\n      const [statsResp, holdersResp] = await Promise.all([\n        withRetry(url, { method: 'GET' }, 1),\n        withRetry('/volchain/holders?limit=3', { method: 'GET' }, 1)\n      ]);\n      const data: StatsResponse = await statsResp.json();\n      if (Array.isArray(holdersResp)) {\n        // no-op (type guard)\n      }\n      const holdersJson = await holdersResp.json().catch(() => []);\n      if (Array.isArray(holdersJson)) {\n        setHolders(holdersJson.map((h: any) => ({\n          name: h?.name || (typeof h?.pubkey === 'string' ? h.pubkey.slice(0,8) : ''),\n          balance: Number(h?.balance) || 0,\n          color: h?.color || '#e0e0e0',\n          pubkey: h?.pubkey || ''\n        })));\n      } else {\n        setHolders([]);\n      }\n      \n      if (data.success) {\n        setStats(data.grid);\n        setSource(data.source === 'volchain' ? '🔗 Volchain' : '💾 Local');\n        const vt = Number(data?.volchain?.totalSupply || 0);\n        setChainTotal(vt);\n        const ub = Number(data?.volchain?.currentUser?.balance || 0);\n        setChainUserBalance(ub);\n        const minedBlocks = Number(data?.grid?.minedBlocks || 0);\n        setIsSyncing(vt > 0 && minedBlocks >= 0 && vt !== minedBlocks);\n      } else {\n        setError('Failed to fetch stats');\n      }\n    } catch (err) {\n      setError('Network error');\n      console.error('Stats fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [username, setLoading, setError, setStats, setSource, setHolders]);\n\n  useEffect(() => {\n    if (isVisible) {\n      fetchStats();\n    }\n  }, [isVisible, fetchStats]);\n\n  // Fetch Top Volore Holders directly from Volchain when modal opens\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!isVisible) { setHolders([]); return; }\n        const resp = await withRetry('/volchain/holders?limit=3', { method: 'GET' }, 1);\n        const data = await resp.json();\n        if (Array.isArray(data)) {\n          setHolders(data.map((h: any) => ({\n            name: h?.name || (typeof h?.pubkey === 'string' ? h.pubkey.slice(0,8) : '---'),\n            balance: Number(h?.balance) || 0,\n            color: h?.color || '#e0e0e0',\n            pubkey: h?.pubkey || ''\n          })));\n        } else {\n          setHolders([]);\n        }\n      } catch {\n        setHolders([]);\n      }\n    })();\n  }, [isVisible]);\n\n  // Fetch castles count (defense >= 10) for current user from GridB\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!isVisible || !username) { setCastlesCount(null); return; }\n        const resp = await fetch('/gridb');\n        const gridb = await resp.json();\n        const count = Array.isArray(gridb)\n          ? gridb.filter((b: any) => b && b.owner === username && (b.defense || 0) >= 10).length\n          : 0;\n        setCastlesCount(count);\n      } catch {\n        setCastlesCount(null);\n      }\n    })();\n  }, [isVisible, username]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"settings-modal\" onClick={onClose}>\n      <div className=\"settings-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header stats-header\">\n          <h2 className=\"modal-title\">🏗️ Volchain Statistics</h2>\n          <button className=\"modal-close-x stats-close-btn\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"modal-body\">\n          <div className=\"stats-source\">\n            Data Source: <span className={source.includes('Volchain') ? 'source-blockchain' : 'source-local'}>\n              {source}\n            </span>\n          </div>\n\n          {loading && (\n            <div className=\"stats-loading\">\n              <div className=\"spinner\"></div>\n              <p>Loading stats from blockchain...</p>\n            </div>\n          )}\n\n          {error && (\n            <div className=\"stats-error\">\n              <p>❌ {error}</p>\n              <button onClick={fetchStats} className=\"retry-btn\">Retry</button>\n            </div>\n          )}\n\n          {stats && !loading && (\n            <div className=\"stats-sections\">\n              {/* 1. Volchain Information */}\n              <div className=\"stats-section\">\n                <h4 className=\"section-title\">📊 Volchain Information</h4>\n                <div className=\"stats-row\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Volore:</span>\n                    <span className=\"stat-value\">{(chainTotal || 0).toLocaleString()}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Mined Volore:</span>\n                    <span className=\"stat-value\">{(chainTotal || 0).toLocaleString()}</span>\n                  </div>\n                </div>\n                {isSyncing && (\n                  <div className=\"stats-note\" style={{ color: '#b58900' }}>syncing…</div>\n                )}\n              </div>\n\n              {/* 2. Top Lists */}\n              <div className=\"stats-section\">\n                <div className=\"top-lists-container\">\n                  {/* Top Volore Holders */}\n                  <div className=\"top-list-column\">\n                    <h4 className=\"section-title\">🏅 Top Volore Holders</h4>\n                    <div className=\"top-miners-list\">\n                      {Array.from({ length: 3 }).map((_, index) => {\n                        const holder = holders[index];\n                        return (\n                          <div key={index} className={`miner-item ${!holder ? 'placeholder' : ''}`}>\n                            <span className=\"miner-rank\">{index + 1}</span>\n                            <div \n                              className=\"miner-color\" \n                              style={{ backgroundColor: holder?.color || '#e0e0e0' }}\n                            ></div>\n                            <span className=\"miner-name\">{holder?.name || '---'}</span>\n                            <span className=\"miner-blocks\">{holder ? `${holder.balance}` : '0'}</span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n\n                  \n                </div>\n              </div>\n\n              {/* 3. Current User Stats */}\n              {stats.currentUser && (\n                <div className=\"stats-section\">\n                  <h4 className=\"section-title\">👤 Your Stats</h4>\n                  <div className=\"stats-row\">\n                    <div className=\"stat-item\">\n                      <span className=\"stat-label\">Your Volore:</span>\n                      <span className=\"stat-value\">{(chainUserBalance || 0).toLocaleString()}</span>\n                    </div>\n                    {typeof castlesCount === 'number' && (\n                      <div className=\"stat-item\">\n                        <span className=\"stat-label\">Your Castles:</span>\n                        <span className=\"stat-value\">{castlesCount}</span>\n                      </div>\n                    )}\n                    <div className=\"stat-item\">\n                      <span className=\"stat-label\">Remaining Mines Today:</span>\n                      <span className=\"stat-value highlight\">{stats.currentUser.remainingMines}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Technical Information removed */}\n            </div>\n          )}\n\n          <div className=\"stats-footer\">\n            <button onClick={fetchStats} className=\"refresh-btn\" disabled={loading}>\n              🔄 Refresh\n            </button>\n              <p className=\"stats-note\">Stats are computed from Volchain snapshot</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlockchainStats; ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\ninterface MenuDropdownPortalProps {\n  open: boolean;\n  top?: number;\n  left?: number;\n  onInfo: () => void;\n  onSettings: () => void;\n  onVolore: () => void;\n  onVolchainActivity: () => void;\n  // Removed Tokenomics\n  onContact: () => void;\n  onLogout: () => void;\n}\n\nconst MenuDropdownPortal: React.FC<MenuDropdownPortalProps> = ({\n  open,\n  top = 70,\n  left = 24,\n  onInfo,\n  onSettings,\n  onVolore,\n  onVolchainActivity,\n  \n  onContact,\n  onLogout,\n}) => {\n  if (!open) return null;\n  return ReactDOM.createPortal(\n    <div\n      className=\"menu-dropdown\"\n      style={{\n        position: \"fixed\",\n        zIndex: 9999,\n        top,\n        left,\n        right: \"auto\",\n        minWidth: 160,\n        maxWidth: \"90vw\",\n        width: \"auto\",\n      }}\n    >\n      <button onClick={onInfo}>Info</button>\n      <button onClick={onSettings}>Settings</button>\n      <button onClick={onVolore}>Volore</button>\n      <button onClick={onVolchainActivity}>Volchain Activity</button>\n      \n      <button onClick={onContact}>Contact Us</button>\n      <button\n        onClick={onLogout}\n        style={{ backgroundColor: \"#ff4d4f\", color: \"white\", border: \"none\", borderRadius: 6 }}\n      >\n        Logout\n      </button>\n    </div>,\n    document.body\n  );\n};\n\nexport default MenuDropdownPortal;","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { withRetry } from './request';\n\ntype Event = {\n  ts: number;\n  type: 'mint' | 'burn' | 'transfer' | 'stake' | 'unstake' | 'attack';\n  reason?: string;\n  username?: string;\n  pubkey?: string;\n  amount?: number;\n  gridIndex?: number;\n  fromUser?: string;\n  from?: string;\n  to?: string;\n  toUser?: string;\n};\n\nconst formatTs = (ts: number) => {\n  try {\n    const d = new Date(ts);\n    const mm = String(d.getMonth() + 1).padStart(2, '0');\n    const dd = String(d.getDate()).padStart(2, '0');\n    const hh = String(d.getHours()).padStart(2, '0');\n    const mi = String(d.getMinutes()).padStart(2, '0');\n    return `${mm}-${dd} ${hh}:${mi}`; // compact format\n  } catch {\n    return String(ts);\n  }\n};\n\nconst shortHex = (v?: string, len: number = 6) => {\n  if (!v || typeof v !== 'string') return '';\n  return v.length > len ? `${v.slice(0, len)}…` : v;\n};\n\nconst shortUser = (v?: string, len: number = 10) => {\n  if (!v || typeof v !== 'string') return '';\n  return v.length > len ? `${v.slice(0, len)}…` : v;\n};\n\ntype Props = {\n  autoRefreshMs?: number;\n};\n\nconst VolchainActivity: React.FC<Props> = ({ autoRefreshMs }) => {\n  const [events, setEvents] = useState<Event[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [nextCursor, setNextCursor] = useState<number | null>(null);\n  const lastSigRef = useRef<string>('');\n\n  const buildSignature = useCallback((list: Event[]) => {\n    try {\n      return JSON.stringify(list.slice(0, 50).map(e => ({ t: e.ts, y: e.type, a: e.amount, f: e.from, o: e.to })));\n    } catch {\n      return String(Date.now());\n    }\n  }, []);\n\n  const fetchEvents = useCallback(async (opts?: { silent?: boolean }) => {\n    try {\n      const silent = !!opts?.silent;\n      if (!silent) {\n        // Only show loading on manual/initial fetch\n        setLoading(true);\n        setError(null);\n      }\n      const resp = await withRetry(`/volchain/events?limit=200&_ts=${Date.now()}`,{ method: 'GET' }, 1);\n      if (!resp.ok) throw new Error('Failed to load events');\n      const data = await resp.json();\n      const incoming: Event[] = Array.isArray(data?.events) ? data.events : (Array.isArray(data) ? data : []);\n      if (typeof data?.nextCursor === 'number') setNextCursor(data.nextCursor);\n      // Avoid re-render if unchanged\n      const sig = buildSignature(incoming);\n      if (sig !== lastSigRef.current) {\n        lastSigRef.current = sig;\n        setEvents(incoming);\n      }\n    } catch (e: any) {\n      if (!opts?.silent) {\n        setError(e?.message || 'Failed to load events');\n      }\n    } finally {\n      if (!opts?.silent) setLoading(false);\n    }\n  }, [buildSignature]);\n\n  useEffect(() => {\n    fetchEvents();\n  }, [fetchEvents]);\n  const loadMore = useCallback(async () => {\n    if (nextCursor === null) return;\n    try {\n      const resp = await withRetry(`/volchain/events?limit=200&cursor=${nextCursor}&_ts=${Date.now()}`, { method: 'GET' }, 1);\n      if (!resp.ok) return;\n      const data = await resp.json();\n      const incoming: Event[] = Array.isArray(data?.events) ? data.events : [];\n      if (typeof data?.nextCursor === 'number') setNextCursor(data.nextCursor); else setNextCursor(null);\n      if (incoming.length > 0) setEvents(prev => [...prev, ...incoming]);\n    } catch {}\n  }, [nextCursor]);\n\n  useEffect(() => {\n    if (!autoRefreshMs || autoRefreshMs <= 0) return;\n    const id = setInterval(() => fetchEvents({ silent: true }), autoRefreshMs);\n    return () => clearInterval(id);\n  }, [autoRefreshMs, fetchEvents]);\n\n  return (\n    <div style={{ overflowX: 'hidden' }}>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <strong>Recent (max 1000)</strong>\n        {!autoRefreshMs && (\n          <button className=\"settings-button\" onClick={() => fetchEvents()} disabled={loading}>Refresh</button>\n        )}\n      </div>\n      {loading && events.length === 0 && <p>Loading events…</p>}\n      {error && <p style={{ color: '#c00' }}>❌ {error}</p>}\n      <div style={{ maxHeight: 260, minHeight: 260, overflowY: 'auto', overflowX: 'hidden', marginTop: 6, border: '1px solid #eee', borderRadius: 6, padding: 6 }}>\n        {events.length === 0 && !loading && <p>No events yet.</p>}\n        {events.map((e, idx) => {\n          const baseStyle: React.CSSProperties = {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 6,\n            fontSize: 12,\n            padding: '4px 4px',\n            borderBottom: '1px dashed #eee',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          };\n          const timeEl = (\n            <span style={{ color: '#666', width: 80, flex: '0 0 auto' }}>{formatTs(e.ts)}</span>\n          );\n          const label = e.type.toUpperCase();\n          const typeEl = (\n            <span style={{ color: '#333', width: 58, flex: '0 0 auto' }}>{label}</span>\n          );\n          let msg = '';\n          if (e.type === 'mint') {\n            const recipient = shortUser(e.username) || shortUser(e.toUser) || shortHex(e.pubkey);\n            if (String(e.reason).toLowerCase() === 'dig') {\n              msg = `+${e.amount} to ${recipient}`;\n            } else {\n              msg = `+${e.amount} to ${recipient}`;\n            }\n          } else if (e.type === 'burn') {\n            msg = `-${e.amount} from ${shortUser(e.username) || shortHex(e.pubkey)}`;\n          } else if (e.type === 'transfer') {\n            const fromShort = shortUser(e.fromUser) || shortHex(e.from);\n            const toShort = shortUser((e as any).toUser) || shortHex(e.to);\n            msg = `${e.amount} ${fromShort}→${toShort}`;\n          } else if (e.type === 'attack') {\n            const fromShort = shortUser(e.fromUser) || shortHex(e.from);\n            const toShort = shortUser((e as any).toUser) || shortHex(e.to);\n            msg = `${fromShort}→${toShort}`;\n          } else if (e.type === 'stake') {\n            const amt = typeof e.amount === 'number' ? e.amount : 1;\n            const who = shortUser(e.username) || shortHex(e.pubkey);\n            msg = `+${amt} — Used +${amt} / Avail -${amt} — ${who}`;\n          } else if (e.type === 'unstake') {\n            const amt = typeof e.amount === 'number' ? e.amount : 1;\n            // Type column already shows UNSTAKE, message keeps it compact per request\n            const who = shortUser(e.username) || shortHex(e.pubkey);\n            msg = `+${amt} — Used -${amt} / Avail +${amt} — ${who}`;\n          }\n          return (\n            <div key={idx} style={baseStyle}>\n              {timeEl}\n              {typeEl}\n              <span style={{ flex: '1 1 auto', minWidth: 0, overflow: 'hidden', textOverflow: 'ellipsis' }}>{msg}</span>\n            </div>\n          );\n        })}\n      </div>\n      {nextCursor !== null && (\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 6 }}>\n          <button className=\"settings-button\" onClick={loadMore} style={{ fontSize: 12, padding: '6px 10px' }}>Load more</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VolchainActivity;\n\n\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hex implements hex encoder and decoder.\n */\n\n//        0123456789  ABCDEF  | abcdef\n// Index:    0 - 9    10-15   | 10-15\n// ASCII:   48 - 57   65-70   | 97-102\n\nfunction encodeNibble(b: number): string {\n    // b >= 0\n    let result = b + 48;\n    // b > 9\n    result += ((9 - b) >>> 8) & (-48 + 65 - 10);\n\n    return String.fromCharCode(result);\n}\n\nfunction encodeNibbleLower(b: number): string {\n    // b >= 0\n    let result = b + 48;\n    // b > 9\n    result += ((9 - b) >>> 8) & (-48 + 97 - 10);\n\n    return String.fromCharCode(result);\n}\n\n// Invalid character used in decoding to indicate\n// that the character to decode is out of range of\n// hex alphabet and cannot be decoded.\nconst INVALID_HEX_NIBBLE = 256;\n\nfunction decodeNibble(c: number): number {\n    let result = INVALID_HEX_NIBBLE;\n\n    // 0-9: c > 47 and c < 58\n    result += (((47 - c) & (c - 58)) >> 8) & (-INVALID_HEX_NIBBLE + c - 48);\n    // A-F: c > 64 and c < 71\n    result += (((64 - c) & (c - 71)) >> 8) & (-INVALID_HEX_NIBBLE + c - 65 + 10);\n    // a-f: c > 96 and c < 103\n    result += (((96 - c) & (c - 103)) >> 8) & (-INVALID_HEX_NIBBLE + c - 97 + 10);\n\n    return result;\n}\n\n/**\n * Returns string with hex-encoded data.\n */\nexport function encode(data: Uint8Array, lowerCase = false): string {\n    const enc = lowerCase ? encodeNibbleLower : encodeNibble;\n    let s = \"\";\n    for (let i = 0; i < data.length; i++) {\n        s += enc(data[i] >>> 4);\n        s += enc(data[i] & 0x0f);\n    }\n    return s;\n}\n\n/**\n * Returns Uint8Array with data decoded from hex string.\n *\n * Throws error if hex string length is not divisible by 2 or has non-hex\n * characters.\n */\nexport function decode(hex: string): Uint8Array {\n    if (hex.length === 0) {\n        return new Uint8Array(0);\n    }\n    if (hex.length % 2 !== 0) {\n        throw new Error(\"hex: input string must be divisible by two\");\n    }\n    const result = new Uint8Array(hex.length / 2);\n    let haveBad = 0;\n    for (let i = 0; i < hex.length; i += 2) {\n        let v0 = decodeNibble(hex.charCodeAt(i));\n        let v1 = decodeNibble(hex.charCodeAt(i + 1));\n\n        result[i / 2] = v0 << 4 | v1;\n\n        haveBad |= v0 & INVALID_HEX_NIBBLE;\n        haveBad |= v1 & INVALID_HEX_NIBBLE;\n    }\n    if (haveBad !== 0) {\n        throw new Error(\"hex: incorrect characters for decoding\");\n    }\n    return result;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { withRetry } from './request';\n\ntype Props = { username: string | null };\n\ntype Holder = { name: string; pubkey: string; balance: number; color: string };\n\nconst VolorePanel: React.FC<Props> = ({ username }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [total, setTotal] = useState<number>(0);\n  const [used, setUsed] = useState<number>(0);\n  const [available, setAvailable] = useState<number>(0);\n  const [address, setAddress] = useState<string>('');\n  // const [top, setTop] = useState<Holder[]>([]);\n  const [topHolders, setTopHolders] = useState<Holder[]>([]);\n  const [toPubkey, setToPubkey] = useState('');\n  const [amount, setAmount] = useState<number>(0);\n  const [txMsg, setTxMsg] = useState<string | null>(null);\n  const [copied, setCopied] = useState<boolean>(false);\n  const [confirmOpen, setConfirmOpen] = useState<boolean>(false);\n\n  // removed unused constant\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Volchain stats (address only; total will be derived from Digzone grid)\n        const volResp = await fetch(`/stats/volchain?username=${encodeURIComponent(username || '')}`);\n        const vol = await volResp.json();\n        if (vol?.volchain?.currentUser?.pubkey) setAddress(vol.volchain.currentUser.pubkey);\n\n        // GridB for used (defense sum)\n        const gbResp = await fetch('/gridb');\n        const gridb = await gbResp.json();\n        const u = Array.isArray(gridb)\n          ? gridb.filter((b: any) => b && b.owner === username).reduce((s: number, b: any) => s + (typeof b.defense === 'number' ? b.defense : 1), 0)\n          : 0;\n        setUsed(u);\n\n        // Digzone grid for total (source of truth)\n        try {\n          const gResp = await fetch('/grid');\n          const g = await gResp.json();\n          const mined = Array.isArray(g) ? g.filter((b: any) => b && b.dugBy === username).length : 0;\n          setTotal(mined);\n          setAvailable(mined - u);\n        } catch {}\n\n        // Top Volore Holders (Volchain)\n        try {\n          const tmResp = await fetch('/volchain/holders?limit=3');\n          const tm = await tmResp.json();\n          if (Array.isArray(tm)) {\n            (window as any).__topHoldersCache = tm.map((h: any) => ({\n              name: h.name || (typeof h.pubkey === 'string' ? h.pubkey.slice(0,8) : '-'),\n              color: h.color || '#888',\n              balance: h.balance || 0,\n              pubkey: h.pubkey || ''\n            }));\n          }\n        } catch {}\n\n        // Top holders (by Volore balance on Volchain)\n        try {\n          const thResp = await fetch('/volchain/holders?limit=3');\n          const th = await thResp.json();\n          if (Array.isArray(th)) {\n            const mapped: Holder[] = th.map((h: any) => ({\n              name: h.name || (typeof h.pubkey === 'string' ? h.pubkey.slice(0,8) : '-'),\n              color: h.color || '#888',\n              balance: h.balance || 0,\n              pubkey: h.pubkey || ''\n            }));\n            setTopHolders(mapped);\n            try { (window as any).__topHoldersCache = mapped; } catch {}\n          }\n        } catch {}\n      } catch (e: any) {\n        setError(e?.message || 'Failed to load Volore stats');\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [username]);\n\n  const sessionToken = (typeof window !== 'undefined') ? (localStorage.getItem('session_token') || '') : '';\n  const canSend = useMemo(() => available > 0 && /^([0-9a-fA-F]{64})$/.test(toPubkey) && amount > 0 && amount <= available && !!sessionToken, [available, toPubkey, amount, sessionToken]);\n\n  const validationMessage = useMemo(() => {\n    if (!sessionToken) return 'Please log in to send Volore';\n    if (available <= 0) return 'No Available Volore to send';\n    if (address && toPubkey && toPubkey.toLowerCase() === address.toLowerCase()) return 'You cannot send Volore to yourself';\n    if (!/^([0-9a-fA-F]{64})$/.test(toPubkey)) return 'Invalid destination address (must be 64 hex)';\n    if (!amount || amount <= 0) return 'Amount must be greater than 0';\n    if (amount > available) return 'Amount exceeds Available Volore';\n    return '';\n  }, [sessionToken, available, toPubkey, amount, address]);\n  const showInlineValidation = (toPubkey.length > 0 || (typeof amount === 'number' && amount > 0)) && !!validationMessage && !canSend;\n\n  const handleCopyAddress = async () => {\n    try {\n      if (!address) return;\n      await navigator.clipboard.writeText(address);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 1500);\n    } catch {}\n  };\n\n  const handleSend = async () => {\n    try {\n      setTxMsg(null);\n      setError(null);\n      if (!canSend) {\n        if (validationMessage) setError(validationMessage);\n        return;\n      }\n      setConfirmOpen(false);\n      const resp = await withRetry('/volchain/transfer', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: { toPubkey, amount } }, 1);\n      const json = await resp.json();\n      if (!resp.ok || json?.error) {\n        setError(json?.error || 'Transfer failed');\n        return;\n      }\n      setTxMsg(`✅ Sent ${amount} Volore to ${toPubkey.slice(0,8)}…`);\n      // Refresh balances: Volchain total decreases by amount; used unchanged\n      setTotal(prev => Math.max(0, (typeof prev === 'number' ? prev : 0) - amount));\n      setAvailable(json.availableAfter ?? Math.max(0, available - amount));\n      setToPubkey('');\n      setAmount(0);\n    } catch (e: any) {\n      setError(e?.message || 'Transfer failed');\n    }\n  };\n\n  const handleClickSend = () => {\n    setTxMsg(null);\n    setError(null);\n    if (!canSend) {\n      if (validationMessage) setError(validationMessage);\n      return;\n    }\n    setConfirmOpen(true);\n  };\n\n  return (\n    <div>\n      {loading && <p>Loading Volore…</p>}\n      {error && <p style={{ color: '#c00' }}>❌ {error}</p>}\n\n      <div className=\"stats-section\">\n        <h4 className=\"section-title\">📊 Volore Balances</h4>\n        <div className=\"stats-row\">\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Total Volore:</span>\n            <span className=\"stat-value\">{total.toLocaleString()}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Used Volore (Warzone):</span>\n            <span className=\"stat-value\">{used.toLocaleString()}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Available Volore:</span>\n            <span className=\"stat-value highlight\">{available.toLocaleString()}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"stats-section\">\n        <h4 className=\"section-title\">🔗 Your Volchain Address</h4>\n        <div className=\"tech-info\">\n          <div className=\"tech-item\">\n            <span className=\"tech-label\">Address:</span>\n            <span className=\"tech-value tech-address\">{address ? `${address.slice(0,8)}...${address.slice(-8)}` : '-'}</span>\n            <button\n              type=\"button\"\n              onClick={handleCopyAddress}\n              title=\"Copy address\"\n              aria-label=\"Copy address\"\n              style={{ marginLeft: 8, padding: '2px 6px', borderRadius: 4, border: '1px solid #ccc', background: '#f7f7f7', cursor: 'pointer' }}\n            >\n              ⧉\n            </button>\n            {copied && <span style={{ marginLeft: 6, fontSize: 12, color: '#4CAF50' }}>Copied</span>}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"stats-section\">\n        <h4 className=\"section-title\">📤 Send Volore</h4>\n        <div className=\"stats-row\" style={{ gap: 12, flexWrap: 'wrap' }}>\n          <input\n            placeholder=\"Receiver Volchain address (64-hex)\"\n            value={toPubkey}\n            onChange={e => setToPubkey(e.target.value.trim())}\n            style={{ flex: '1 1 320px', padding: 8 }}\n          />\n          <input\n            type=\"number\"\n            placeholder={`Amount (max ${available})`}\n            value={amount || ''}\n            min={1}\n            max={available}\n            onChange={e => setAmount(Number(e.target.value))}\n            style={{ width: 160, padding: 8 }}\n          />\n          <button className=\"settings-button\" disabled={!canSend} onClick={handleClickSend}>\n            Send\n          </button>\n        </div>\n        {showInlineValidation && !error && <p style={{ color: '#c00' }}>❗ {validationMessage}</p>}\n        {txMsg && <p>{txMsg}</p>}\n      </div>\n\n      {confirmOpen && (\n        <div style={{ position: 'fixed', inset: 0, background: 'rgba(0,0,0,0.35)', display: 'flex', alignItems: 'center', justifyContent: 'center', zIndex: 1000 }}>\n          <div style={{ background: '#fff', padding: 20, borderRadius: 8, maxWidth: 420, width: '90%', boxShadow: '0 6px 24px rgba(0,0,0,0.2)' }}>\n            <h4 style={{ marginTop: 0, marginBottom: 12 }}>Confirm Transfer</h4>\n            <p style={{ marginTop: 0 }}>Do you really want to send <strong>{amount}</strong> Volore to<br/>\n              <span style={{ fontFamily: 'monospace' }}>{toPubkey.slice(0,12)}…{toPubkey.slice(-12)}</span>?</p>\n            <div style={{ display: 'flex', gap: 12, justifyContent: 'flex-end' }}>\n              <button className=\"settings-button\" onClick={() => setConfirmOpen(false)} style={{ background: '#e0e0e0', color: '#333' }}>Cancel</button>\n              <button className=\"settings-button\" onClick={handleSend} style={{ background: '#4CAF50', color: '#fff' }}>Send</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Top Volore Miners section removed in favor of holders-only */}\n\n      <div className=\"stats-section\">\n        <h4 className=\"section-title\">🏅 Top Volore Holders</h4>\n        <div className=\"top-miners-list\">\n          {topHolders.map((h, i) => (\n            <div key={h.pubkey + i} className=\"miner-item\">\n              <span className=\"miner-rank\">{i + 1}</span>\n              <div className=\"miner-color\" style={{ backgroundColor: h.color || '#e0e0e0' }}></div>\n              <span className=\"miner-name\">{h.name}</span>\n              <span className=\"miner-blocks\">{h.balance}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      \n    </div>\n  );\n};\n\nexport default VolorePanel;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"./Grid\";\nimport Login from \"./Login\";\nimport About from \"./About\";\nimport GridB from \"./GridB\";\nimport BlockchainStats from \"./BlockchainStats\";\nimport MenuDropdownPortal from \"./components/MenuDropdownPortal\";\nimport VolchainActivity from './components/VolchainActivity';\nimport \"./App.css\";\nimport \"./Mobile.css\";\nimport \"./Modal.css\";\nimport nacl from 'tweetnacl';\nimport { encode, decode as hexDecode } from '@stablelib/hex';\nimport VolorePanel from './components/VolorePanel';\nimport { withRetry } from './components/request';\n\n// Keystore helpers (AES-GCM PBKDF2)\nfunction toHex(bytes: Uint8Array): string { return Array.from(bytes).map(b=>b.toString(16).padStart(2,'0')).join(''); }\nfunction fromHex(hex: string): Uint8Array { const out=new Uint8Array(hex.length/2); for(let i=0;i<hex.length;i+=2) out[i/2]=parseInt(hex.slice(i,i+2),16); return out; }\nasync function deriveKeyFromPassword(password: string, salt: Uint8Array) {\n  const enc = new TextEncoder();\n  const keyMaterial = await crypto.subtle.importKey('raw', enc.encode(password), { name:'PBKDF2' }, false, ['deriveKey']);\n  return crypto.subtle.deriveKey({ name:'PBKDF2', salt, iterations:100000, hash:'SHA-256' }, keyMaterial, { name:'AES-GCM', length:256 }, false, ['encrypt','decrypt']);\n}\nasync function encryptKeystore(privHex: string, password: string) {\n  const iv = crypto.getRandomValues(new Uint8Array(12));\n  const salt = crypto.getRandomValues(new Uint8Array(16));\n  const key = await deriveKeyFromPassword(password, salt);\n  const ct = new Uint8Array(await crypto.subtle.encrypt({ name:'AES-GCM', iv }, key, new TextEncoder().encode(privHex)));\n  return JSON.stringify({ kdf:'pbkdf2-sha256', c:'aes-256-gcm', iv: toHex(iv), salt: toHex(salt), ct: toHex(ct) });\n}\nasync function decryptKeystore(keystore: string, password: string) {\n  const data = JSON.parse(keystore);\n  const key = await deriveKeyFromPassword(password, fromHex(data.salt));\n  const plain = await crypto.subtle.decrypt({ name:'AES-GCM', iv: fromHex(data.iv) }, key, fromHex(data.ct));\n  return new TextDecoder().decode(plain);\n}\n\n// Keypair üret (yalnızca ilk kayıt/keystore yoksa)\nfunction generateKeypair() {\n  const kp = nacl.sign.keyPair();\n  const pubHex = encode(kp.publicKey);\n  const privHex = encode(kp.secretKey);\n  localStorage.setItem('user_pubkey', pubHex);\n  localStorage.setItem('user_privkey', privHex);\n  return { pubHex, privHex };\n}\n\nconst App: React.FC = () => {\n  const [username, setUsername] = useState<string | null>(null);\n  const [userColor, setUserColor] = useState<string | null>(null);\n  const [showSettings, setShowSettings] = useState<boolean>(false);\n  const [showAbout, setShowAbout] = useState<boolean>(false);\n  const [showContactUs, setShowContactUs] = useState<boolean>(false);\n\n  const [showMenu, setShowMenu] = useState<boolean>(false);\n  const [showGridB, setShowGridB] = useState<boolean>(false);\n  const [showBlockchainStats, setShowBlockchainStats] = useState<boolean>(false);\n  const [showVolore, setShowVolore] = useState<boolean>(false);\n  const [tokenBalance, setTokenBalance] = useState<number>(0);\n  const [showVolchainActivity, setShowVolchainActivity] = useState<boolean>(false);\n  const [serverPowPub, setServerPowPub] = useState<string>('');\n  const [blockData, setBlockData] = useState<any[]>([]);\n\n\n\n\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n  const [currentPassword, setCurrentPassword] = useState<string>(\"\");\n  const [newPassword, setNewPassword] = useState<string>(\"\");\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\n  const [selectedColor, setSelectedColor] = useState<string | null>(userColor);\n  const [newUsername, setNewUsername] = useState<string>(\"\");\n  \n  // Contact Us form states\n  const [contactName, setContactName] = useState<string>(\"\");\n  const [contactEmail, setContactEmail] = useState<string>(\"\");\n  const [contactMessage, setContactMessage] = useState<string>(\"\");\n\n  useEffect(() => {\n    try {\n      const hasPub = !!localStorage.getItem('user_pubkey');\n      const hasPriv = !!localStorage.getItem('user_privkey');\n      if (!hasPub || !hasPriv) {\n        generateKeypair();\n      }\n    } catch {}\n  }, []);\n  \n  // Warm up chain id for request wrapper early\n  useEffect(() => {\n    try { withRetry('/chain/info', { method: 'GET' }, 1).catch(()=>{}); } catch {}\n  }, []);\n\n  useEffect(() => {\n    const storedName = localStorage.getItem(\"username\");\n    if (storedName) {\n      setUsername(storedName);\n      const savedColor = localStorage.getItem(`color_${storedName}`);\n      if (savedColor) setUserColor(savedColor);\n      // legacy wallet storage ignored\n    }\n  }, []);\n\n  // When the user logs in: restore or save keystore (silent with login password)\n  useEffect(() => {\n    if (username) {\n      const sessionToken = localStorage.getItem('session_token');\n      if (sessionToken) {\n        withRetry('/auth/keystore', { method: 'GET', headers: { 'X-Session-Token': sessionToken } }, 1)\n          .then(res => res.json())\n          .then(async (resp) => {\n            const serverKeystore = resp?.powKeystore as string | null;\n            const serverPub = resp?.powPubkey as string | null;\n            if (serverPub) setServerPowPub(serverPub);\n            const localPub = localStorage.getItem('user_pubkey');\n            const localPriv = localStorage.getItem('user_privkey');\n\n            // If server has keystore and local is missing wallet: restore using login password silently\n            if (serverKeystore && (!localPub || !localPriv)) {\n              const pw = sessionStorage.getItem('login_password') || '';\n              if (pw) {\n                try {\n                  const privHex = await decryptKeystore(serverKeystore, pw);\n                  const sk = hexDecode(privHex);\n                  const pubBytes = nacl.sign.keyPair.fromSecretKey(Uint8Array.from(sk)).publicKey;\n                  const pubHex = encode(pubBytes);\n                  if (!serverPub || serverPub === pubHex) {\n                    localStorage.setItem('user_pubkey', pubHex);\n                    localStorage.setItem('user_privkey', privHex);\n                    console.log('Wallet restored on this device.');\n                  } else {\n                    // Prefer server side key: adopt server pub and decrypted priv\n                    localStorage.setItem('user_pubkey', serverPub);\n                    localStorage.setItem('user_privkey', privHex);\n                    console.warn('Local wallet mismatched; adopted server wallet.');\n                  }\n                } catch {\n                  console.warn('Failed to decrypt wallet with login password.');\n                }\n              }\n            }\n\n            // If both exist but differ: prefer server version when we can verify by decrypting\n            if (serverKeystore && serverPub && localPub && localPriv && localPub !== serverPub) {\n              try {\n                const pw = sessionStorage.getItem('login_password') || '';\n                if (pw) {\n                  const privHex = await decryptKeystore(serverKeystore, pw);\n                  const sk = hexDecode(privHex);\n                  const derivedPub = encode(nacl.sign.keyPair.fromSecretKey(Uint8Array.from(sk)).publicKey);\n                  if (derivedPub === serverPub) {\n                    localStorage.setItem('user_pubkey', serverPub);\n                    localStorage.setItem('user_privkey', privHex);\n                    console.warn('Local wallet updated to match server.');\n                  }\n                }\n              } catch {}\n            }\n\n            // First-time: no keystore on server (encrypt with login password silently)\n            if (!serverKeystore) {\n              let pub = localStorage.getItem('user_pubkey');\n              let priv = localStorage.getItem('user_privkey');\n              if (!pub || !priv) {\n                const kp = generateKeypair();\n                pub = kp.pubHex; priv = kp.privHex;\n                try {\n                  await withRetry('/auth/associate-pow-key', { method: 'POST', headers: { 'Content-Type': 'application/json', 'X-Session-Token': sessionToken }, body: { powPubkey: pub } }, 1);\n                } catch {}\n              }\n              const setPw = sessionStorage.getItem('login_password') || '';\n              if (setPw) {\n                try {\n                  const ks = await encryptKeystore(priv!, setPw);\n                  await withRetry('/auth/save-keystore', { method: 'POST', headers: { 'Content-Type': 'application/json', 'X-Session-Token': sessionToken }, body: { powKeystore: ks, powPubkey: pub } }, 1);\n                } catch {}\n              }\n            }\n\n            // If serverPub missing or invalid (placeholder/dummy) but we have a valid local pub, associate it now\n            const isPlaceholder = (hex: string) => !!hex && (/^0{64}$/.test(hex) || /^([0-9a-fA-F]{16})\\1\\1\\1$/.test(hex));\n            if ((!serverPub || !/^[0-9a-fA-F]{64}$/.test(serverPub) || isPlaceholder(serverPub)) && localPub && /^[0-9a-fA-F]{64}$/.test(localPub)) {\n              try {\n                await withRetry('/auth/associate-pow-key', { method: 'POST', headers: { 'Content-Type': 'application/json', 'X-Session-Token': sessionToken }, body: { powPubkey: localPub } }, 1);\n                setServerPowPub(localPub);\n              } catch {}\n            }\n\n            // If both server and local pubkeys are invalid/placeholder: generate new locally and associate\n            if ((!serverPub || isPlaceholder(serverPub) || !/^[0-9a-fA-F]{64}$/.test(serverPub)) && (!localPub || isPlaceholder(localPub) || !/^[0-9a-fA-F]{64}$/.test(localPub))) {\n              try {\n                const kp = generateKeypair();\n                await withRetry('/auth/associate-pow-key', { method: 'POST', headers: { 'Content-Type': 'application/json', 'X-Session-Token': sessionToken }, body: { powPubkey: kp.pubHex } }, 1);\n                setServerPowPub(kp.pubHex);\n                const setPw = sessionStorage.getItem('login_password') || '';\n                if (setPw) {\n                  const ks = await encryptKeystore(kp.privHex, setPw);\n                  await withRetry('/auth/save-keystore', { method: 'POST', headers: { 'Content-Type': 'application/json', 'X-Session-Token': sessionToken }, body: { powKeystore: ks, powPubkey: kp.pubHex } }, 1);\n                }\n              } catch {}\n            }\n          })\n          .catch(() => {});\n      }\n\n      withRetry(`/auth/user?username=${username}`, { method: 'GET' }, 1).catch(() => {});\n      try { sessionStorage.removeItem('login_password'); } catch {}\n    }\n  }, [username]);\n\n\n\n  useEffect(() => {\n    if (showSettings && username) {\n      withRetry(`/auth/user?username=${username}`, { method: 'GET' }, 1)\n        .then(res => res.json())\n        .then(user => {\n          setUserEmail(user.email);\n          setSelectedColor(user.color);\n        });\n      withRetry(`/stats/volchain?username=${encodeURIComponent(username)}`, { method: 'GET' }, 1)\n        .then(res => res.json())\n        .then(v => {\n          const serverPubFromStats = v?.volchain?.currentUser?.pubkey || '';\n          if (/^[0-9a-fA-F]{64}$/.test(serverPubFromStats)) {\n            setServerPowPub(serverPubFromStats);\n          }\n        })\n        .catch(() => {});\n    }\n  }, [showSettings, username]);\n\n  const handleLogin = (name: string, color: string) => {\n    localStorage.setItem(\"username\", name);\n    localStorage.setItem(`color_${name}`, color);\n    setUsername(name);\n    setUserColor(color);\n  };\n\n  const handleLogout = () => {\n    if (username) {\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(`color_${username}`);\n      setUsername(null);\n      setUserColor(null);\n      setShowSettings(false);\n      setShowAbout(false);\n      setShowContactUs(false);\n\n      setShowMenu(false);\n      setShowGridB(false);\n    }\n  };\n\n  const handleChangePassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      alert(\"New passwords do not match\");\n      return;\n    }\n    if (newPassword.length < 8) {\n      alert(\"New password must be at least 8 characters\");\n      return;\n    }\n    try {\n      const response = await fetch(`/auth/change-password`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, currentPassword, newPassword }),\n      });\n      const _result = await response.json();\n      if (!response.ok) {\n        alert(_result.error || \"Password change failed\");\n        return;\n      }\n      // After password change, re-encrypt keystore with new password and save\n      try {\n        const sessionToken = localStorage.getItem('session_token');\n        if (sessionToken) {\n          let pubHex = localStorage.getItem('user_pubkey') || '';\n          let privHex = localStorage.getItem('user_privkey') || '';\n          if (!privHex) {\n            // Try get server keystore and decrypt with OLD password\n            const ksResp = await fetch('/auth/keystore', { headers: { 'X-Session-Token': sessionToken } });\n            const ksJson = await ksResp.json();\n            const serverKeystore = ksJson?.powKeystore as string | null;\n            const serverPub = ksJson?.powPubkey as string | null;\n            if (serverKeystore) {\n              try {\n                const decrypted = await decryptKeystore(serverKeystore, currentPassword);\n                privHex = decrypted;\n                const sk = hexDecode(privHex);\n                const pubBytes = nacl.sign.keyPair.fromSecretKey(Uint8Array.from(sk)).publicKey;\n                const derivedPub = encode(pubBytes);\n                if (!pubHex) pubHex = derivedPub;\n                if (!serverPub || serverPub === derivedPub) {\n                  localStorage.setItem('user_pubkey', derivedPub);\n                  localStorage.setItem('user_privkey', privHex);\n                }\n              } catch {\n                console.warn('Keystore decrypt with old password failed; skipping re-encrypt');\n              }\n            }\n          }\n          if (privHex && pubHex) {\n            try {\n              const newKs = await encryptKeystore(privHex, newPassword);\n              await fetch('/auth/save-keystore', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'X-Session-Token': sessionToken },\n                body: JSON.stringify({ powKeystore: newKs, powPubkey: pubHex })\n              });\n            } catch (e) {\n              console.warn('Failed to save re-encrypted keystore:', e);\n            }\n          }\n        }\n      } catch (e) {\n        console.warn('Post-change keystore update failed:', e);\n      }\n\n      alert(\"Password changed successfully\");\n      setCurrentPassword(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n    } catch (error: any) {\n      alert(\"Password change error: \" + error.message);\n    }\n  };\n\n  const colorOptions = [\n    \"#FFCDD2\", \"#F8BBD0\", \"#E1BEE7\", \"#D1C4E9\", \"#C5CAE9\",\n    \"#BBDEFB\", \"#B2EBF2\", \"#C8E6C9\", \"#DCEDC8\", \"#FFF9C4\",\n    \"#FFE0B2\", \"#FFCCBC\", \"#D7CCC8\", \"#26A69A\", \"#CFD8DC\",\n    \"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\",\n    \"#2196F3\", \"#03A9F4\", \"#00BCD4\", \"#009688\", \"#4CAF50\",\n    \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\",\n    \"#FF5722\", \"#795548\", \"#607D8B\"\n  ];\n\n  const handleUpdateColor = async () => {\n    if (!selectedColor) {\n      alert(\"Please select a color\");\n      return;\n    }\n    try {\n      const response = await fetch(`/auth/update-color`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, color: selectedColor }),\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        alert(json?.error || \"Color update failed\");\n        return;\n      }\n      alert(\"Color updated successfully\");\n      window.location.reload();\n    } catch (error: any) {\n      alert(\"Color update error: \" + error.message);\n    }\n  };\n\n  const handleContactSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!contactName || !contactEmail || !contactMessage) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n    try {\n      const sessionToken = localStorage.getItem(\"session_token\");\n      if (!sessionToken) {\n        alert(\"Please log in again to send a message.\");\n        return;\n      }\n      \n      const response = await fetch(`/api/contact`, {\n        method: \"POST\",\n        headers: { \n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${sessionToken}`\n        },\n        body: JSON.stringify({\n          name: contactName,\n          email: contactEmail,\n          message: contactMessage,\n          username: username\n        }),\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(result.error || \"Failed to send message\");\n        return;\n      }\n      alert(\"Your message has been sent successfully! We'll get back to you soon.\");\n      setContactName(\"\");\n      setContactEmail(\"\");\n      setContactMessage(\"\");\n      setShowContactUs(false);\n    } catch (error: any) {\n      alert(\"Error sending message: \" + error.message);\n    }\n  };\n\n  const handleUpdateUsername = async () => {\n    if (!newUsername || newUsername.length < 3) {\n      alert(\"New username must be at least 3 characters\");\n      return;\n    }\n    try {\n      const response = await fetch(`/api/update-username`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ currentUsername: username, newUsername }),\n      });\n      if (!response.ok) {\n        const text = await response.text();\n        console.error(\"Username update failed, response:\", text);\n        alert(\"Username update failed: \" + text);\n        return;\n      }\n      await response.json();\n      // Oturumu sıfırla ve kullanıcıyı logout et\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(`color_${username}`);\n      localStorage.removeItem(\"session_token\");\n      setUsername(null);\n      setUserColor(null);\n      setShowSettings(false);\n      setShowAbout(false);\n      setShowContactUs(false);\n      setShowMenu(false);\n      setShowGridB(false);\n      setNewUsername(\"\");\n      alert(\"Username updated successfully! Please log in again with your new username.\");\n      // Sayfayı yenile (isteğe bağlı)\n      window.location.reload();\n    } catch (error: any) {\n      console.error(\"Username update error:\", error);\n      alert(`Username update error: ${error.message}`);\n    }\n  };\n\n  // Volchain Live page removed\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"fixed-header-bg\" />\n      <header className=\"top-bar\">\n        {username && userColor && (\n          <div className=\"button-container\">\n            <button\n              className=\"menu-button\"\n              onClick={() => setShowMenu(!showMenu)}\n              aria-label=\"Toggle Menu\"\n            >\n              ☰\n            </button>\n          </div>\n        )}\n        <h1 className=\"title\">⛏ BlockMiningGame</h1>\n        {username && userColor && (\n          <div className=\"welcome-header\">Welcome {username}</div>\n        )}\n      </header>\n      <MenuDropdownPortal\n        open={showMenu}\n        onInfo={() => { setShowAbout(true); setShowMenu(false); }}\n        onSettings={() => { setShowSettings(true); setShowMenu(false); }}\n        onVolore={() => { setShowVolore(true); setShowMenu(false); }}\n        onVolchainActivity={() => { setShowVolchainActivity(true); setShowMenu(false); }}\n        onContact={() => { setShowContactUs(true); setShowMenu(false); }}\n        onLogout={() => { handleLogout(); setShowMenu(false); }}\n      />\n      <div className=\"header-overlay\"></div>\n      <div className=\"scrollable-content\">\n        <div className=\"content-container\">\n          <div className=\"banner-placeholder\">\n            <div className=\"banner-content\">\n              <img \n                src=\"/ads/banner.jpg\" \n                alt=\"Advertisement\" \n                className=\"banner-image\"\n                onError={(e) => {\n                  e.currentTarget.style.display = 'none';\n                  if (e.currentTarget.parentElement) {\n                    e.currentTarget.parentElement.innerHTML = 'Ad Banner (728x90)';\n                  }\n                }}\n              />\n            </div>\n          </div>\n          {username && userColor && !showAbout && (\n            <>\n              <div className=\"button-group\">\n                {/* Reset Blocks button removed */}\n                <button\n                  onClick={() => setShowGridB(!showGridB)}\n                  className=\"action-button my-blocks-button\"\n                  aria-label={showGridB ? \"Digzone\" : \"Warzone\"}\n                >\n                  {showGridB ? \"Digzone\" : \"Warzone\"}\n                </button>\n\n                <button\n                  onClick={() => setShowBlockchainStats(true)}\n                  className=\"action-button blockchain-stats-button\"\n                  aria-label=\"Volchain Stats\"\n                  style={{\n                    background: 'linear-gradient(135deg, #4CAF50 0%, #45a049 100%)',\n                    color: 'white',\n                    border: 'none',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  🔗 Volchain Stats\n                </button>\n                {/* Volchain Live link removed */}\n              </div>\n            </>\n          )}\n          \n          {username && userColor ? (\n            showAbout ? (\n              <About setShowAbout={setShowAbout} />\n            ) : showGridB ? (\n              <GridB\n                totalBlocks={blockData.length}\n                username={username}\n                userColor={userColor}\n                tokenBalance={tokenBalance}\n                setTokenBalance={setTokenBalance}\n                setBlockData={setBlockData}\n              />\n            ) : (\n              <Grid\n                username={username}\n                userColor={userColor}\n                showSettings={showSettings}\n                setShowSettings={setShowSettings}\n                handleLogout={handleLogout}\n\n                setUsername={setUsername}\n                tokenBalance={tokenBalance}\n                setTokenBalance={setTokenBalance}\n                blockData={blockData}\n                setBlockData={setBlockData}\n              />\n            )\n          ) : (\n            <Login onLogin={handleLogin} />\n          )}\n        </div>\n        {showSettings && (\n          <div className=\"settings-modal\">\n            <div className=\"settings-content\">\n              <div className=\"modal-header\">\n                <h3 className=\"modal-title\">⚙️ Settings</h3>\n                <button \n                  className=\"modal-close-x\" \n                  onClick={() => setShowSettings(false)}\n                  aria-label=\"Close\"\n                >\n                  ×\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <p><strong>Email:</strong> {userEmail}</p>\n                <p><strong>Username:</strong> {username}</p>\n                <div className=\"form-group\">\n                  <label>Color Selection:</label>\n                  <div className=\"color-picker\">\n                    {colorOptions.map((color) => (\n                      <div\n                        key={color}\n                        onClick={() => setSelectedColor(color)}\n                        style={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          backgroundColor: color,\n                          border: selectedColor === color ? \"3px solid black\" : \"1px solid #888\",\n                          cursor: \"pointer\",\n                          borderRadius: \"4px\",\n                          display: \"inline-block\",\n                          marginRight: \"4px\",\n                        }}\n                        title={color}\n                      />\n                    ))}\n                  </div>\n                  <button className=\"settings-button\" onClick={handleUpdateColor}>\n                    Update Color\n                  </button>\n                </div>\n                <form onSubmit={handleChangePassword}>\n                  <div className=\"form-group\">\n                    <label>Current Password:</label>\n                    <input\n                      className=\"settings-input\"\n                      type=\"password\"\n                      value={currentPassword}\n                      onChange={(e) => setCurrentPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>New Password:</label>\n                    <input\n                      className=\"settings-input\"\n                      type=\"password\"\n                      value={newPassword}\n                      onChange={(e) => setNewPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Confirm New Password:</label>\n                    <input\n                      className=\"settings-input\"\n                      type=\"password\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <button className=\"settings-button\" type=\"submit\">\n                    Change Password\n                  </button>\n                </form>\n                <div className=\"form-group\">\n                  <label>New Username:</label>\n                  <input\n                    className=\"settings-input\"\n                    type=\"text\"\n                    value={newUsername}\n                    onChange={(e) => setNewUsername(e.target.value)}\n                    placeholder=\"Enter new username\"\n                  />\n                  <button className=\"settings-button\" onClick={handleUpdateUsername}>\n                    Update Username\n                  </button>\n                </div>\n                <div className=\"form-group\">\n                  <label>Volchain Address (Server):</label>\n                  <input\n                    className=\"settings-input\"\n                    type=\"text\"\n                    value={serverPowPub || localStorage.getItem('user_pubkey') || ''}\n                    readOnly\n                    placeholder=\"Your Volchain address will appear here\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"settings-button\"\n                    style={{ marginTop: 8 }}\n                    onClick={async () => {\n                      const v = serverPowPub || localStorage.getItem('user_pubkey') || '';\n                      if (!v) return;\n                      try { await navigator.clipboard.writeText(v); alert('Address copied'); } catch {}\n                    }}\n                    aria-label=\"Copy Volchain address\"\n                    title=\"Copy Volchain address\"\n                  >\n                    ⧉ Copy\n                  </button>\n                </div>\n                \n\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Tokenomics removed */}\n      {false && (\n        <div className=\"settings-modal\">\n          <div className=\"settings-content\">\n            <div className=\"modal-header\">\n              <h3 className=\"modal-title\">💰 Volore Tokenomics</h3>\n              <button \n                className=\"modal-close-x\" \n                onClick={() => {}}\n                aria-label=\"Close\"\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div style={{ marginBottom: '24px' }}>\n                <h4 style={{ color: '#4CAF50', marginBottom: '12px' }}>🔸 Token Basics</h4>\n                <p><strong>Name:</strong> Volore Token</p>\n                <p><strong>Symbol:</strong> VOLORE</p>\n                <p><strong>Network:</strong> Solana Devnet</p>\n                <p><strong>Decimals:</strong> 9</p>\n                <p><strong>Type:</strong> SPL Token</p>\n                <p><strong>Contract:</strong> <span style={{ fontSize: '12px', fontFamily: 'monospace', backgroundColor: '#e8e8e8', padding: '2px 4px', borderRadius: '3px' }}>7gryqXLucgivS9NHgnA22WFZqLG8jU317pBJYeWkGynH</span></p>\n                <p><strong>Explorer:</strong> <a href=\"https://explorer.solana.com/address/7gryqXLucgivS9NHgnA22WFZqLG8jU317pBJYeWkGynH?cluster=devnet\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#2196F3', textDecoration: 'none' }}>View on Solana Explorer ↗</a></p>\n              </div>\n\n              <div style={{ marginBottom: '24px' }}>\n                <h4 style={{ color: '#E91E63', marginBottom: '12px' }}>🔸 Supply Info</h4>\n                <p><strong>Total Supply:</strong> Unlimited (minted on-demand)</p>\n                <p><strong>Circulating Supply:</strong> Based on player activity</p>\n                <p><strong>Max Daily Supply:</strong> Limited by mining mechanics</p>\n                <p><strong>Market Cap:</strong> N/A (Devnet token)</p>\n                <p><strong>Initial Price:</strong> N/A (No monetary value)</p>\n              </div>\n\n              <div style={{ marginBottom: '24px' }}>\n                <h4 style={{ color: '#2196F3', marginBottom: '12px' }}>🔸 How to Earn Volore</h4>\n                <ul style={{ paddingLeft: '20px', lineHeight: '1.6' }}>\n                  <li><strong>Mining:</strong> Dig blocks in Digzone</li>\n                  <li><strong>PvP Combat:</strong> Battle in Warzone</li>\n                  <li><strong>Castle Bonuses:</strong> Auto-mining from 10+ defense blocks</li>\n                  <li><strong>Reset Warzone:</strong> Convert warzone blocks to Volore</li>\n                </ul>\n              </div>\n\n              <div style={{ marginBottom: '24px' }}>\n                <h4 style={{ color: '#FF9800', marginBottom: '12px' }}>🔸 Token Economics</h4>\n                <ul style={{ paddingLeft: '20px', lineHeight: '1.6' }}>\n                  <li><strong>Exchange Rate:</strong> 1 Block = 1 Volore</li>\n                  <li><strong>Reset System:</strong> Warzone blocks → Volore tokens</li>\n                  <li><strong>Supply Control:</strong> Earned through gameplay only</li>\n                  <li><strong>Deflationary:</strong> Limited by game mechanics</li>\n                </ul>\n              </div>\n\n              <div style={{ marginBottom: '24px' }}>\n                <h4 style={{ color: '#795548', marginBottom: '12px' }}>🔸 Token Utility</h4>\n                <ul style={{ paddingLeft: '20px', lineHeight: '1.6' }}>\n                  <li><strong>Proof of Mining:</strong> Verifiable gaming achievement</li>\n                  <li><strong>Leaderboard Status:</strong> Tracks player performance</li>\n                  <li><strong>Portfolio Token:</strong> Add to wallet collection</li>\n                  <li><strong>Future Features:</strong> Potential staking, governance</li>\n                  <li><strong>Developer Testing:</strong> Blockchain gaming mechanics</li>\n                </ul>\n              </div>\n\n              <div style={{ marginBottom: '24px' }}>\n                <h4 style={{ color: '#9C27B0', marginBottom: '12px' }}>🔸 Wallet Setup</h4>\n                <ol style={{ paddingLeft: '20px', lineHeight: '1.6' }}>\n                  <li>Install Phantom/Solflare wallet</li>\n                  <li>Switch to <strong>Devnet</strong> network</li>\n                  <li>Copy your wallet address</li>\n                  <li>Add address in Settings</li>\n                  <li>Reset warzone to earn Volore!</li>\n                </ol>\n              </div>\n\n              <div style={{ padding: '16px', backgroundColor: '#f5f5f5', borderRadius: '8px', border: '1px solid #ddd' }}>\n                <p style={{ margin: '0', fontSize: '14px', color: '#666' }}>\n                  <strong>⚠️ Important:</strong> Volore is on Solana <em>Devnet</em> for testing purposes. \n                  This is not a real cryptocurrency and has no monetary value.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Contact Us Modal */}\n      {showContactUs && (\n        <div className=\"settings-modal\">\n          <div className=\"settings-content\">\n            <div className=\"modal-header\">\n              <h3 className=\"modal-title\">📧 Contact Us</h3>\n              <button \n                className=\"modal-close-x\" \n                onClick={() => setShowContactUs(false)}\n                aria-label=\"Close\"\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p style={{ marginBottom: '16px', color: '#666' }}>\n                Have a question, suggestion, or found a bug? We'd love to hear from you!\n              </p>\n              <form onSubmit={handleContactSubmit}>\n                <div className=\"form-group\">\n                  <label>Your Name:</label>\n                  <input\n                    type=\"text\"\n                    value={contactName}\n                    onChange={(e) => setContactName(e.target.value)}\n                    placeholder=\"Enter your name\"\n                    className=\"form-input\"\n                    required\n                    title=\"Please enter your name\"\n                    onInvalid={(e) => e.currentTarget.setCustomValidity('Please enter your name')}\n                    onInput={(e) => e.currentTarget.setCustomValidity('')}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Email Address:</label>\n                  <input\n                    type=\"email\"\n                    value={contactEmail}\n                    onChange={(e) => setContactEmail(e.target.value)}\n                    placeholder=\"Enter your email\"\n                    className=\"form-input\"\n                    required\n                    title=\"Please enter a valid email address\"\n                    onInvalid={(e) => e.currentTarget.setCustomValidity('Please enter a valid email address')}\n                    onInput={(e) => e.currentTarget.setCustomValidity('')}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Message:</label>\n                  <textarea\n                    value={contactMessage}\n                    onChange={(e) => setContactMessage(e.target.value)}\n                    placeholder=\"Tell us about your issue, suggestion, or feedback...\"\n                    className=\"form-textarea\"\n                    rows={6}\n                    required\n                    title=\"Please enter your message\"\n                    onInvalid={(e) => e.currentTarget.setCustomValidity('Please enter your message')}\n                    onInput={(e) => e.currentTarget.setCustomValidity('')}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"settings-button\">\n                    Send Message\n                  </button>\n                  <button \n                    type=\"button\" \n                    className=\"settings-button cancel-button\" \n                    onClick={() => setShowContactUs(false)}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Blockchain Stats Modal */}\n      <BlockchainStats \n        isVisible={showBlockchainStats}\n        onClose={() => setShowBlockchainStats(false)}\n        username={username}\n      />\n      {/* Volore Modal */}\n      {showVolore && (\n        <div className=\"settings-modal\" onClick={() => setShowVolore(false)}>\n          <div className=\"settings-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3 className=\"modal-title\">💰 Volore</h3>\n              <button className=\"modal-close-x\" onClick={() => setShowVolore(false)} aria-label=\"Close\">×</button>\n            </div>\n            <div className=\"modal-body\">\n              <VolorePanel username={username} />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Volchain Activity Modal */}\n      {showVolchainActivity && (\n        <div className=\"settings-modal\" onClick={() => setShowVolchainActivity(false)}>\n          <div className=\"settings-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3 className=\"modal-title\">🧾 Volchain Activity</h3>\n              <button className=\"modal-close-x\" onClick={() => setShowVolchainActivity(false)} aria-label=\"Close\">×</button>\n            </div>\n            <div className=\"modal-body\">\n              <VolchainActivity autoRefreshMs={30000} />\n            </div>\n          </div>\n        </div>\n      )}\n      \n\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n// reportWebVitals removed\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// reportWebVitals removed\n"],"names":["Scheduler","require","React","ReactDOM","formatProdErrorMessage","code","url","arguments","length","encodeURIComponent","i","isValidContainer","node","nodeType","getNearestMountedFiber","fiber","nearestMounted","alternate","return","flags","tag","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","assertIsMounted","Error","findCurrentHostFiberImpl","child","sibling","assign","Object","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_ACTIVITY_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","REACT_CLIENT_REFERENCE","getComponentNameFromType","type","$$typeof","displayName","name","_context","innerType","render","_payload","_init","x","isArrayImpl","Array","isArray","ReactSharedInternals","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","sharedNotPendingObject","pending","data","method","action","valueStack","index","createCursor","defaultValue","current","pop","cursor","push","value","contextStackCursor","contextFiberStackCursor","rootInstanceStackCursor","hostTransitionProviderCursor","pushHostContainer","nextRootInstance","documentElement","namespaceURI","getOwnHostContext","tagName","getChildHostContextProd","popHostContainer","pushHostContext","context","JSCompiler_inline_result","popHostContext","HostTransitionContext","_currentValue","hasOwnProperty","prototype","scheduleCallback$3","unstable_scheduleCallback","cancelCallback$1","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","now","unstable_now","getCurrentPriorityLevel","unstable_getCurrentPriorityLevel","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority$1","unstable_NormalPriority","LowPriority","unstable_LowPriority","IdlePriority","unstable_IdlePriority","log$1","log","unstable_setDisableYieldValue","rendererID","injectedHook","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode","err","clz32","Math","LN2","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","pendingSyncLanes","getNextLanes","root","wipLanes","rootHasPendingCommit","pendingLanes","nextLanes","suspendedLanes","pingedLanes","warmLanes","nonIdlePendingLanes","checkIfRootIsPrerendering","renderLanes","computeExpirationTime","lane","currentTime","claimNextTransitionLane","claimNextRetryLane","createLaneMap","initial","laneMap","markRootUpdated$1","updateLane","markSpawnedDeferredLane","spawnedLane","entangledLanes","spawnedLaneIndex","entanglements","markRootEntangled","rootEntangledLanes","index$6","getBumpedLaneForHydrationByLane","lanesToEventPriority","resolveUpdatePriority","updatePriority","p","window","event","getEventPriority","randomKey","random","toString","slice","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","internalRootNodeResourcesKey","internalHoistableMarker","detachDeletedInstance","getClosestInstanceFromNode","targetNode","targetInst","parentNode","getParentSuspenseInstance","getInstanceFromNode","getNodeFromInstance","inst","stateNode","getResourcesFromRoot","resources","hoistableStyles","Map","hoistableScripts","markNodeAsHoistable","allNativeEvents","Set","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","add","prefix","suffix","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","setValueForAttribute","attributeName","call","test","removeAttribute","prefix$8","toLowerCase","setAttribute","setValueForKnownAttribute","setValueForNamespacedAttribute","namespace","setAttributeNS","describeBuiltInComponentFrame","match","stack","trim","indexOf","reentry","describeNativeComponentFrame","fn","construct","previousPrepareStackTrace","prepareStackTrace","RunInRootFrame","DetermineComponentFrameRoot","Fake","defineProperty","set","Reflect","control","x$9","x$10","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","configurable","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","includes","frame","replace","describeFiber","getStackByFiberInDevAndProd","workInProgress","info","message","getToStringValue","isCheckable","elem","nodeName","track","_valueTracker","valueField","descriptor","constructor","currentValue","get","this","enumerable","getValue","setValue","stopTracking","trackValueOnNode","updateValueIfChanged","tracker","lastValue","checked","getActiveElement","doc","document","activeElement","body","e","escapeSelectorAttributeValueInsideDoubleQuotesRegex","escapeSelectorAttributeValueInsideDoubleQuotes","ch","charCodeAt","updateInput","element","lastDefaultValue","defaultChecked","setDefaultValue","initInput","isHydrating","ownerDocument","updateOptions","multiple","propValue","setDefaultSelected","options","selected","defaultSelected","disabled","updateTextarea","initTextarea","children","textContent","setTextContent","text","firstChild","lastChild","nodeValue","unitlessNumbers","setValueForStyle","style","styleName","isCustomProperty","setProperty","cssFloat","has","setValueForStyles","styles","prevStyles","styleName$16","styleName$17","isCustomElement","aliases","isJavaScriptProtocol","sanitizeURL","currentReplayingEvent","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","props","a","querySelectorAll","otherNode","form","otherProps","isInsideEventHandler","batchedUpdates$1","b","flushSyncWork$1","getListener","canUseDOM","createElement","passiveBrowserEventsSupported","addEventListener","removeEventListener","startText","fallbackText","getData","start","end","startValue","startLength","endValue","endLength","minEnd","getEventCharCode","keyCode","charCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","propName","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","lastMovementX","lastMovementY","lastMouseEvent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","Date","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticMouseEvent","SyntheticDragEvent","dataTransfer","SyntheticFocusEvent","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticCompositionEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","SyntheticKeyboardEvent","key","String","fromCharCode","location","repeat","locale","which","SyntheticPointerEvent","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","propertyName","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticToggleEvent","newState","oldState","END_KEYCODES","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","hasSpaceKeypress","isFallbackCompositionEnd","domEventName","getDataFromCustomEvent","isComposing","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","time","week","isTextInputElement","createAndAccumulateChangeEvent","dispatchQueue","accumulateTwoPhaseListeners","listeners","activeElement$1","activeElementInst$1","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","JSCompiler_inline_result$jscomp$282","isSupported$jscomp$inline_417","element$jscomp$inline_418","oninput","stopWatchingForValueChange","detachEvent","handlePropertyChange","handleEventsForInputEventPolyfill","attachEvent","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","objectIs","is","y","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","getLeafNode","getNodeForCharacterOffset","offset","nodeEnd","nextSibling","containsNode","outerNode","innerNode","contains","compareDocumentPosition","getActiveElementDeep","containerInfo","defaultView","HTMLIFrameElement","contentWindow","href","hasSelectionCapabilities","contentEditable","skipSelectionChangeEvent","activeElementInst","lastSelection","mouseDown","constructSelectEvent","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","makePrefixMap","styleProp","eventName","prefixes","vendorPrefixes","animationend","animationiteration","animationstart","transitionrun","transitionstart","transitioncancel","transitionend","prefixedEventNames","getVendorPrefixedEventName","prefixMap","animation","transition","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_RUN","TRANSITION_START","TRANSITION_CANCEL","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","CapturedStacks","WeakMap","createCapturedValueAtFiber","source","existing","concurrentQueues","concurrentQueuesIndex","concurrentlyUpdatedLanes","finishQueueingConcurrentUpdates","endIndex","queue","update","next","markUpdateLaneFromFiberToRoot","enqueueUpdate$1","enqueueConcurrentHookUpdate","getRootForUpdatedFiber","enqueueConcurrentRenderForLane","sourceFiber","isHidden","parent","childLanes","_visibility","hiddenUpdates","nestedUpdateCount","rootWithNestedUpdates","emptyContextObject","FiberNode","pendingProps","mode","elementType","refCleanup","ref","updateQueue","memoizedProps","subtreeFlags","deletions","createFiberImplClass","shouldConstruct","Component","isReactComponent","createWorkInProgress","firstContext","resetWorkInProgress","createFiberFromTypeAndProps","owner","fiberTag","hostContext","itemProp","precedence","rel","onLoad","onError","async","src","isHostHoistableType","createFiberFromFragment","elements","createFiberFromText","content","createFiberFromPortal","portal","pendingChildren","implementation","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","pushTreeFork","totalChildren","pushTreeId","baseIdWithLeadingBit","baseLength","numberOfOverflowBits","pushMaterializedTreeId","popTreeContext","hydrationParentFiber","nextHydratableInstance","hydrationErrors","rootOrSingletonContext","HydrationMismatchException","throwOnHydrationMismatch","queueHydrationError","prepareToHydrateHostInstance","instance","listenToNonDelegatedEvent","mediaEventTypes","suppressHydrationWarning","checkForUnmatchedText","popover","onScroll","onScrollEnd","onClick","onclick","noop$1","popToNextHostParent","popHydrationState","JSCompiler_temp","shouldSetTextContent","getNextHydratable","isSingletonScope","previousHydratableOnEnteringScopedSingleton","resetHydrationState","upgradeHydrationErrorsToRecoverable","queuedErrors","workInProgressRootRecoverableErrors","apply","error","valueCursor","currentlyRenderingFiber$1","lastContextDependency","pushProvider","providerFiber","nextValue","popProvider","scheduleContextWorkOnParentPath","propagationRoot","propagateContextChanges","contexts","forcePropagateEntireTree","list","nextFiber","dependency","propagateParentContextChanges","isInsidePropagationBailout","currentParent","checkIfContextChanged","currentDependencies","memoizedValue","prepareToReadContext","readContext","readContextForConsumer","readContextDuringReconciliation","consumer","AbortControllerLocal","AbortController","signal","aborted","listener","abort","forEach","scheduleCallback$2","NormalPriority","CacheContext","Consumer","Provider","_currentValue2","_threadCount","createCache","controller","refCount","releaseCache","cache","currentEntangledListeners","currentEntangledPendingCount","currentEntangledLane","currentEntangledActionThenable","pingEngtangledActionScope","status","prevOnStartTransitionFinish","S","then","thenable","entangledListeners","requestTransitionLane","resolve","entangleAsyncAction","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","workInProgressRoot","pooledCache","pushTransition","offscreenWorkInProgress","prevCachePool","pool","getSuspendedCache","cacheFromPool","SuspenseException","SuspenseyCommitException","SuspenseActionException","noopSuspenseyCommitThenable","isThenableResolved","noop$3","trackUsedThenable","thenableState","checkIfUseWrappedInAsyncCatch","reason","shellSuspendCounter","fulfilledValue","fulfilledThenable","rejectedThenable","suspendedThenable","getSuspendedThenable","rejectedReason","hasForceUpdate","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","hiddenCallbacks","callbacks","cloneUpdateQueue","createUpdate","payload","callback","enqueueUpdate","executionContext","entangleTransitions","queueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","clone","didReadFromEntangledAsyncAction","suspendIfUpdateReadFromEntangledAsyncAction","processUpdateQueue","workInProgress$jscomp$0","instance$jscomp$0","pendingQueue","lastPendingUpdate","firstPendingUpdate","isHiddenUpdate","workInProgressRootRenderLanes","workInProgressRootSkippedLanes","callCallback","commitCallbacks","currentTreeHiddenStackCursor","prevEntangledRenderLanesCursor","pushHiddenContext","entangledRenderLanes","baseLanes","reuseHiddenContextOnStack","popHiddenContext","currentlyRenderingFiber","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","shouldDoubleInvokeUserFnsInHooksDEV","localIdCounter","thenableIndexCounter$1","thenableState$1","globalClientIdCounter","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","H","HooksDispatcherOnMount","HooksDispatcherOnUpdate","renderWithHooksAgain","finishRenderingHooks","ContextOnlyDispatcher","didRenderTooFewHooks","didReceiveUpdate","numberOfReRenders","lastEffect","events","stores","memoCache","HooksDispatcherOnRerender","TransitionAwareHostComponent","dispatcher","maybeThenable","useState","useThenable","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","resetHooksOnUnwind","mountWorkInProgressHook","hook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","use","usable","useMemoCache","size","map","array","basicStateReducer","state","updateReducer","reducer","updateReducerImpl","lastRenderedReducer","baseFirst","newBaseQueueFirst","newBaseQueueLast","didReadFromEntangledAsyncAction$32","revertLane","hasEagerState","eagerState","lastRenderedState","dispatch","rerenderReducer","lastRenderPhaseUpdate","updateSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","isHydrating$jscomp$0","snapshotChanged","updateEffectImpl","subscribeToStore","bind","pushSimpleEffect","destroy","resource","updateStoreInstance","pushStoreConsistencyCheck","renderedSnapshot","nextSnapshot","checkIfSnapshotChanged","forceStoreRerender","latestGetSnapshot","scheduleUpdateOnFiber","mountStateImpl","initialState","initialStateInitializer","updateOptimisticImpl","passthrough","dispatchActionState","actionQueue","setPendingState","setState","isRenderPhaseUpdate","actionNode","isTransition","T","runActionStateAction","prevState","prevTransition","currentTransition","onStartTransitionFinish","handleActionReturnValue","onActionError","error$38","nextState","onActionSuccess","notifyActionListeners","last","actionStateReducer","mountActionState","initialStateProp","ssrFormState","formState","JSCompiler_inline_result$jscomp$0","inRootOrSingleton","dispatchSetState","dispatchOptimisticSetState","updateActionState","updateActionStateImpl","stateHook","currentStateHook","actionStateActionEffect","rerenderActionState","create","createDeps","deps","updateRef","mountEffectImpl","fiberFlags","hookFlags","mountEffect","updateEffect","updateInsertionEffect","updateLayoutEffect","imperativeHandleEffect","updateImperativeHandle","concat","mountDebugValue","updateCallback","updateMemo","nextCreate","mountDeferredValueImpl","initialValue","requestDeferredLane","updateDeferredValueImpl","prevValue","startTransition","pendingState","finishedState","previousPriority","dispatchSetStateInternal","result","thenableWithOverride","chainThenableValue","requestUpdateLane","noop$2","startHostTransition","formFiber","formData","ensureFormComponentIsStateful","requestFormReset$1","existingStateHook","initialResetState","useHostTransitionStatus","updateId","updateRefresh","refreshCache","provider","root$41","dispatchReducerAction","enqueueRenderPhaseUpdate","entangleTransitionUpdate","currentState","throwIfDuringRender","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","useFormState","useActionState","useOptimistic","useCacheRefresh","initialArg","init","identifierPrefix","booleanOrThenable","thenableIndexCounter","unwrapThenable","coerceRef","throwOnInvalidObjectType","returnFiber","newChild","join","resolveLazy","lazyType","createChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","useFiber","placeChild","newFiber","lastPlacedIndex","newIndex","placeSingleChild","updateTextNode","updateElement","updateFragment","updatePortal","fragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","reconcileChildFibersImpl","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","reconcileChildrenArray","step","done","reconcileChildrenIterator","firstChildFiber","reconcileChildFibers","mountChildFibers","suspenseHandlerStackCursor","shellBoundary","pushPrimaryTreeSuspenseHandler","handler","suspenseStackCursor","pushOffscreenSuspenseHandler","reuseSuspenseHandlerOnStack","popSuspenseHandler","findFirstSuspended","row","isSuspenseInstanceFallback","revealOrder","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","nextProps","classComponentUpdater","enqueueSetState","_reactInternals","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldProps","newProps","nextContext","shouldComponentUpdate","isPureReactComponent","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","resolveClassComponentProps","baseProps","defaultProps","propName$73","reportGlobalError","reportError","ErrorEvent","dispatchEvent","process","emit","console","defaultOnUncaughtError","defaultOnCaughtError","defaultOnRecoverableError","logUncaughtError","errorInfo","onUncaughtError","componentStack","e$74","setTimeout","logCaughtError","boundary","onCaughtError","errorBoundary","e$75","createRootErrorUpdate","createClassErrorUpdate","initializeClassErrorUpdate","getDerivedStateFromError","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","SelectiveHydrationException","reconcileChildren","nextChildren","updateForwardRef","propsWithoutRef","bailoutOnAlreadyFinishedWork","updateMemoComponent","compare","updateSimpleMemoComponent","checkScheduledUpdateOrContext","prevProps","updateFunctionComponent","updateOffscreenComponent","deferHiddenOffscreenComponent","cachePool","nextBaseLanes","markRef","replayFunctionComponent","updateClassComponent","contextType","updater","refs","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","unresolvedOldProps","oldContext","contextType$jscomp$0","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","mountHostRootWithoutHydrating","SUSPENDED_MARKER","treeContext","retryLane","mountSuspenseOffscreenState","getRemainingWorkInPrimaryTree","primaryTreeDidDefer","workInProgressDeferredLane","updateSuspenseComponent","showFallback","didSuspend","JSCompiler_temp$jscomp$0","nextInstance","c","id","overflow","fallback","mountWorkInProgressOffscreenFiber","mountSuspensePrimaryChildren","retrySuspenseComponentWithoutHydrating","dataset","digest","dgst","renderDidSuspendDelayIfPossible","primaryChildren","offscreenProps","_pendingMarkers","_retryCache","_transitions","scheduleSuspenseWorkOnFiber","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","rendering","renderingStartTime","updateSuspenseListComponent","beginWork","didSuspendBefore","attemptEarlyBailoutIfNoScheduledUpdate","lazyComponent","isDehydrated","getResource","getOwnerDocumentFromRootContainer","setInitialProperties","resolveSingletonInstance","anyProps","hasAttribute","getAttribute","crossOrigin","title","canHydrateInstance","canHydrateTextInstance","pooledCacheLanes","markUpdate","preloadResourceAndSuspendIfNeeded","loading","preloadResource","scheduleRetryEffect","retryQueue","workInProgressSuspendedRetryLanes","cutOffTailIfNeeded","hasRenderedATailFallback","lastTailNode","lastTailNode$113","bubbleProperties","completedWork","didBailout","newChildLanes","child$114","completeWork","pendingContext","createElementNS","innerHTML","removeChild","appendChild","autoFocus","createTextNode","cache$127","listenToAllSupportedEvents","workInProgressRootExitStatus","workInProgressRootRenderTargetTime","unwindWork","unwindInterruptedWork","interruptedWork","commitHookEffectListMount","finishedWork","firstEffect","captureCommitPhaseError","commitHookEffectListUnmount","nearestMountedAncestor$jscomp$0","nearestMountedAncestor","destroy_","commitClassCallbacks","safelyCallComponentWillUnmount","componentWillUnmount","safelyAttachRef","instanceToUse","safelyDetachRef","error$143","commitHostMount","focus","srcSet","srcset","commitHostUpdate","domElement","lastProps","propKey","lastProp","setProp","propKey$205","propKey$221","propKey$226","propKey$231","setPropOnCustomElement","propKey$236","updateProperties","isHostParent","getHostSibling","insertOrAppendPlacementNodeIntoContainer","before","insertBefore","_reactRootContainer","insertOrAppendPlacementNode","commitHostSingletonAcquisition","singleton","attributes","removeAttributeNode","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","needsFormReset","PossiblyWeakSet","WeakSet","nextEffect","commitLayoutEffectOnFiber","finishedRoot","recursivelyTraverseLayoutEffects","__reactInternalSnapshotBeforeUpdate","error$142","commitSuspenseHydrationCallbacks","readyState","_reactRetry","registerSuspenseInstanceRetry","retryDehydratedSuspenseBoundary","prevOffscreenSubtreeWasHidden","recursivelyTraverseReappearLayoutEffects","detachFiberAfterEffects","hostParent","hostParentIsContainer","recursivelyTraverseDeletionEffects","commitDeletionEffectsOnFiber","deletedFiber","onCommitFiberUnmount","count","prevHostParent","prevHostParentIsContainer","releaseSingletonInstance","clearSuspenseBoundary","retryIfBlockedOn","attachSuspenseRetryListeners","wakeables","retryCache","getRetryCache","wakeable","retry","resolveRetryWakeable","recursivelyTraverseMutationEffects","root$jscomp$0","parentFiber","commitMutationEffectsOnFiber","currentHoistableRoot","commitReconciliationEffects","hoistableRoot","currentResource","getElementsByTagName","head","querySelector","maybeNodes","getHydratableHoistableCache","splice","property","httpEquiv","charSet","mountHoistable","acquireResource","tagCaches","getHoistableRoot","recursivelyResetForms","globalMostRecentFallbackTime","wasHidden","prevOffscreenSubtreeIsHidden","recursivelyTraverseDisappearLayoutEffects","display","hostParentFiber","parent$144","parent$146","reset","finishedRoot$jscomp$0","includeWorkInProgressEffects","commitOffscreenPassiveMountEffects","previousCache","commitCachePassiveMountEffect","recursivelyTraversePassiveMountEffects","committedLanes","committedTransitions","commitPassiveMountOnFiber","_finishedWork$memoize2","onPostCommit","passiveEffectDuration","recursivelyTraverseAtomicPassiveEffects","recursivelyTraverseReconnectPassiveEffects","committedLanes$jscomp$0","committedTransitions$jscomp$0","suspenseyCommitFlag","recursivelyAccumulateSuspenseyCommit","accumulateSuspenseyCommitOnFiber","suspendedState","media","matchMedia","matches","getStyleKey","getStylesheetSelectorFromKey","_p","onUnsuspend","stylesheetPropsFromRawProps","preloadPropsMap","adoptPreloadPropsForStylesheet","linkInstance","Promise","reject","onload","onerror","stylesheets","preload","suspendResource","previousHoistableRoot","detachAlternateSiblings","previousFiber","recursivelyTraversePassiveUnmountEffects","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","commitPassiveUnmountOnFiber","recursivelyTraverseDisconnectPassiveEffects","deletedSubtreeRoot","DefaultAsyncDispatcher","getCacheForType","resourceType","cacheForType","PossiblyWeakMap","workInProgressSuspendedReason","workInProgressThrownValue","workInProgressRootDidSkipSuspendedSiblings","workInProgressRootIsPrerendering","workInProgressRootDidAttachPingListener","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootDidIncludeRecursiveRenderUpdate","Infinity","workInProgressTransitions","pendingEffectsStatus","pendingEffectsRoot","pendingFinishedWork","pendingEffectsLanes","pendingEffectsRemainingLanes","pendingPassiveTransitions","pendingRecoverableErrors","suspenseHandler","cancelPendingCommit","prepareFreshStack","markRootSuspended","ensureRootIsScheduled","performWorkOnRoot","forceSync","shouldTimeSlice","expiredLanes","exitStatus","prevExecutionContext","prevDispatcher","pushDispatcher","prevAsyncDispatcher","pushAsyncDispatcher","thrownValue","throwAndUnwindWorkLoop","replaySuspendedUnitOfWork","hostFiber","completeUnitOfWork","resetWorkInProgressStack","workLoopConcurrentByScheduler","thrownValue$169","handleThrow","A","renderRootConcurrent","renderRootSync","renderWasConcurrent","isRenderConsistentWithExternalStores","errorRecoveryDisabledLanes","wasRootDehydrated","timeoutHandle","scheduleTimeout","commitRootWhenReady","recoverableErrors","transitions","didIncludeRenderPhaseUpdate","updatedLanes","suspendedRetryLanes","didSkipSuspendedSiblings","suspendedCommitReason","completedRenderStartTime","completedRenderEndTime","unsuspend","noop","insertSuspendedStylesheets","commit","stylesheetTimer","clearTimeout","waitForCommitToBeReady","commitRoot","check","didAttemptEntireTree","expirationTimes","index$4","flushSyncWorkAcrossRoots_impl","cancelTimeout","allEntangledLanes","index$2","shouldYieldForPrerendering","unitOfWork","workLoopSync","thrownValue$167","performUnitOfWork","suspendedReason","rootRenderLanes","attachPingListener","markerInstances","cause","wrapperError","throwException","unwindUnitOfWork","skipSiblings","flushPendingEffects","finishedLanes","remainingLanes","previouslyPendingLanes","index$5","hiddenUpdatesForLane","markRootFinished","callbackNode","callbackPriority","flushPassiveEffects","eventsEnabled","_enabled","selection","rangeCount","e$20","indexWithinAnchor","indexWithinFocus","selectionInformation","focusedElem","selectionRange","resolvedPrevProps","clearContainerSparingly","commitBeforeMutationEffects","flushMutationEffects","flushLayoutEffects","flushSpawnedWork","rootMutationHasEffect","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","min","win","start$jscomp$0","end$jscomp$0","extend","startMarker","endMarker","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","rootHasLayoutEffect","releaseRootPooledCache","onCommitFiberRoot","onRecoverableError","recoverableError","wasDelayedCommit","renderPriority","onPostCommitFiberRoot","captureCommitPhaseErrorOnRoot","rootFiber","pingCache","threadIDs","pingSuspendedRoot","retryTimedOutBoundary","boundaryFiber","firstScheduledRoot","lastScheduledRoot","didScheduleMicrotask","mightHavePendingSyncWork","isFlushingWork","currentEventTransitionLane","scheduleMicrotask","processRootScheduleInImmediateTask","processRootScheduleInMicrotask","syncTransitionLanes","onlyLegacy","didPerformSomeWork","root$174","performSyncWorkOnRoot","currentPopstateTransitionEvent","shouldAttemptEagerTransition","prev","scheduleTaskForRootDuringMicrotask","index$3","expirationTime","performWorkOnRootViaSchedulerTask","didTimeout","originalCallbackNode","workInProgressRootRenderLanes$jscomp$0","coerceFormActionProp","actionProp","createFormDataWithSubmitter","submitter","temp","FormData","i$jscomp$inline_1528","eventName$jscomp$inline_1529","toUpperCase","nonDelegatedEvents","eventSystemFlags","_dispatchQueue$i","previousInstance","i$jscomp$0","_dispatchListeners$i","targetElement","listenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","listeningMarker","rootContainerElement","targetContainer","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","capture","passive","dispatchEventForPluginEventSystem","targetInst$jscomp$0","ancestorInst","nodeTag","container","grandTag","SyntheticEventCtor","inCapturePhase","accumulateTargetOnly","reactEventName","lastHostComponent","_instance","createDispatchListener","parentWindow","getParent","accumulateEnterLeaveListenersForEvent","getTargetInstFunc","handleEventFunc","fallbackData","eventType","getNativeBeforeInputChars","char","getFallbackBeforeInputChars","maybeTargetInst","formAction","extractEvents$1","targetFiber","captureName","_instance2","unshift","common","_instance3","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","normalizeMarkupForTextOrAttribute","markup","serverText","clientText","formEncType","formMethod","formTarget","encType","__html","muted","isNaN","endsWith","hasSrc","hasSrcSet","propValue$188","parentNamespace","dangerouslySetInnerHTML","localPromise","queueMicrotask","handleErrorInNextTick","parentInstance","suspenseInstance","possiblePreambleContribution","depth","nextNode","nextNode$jscomp$0","targetInstance","previousSibling","rootContainerInstance","preconnectsSet","getRootNode","previousDispatcher","d","f","previousWasRendering","wasRendering","r","formInst","D","preconnectAs","C","L","as","globalDocument","preloadSelector","imageSrcSet","imageSizes","getScriptKey","getScriptSelectorFromKey","m","X","scripts","adoptPreloadPropsForScript","link","insertStylesheet","M","limitedEscapedHref","currentProps","preloadProps","styles$244","resource$245","integrity","hrefLang","referrerPolicy","rawProps","styleProps","instance$250","nodes","prior","stylesheetProps","scriptProps","keyAttribute","caches","nodeKey","precedencesByRoot","insertStylesheetIntoRoot","precedences","FiberRootNode","hydrate","incompleteTransitions","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","transitionCallbacks","getContextForSubtree","parentComponent","updateContainerImpl","markRetryLaneImpl","markRetryLaneIfNotHydrated","attemptContinuousHydration","blockedOn","findInstanceBlockingEvent","return_targetInst","clearIfContinuousEvent","queuedFocus","accumulateOrCreateContinuousQueuedReplayableEvent","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queueIfContinuousEvent","discreteReplayableEvents","findInstanceBlockingTarget","hasScheduledReplayAttempt","queuedExplicitHydrationTargets","existingQueuedEvent","targetContainers","attemptExplicitHydrationTarget","queuedTarget","priority","runWithPriority","attemptReplayContinuousQueuedEvent","queuedEvent","nextBlockedOn","nativeEventClone","shift","attemptReplayContinuousQueuedEventInMap","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","lastScheduledReplayQueue","scheduleReplayQueueIfNeeded","formReplayingQueue","submitterOrAction","unblock","$$reactFormReplay","formProps","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","unmount","unstable_scheduleHydration","isomorphicReactPackageVersion$jscomp$inline_1785","version","findDOMNode","componentOrElement","parentA","parentB","didFindChild","child$0","findCurrentFiberUsingSlowPath","internals$jscomp$inline_2256","bundleType","rendererPackageName","currentDispatcherRef","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","hook$jscomp$inline_2257","isDisabled","supportsFiber","inject","exports","createRoot","unstable_strictMode","unstable_transitionCallbacks","hydrateRoot","module","ReactNoopUpdateQueue","isMounted","emptyObject","ComponentDummy","PureComponent","partialState","forceUpdate","pureComponentPrototype","V","ReactElement","self","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","escaperLookup","escape","mapIntoArray","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","nextNamePrefix","resolveThenable","mapChildren","func","lazyInitializer","_status","_result","moduleObject","default","Children","forEachFunc","forEachContext","n","toArray","only","Fragment","Profiler","StrictMode","Suspense","__COMPILER_RUNTIME","__proto__","cloneElement","config","childArray","createContext","childrenLength","createRef","forwardRef","lazy","memo","scope","unstable_useCacheRefresh","permalink","Context","checkDCE","nacl","gf","Float64Array","randombytes","_0","Uint8Array","_9","gf0","gf1","_121665","D2","Y","I","ts64","h","l","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","k","o","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","z","crypto_stream_salsa20","crypto_stream","s","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","buffer","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","v","floor","sel25519","q","t","pack25519","j","neq25519","par25519","unpack25519","Z","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","inv25519","pow2523","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","bytes","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","g","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","carry","reduce","crypto_sign","sm","smlen","crypto_sign_open","chk","num","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","TypeError","cleanup","arr","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","msg","nonce","open","box","keyLength","nonceLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","publicKey","secretKey","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","tmp","mlen","detached","sig","verify","fromSeed","seed","seedLength","signatureLength","hash","hashLength","setPRNG","crypto","msCrypto","getRandomValues","Internals","getCrossOriginStringAs","input","createPortal","createPortal$1","flushSync","previousTransition","previousUpdatePriority","preconnect","prefetchDNS","preinit","fetchPriority","preinitModule","preloadModule","requestFormReset","unstable_batchedUpdates","useFormStatus","jsxProd","maybeKey","jsx","jsxs","heap","parentIndex","peek","first","halfLength","leftIndex","rightIndex","right","diff","sortIndex","performance","localPerformance","localDate","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","needsPaint","localSetTimeout","localClearTimeout","localSetImmediate","setImmediate","advanceTimers","timer","startTime","handleTimeout","isMessageLoopRunning","schedulePerformWorkUntilDeadline","firstTimer","requestHostTimeout","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","priorityLevel","continuationCallback","MessageChannel","channel","port","port2","port1","onmessage","postMessage","ms","unstable_Profiling","task","unstable_forceFrameRate","fps","unstable_next","eventHandler","unstable_runWithPriority","delay","timeout","unstable_wrapCallback","parentPriorityLevel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","obj","prop","_typeof","toPropertyKey","toPrimitive","Number","_defineProperty","writable","ownKeys","getOwnPropertySymbols","filter","_objectSpread2","getOwnPropertyDescriptors","defineProperties","__chainIdPromise","__cachedChainId","getChainId","fetch","ok","json","chain_id","cid","apiFetch","_opts$requireOpId","opts","requireOp","requireOpId","headers","session","localStorage","getItem","_unused","buf","fill","bth","from","padStart","uuidv4","JSON","stringify","withRetry","retries","lastErr","res","_unused2","POW_API","getUserPubkeyHex","_ref","username","userColor","showSettings","setShowSettings","handleLogout","setUsername","tokenBalance","setTokenBalance","blockData","setBlockData","blockStates","setBlockStates","miningStatus","setMiningStatus","isMining","setIsMining","selectedBlockIndex","setSelectedBlockIndex","newlyDugBlocks","setNewlyDugBlocks","showBlockModal","setShowBlockModal","blockRefs","isInitialLoad","getModalWidth","screen","innerWidth","isSafari","navigator","userAgent","isAndroid","isIOS","originalBodyStyle","position","forceModalCSS","overlay","overlayEl","bottom","_window$visualViewpor","viewportHeight","visualViewport","innerHeight","transform","zIndex","backgroundColor","justifyContent","alignItems","contentEl","modalWidth","minWidth","maxWidth","fontSize","padding","borderRadius","textAlign","margin","border","outline","setInterval","observer","MutationObserver","observe","attributeFilter","clearInterval","disconnect","userColors","setUserColors","fetchGrid","response","newStates","block","dugBy","volchainRes","volchainData","balance","newData","_unused3","_unused4","uniqueUsers","all","results","colorMap","_ref2","firstIdleIndex","findIndex","blockElement","rect","getBoundingClientRect","clientHeight","clientWidth","scrollIntoView","behavior","handleDigBlock","visual","newSet","pubkeyHex","w","Worker","_objectSpread","pubkey","apiBase","terminate","kickPowShadow","alert","removeItem","reload","selectedBlock","selectedBlockState","isOwner","isEmpty","_jsxs","_Fragment","_jsx","className","gridTemplateColumns","gap","boxSizing","isUserBlock","blockColor","bgColor","visualContent","el","aspectRatio","minHeight","handleBlockClick","transformOrigin","zoom","WebkitTransform","MozTransform","msTransform","boxShadow","maxHeight","flexWrap","fontWeight","colorOptions","onLogin","isSignup","setIsSignup","isForgotPassword","setIsForgotPassword","isResetPassword","setIsResetPassword","setEmail","setPassword","selectedColor","setSelectedColor","resetToken","setResetToken","newPassword","setNewPassword","confirmPassword","setConfirmPassword","urlParams","URLSearchParams","token","emailParam","handleForgotPassword","handleResetPassword","history","replaceState","pathname","onSubmit","onChange","placeholder","required","onInvalid","setCustomValidity","onInput","minLength","endpoint","sessionToken","setItem","sessionStorage","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","exec","caret","getRegex","codeRemoveIndent","outputLinkReplace","indentCodeCompensation","beginningSpace","endingHash","startingSpaceChar","endingSpaceChar","nonSpaceChar","newLineCharGlobal","tabCharGlobal","multipleSpaceGlobal","blankLine","doubleBlankLine","blockquoteStart","blockquoteSetextReplace","blockquoteSetextReplace2","listReplaceTabs","listReplaceNesting","listIsTask","listReplaceTask","anyLine","hrefBrackets","tableDelimiter","tableAlignChars","tableRowBlankLine","tableAlignRight","tableAlignCenter","tableAlignLeft","startATag","endATag","startPreScriptTag","endPreScriptTag","startAngleBracket","endAngleBracket","pedanticHrefTitle","unicodeAlphaNumeric","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescapeTest","percentDecode","findPipe","splitPipe","slashPipe","carriageReturn","spaceLine","notSpaceStart","endingNewline","listItemRegex","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","re","ie","ye","F","Q","Se","$e","U","_e","oe","blockquote","def","fences","heading","hr","html","lheading","newline","paragraph","table","se","ze","Me","le","ae","Ce","ce","pe","qe","ve","ue","De","Ze","Ge","He","Ne","je","Fe","Qe","he","ke","W","_backpedal","anyPunctuation","autolink","blockSkip","br","del","emStrongLDelim","emStrongRDelimAst","emStrongRDelimUnd","nolink","punctuation","reflink","reflinkSearch","Ke","N","Xe","O","normal","P","We","ge","R","J","encodeURI","_n$at","at","charAt","de","other","inLink","raw","tokens","inlineTokens","space","rules","codeBlockStyle","Je","lang","inline","lexer","blockTokens","substring","ordered","loose","items","trimStart","ee","te","ne","me","E","G","trimEnd","some","pre","_t$","header","align","rows","inRawBlock","fe","emStrong","lastIndex","codespan","_this$rules$inline$_b","_this$rules$inline$_b2","inlineText","escaped","links","inlineQueue","lex","lexInline","_this$options$extensi","_this$options$extensi2","startBlock","lastIndexOf","_this$options$extensi3","_this$options$extensi4","startInline","$","_match","parser","parse","_ref3","_ref4","parseInline","listitem","_e$tokens$","checkbox","_ref5","_ref6","tablecell","tablerow","_ref7","strong","_ref8","em","_ref9","_ref0","_ref1","_ref10","image","_ref11","textRenderer","_","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_this$options$extensi5","renderers","_this$options$extensi6","_Class3","preprocess","postprocess","processAllTokens","provideLexer","provideParser","setOptions","parseMarkdown","_this$defaults$extens","defaults","childTokens","flat","_len","_key","_len2","_key2","level","_len3","_key3","_len4","_key4","passThroughHooks","_len5","_key5","getDefaults","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","setShowAbout","htmlContent","marked","lineHeight","getNeighbors","totalBlocks","columnCount","neighbors","col","bottomNeighbor","rightNeighbor","windowSize","setWindowSize","isMobile","ceil","gridB","setGridB","setLoading","warMode","setWarMode","handleResize","blockWidth","availableWidth","blockSize","max","calculateBlockSize","fetchGridB","userBlocksInGridB","totalDefenseUsed","sum","defense","currentStock","realTimeCurrentStock","userHasNoBlocksInGridB","handleBlockAction","prevOwner","prevDefense","attempts","gridb","effects","warn","gridData","updated","updatedOwner","updatedDefense","gbRes","gb","gridRes","newTokenBalance","ownersSource","uniqueOwners","colorPromises","userRes","userData","newUserColors","acc","colorObj","handleStake","success","handleUnstake","handleRemove","touchStartPos","setTouchStartPos","isMultiTouch","setIsMultiTouch","wasPinching","scale","setScale","lastScale","setLastScale","initialDistance","setInitialDistance","setPosition","lastPosition","setLastPosition","gridRef","isTouchDeviceRef","suppressNextClickRef","momentum","setMomentum","isDragging","setIsDragging","momentumRef","lastTimeRef","animationFrameRef","maxTouchPoints","getPanBoundaries","parentElement","minX","maxX","minY","maxY","parentRect","gridWidth","offsetWidth","gridHeight","offsetHeight","scaledGridWidth","scaledGridHeight","overflowX","overflowY","updatePosition","abs","cancelAnimationFrame","deltaTime","newMomentum","pow","boundaries","newPosition","clampedPosition","requestAnimationFrame","getDistance","touch1","touch2","dx","dy","sqrt","handleTouchStart","dist","touch","handleTouchMove","newScale","velocityX","velocityY","newX","newY","justPinched","handleTouchEnd","distance","duration","moveThresholdPx","_preventDefault","flexDirection","marginTop","marginBottom","background","WebkitOverflowScrolling","scrollbarWidth","msOverflowStyle","gridTemplateRows","willChange","contain","touchAction","filled","isCastle","isDigzone","textOverflow","whiteSpace","userSelect","opacity","pointerEvents","ev","onTouchStart","onTouchMove","onTouchEnd","find","isOthersBlock","emptyBlocks","isFirstPlacement","fontStyle","isVisible","onClose","stats","setStats","castlesCount","setCastlesCount","setSource","setError","holders","setHolders","chainTotal","setChainTotal","chainUserBalance","setChainUserBalance","isSyncing","setIsSyncing","fetchStats","statsResp","holdersResp","holdersJson","_data$volchain","_data$volchain2","_data$volchain2$curre","_data$grid","grid","vt","volchain","totalSupply","ub","currentUser","minedBlocks","resp","toLocaleString","holder","remainingMines","onInfo","onSettings","onVolore","onVolchainActivity","onContact","onLogout","formatTs","ts","mm","getMonth","dd","getDate","getHours","mi","getMinutes","shortHex","len","shortUser","autoRefreshMs","setEvents","nextCursor","setNextCursor","lastSigRef","buildSignature","amount","to","fetchEvents","incoming","loadMore","idx","timeEl","flex","label","typeEl","recipient","toUser","fromShort","fromUser","toShort","amt","who","borderBottom","encodeNibble","encodeNibbleLower","INVALID_HEX_NIBBLE","decodeNibble","encode","enc","decode","hex","haveBad","v0","v1","total","setTotal","used","setUsed","available","setAvailable","address","setAddress","topHolders","setTopHolders","toPubkey","setToPubkey","setAmount","txMsg","setTxMsg","copied","setCopied","confirmOpen","setConfirmOpen","_vol$volchain","_vol$volchain$current","volResp","vol","gbResp","gResp","mined","tmResp","tm","__topHoldersCache","thResp","mapped","canSend","validationMessage","showInlineValidation","clipboard","writeText","_unused5","marginLeft","handleClickSend","inset","fontFamily","_json$availableAfter","availableAfter","toHex","fromHex","parseInt","deriveKeyFromPassword","salt","TextEncoder","keyMaterial","subtle","importKey","deriveKey","iterations","encryptKeystore","privHex","iv","ct","encrypt","kdf","decryptKeystore","keystore","plain","decrypt","TextDecoder","generateKeypair","kp","pubHex","App","setUserColor","showAbout","showContactUs","setShowContactUs","showMenu","setShowMenu","showGridB","setShowGridB","showBlockchainStats","setShowBlockchainStats","showVolore","setShowVolore","showVolchainActivity","setShowVolchainActivity","serverPowPub","setServerPowPub","userEmail","setUserEmail","currentPassword","setCurrentPassword","newUsername","setNewUsername","contactName","setContactName","contactEmail","setContactEmail","contactMessage","setContactMessage","hasPub","hasPriv","storedName","savedColor","serverKeystore","powKeystore","serverPub","powPubkey","localPub","localPriv","pw","hexDecode","pub","priv","setPw","ks","_unused6","isPlaceholder","_unused7","_unused8","_unused9","user","_v$volchain","_v$volchain$currentUs","serverPubFromStats","MenuDropdownPortal","alt","About","GridB","Grid","Login","handleLogin","marginRight","ksResp","ksJson","derivedPub","_unused0","newKs","currentUsername","readOnly","_unused1","BlockchainStats","VolorePanel","VolchainActivity","getElementById"],"sourceRoot":""}
./frontend/package-lock.json:12758:        "tmpl": "1.0.5"
./frontend/package-lock.json:18155:    "node_modules/tmpl": {
./frontend/package-lock.json:18157:      "resolved": "https://registry.npmjs.org/tmpl/-/tmpl-1.0.5.tgz",
./frontend/src/components/VolchainActivity.tsx:49:  const [nextCursor, setNextCursor] = useState<number | null>(null);
./frontend/src/components/VolchainActivity.tsx:72:      if (typeof data?.nextCursor === 'number') setNextCursor(data.nextCursor);
./frontend/src/components/VolchainActivity.tsx:92:    if (nextCursor === null) return;
./frontend/src/components/VolchainActivity.tsx:94:      const resp = await withRetry(`/volchain/events?limit=200&cursor=${nextCursor}&_ts=${Date.now()}`, { method: 'GET' }, 1);
./frontend/src/components/VolchainActivity.tsx:98:      if (typeof data?.nextCursor === 'number') setNextCursor(data.nextCursor); else setNextCursor(null);
./frontend/src/components/VolchainActivity.tsx:101:  }, [nextCursor]);
./frontend/src/components/VolchainActivity.tsx:177:      {nextCursor !== null && (
./backend/aws/dist/docutils/writers/pep_html/template.txt:5:This HTML is auto-generated.  DO NOT EDIT THIS FILE!  If you are writing a new
./backend/aws/dist/prompt_toolkit-3.0.51.dist-info/METADATA:74:- Runs on Linux, OS X, FreeBSD, OpenBSD and Windows systems.
./backend/aws/dist/awscli/topics/s3-config.rst:310:* ``crt`` - Use the AWS Common Runtime (CRT) transfer client when
./backend/aws/dist/awscli/customizations/wizard/wizards/lambda/new-function.yml:84:                Runtime: {runtime}
./backend/aws/dist/awscli/customizations/wizard/wizards/lambda/new-function.yml:124:        Runtime: "{runtime}"
./backend/aws/dist/awscli/botocore/cacert.pem:4035:BzZAcg4atmpZ1gDlaCDdLnINH2pkMSCEfUmmWjfrRcmF9dTHF5kH5ptV5AzoqbTO
./backend/aws/dist/awscli/botocore/data/braket/2019-09-01/service-2.json:1280:        "maxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/braket/2019-09-01/service-2.json:1281:          "shape":"JobStoppingConditionMaxRuntimeInSecondsInteger",
./backend/aws/dist/awscli/botocore/data/braket/2019-09-01/service-2.json:1287:    "JobStoppingConditionMaxRuntimeInSecondsInteger":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:248:    "InvokeAgentRuntime":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:249:      "name":"InvokeAgentRuntime",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:252:        "requestUri":"/runtimes/{agentRuntimeArn}/invocations",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:255:      "input":{"shape":"InvokeAgentRuntimeRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:256:      "output":{"shape":"InvokeAgentRuntimeResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:261:        {"shape":"RuntimeClientError"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:266:      "documentation":"<p>Sends a request to an agent or tool hosted in an Amazon Bedrock AgentCore Runtime and receives responses in real-time. </p> <p>To invoke an agent you must specify the AgentCore Runtime ARN and provide a payload containing your request. You can optionally specify a qualifier to target a specific version or endpoint of the agent.</p> <p>This operation supports streaming responses, allowing you to receive partial responses as they become available. We recommend using pagination to ensure that the operation returns quickly and successfully when processing large responses.</p> <p>For example code, see <a href=\"https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/runtime-invoke-agent.html\">Invoke an AgentCore Runtime agent</a>. </p> <p>If you're integrating your agent with OAuth, you can't use the Amazon Web Services SDK to call <code>InvokeAgentRuntime</code>. Instead, make a HTTPS request to <code>InvokeAgentRuntime</code>. For an example, see <a href=\"https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/runtime-oauth.html\">Authenticate and authorize with Inbound Auth and Outbound Auth</a>.</p> <p>To use this operation, you must have the <code>bedrock-agentcore:InvokeAgentRuntime</code> permission.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1566:    "InvokeAgentRuntimeRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1569:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1596:          "locationName":"X-Amzn-Bedrock-AgentCore-Runtime-Session-Id"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1608:          "locationName":"X-Amzn-Bedrock-AgentCore-Runtime-User-Id"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1611:          "shape":"InvokeAgentRuntimeRequestTraceIdString",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1617:          "shape":"InvokeAgentRuntimeRequestTraceParentString",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1623:          "shape":"InvokeAgentRuntimeRequestTraceStateString",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1629:          "shape":"InvokeAgentRuntimeRequestBaggageString",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1634:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1638:          "locationName":"agentRuntimeArn"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1653:    "InvokeAgentRuntimeRequestBaggageString":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1658:    "InvokeAgentRuntimeRequestTraceIdString":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1663:    "InvokeAgentRuntimeRequestTraceParentString":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1668:    "InvokeAgentRuntimeRequestTraceStateString":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1673:    "InvokeAgentRuntimeResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:1681:          "locationName":"X-Amzn-Bedrock-AgentCore-Runtime-Session-Id"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore/2024-02-28/service-2.json:2346:    "RuntimeClientError":{
./backend/aws/dist/awscli/botocore/data/codepipeline/2015-07-09/service-2.json:931:          "shape":"ActionRunOrder",
./backend/aws/dist/awscli/botocore/data/codepipeline/2015-07-09/service-2.json:1241:    "ActionRunOrder":{
./backend/aws/dist/awscli/botocore/data/m2/2021-04-28/service-2.json:768:        "Running",
./backend/aws/dist/awscli/botocore/data/m2/2021-04-28/service-2.json:925:        "Running",
./backend/aws/dist/awscli/botocore/data/m2/2021-04-28/service-2.json:1638:        "Running",
./backend/aws/dist/awscli/botocore/data/greengrassv2/2020-11-30/service-2.json:824:          "shape":"ComponentRunWith",
./backend/aws/dist/awscli/botocore/data/greengrassv2/2020-11-30/service-2.json:892:    "ComponentRunWith":{
./backend/aws/dist/awscli/botocore/data/greengrassv2/2020-11-30/service-2.json:1025:          "shape":"CoreDeviceRuntimeString",
./backend/aws/dist/awscli/botocore/data/greengrassv2/2020-11-30/service-2.json:1041:    "CoreDeviceRuntimeString":{
./backend/aws/dist/awscli/botocore/data/greengrassv2/2020-11-30/service-2.json:1725:          "shape":"CoreDeviceRuntimeString",
./backend/aws/dist/awscli/botocore/data/greengrassv2/2020-11-30/service-2.json:2491:          "shape":"CoreDeviceRuntimeString",
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:2449:          "documentation":"<p>The Amazon Resource Name (ARN) of the AppIntegrations DataIntegration to use for ingesting content.</p> <ul> <li> <p> For <a href=\"https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm\"> Salesforce</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if objectFields is not provided, including at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code> as source fields. </p> </li> <li> <p> For <a href=\"https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api\"> ServiceNow</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if objectFields is not provided, including at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code> as source fields. </p> </li> <li> <p> For <a href=\"https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/\"> Zendesk</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if <code>objectFields</code> is not provided, including at least <code>id</code>, <code>title</code>, <code>updated_at</code>, and <code>draft</code> as source fields. </p> </li> <li> <p> For <a href=\"https://learn.microsoft.com/en-us/sharepoint/dev/sp-add-ins/sharepoint-net-server-csom-jsom-and-rest-api-index\">SharePoint</a>, your AppIntegrations DataIntegration must have a FileConfiguration, including only file extensions that are among <code>docx</code>, <code>pdf</code>, <code>html</code>, <code>htm</code>, and <code>txt</code>. </p> </li> <li> <p> For <a href=\"http://aws.amazon.com/s3/\">Amazon S3</a>, the ObjectConfiguration and FileConfiguration of your AppIntegrations DataIntegration must be null. The <code>SourceURI</code> of your DataIntegration must use the following format: <code>s3://your_s3_bucket_name</code>.</p> <important> <p>The bucket policy of the corresponding S3 bucket must allow the Amazon Web Services principal <code>app-integrations.amazonaws.com</code> to perform <code>s3:ListBucket</code>, <code>s3:GetObject</code>, and <code>s3:GetBucketLocation</code> against the bucket.</p> </important> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:2453:          "documentation":"<p>The fields from the source that are made available to your agents in Amazon Q in Connect. Optional if ObjectConfiguration is included in the provided DataIntegration. </p> <ul> <li> <p> For <a href=\"https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm\"> Salesforce</a>, you must include at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code>. </p> </li> <li> <p>For <a href=\"https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api\"> ServiceNow</a>, you must include at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code>. </p> </li> <li> <p>For <a href=\"https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/\"> Zendesk</a>, you must include at least <code>id</code>, <code>title</code>, <code>updated_at</code>, and <code>draft</code>. </p> </li> </ul> <p>Make sure to include additional fields. These fields are indexed and used to source recommendations. </p>"
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:5666:          "shape":"RuntimeSessionDataList",
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:9063:          "documentation":"<p>A URI template containing exactly one variable in <code>${variableName} </code>format. This can only be set for <code>EXTERNAL</code> knowledge bases. For Salesforce, ServiceNow, and Zendesk, the variable must be one of the following:</p> <ul> <li> <p>Salesforce: <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, or <code>IsDeleted</code> </p> </li> <li> <p>ServiceNow: <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, or <code>active</code> </p> </li> <li> <p>Zendesk: <code>id</code>, <code>title</code>, <code>updated_at</code>, or <code>draft</code> </p> </li> </ul> <p>The variable is replaced with the actual value for a piece of content when calling <a href=\"https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_GetContent.html\">GetContent</a>. </p>"
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:9124:    "RuntimeSessionData":{
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:9136:          "shape":"RuntimeSessionDataValue",
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:9142:    "RuntimeSessionDataList":{
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:9144:      "member":{"shape":"RuntimeSessionData"},
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:9148:    "RuntimeSessionDataValue":{
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:10543:          "shape":"RuntimeSessionDataList",
./backend/aws/dist/awscli/botocore/data/qconnect/2020-10-19/service-2.json:10570:          "shape":"RuntimeSessionDataList",
./backend/aws/dist/awscli/botocore/data/pipes/2015-10-07/service-2.json:2027:          "documentation":"<p>The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html#ECS-RunTask-request-tags\">RunTask</a> in the Amazon ECS API Reference.</p>"
./backend/aws/dist/awscli/botocore/data/connectcampaignsv2/2024-04-23/service-2.json:805:        "Running",
./backend/aws/dist/awscli/botocore/data/billingconductor/2021-07-30/service-2.json:1347:          "documentation":"<p> Operation is the specific Amazon Web Services action covered by this line item. This describes the specific usage of the line item.</p> <p> If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which operation the <code>PricingRule</code> is modifying. For example, a value of <code>RunInstances:0202</code> indicates the operation of running an Amazon EC2 instance.</p>"
./backend/aws/dist/awscli/botocore/data/billingconductor/2021-07-30/service-2.json:2720:          "documentation":"<p> Operation is the specific Amazon Web Services action covered by this line item. This describes the specific usage of the line item.</p> <p> If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which operation the <code>PricingRule</code> is modifying. For example, a value of <code>RunInstances:0202</code> indicates the operation of running an Amazon EC2 instance.</p>"
./backend/aws/dist/awscli/botocore/data/billingconductor/2021-07-30/service-2.json:3242:          "documentation":"<p>Operation refers to the specific Amazon Web Services covered by this line item. This describes the specific usage of the line item.</p> <p> If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which operation the <code>PricingRule</code> is modifying. For example, a value of <code>RunInstances:0202</code> indicates the operation of running an Amazon EC2 instance.</p>"
./backend/aws/dist/awscli/botocore/data/cloudformation/2010-05-15/service-2.json:3013:          "documentation":"<p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/cloudformation/2010-05-15/service-2.json:3159:          "documentation":"<p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/cloudformation/2010-05-15/service-2.json:3183:          "documentation":"<p>The name or the unique stack ID that is associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Required: Conditional. If you don't specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>"
./backend/aws/dist/awscli/botocore/data/cloudformation/2010-05-15/service-2.json:3264:          "documentation":"<note> <p>If you don't pass a parameter to <code>StackName</code>, the API returns a response that describes all resources in the account, which can impact performance. This requires <code>ListStacks</code> and <code>DescribeStacks</code> permissions.</p> <p>Consider using the <a>ListStacks</a> API if you're not passing a parameter to <code>StackName</code>.</p> <p>The IAM policy below can be added to IAM policies when you want to limit resource-level permissions and avoid returning a response when no parameter is sent in the request:</p> <p>{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Deny\", \"Action\": \"cloudformation:DescribeStacks\", \"NotResource\": \"arn:aws:cloudformation:*:*:stack/*/*\" }] }</p> </note> <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/cloudformation/2010-05-15/service-2.json:3824:          "documentation":"<p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/cloudformation/2010-05-15/service-2.json:4652:          "documentation":"<p>The name or the unique stack ID that is associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/paginators-1.json:50:    "ListWorkflowRuns": {
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:366:    "GetWorkflowRun":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:367:      "name":"GetWorkflowRun",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:370:        "requestUri":"/v1/spaces/{spaceName}/projects/{projectName}/workflowRuns/{id}",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:373:      "input":{"shape":"GetWorkflowRunRequest"},
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:374:      "output":{"shape":"GetWorkflowRunResponse"},
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:537:    "ListWorkflowRuns":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:538:      "name":"ListWorkflowRuns",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:541:        "requestUri":"/v1/spaces/{spaceName}/projects/{projectName}/workflowRuns",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:544:      "input":{"shape":"ListWorkflowRunsRequest"},
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:545:      "output":{"shape":"ListWorkflowRunsResponse"},
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:614:    "StartWorkflowRun":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:615:      "name":"StartWorkflowRun",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:618:        "requestUri":"/v1/spaces/{spaceName}/projects/{projectName}/workflowRuns",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:621:      "input":{"shape":"StartWorkflowRunRequest"},
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:622:      "output":{"shape":"StartWorkflowRunResponse"},
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2152:          "shape":"WorkflowRunMode",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2161:    "GetWorkflowRunRequest":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2177:          "documentation":"<p>The ID of the workflow run. To retrieve a list of workflow run IDs, use <a>ListWorkflowRuns</a>.</p>",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2182:          "shape":"GetWorkflowRunRequestProjectNameString",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2189:    "GetWorkflowRunRequestProjectNameString":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2194:    "GetWorkflowRunResponse":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2223:          "shape":"WorkflowRunStatus",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2227:          "shape":"WorkflowRunStatusReasons",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2248:          "shape":"IdeRuntimeString",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2262:          "shape":"IdeConfigurationRuntimeString",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2283:    "IdeConfigurationRuntimeString":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2293:    "IdeRuntimeString":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2781:    "ListWorkflowRunsRequest":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2801:          "shape":"ListWorkflowRunsRequestProjectNameString",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2807:          "shape":"ListWorkflowRunsRequestNextTokenString",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2813:          "shape":"ListWorkflowRunsRequestMaxResultsInteger",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2819:          "shape":"WorkflowRunSortCriteriaList",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2824:    "ListWorkflowRunsRequestMaxResultsInteger":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2830:    "ListWorkflowRunsRequestNextTokenString":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2835:    "ListWorkflowRunsRequestProjectNameString":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2840:    "ListWorkflowRunsResponse":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:2848:          "shape":"WorkflowRunSummaries",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3287:    "StartWorkflowRunRequest":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3296:          "shape":"StartWorkflowRunRequestSpaceNameString",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3302:          "shape":"StartWorkflowRunRequestProjectNameString",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3314:          "shape":"StartWorkflowRunRequestClientTokenString",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3320:    "StartWorkflowRunRequestClientTokenString":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3326:    "StartWorkflowRunRequestProjectNameString":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3331:    "StartWorkflowRunRequestSpaceNameString":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3336:    "StartWorkflowRunResponse":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3790:    "WorkflowRunMode":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3798:    "WorkflowRunSortCriteria":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3804:    "WorkflowRunSortCriteriaList":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3806:      "member":{"shape":"WorkflowRunSortCriteria"},
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3810:    "WorkflowRunStatus":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3826:    "WorkflowRunStatusReason":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3832:    "WorkflowRunStatusReasons":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3834:      "member":{"shape":"WorkflowRunStatusReason"}
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3836:    "WorkflowRunSummaries":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3838:      "member":{"shape":"WorkflowRunSummary"}
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3840:    "WorkflowRunSummary":{
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3864:          "shape":"WorkflowRunStatus",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3868:          "shape":"WorkflowRunStatusReasons",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3952:          "shape":"WorkflowRunMode",
./backend/aws/dist/awscli/botocore/data/codecatalyst/2022-09-28/service-2.json:3963:  "documentation":"<p>Welcome to the Amazon CodeCatalyst API reference. This reference provides descriptions of operations and data types for Amazon CodeCatalyst. You can use the Amazon CodeCatalyst API to work with the following objects. </p> <p>Spaces, by calling the following:</p> <ul> <li> <p> <a>DeleteSpace</a>, which deletes a space.</p> </li> <li> <p> <a>GetSpace</a>, which returns information about a space.</p> </li> <li> <p> <a>GetSubscription</a>, which returns information about the Amazon Web Services account used for billing purposes and the billing plan for the space.</p> </li> <li> <p> <a>ListSpaces</a>, which retrieves a list of spaces.</p> </li> <li> <p> <a>UpdateSpace</a>, which changes one or more values for a space.</p> </li> </ul> <p>Projects, by calling the following:</p> <ul> <li> <p> <a>CreateProject</a> which creates a project in a specified space.</p> </li> <li> <p> <a>GetProject</a>, which returns information about a project.</p> </li> <li> <p> <a>ListProjects</a>, which retrieves a list of projects in a space.</p> </li> </ul> <p>Users, by calling the following:</p> <ul> <li> <p> <a>GetUserDetails</a>, which returns information about a user in Amazon CodeCatalyst.</p> </li> </ul> <p>Source repositories, by calling the following:</p> <ul> <li> <p> <a>CreateSourceRepository</a>, which creates an empty Git-based source repository in a specified project.</p> </li> <li> <p> <a>CreateSourceRepositoryBranch</a>, which creates a branch in a specified repository where you can work on code.</p> </li> <li> <p> <a>DeleteSourceRepository</a>, which deletes a source repository.</p> </li> <li> <p> <a>GetSourceRepository</a>, which returns information about a source repository.</p> </li> <li> <p> <a>GetSourceRepositoryCloneUrls</a>, which returns information about the URLs that can be used with a Git client to clone a source repository.</p> </li> <li> <p> <a>ListSourceRepositories</a>, which retrieves a list of source repositories in a project.</p> </li> <li> <p> <a>ListSourceRepositoryBranches</a>, which retrieves a list of branches in a source repository.</p> </li> </ul> <p>Dev Environments and the Amazon Web Services Toolkits, by calling the following:</p> <ul> <li> <p> <a>CreateDevEnvironment</a>, which creates a Dev Environment, where you can quickly work on the code stored in the source repositories of your project.</p> </li> <li> <p> <a>DeleteDevEnvironment</a>, which deletes a Dev Environment.</p> </li> <li> <p> <a>GetDevEnvironment</a>, which returns information about a Dev Environment.</p> </li> <li> <p> <a>ListDevEnvironments</a>, which retrieves a list of Dev Environments in a project.</p> </li> <li> <p> <a>ListDevEnvironmentSessions</a>, which retrieves a list of active Dev Environment sessions in a project.</p> </li> <li> <p> <a>StartDevEnvironment</a>, which starts a specified Dev Environment and puts it into an active state.</p> </li> <li> <p> <a>StartDevEnvironmentSession</a>, which starts a session to a specified Dev Environment.</p> </li> <li> <p> <a>StopDevEnvironment</a>, which stops a specified Dev Environment and puts it into an stopped state.</p> </li> <li> <p> <a>StopDevEnvironmentSession</a>, which stops a session for a specified Dev Environment.</p> </li> <li> <p> <a>UpdateDevEnvironment</a>, which changes one or more values for a Dev Environment.</p> </li> </ul> <p>Workflows, by calling the following:</p> <ul> <li> <p> <a>GetWorkflow</a>, which returns information about a workflow.</p> </li> <li> <p> <a>GetWorkflowRun</a>, which returns information about a specified run of a workflow.</p> </li> <li> <p> <a>ListWorkflowRuns</a>, which retrieves a list of runs of a specified workflow.</p> </li> <li> <p> <a>ListWorkflows</a>, which retrieves a list of workflows in a specified project.</p> </li> <li> <p> <a>StartWorkflowRun</a>, which starts a run of a specified workflow.</p> </li> </ul> <p>Security, activity, and resource management in Amazon CodeCatalyst, by calling the following:</p> <ul> <li> <p> <a>CreateAccessToken</a>, which creates a personal access token (PAT) for the current user.</p> </li> <li> <p> <a>DeleteAccessToken</a>, which deletes a specified personal access token (PAT).</p> </li> <li> <p> <a>ListAccessTokens</a>, which lists all personal access tokens (PATs) associated with a user.</p> </li> <li> <p> <a>ListEventLogs</a>, which retrieves a list of events that occurred during a specified time period in a space.</p> </li> <li> <p> <a>VerifySession</a>, which verifies whether the calling user has a valid Amazon CodeCatalyst login and session.</p> </li> </ul> <note> <p>If you are using the Amazon CodeCatalyst APIs with an SDK or the CLI, you must configure your computer to work with Amazon CodeCatalyst and single sign-on (SSO). For more information, see <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/set-up-cli.html\">Setting up to use the CLI with Amazon CodeCatalyst</a> and the SSO documentation for your SDK.</p> </note>"
./backend/aws/dist/awscli/botocore/data/clouddirectory/2017-01-11/service-2.json:5965:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/clouddirectory/2017-01-11/service-2.json:6004:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:1054:      "documentation":"<p>Returns detailed information about command execution for an invocation or plugin. The Run Command API follows an eventual consistency model, due to the distributed nature of the system supporting the API. This means that the result of an API command you run that affects your resources might not be immediately visible to all subsequent commands you run. You should keep this in mind when you carry out an API command that immediately follows a previous API command.</p> <p> <code>GetCommandInvocation</code> only gives the execution status of a plugin in a document. To get the command execution status on a specific managed node, use <a>ListCommandInvocations</a>. To get the command execution status across managed nodes, use <a>ListCommands</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:1095:      "documentation":"<p>Retrieves the current snapshot for the patch baseline the managed node uses. This API is primarily used by the <code>AWS-RunPatchBaseline</code> Systems Manager document (SSM document).</p> <note> <p>If you run the command locally, such as with the Command Line Interface (CLI), the system attempts to use your local Amazon Web Services credentials and the operation fails. To avoid this, you can run the command in the Amazon Web Services Systems Manager console. Use Run Command, a tool in Amazon Web Services Systems Manager, with an SSM document that enables you to target a managed node with a script or command. For example, run the command using the <code>AWS-RunShellScript</code> document or the <code>AWS-RunPowerShellScript</code> document.</p> </note>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:1732:      "documentation":"<p>Registers a compliance type and other compliance details on a designated resource. This operation lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the managed node.</p> <important> <p>For State Manager associations, this represents the time when compliance status was captured by the Systems Manager service during its internal compliance aggregation workflow, not necessarily when the association was executed on the managed node. State Manager updates compliance information for all associations on an instance whenever any association executes, which may result in multiple associations showing the same execution time.</p> </important> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>DocumentName: An SSM document name. For example, <code>AWS-RunPatchBaseline</code>.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: <code>yyyy-MM-dd'T'HH:mm:ss'Z'</code> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:1951:      "documentation":"<p>Runs commands on one or more managed nodes.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:1983:      "documentation":"<p>Runs an association immediately and only one time. This operation can be helpful when troubleshooting associations.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:2234:      "documentation":"<p>Modifies a task assigned to a maintenance window. You can't change the task type, but you can change the following values:</p> <ul> <li> <p> <code>TaskARN</code>. For example, you can change a <code>RUN_COMMAND</code> task from <code>AWS-RunPowerShellScript</code> to <code>AWS-RunShellScript</code>.</p> </li> <li> <p> <code>ServiceRoleArn</code> </p> </li> <li> <p> <code>TaskInvocationParameters</code> </p> </li> <li> <p> <code>Priority</code> </p> </li> <li> <p> <code>MaxConcurrency</code> </p> </li> <li> <p> <code>MaxErrors</code> </p> </li> </ul> <note> <p>One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>If the value for a parameter in <code>UpdateMaintenanceWindowTask</code> is null, then the corresponding field isn't modified. If you set <code>Replace</code> to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> operation are required for this request. Optional fields that aren't specified are set to null.</p> <important> <p>When you update a maintenance window task that has options specified in <code>TaskInvocationParameters</code>, you must provide again all the <code>TaskInvocationParameters</code> values that you want to retain. The values you don't specify again are removed. For example, suppose that when you registered a Run Command task, you specified <code>TaskInvocationParameters</code> values for <code>Comment</code>, <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>. If you update the maintenance window task and specify only a different <code>OutputS3BucketName</code> value, the values for <code>Comment</code> and <code>NotificationConfig</code> are removed.</p> </important>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:2450:      "documentation":"<p>An activation registers one or more on-premises servers or virtual machines (VMs) with Amazon Web Services so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with Amazon Web Services Systems Manager is called a managed node.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:3547:        "Runbooks":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:3548:          "shape":"Runbooks",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:3754:          "documentation":"<p>Use this filter with <a>DescribeAutomationExecutions</a>. Specify either Local or CrossAccount. CrossAccount is an Automation that runs in multiple Amazon Web Services Regions and Amazon Web Services accounts. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\">Running automations in multiple Amazon Web Services Regions and accounts</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:3776:        "Runbooks":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:3777:          "shape":"Runbooks",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:3812:          "documentation":"<p>Information about the type of impact a runbook step would have on a resource.</p> <ul> <li> <p> <code>Mutating</code>: The runbook step would make changes to the targets through actions that create, modify, or delete resources.</p> </li> <li> <p> <code>Non_Mutating</code>: The runbook step would retrieve data about resources but not make changes to them. This category generally includes <code>Describe*</code>, <code>List*</code>, <code>Get*</code>, and similar read-only API actions.</p> </li> <li> <p> <code>Undetermined</code>: An undetermined step invokes executions performed by another orchestration service like Lambda, Step Functions, or Amazon Web Services Systems Manager Run Command. An undetermined step might also call a third-party API. Systems Manager Automation doesn't know the outcome of the orchestration processes or third-party API executions, so the results of the steps are undetermined.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:3844:        "RunbookInProgress",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:4125:          "documentation":"<p>The maximum number of managed nodes that are allowed to run the command at the same time. You can specify a number of managed nodes, such as 10, or a percentage of nodes, such as 10%. The default value is 50. For more information about how to use <code>MaxConcurrency</code>, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Amazon Web Services Systems Manager Run Command</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:4129:          "documentation":"<p>The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is <code>0</code>. For more information about how to use <code>MaxErrors</code>, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\">Amazon Web Services Systems Manager Run Command</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:4149:          "documentation":"<p>The Identity and Access Management (IAM) service role that Run Command, a tool in Amazon Web Services Systems Manager, uses to act on your behalf when sending notifications about command status changes. </p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:4187:          "documentation":"<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2024-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2021, and later.</p> </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2024-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2021.</p> </li> <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. The status choices depend on the API you call.</p> <p>The status values you can specify for <code>ListCommands</code> are:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li> <li> <p> <code>AccessDenied</code> </p> </li> <li> <p> <code>DeliveryTimedOut</code> </p> </li> <li> <p> <code>ExecutionTimedOut</code> </p> </li> <li> <p> <code>Incomplete</code> </p> </li> <li> <p> <code>NoInstancesInTag</code> </p> </li> <li> <p> <code>LimitExceeded</code> </p> </li> </ul> <p>The status values you can specify for <code>ListCommandInvocations</code> are:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Delayed</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li> <li> <p> <code>AccessDenied</code> </p> </li> <li> <p> <code>DeliveryTimedOut</code> </p> </li> <li> <p> <code>ExecutionTimedOut</code> </p> </li> <li> <p> <code>Undeliverable</code> </p> </li> <li> <p> <code>InvalidPlatform</code> </p> </li> <li> <p> <code>Terminated</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>: Specify name of the Amazon Web Services Systems Manager document (SSM document) for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on managed nodes. </p> </li> <li> <p> <b>ExecutionStage</b>: Specify one of the following values (<code>ListCommands</code> operations only):</p> <ul> <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li> <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:4275:          "documentation":"<p>The Identity and Access Management (IAM) service role that Run Command, a tool in Amazon Web Services Systems Manager, uses to act on your behalf when sending notifications about command status changes on a per managed node basis.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:5407:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:5408:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:5409:          "documentation":"<p>Use this option to view a summary of the deletion request without deleting any data or the data type. This option is useful when you only want to understand what will be deleted. Once you validate that the data to be deleted is what you intend to delete, you can run the same command without specifying the <code>DryRun</code> option.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:7580:    "DryRun":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:7849:          "documentation":"<p>The name of the step for which you want detailed results. If the document contains only one step, you can omit the name and details for that step. If the document contains more than one step, you must specify the name of the step for which you want to view details. Be sure to specify the name of the step, not the name of a plugin like <code>aws:RunShellScript</code>.</p> <p>To find the <code>PluginName</code>, check the document content and find the name of the step you want details for. Alternatively, use <a>ListCommandInvocations</a> with the <code>CommandId</code> and <code>Details</code> parameters. The <code>PluginName</code> is the <code>Name</code> attribute of the <code>CommandPlugin</code> object in the <code>CommandPlugins</code> list.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:7870:          "documentation":"<p>The name of the document that was run. For example, <code>AWS-RunShellScript</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:7878:          "documentation":"<p>The name of the plugin, or <i>step name</i>, for which details are reported. For example, <code>aws:RunShellScript</code> is a plugin.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:7984:          "documentation":"<p>The snapshot ID provided by the user when running <code>AWS-RunPatchBaseline</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:8558:          "documentation":"<p>The action to take on tasks when the maintenance window cutoff time is reached. <code>CONTINUE_TASK</code> means that tasks continue to run. For Automation, Lambda, Step Functions tasks, <code>CANCEL_TASK</code> means that currently running task invocations continue, but no new task invocations are started. For Run Command tasks, <code>CANCEL_TASK</code> means the system attempts to stop the task by sending a <code>CancelCommand</code> operation.</p>",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:9456:          "documentation":"<p>An https URL or an Amazon Simple Storage Service (Amazon S3) path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\">SSM Command document for patching: <code>AWS-RunPatchBaseline</code> </a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:10026:      "documentation":"<p>The following problems can cause this exception:</p> <ul> <li> <p>You don't have permission to access the managed node.</p> </li> <li> <p>Amazon Web Services Systems Manager Agent (SSM Agent) isn't running. Verify that SSM Agent is running.</p> </li> <li> <p>SSM Agent isn't registered with the SSM endpoint. Try reinstalling SSM Agent.</p> </li> <li> <p>The managed node isn't in a valid state. Valid states are: <code>Running</code>, <code>Pending</code>, <code>Stopped</code>, and <code>Stopping</code>. Invalid states are: <code>Shutting-down</code> and <code>Terminated</code>.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:10185:      "documentation":"<p>The role name can't contain invalid characters. Also verify that you specified an IAM role for notifications that includes the required trust policy. For information about configuring the IAM role for Run Command notifications, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html\">Monitoring Systems Manager status changes using Amazon SNS notifications</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:11802:    "MaintenanceWindowRunCommandParameters":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:12016:        "RunCommand":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:12017:          "shape":"MaintenanceWindowRunCommandParameters",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:12469:          "documentation":"<p>An Amazon Resource Name (ARN) for an Amazon Simple Notification Service (Amazon SNS) topic. Run Command pushes notifications about command status changes to this topic.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:13264:        "RunbookInProgress",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:14240:          "documentation":"<p>The key for the filter.</p> <p>Run the <a>DescribePatchProperties</a> command to view lists of valid keys for each operating system type.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:14244:          "documentation":"<p>The value for the filter key.</p> <p>Run the <a>DescribePatchProperties</a> command to view lists of valid values for each key based on operating system type.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:14931:          "documentation":"<p>The targets (either managed nodes or maintenance window targets).</p> <note> <p>One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>Specify managed nodes using the following format: </p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify maintenance window targets using the following format:</p> <p> <code>Key=WindowTargetIds,Values=&lt;window-target-id-1&gt;,&lt;window-target-id-2&gt;</code> </p>",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:14988:          "documentation":"<p>Indicates whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached. </p> <ul> <li> <p> <code>CONTINUE_TASK</code>: When the cutoff time is reached, any tasks that are running continue. The default value.</p> </li> <li> <p> <code>CANCEL_TASK</code>:</p> <ul> <li> <p>For Automation, Lambda, Step Functions tasks: When the cutoff time is reached, any task invocations that are already running continue, but no new task invocations are started.</p> </li> <li> <p>For Run Command tasks: When the cutoff time is reached, the system sends a <a>CancelCommand</a> operation that attempts to cancel the command associated with the task. However, there is no guarantee that the command will be terminated and the underlying process stopped.</p> </li> </ul> <p>The status for tasks that are not completed is <code>TIMED_OUT</code>.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15655:    "Runbook":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15694:          "documentation":"<p>Information about the Amazon Web Services Regions and Amazon Web Services accounts targeted by the current Runbook operation.</p>",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15700:    "Runbooks":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15702:      "member":{"shape":"Runbook"},
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15811:          "documentation":"<p>The IDs of the managed nodes where the command should run. Specifying managed node IDs is most useful when you are targeting a limited number of managed nodes, though you can specify up to 50 IDs.</p> <p>To target a larger number of managed nodes, or if you prefer not to list individual node IDs, we recommend using the <code>Targets</code> option instead. Using <code>Targets</code>, which accepts tag key-value pairs to identify the managed nodes to send commands to, you can a send command to tens, hundreds, or thousands of nodes at once.</p> <p>For more information about how to use targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Run commands at scale</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15815:          "documentation":"<p>An array of search criteria that targets managed nodes using a <code>Key,Value</code> combination that you specify. Specifying targets is most useful when you want to send a command to a large number of managed nodes at once. Using <code>Targets</code>, which accepts tag key-value pairs to identify managed nodes, you can send a command to tens, hundreds, or thousands of nodes at once.</p> <p>To send a command to a smaller number of managed nodes, you can use the <code>InstanceIds</code> option instead.</p> <p>For more information about how to use targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\">Run commands at scale</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15868:          "documentation":"<p>The ARN of the Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for Run Command commands.</p> <p>This role must provide the <code>sns:Publish</code> permission for your notification topic. For information about creating and using this service role, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html\">Monitoring Systems Manager status changes using Amazon SNS notifications</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15876:          "documentation":"<p>Enables Amazon Web Services Systems Manager to send Run Command output to Amazon CloudWatch Logs. Run Command is a tool in Amazon Web Services Systems Manager.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:15996:          "documentation":"<p>The name of the Session Manager SSM document used to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:16333:          "documentation":"<p>A location is a combination of Amazon Web Services Regions and/or Amazon Web Services accounts where you want to run the automation. Use this operation to start an automation in multiple Amazon Web Services Regions and multiple Amazon Web Services accounts. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\">Running automations in multiple Amazon Web Services Regions and accounts</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:16363:        "Runbooks"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:16395:        "Runbooks":{
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:16396:          "shape":"Runbooks",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:16459:          "documentation":"<p>The name of the SSM document you want to use to define the type of session, input parameters, or preferences for the session. For example, <code>SSM-SessionManagerRunShell</code>. You can call the <a>GetDocument</a> API to verify the document exists before attempting to start a session. If no document name is provided, a shell to the managed node is launched by default. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-sessions-start.html\">Start a session</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:16771:      "documentation":"<p>An array of search criteria that targets managed nodes using a key-value pair that you specify.</p> <note> <p> One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>Supported formats include the following.</p> <p> <b>For all Systems Manager tools:</b> </p> <ul> <li> <p> <code>Key=tag-key,Values=tag-value-1,tag-value-2</code> </p> </li> </ul> <p> <b>For Automation and Change Manager:</b> </p> <ul> <li> <p> <code>Key=tag:tag-key,Values=tag-value</code> </p> </li> <li> <p> <code>Key=ResourceGroup,Values=resource-group-name</code> </p> </li> <li> <p> <code>Key=ParameterValues,Values=value-1,value-2,value-3</code> </p> </li> <li> <p>To target all instances in the Amazon Web Services Region:</p> <ul> <li> <p> <code>Key=AWS::EC2::Instance,Values=*</code> </p> </li> <li> <p> <code>Key=InstanceIds,Values=*</code> </p> </li> </ul> </li> </ul> <p> <b>For Run Command and Maintenance Windows:</b> </p> <ul> <li> <p> <code>Key=InstanceIds,Values=instance-id-1,instance-id-2,instance-id-3</code> </p> </li> <li> <p> <code>Key=tag:tag-key,Values=tag-value-1,tag-value-2</code> </p> </li> <li> <p> <code>Key=resource-groups:Name,Values=resource-group-name</code> </p> </li> <li> <p>Additionally, Maintenance Windows support targeting resource types:</p> <ul> <li> <p> <code>Key=resource-groups:ResourceTypeFilters,Values=resource-type-1,resource-type-2</code> </p> </li> </ul> </li> </ul> <p> <b>For State Manager:</b> </p> <ul> <li> <p> <code>Key=InstanceIds,Values=instance-id-1,instance-id-2,instance-id-3</code> </p> </li> <li> <p> <code>Key=tag:tag-key,Values=tag-value-1,tag-value-2</code> </p> </li> <li> <p>To target all instances in the Amazon Web Services Region:</p> <ul> <li> <p> <code>Key=InstanceIds,Values=*</code> </p> </li> </ul> </li> </ul> <p>For more information about how to send commands that target managed nodes using <code>Key,Value</code> parameters, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting multiple managed nodes</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:17537:          "documentation":"<p>The targets (either managed nodes or tags) to modify. Managed nodes are specified using the format <code>Key=instanceids,Values=instanceID_1,instanceID_2</code>. Tags are specified using the format <code> Key=tag_name,Values=tag_value</code>. </p> <note> <p>One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:17553:          "documentation":"<p>The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.</p> <important> <p>When you update a maintenance window task that has options specified in <code>TaskInvocationParameters</code>, you must provide again all the <code>TaskInvocationParameters</code> values that you want to retain. The values you don't specify again are removed. For example, suppose that when you registered a Run Command task, you specified <code>TaskInvocationParameters</code> values for <code>Comment</code>, <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>. If you update the maintenance window task and specify only a different <code>OutputS3BucketName</code> value, the values for <code>Comment</code> and <code>NotificationConfig</code> are removed.</p> </important>"
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:17587:          "documentation":"<p>Indicates whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached. </p> <ul> <li> <p> <code>CONTINUE_TASK</code>: When the cutoff time is reached, any tasks that are running continue. The default value.</p> </li> <li> <p> <code>CANCEL_TASK</code>:</p> <ul> <li> <p>For Automation, Lambda, Step Functions tasks: When the cutoff time is reached, any task invocations that are already running continue, but no new task invocations are started.</p> </li> <li> <p>For Run Command tasks: When the cutoff time is reached, the system sends a <a>CancelCommand</a> operation that attempts to cancel the command associated with the task. However, there is no guarantee that the command will be terminated and the underlying process stopped.</p> </li> </ul> <p>The status for tasks that are not completed is <code>TIMED_OUT</code>.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/ssm/2014-11-06/service-2.json:17986:  "documentation":"<p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up-console.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the tools that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-tools.html\">Using Systems Manager tools</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a tool in Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation Runbook Reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a tool in Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a tool in Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent-runtime/2023-07-26/service-2.json:9:    "serviceFullName":"Agents for Amazon Bedrock Runtime",
./backend/aws/dist/awscli/botocore/data/bedrock-agent-runtime/2023-07-26/service-2.json:10:    "serviceId":"Bedrock Agent Runtime",
./backend/aws/dist/awscli/botocore/data/bedrock-agent-runtime/2023-07-26/service-2.json:825:          "documentation":"<p>Specify a built-in or computer use action for this action group. If you specify a value, you must leave the <code>description</code>, <code>apiSchema</code>, and <code>actionGroupExecutor</code> fields empty for this action group. </p> <ul> <li> <p>To allow your agent to request the user for additional information when trying to complete a task, set this field to <code>AMAZON.UserInput</code>. </p> </li> <li> <p>To allow your agent to generate, run, and troubleshoot code when trying to complete a task, set this field to <code>AMAZON.CodeInterpreter</code>.</p> </li> <li> <p>To allow your agent to use an Anthropic computer use tool, specify one of the following values. </p> <important> <p> Computer use is a new Anthropic Claude model capability (in beta) available with Anthropic Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. When operating computer use functionality, we recommend taking additional security precautions, such as executing computer actions in virtual environments with restricted data access and limited internet connectivity. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>. </p> </important> <ul> <li> <p> <code>ANTHROPIC.Computer</code> - Gives the agent permission to use the mouse and keyboard and take screenshots.</p> </li> <li> <p> <code>ANTHROPIC.TextEditor</code> - Gives the agent permission to view, create and edit files.</p> </li> <li> <p> <code>ANTHROPIC.Bash</code> - Gives the agent permission to run commands in a bash shell.</p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent-runtime/2023-07-26/service-2.json:829:          "documentation":"<p> The configuration settings for a computer use action. </p> <important> <p>Computer use is a new Anthropic Claude model capability (in beta) available with Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>.</p> </important>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent-runtime/2023-07-26/service-2.json:2232:        "Running",
./backend/aws/dist/awscli/botocore/data/bedrock-agent-runtime/2023-07-26/service-2.json:6045:          "documentation":"<p>The template for the prompt that's sent to the model for response generation. You can include prompt placeholders, which become replaced before the prompt is sent to the model to provide instructions and context to the model. In addition, you can include XML tags to delineate meaningful sections of the prompt template.</p> <p>For more information, see the following resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html#kb-test-config-sysprompt\">Knowledge base prompt templates</a> </p> </li> <li> <p> <a href=\"https://docs.anthropic.com/claude/docs/use-xml-tags\">Use XML tags with Anthropic Claude models</a> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent-runtime/2023-07-26/service-2.json:6890:          "documentation":"<p>The type of resource that contains your data for retrieving information and generating responses.</p> <note> <p>If you choose to use <code>EXTERNAL_SOURCES</code>, then currently only Anthropic Claude 3 Sonnet models for knowledge bases are supported.</p> </note>"
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:52:      "documentation":"<p>Create a probe within a monitor. Once you create a probe, and it begins monitoring your network traffic, you'll incur billing charges for that probe. This action requires the <code>monitorName</code> parameter. Run <code>ListMonitors</code> to get a list of monitor names. Note the name of the <code>monitorName</code> you want to create the probe for.</p>",
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:71:      "documentation":"<p>Deletes a specified monitor.</p> <p>This action requires the <code>monitorName</code> parameter. Run <code>ListMonitors</code> to get a list of monitor names. </p>",
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:91:      "documentation":"<p>Deletes the specified probe. Once a probe is deleted you'll no longer incur any billing fees for that probe.</p> <p>This action requires both the <code>monitorName</code> and <code>probeId</code> parameters. Run <code>ListMonitors</code> to get a list of monitor names. Run <code>GetMonitor</code> to get a list of probes and probe IDs. You can only delete a single probe at a time using this action. </p>",
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:110:      "documentation":"<p>Returns details about a specific monitor. </p> <p>This action requires the <code>monitorName</code> parameter. Run <code>ListMonitors</code> to get a list of monitor names. </p>"
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:128:      "documentation":"<p>Returns the details about a probe. This action requires both the <code>monitorName</code> and <code>probeId</code> parameters. Run <code>ListMonitors</code> to get a list of monitor names. Run <code>GetMonitor</code> to get a list of probes and probe IDs. </p>"
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:223:      "documentation":"<p>Updates the <code>aggregationPeriod</code> for a monitor. Monitors support an <code>aggregationPeriod</code> of either <code>30</code> or <code>60</code> seconds. This action requires the <code>monitorName</code> and <code>probeId</code> parameter. Run <code>ListMonitors</code> to get a list of monitor names. </p>",
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:243:      "documentation":"<p>Updates a monitor probe. This action requires both the <code>monitorName</code> and <code>probeId</code> parameters. Run <code>ListMonitors</code> to get a list of monitor names. Run <code>GetMonitor</code> to get a list of probes and probe IDs. </p> <p>You can update the following para create a monitor with probes using this command. For each probe, you define the following:</p> <ul> <li> <p> <code>state</code>—The state of the probe.</p> </li> <li> <p> <code>destination</code>— The target destination IP address for the probe.</p> </li> <li> <p> <code>destinationPort</code>—Required only if the protocol is <code>TCP</code>.</p> </li> <li> <p> <code>protocol</code>—The communication protocol between the source and destination. This will be either <code>TCP</code> or <code>ICMP</code>.</p> </li> <li> <p> <code>packetSize</code>—The size of the packets. This must be a number between <code>56</code> and <code>8500</code>.</p> </li> <li> <p>(Optional) <code>tags</code> —Key-value pairs created and assigned to the probe.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:590:          "documentation":"<p>The name of the monitor associated with the probe. Run <code>ListMonitors</code> to get a list of monitor names.</p>",
./backend/aws/dist/awscli/botocore/data/networkmonitor/2023-08-01/service-2.json:596:          "documentation":"<p>The ID of the probe to get information about. Run <code>GetMonitor</code> action to get a list of probes and probe IDs for the monitor.</p>",
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:159:      "documentation":"<p>Creates a <a>WebACL</a> per the specifications provided.</p> <p> A web ACL defines a collection of rules to use to inspect and control web requests. Each rule has a statement that defines what to look for in web requests and an action that WAF applies to requests that match the statement. In the web ACL, you assign a default action to take (allow, block) for any request that does not match any of the rules. The rules in a web ACL can be a combination of the types <a>Rule</a>, <a>RuleGroup</a>, and managed rule group. You can associate a web ACL with one or more Amazon Web Services resources to protect. The resource types include Amazon CloudFront distribution, Amazon API Gateway REST API, Application Load Balancer, AppSync GraphQL API, Amazon Cognito user pool, App Runner service, Amplify application, and Amazon Web Services Verified Access instance. </p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:955:      "documentation":"<p>Updates the specified <a>WebACL</a>. While updating a web ACL, WAF provides continuous coverage to the resources that you have associated with the web ACL. </p> <note> <p>This operation completely replaces the mutable specifications that you already have for the web ACL with the ones that you provide to this call. </p> <p>To modify a web ACL, do the following: </p> <ol> <li> <p>Retrieve it by calling <a>GetWebACL</a> </p> </li> <li> <p>Update its settings as needed</p> </li> <li> <p>Provide the complete web ACL specification to this call</p> </li> </ol> </note> <p> A web ACL defines a collection of rules to use to inspect and control web requests. Each rule has a statement that defines what to look for in web requests and an action that WAF applies to requests that match the statement. In the web ACL, you assign a default action to take (allow, block) for any request that does not match any of the rules. The rules in a web ACL can be a combination of the types <a>Rule</a>, <a>RuleGroup</a>, and managed rule group. You can associate a web ACL with one or more Amazon Web Services resources to protect. The resource types include Amazon CloudFront distribution, Amazon API Gateway REST API, Application Load Balancer, AppSync GraphQL API, Amazon Cognito user pool, App Runner service, Amplify application, and Amazon Web Services Verified Access instance. </p> <p> <b>Temporary inconsistencies during updates</b> </p> <p>When you create or change a web ACL or other WAF resources, the changes take a small amount of time to propagate to all areas where the resources are stored. The propagation time can be from a few seconds to a number of minutes. </p> <p>The following are examples of the temporary inconsistencies that you might notice during change propagation: </p> <ul> <li> <p>After you create a web ACL, if you try to associate it with a resource, you might get an exception indicating that the web ACL is unavailable. </p> </li> <li> <p>After you add a rule group to a web ACL, the new rule group rules might be in effect in one area where the web ACL is used and not in another.</p> </li> <li> <p>After you change a rule action setting, you might see the old action in some places and the new action in others. </p> </li> <li> <p>After you add an IP address to an IP set that is in use in a blocking rule, the new address might be blocked in one area while still allowed in another.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:1222:          "documentation":"<p>The Amazon Resource Name (ARN) of the resource to associate with the web ACL. </p> <p>The ARN must be in one of the following formats:</p> <ul> <li> <p>For an Application Load Balancer: <code>arn:<i>partition</i>:elasticloadbalancing:<i>region</i>:<i>account-id</i>:loadbalancer/app/<i>load-balancer-name</i>/<i>load-balancer-id</i> </code> </p> </li> <li> <p>For an Amazon API Gateway REST API: <code>arn:<i>partition</i>:apigateway:<i>region</i>::/restapis/<i>api-id</i>/stages/<i>stage-name</i> </code> </p> </li> <li> <p>For an AppSync GraphQL API: <code>arn:<i>partition</i>:appsync:<i>region</i>:<i>account-id</i>:apis/<i>GraphQLApiId</i> </code> </p> </li> <li> <p>For an Amazon Cognito user pool: <code>arn:<i>partition</i>:cognito-idp:<i>region</i>:<i>account-id</i>:userpool/<i>user-pool-id</i> </code> </p> </li> <li> <p>For an App Runner service: <code>arn:<i>partition</i>:apprunner:<i>region</i>:<i>account-id</i>:service/<i>apprunner-service-name</i>/<i>apprunner-service-id</i> </code> </p> </li> <li> <p>For an Amazon Web Services Verified Access instance: <code>arn:<i>partition</i>:ec2:<i>region</i>:<i>account-id</i>:verified-access-instance/<i>instance-id</i> </code> </p> </li> <li> <p>For an Amplify application: <code>arn:<i>partition</i>:amplify:<i>region</i>:<i>account-id</i>:apps/<i>app-id</i> </code> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:1245:          "documentation":"<p>Customizes the maximum size of the request body that your protected CloudFront, API Gateway, Amazon Cognito, App Runner, and Verified Access resources forward to WAF for inspection. The default size is 16 KB (16,384 bytes). You can change the setting for any of the available resource types. </p> <note> <p>You are charged additional fees when your protected resources forward body sizes that are larger than the default. For more information, see <a href=\"http://aws.amazon.com/waf/pricing/\">WAF Pricing</a>.</p> </note> <p>Example JSON: <code> { \"API_GATEWAY\": \"KB_48\", \"APP_RUNNER_SERVICE\": \"KB_32\" }</code> </p> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:1248:      "documentation":"<p>Specifies custom configurations for the associations between the web ACL and protected resources. </p> <p>Use this to customize the maximum size of the request body that your protected resources forward to WAF for inspection. You can customize this setting for CloudFront, API Gateway, Amazon Cognito, App Runner, or Verified Access resources. The default setting is 16 KB (16,384 bytes). </p> <note> <p>You are charged additional fees when your protected resources forward body sizes that are larger than the default. For more information, see <a href=\"http://aws.amazon.com/waf/pricing/\">WAF Pricing</a>.</p> </note> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:1282:          "documentation":"<p>What WAF should do if the body is larger than WAF can inspect. </p> <p>WAF does not support inspecting the entire contents of the web request body if the body exceeds the limit for the resource type. When a web request body is larger than the limit, the underlying host service only forwards the contents that are within the limit to WAF for inspection. </p> <ul> <li> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p> </li> <li> <p>For CloudFront, API Gateway, Amazon Cognito, App Runner, and Verified Access, the default limit is 16 KB (16,384 bytes), and you can increase the limit for each resource type in the web ACL <code>AssociationConfig</code>, for additional processing fees. </p> </li> <li> <p>For Amplify, use the CloudFront limit.</p> </li> </ul> <p>The options for oversize handling are the following:</p> <ul> <li> <p> <code>CONTINUE</code> - Inspect the available body contents normally, according to the rule inspection criteria. </p> </li> <li> <p> <code>MATCH</code> - Treat the web request as matching the rule statement. WAF applies the rule action to the request.</p> </li> <li> <p> <code>NO_MATCH</code> - Treat the web request as not matching the rule statement.</p> </li> </ul> <p>You can combine the <code>MATCH</code> or <code>NO_MATCH</code> settings for oversize handling with your rule and web ACL action settings, so that you block any request whose body is over the limit. </p> <p>Default: <code>CONTINUE</code> </p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:2032:          "documentation":"<p>Specifies custom configurations for the associations between the web ACL and protected resources. </p> <p>Use this to customize the maximum size of the request body that your protected resources forward to WAF for inspection. You can customize this setting for CloudFront, API Gateway, Amazon Cognito, App Runner, or Verified Access resources. The default setting is 16 KB (16,384 bytes). </p> <note> <p>You are charged additional fees when your protected resources forward body sizes that are larger than the default. For more information, see <a href=\"http://aws.amazon.com/waf/pricing/\">WAF Pricing</a>.</p> </note> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:2529:          "documentation":"<p>The Amazon Resource Name (ARN) of the resource to disassociate from the web ACL. </p> <p>The ARN must be in one of the following formats:</p> <ul> <li> <p>For an Application Load Balancer: <code>arn:<i>partition</i>:elasticloadbalancing:<i>region</i>:<i>account-id</i>:loadbalancer/app/<i>load-balancer-name</i>/<i>load-balancer-id</i> </code> </p> </li> <li> <p>For an Amazon API Gateway REST API: <code>arn:<i>partition</i>:apigateway:<i>region</i>::/restapis/<i>api-id</i>/stages/<i>stage-name</i> </code> </p> </li> <li> <p>For an AppSync GraphQL API: <code>arn:<i>partition</i>:appsync:<i>region</i>:<i>account-id</i>:apis/<i>GraphQLApiId</i> </code> </p> </li> <li> <p>For an Amazon Cognito user pool: <code>arn:<i>partition</i>:cognito-idp:<i>region</i>:<i>account-id</i>:userpool/<i>user-pool-id</i> </code> </p> </li> <li> <p>For an App Runner service: <code>arn:<i>partition</i>:apprunner:<i>region</i>:<i>account-id</i>:service/<i>apprunner-service-name</i>/<i>apprunner-service-id</i> </code> </p> </li> <li> <p>For an Amazon Web Services Verified Access instance: <code>arn:<i>partition</i>:ec2:<i>region</i>:<i>account-id</i>:verified-access-instance/<i>instance-id</i> </code> </p> </li> <li> <p>For an Amplify application: <code>arn:<i>partition</i>:amplify:<i>region</i>:<i>account-id</i>:apps/<i>app-id</i> </code> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:2645:          "documentation":"<p>Inspect the request body as plain text. The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form. </p> <p>WAF does not support inspecting the entire contents of the web request body if the body exceeds the limit for the resource type. When a web request body is larger than the limit, the underlying host service only forwards the contents that are within the limit to WAF for inspection. </p> <ul> <li> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p> </li> <li> <p>For CloudFront, API Gateway, Amazon Cognito, App Runner, and Verified Access, the default limit is 16 KB (16,384 bytes), and you can increase the limit for each resource type in the web ACL <code>AssociationConfig</code>, for additional processing fees. </p> </li> <li> <p>For Amplify, use the CloudFront limit.</p> </li> </ul> <p>For information about how to handle oversized request bodies, see the <code>Body</code> object configuration. </p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:2653:          "documentation":"<p>Inspect the request body as JSON. The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form. </p> <p>WAF does not support inspecting the entire contents of the web request body if the body exceeds the limit for the resource type. When a web request body is larger than the limit, the underlying host service only forwards the contents that are within the limit to WAF for inspection. </p> <ul> <li> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p> </li> <li> <p>For CloudFront, API Gateway, Amazon Cognito, App Runner, and Verified Access, the default limit is 16 KB (16,384 bytes), and you can increase the limit for each resource type in the web ACL <code>AssociationConfig</code>, for additional processing fees. </p> </li> <li> <p>For Amplify, use the CloudFront limit.</p> </li> </ul> <p>For information about how to handle oversized request bodies, see the <code>JsonBody</code> object configuration. </p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:3229:          "documentation":"<p>The Amazon Resource Name (ARN) of the resource whose web ACL you want to retrieve. </p> <p>The ARN must be in one of the following formats:</p> <ul> <li> <p>For an Application Load Balancer: <code>arn:<i>partition</i>:elasticloadbalancing:<i>region</i>:<i>account-id</i>:loadbalancer/app/<i>load-balancer-name</i>/<i>load-balancer-id</i> </code> </p> </li> <li> <p>For an Amazon API Gateway REST API: <code>arn:<i>partition</i>:apigateway:<i>region</i>::/restapis/<i>api-id</i>/stages/<i>stage-name</i> </code> </p> </li> <li> <p>For an AppSync GraphQL API: <code>arn:<i>partition</i>:appsync:<i>region</i>:<i>account-id</i>:apis/<i>GraphQLApiId</i> </code> </p> </li> <li> <p>For an Amazon Cognito user pool: <code>arn:<i>partition</i>:cognito-idp:<i>region</i>:<i>account-id</i>:userpool/<i>user-pool-id</i> </code> </p> </li> <li> <p>For an App Runner service: <code>arn:<i>partition</i>:apprunner:<i>region</i>:<i>account-id</i>:service/<i>apprunner-service-name</i>/<i>apprunner-service-id</i> </code> </p> </li> <li> <p>For an Amazon Web Services Verified Access instance: <code>arn:<i>partition</i>:ec2:<i>region</i>:<i>account-id</i>:verified-access-instance/<i>instance-id</i> </code> </p> </li> <li> <p>For an Amplify application: <code>arn:<i>partition</i>:amplify:<i>region</i>:<i>account-id</i>:apps/<i>app-id</i> </code> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:3574:          "documentation":"<p>What WAF should do if the body is larger than WAF can inspect. </p> <p>WAF does not support inspecting the entire contents of the web request body if the body exceeds the limit for the resource type. When a web request body is larger than the limit, the underlying host service only forwards the contents that are within the limit to WAF for inspection. </p> <ul> <li> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p> </li> <li> <p>For CloudFront, API Gateway, Amazon Cognito, App Runner, and Verified Access, the default limit is 16 KB (16,384 bytes), and you can increase the limit for each resource type in the web ACL <code>AssociationConfig</code>, for additional processing fees. </p> </li> <li> <p>For Amplify, use the CloudFront limit.</p> </li> </ul> <p>The options for oversize handling are the following:</p> <ul> <li> <p> <code>CONTINUE</code> - Inspect the available body contents normally, according to the rule inspection criteria. </p> </li> <li> <p> <code>MATCH</code> - Treat the web request as matching the rule statement. WAF applies the rule action to the request.</p> </li> <li> <p> <code>NO_MATCH</code> - Treat the web request as not matching the rule statement.</p> </li> </ul> <p>You can combine the <code>MATCH</code> or <code>NO_MATCH</code> settings for oversize handling with your rule and web ACL action settings, so that you block any request whose body is over the limit. </p> <p>Default: <code>CONTINUE</code> </p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:5245:          "documentation":"<p>Specifies the maximum size of the web request body component that an associated CloudFront, API Gateway, Amazon Cognito, App Runner, or Verified Access resource should send to WAF for inspection. This applies to statements in the web ACL that inspect the body or JSON body. </p> <p>Default: <code>16 KB (16,384 bytes)</code> </p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:5248:      "documentation":"<p>Customizes the maximum size of the request body that your protected CloudFront, API Gateway, Amazon Cognito, App Runner, and Verified Access resources forward to WAF for inspection. The default size is 16 KB (16,384 bytes). You can change the setting for any of the available resource types. </p> <note> <p>You are charged additional fees when your protected resources forward body sizes that are larger than the default. For more information, see <a href=\"http://aws.amazon.com/waf/pricing/\">WAF Pricing</a>.</p> </note> <p>Example JSON: <code> { \"API_GATEWAY\": \"KB_48\", \"APP_RUNNER_SERVICE\": \"KB_32\" }</code> </p> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p> <p>This is used in the <code>AssociationConfig</code> of the web ACL. </p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:6448:          "documentation":"<p>Specifies custom configurations for the associations between the web ACL and protected resources. </p> <p>Use this to customize the maximum size of the request body that your protected resources forward to WAF for inspection. You can customize this setting for CloudFront, API Gateway, Amazon Cognito, App Runner, or Verified Access resources. The default setting is 16 KB (16,384 bytes). </p> <note> <p>You are charged additional fees when your protected resources forward body sizes that are larger than the default. For more information, see <a href=\"http://aws.amazon.com/waf/pricing/\">WAF Pricing</a>.</p> </note> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:6806:          "documentation":"<p>Specifies custom configurations for the associations between the web ACL and protected resources. </p> <p>Use this to customize the maximum size of the request body that your protected resources forward to WAF for inspection. You can customize this setting for CloudFront, API Gateway, Amazon Cognito, App Runner, or Verified Access resources. The default setting is 16 KB (16,384 bytes). </p> <note> <p>You are charged additional fees when your protected resources forward body sizes that are larger than the default. For more information, see <a href=\"http://aws.amazon.com/waf/pricing/\">WAF Pricing</a>.</p> </note> <p>For Application Load Balancer and AppSync, the limit is fixed at 8 KB (8,192 bytes).</p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:6821:      "documentation":"<p> A web ACL defines a collection of rules to use to inspect and control web requests. Each rule has a statement that defines what to look for in web requests and an action that WAF applies to requests that match the statement. In the web ACL, you assign a default action to take (allow, block) for any request that does not match any of the rules. The rules in a web ACL can be a combination of the types <a>Rule</a>, <a>RuleGroup</a>, and managed rule group. You can associate a web ACL with one or more Amazon Web Services resources to protect. The resource types include Amazon CloudFront distribution, Amazon API Gateway REST API, Application Load Balancer, AppSync GraphQL API, Amazon Cognito user pool, App Runner service, Amplify application, and Amazon Web Services Verified Access instance. </p>"
./backend/aws/dist/awscli/botocore/data/wafv2/2019-07-29/service-2.json:6872:  "documentation":"<fullname>WAF </fullname> <note> <p>This is the latest version of the <b>WAF</b> API, released in November, 2019. The names of the entities that you use to access this API, like endpoints and namespaces, all have the versioning information added, like \"V2\" or \"v2\", to distinguish from the prior version. We recommend migrating your resources to this version, because it has a number of significant improvements.</p> <p>If you used WAF prior to this release, you can't use this WAFV2 API to access any WAF resources that you created before. WAF Classic support will end on September 30, 2025. </p> <p>For information about WAF, including how to migrate your WAF Classic resources to this version, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\">WAF Developer Guide</a>. </p> </note> <p>WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to a protected resource. Protected resource types include Amazon CloudFront distribution, Amazon API Gateway REST API, Application Load Balancer, AppSync GraphQL API, Amazon Cognito user pool, App Runner service, Amplify application, and Amazon Web Services Verified Access instance. WAF also lets you control access to your content, to protect the Amazon Web Services resource that WAF is monitoring. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, the protected resource responds to requests with either the requested content, an HTTP 403 status code (Forbidden), or with a custom response. </p> <p>This API guide is for developers who need detailed information about WAF API actions, data types, and errors. For detailed information about WAF features and guidance for configuring and using WAF, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html\">WAF Developer Guide</a>.</p> <p>You can make calls using the endpoints listed in <a href=\"https://docs.aws.amazon.com/general/latest/gr/waf.html\">WAF endpoints and quotas</a>. </p> <ul> <li> <p>For regional resources, you can use any of the endpoints in the list. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AppSync GraphQL API, an Amazon Cognito user pool, an App Runner service, or an Amazon Web Services Verified Access instance. </p> </li> <li> <p>For Amazon CloudFront and Amplify, you must use the API endpoint listed for US East (N. Virginia): us-east-1.</p> </li> </ul> <p>Alternatively, you can use one of the Amazon Web Services SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p>"
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:929:        "RunConfigurationDescription":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:930:          "shape":"RunConfigurationDescription",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1016:        "RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1033:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1034:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1325:        "RuntimeEnvironment"
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1344:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1345:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1775:        "RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1787:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:1788:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:2423:    "FlinkRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3796:    "RunConfiguration":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3799:        "FlinkRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3800:          "shape":"FlinkRunConfiguration",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3803:        "SqlRunConfigurations":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3804:          "shape":"SqlRunConfigurations",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3814:    "RunConfigurationDescription":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3821:        "FlinkRunConfigurationDescription":{"shape":"FlinkRunConfiguration"}
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3825:    "RunConfigurationUpdate":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3828:        "FlinkRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3829:          "shape":"FlinkRunConfiguration",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:3839:    "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4075:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4076:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4077:          "documentation":"<p>The Flink Runtime for the application snapshot.</p>"
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4181:    "SqlRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4199:    "SqlRunConfigurations":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4201:      "member":{"shape":"SqlRunConfiguration"}
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4211:        "RunConfiguration":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4212:          "shape":"RunConfiguration",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4423:        "RunConfigurationUpdate":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4424:          "shape":"RunConfigurationUpdate",
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4435:        "RuntimeEnvironmentUpdate":{
./backend/aws/dist/awscli/botocore/data/kinesisanalyticsv2/2018-05-23/service-2.json:4436:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/paginators-1.json:27:    "ListMapRuns": {
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/paginators-1.json:31:      "result_key": "mapRuns"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:110:      "documentation":"<p>Deletes a state machine. This is an asynchronous operation. It sets the state machine's status to <code>DELETING</code> and begins the deletion process. A state machine is deleted only when all its executions are completed. On the next state transition, the state machine's executions are terminated.</p> <p>A qualified state machine ARN can either refer to a <i>Distributed Map state</i> defined within a state machine, a version ARN, or an alias ARN.</p> <p>The following are some examples of qualified and unqualified state machine ARNs:</p> <ul> <li> <p>The following qualified state machine ARN refers to a <i>Distributed Map state</i> with a label <code>mapStateLabel</code> in a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:partition:states:region:account-id:stateMachine:myStateMachine/mapStateLabel</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a <i>Distributed Map state</i>, the request fails with <code>ValidationException</code>.</p> </note> </li> <li> <p>The following unqualified state machine ARN refers to a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:partition:states:region:account-id:stateMachine:myStateMachine</code> </p> </li> </ul> <p>This API action also deletes all <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html\">versions</a> and <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html\">aliases</a> associated with a state machine.</p> <note> <p>For <code>EXPRESS</code> state machines, the deletion happens eventually (usually in less than a minute). Running executions may emit logs after <code>DeleteStateMachine</code> API is called.</p> </note>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:172:      "documentation":"<p>Provides information about a state machine execution, such as the state machine associated with the execution, the execution input and output, and relevant execution metadata. If you've <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/redrive-executions.html\">redriven</a> an execution, you can use this API action to return information about the redrives of that execution. In addition, you can use this API action to return the Map Run Amazon Resource Name (ARN) if the execution was dispatched by a Map Run.</p> <p>If you specify a version or alias ARN when you call the <a>StartExecution</a> API action, <code>DescribeExecution</code> returns that ARN.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>Executions of an <code>EXPRESS</code> state machine aren't supported by <code>DescribeExecution</code> unless a Map Run dispatched them.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:174:    "DescribeMapRun":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:175:      "name":"DescribeMapRun",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:180:      "input":{"shape":"DescribeMapRunInput"},
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:181:      "output":{"shape":"DescribeMapRunOutput"},
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:186:      "documentation":"<p>Provides information about a Map Run's configuration, progress, and results. If you've <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/redrive-map-run.html\">redriven</a> a Map Run, this API action also returns information about the redrives of that Map Run. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-examine-map-run.html\">Examining Map Run</a> in the <i>Step Functions Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:235:      "documentation":"<p>Provides information about a state machine's definition, its execution role ARN, and configuration. If a Map Run dispatched the execution, this action returns the Map Run Amazon Resource Name (ARN) in the response. The state machine returned is the state machine associated with the Map Run.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:302:      "documentation":"<p>Lists all executions of a state machine or a Map Run. You can list all executions related to a state machine by specifying a state machine Amazon Resource Name (ARN), or those related to a Map Run by specifying a Map Run ARN. Using this API action, you can also list all <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/redrive-executions.html\">redriven</a> executions.</p> <p>You can also provide a state machine <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html\">alias</a> ARN or <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html\">version</a> ARN to list the executions associated with a specific alias or version.</p> <p>Results are sorted by time, with the most recent execution first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:304:    "ListMapRuns":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:305:      "name":"ListMapRuns",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:310:      "input":{"shape":"ListMapRunsInput"},
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:311:      "output":{"shape":"ListMapRunsOutput"},
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:317:      "documentation":"<p>Lists all Map Runs that were started by a given state machine execution. Use this API action to obtain Map Run ARNs, and then call <code>DescribeMapRun</code> to obtain more information, if needed.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:412:      "documentation":"<p>Restarts unsuccessful executions of Standard workflows that didn't complete successfully in the last 14 days. These include failed, aborted, or timed out executions. When you <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/redrive-executions.html\">redrive</a> an execution, it continues the failed execution from the unsuccessful step and uses the same input. Step Functions preserves the results and execution history of the successful steps, and doesn't rerun these steps when you redrive an execution. Redriven executions use the same state machine definition and execution ARN as the original execution attempt.</p> <p>For workflows that include an <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-map-state.html\">Inline Map</a> or <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-parallel-state.html\">Parallel</a> state, <code>RedriveExecution</code> API action reschedules and redrives only the iterations and branches that failed or aborted.</p> <p>To redrive a workflow that includes a Distributed Map state whose Map Run failed, you must redrive the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/use-dist-map-orchestrate-large-scale-parallel-workloads.html#dist-map-orchestrate-parallel-workloads-key-terms\">parent workflow</a>. The parent workflow redrives all the unsuccessful states, including a failed Map Run. If a Map Run was not started in the original execution attempt, the redriven parent workflow starts the Map Run.</p> <note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p> <p>However, you can restart the unsuccessful executions of Express child workflows in a Distributed Map by redriving its Map Run. When you redrive a Map Run, the Express child workflows are rerun using the <a>StartExecution</a> API action. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/redrive-map-run.html\">Redriving Map Runs</a>.</p> </note> <p>You can redrive executions if your original execution meets the following conditions:</p> <ul> <li> <p>The execution status isn't <code>SUCCEEDED</code>.</p> </li> <li> <p>Your workflow execution has not exceeded the redrivable period of 14 days. Redrivable period refers to the time during which you can redrive a given execution. This period starts from the day a state machine completes its execution.</p> </li> <li> <p>The workflow execution has not exceeded the maximum open time of one year. For more information about state machine quotas, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/limits-overview.html#service-limits-state-machine-executions\">Quotas related to state machine executions</a>.</p> </li> <li> <p>The execution event history count is less than 24,999. Redriven executions append their event history to the existing event history. Make sure your workflow execution contains less than 24,999 events to accommodate the <code>ExecutionRedriven</code> history event and at least one other history event.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:577:    "UpdateMapRun":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:578:      "name":"UpdateMapRun",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:583:      "input":{"shape":"UpdateMapRunInput"},
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:584:      "output":{"shape":"UpdateMapRunOutput"},
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:590:      "documentation":"<p>Updates an in-progress Map Run's configuration to include changes to the settings that control maximum concurrency and Map Run failure.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:615:      "documentation":"<p>Updates an existing state machine by modifying its <code>definition</code>, <code>roleArn</code>, <code>loggingConfiguration</code>, or <code>EncryptionConfiguration</code>. Running executions will continue to use the previous <code>definition</code> and <code>roleArn</code>. You must include at least one of <code>definition</code> or <code>roleArn</code> or you will receive a <code>MissingRequiredParameter</code> error.</p> <p>A qualified state machine ARN refers to a <i>Distributed Map state</i> defined within a state machine. For example, the qualified state machine ARN <code>arn:partition:states:region:account-id:stateMachine:stateMachineName/mapStateLabel</code> refers to a <i>Distributed Map state</i> with a label <code>mapStateLabel</code> in the state machine named <code>stateMachineName</code>.</p> <p>A qualified state machine ARN can either refer to a <i>Distributed Map state</i> defined within a state machine, a version ARN, or an alias ARN.</p> <p>The following are some examples of qualified and unqualified state machine ARNs:</p> <ul> <li> <p>The following qualified state machine ARN refers to a <i>Distributed Map state</i> with a label <code>mapStateLabel</code> in a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:partition:states:region:account-id:stateMachine:myStateMachine/mapStateLabel</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a <i>Distributed Map state</i>, the request fails with <code>ValidationException</code>.</p> </note> </li> <li> <p>The following qualified state machine ARN refers to an alias named <code>PROD</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine:PROD&gt;</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a version ARN or an alias ARN, the request starts execution for that version or alias.</p> </note> </li> <li> <p>The following unqualified state machine ARN refers to a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine&gt;</code> </p> </li> </ul> <p>After you update your state machine, you can set the <code>publish</code> parameter to <code>true</code> in the same action to publish a new <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html\">version</a>. This way, you can opt-in to strict versioning of your state machine.</p> <note> <p>Step Functions assigns monotonically increasing integers for state machine versions, starting at version number 1.</p> </note> <note> <p>All <code>StartExecution</code> calls within a few seconds use the updated <code>definition</code> and <code>roleArn</code>. Executions started immediately after you call <code>UpdateStateMachine</code> may use the previous state machine <code>definition</code> and <code>roleArn</code>. </p> </note>",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:646:      "documentation":"<p>Validates the syntax of a state machine definition specified in <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a> (ASL), a JSON-based, structured language.</p> <p>You can validate that a state machine definition is correct without creating a state machine resource.</p> <p>Suggested uses for <code>ValidateStateMachineDefinition</code>:</p> <ul> <li> <p>Integrate automated checks into your code review or Continuous Integration (CI) process to check state machine definitions before starting deployments.</p> </li> <li> <p>Run validation from a Git pre-commit hook to verify the definition before committing to your source repository.</p> </li> </ul> <p>Validation will look for problems in your state machine definition and return a <b>result</b> and a list of <b>diagnostic elements</b>.</p> <p>The <b>result</b> value will be <code>OK</code> when your workflow definition can be successfully created or updated. Note the result can be <code>OK</code> even when diagnostic warnings are present in the response. The <b>result</b> value will be <code>FAIL</code> when the workflow definition contains errors that would prevent you from creating or updating your state machine. </p> <p>The list of <a href=\"https://docs.aws.amazon.com/step-functions/latest/apireference/API_ValidateStateMachineDefinitionDiagnostic.html\">ValidateStateMachineDefinitionDiagnostic</a> data elements can contain zero or more <b>WARNING</b> and/or <b>ERROR</b> elements.</p> <note> <p>The <b>ValidateStateMachineDefinition API</b> might add new diagnostics in the future, adjust diagnostic codes, or change the message wording. Your automated processes should only rely on the value of the <b>result</b> field value (OK, FAIL). Do <b>not</b> rely on the exact order, count, or wording of diagnostic messages.</p> </note>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1200:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1202:          "documentation":"<p>The Amazon Resource Name (ARN) that identifies a Map Run, which dispatched this execution.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1226:          "documentation":"<p>The date the execution was last redriven. If you have not yet redriven an execution, the <code>redriveDate</code> is null.</p> <p>The <code>redriveDate</code> is unavailable if you redrive a Map Run that starts child workflow executions of type <code>EXPRESS</code>.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1230:          "documentation":"<p>Indicates whether or not an execution can be redriven at a given point in time.</p> <ul> <li> <p>For executions of type <code>STANDARD</code>, <code>redriveStatus</code> is <code>NOT_REDRIVABLE</code> if calling the <a>RedriveExecution</a> API action would return the <code>ExecutionNotRedrivable</code> error.</p> </li> <li> <p>For a Distributed Map that includes child workflows of type <code>STANDARD</code>, <code>redriveStatus</code> indicates whether or not the Map Run can redrive child workflow executions.</p> </li> <li> <p>For a Distributed Map that includes child workflows of type <code>EXPRESS</code>, <code>redriveStatus</code> indicates whether or not the Map Run can redrive child workflow executions.</p> <p>You can redrive failed or timed out <code>EXPRESS</code> workflows <i>only if</i> they're a part of a Map Run. When you <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/redrive-map-run.html\">redrive</a> the Map Run, these workflows are restarted using the <a>StartExecution</a> API action.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1238:    "DescribeMapRunInput":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1240:      "required":["mapRunArn"],
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1242:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1244:          "documentation":"<p>The Amazon Resource Name (ARN) that identifies a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1248:    "DescribeMapRunOutput":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1251:        "mapRunArn",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1262:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1264:          "documentation":"<p>The Amazon Resource Name (ARN) that identifies a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1268:          "documentation":"<p>The Amazon Resource Name (ARN) that identifies the execution in which the Map Run was started.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1271:          "shape":"MapRunStatus",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1272:          "documentation":"<p>The current status of the Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1276:          "documentation":"<p>The date when the Map Run was started.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1280:          "documentation":"<p>The date when the Map Run was stopped.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1284:          "documentation":"<p>The maximum number of child workflow executions configured to run in parallel for the Map Run at the same time.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1288:          "documentation":"<p>The maximum percentage of failed child workflow executions before the Map Run fails.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1292:          "documentation":"<p>The maximum number of failed child workflow executions before the Map Run fails.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1295:          "shape":"MapRunItemCounts",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1299:          "shape":"MapRunExecutionCounts",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1300:          "documentation":"<p>A JSON object that contains information about the total number of child workflow executions for the Map Run, and the count of child workflow executions for each status, such as <code>failed</code> and <code>succeeded</code>.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1304:          "documentation":"<p>The number of times you've redriven a Map Run. If you have not yet redriven a Map Run, the <code>redriveCount</code> is 0. This count is only updated if you successfully redrive a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1308:          "documentation":"<p>The date a Map Run was last redriven. If you have not yet redriven a Map Run, the <code>redriveDate</code> is null.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1400:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1402:          "documentation":"<p>The Amazon Resource Name (ARN) of the Map Run that started the child workflow execution. This field is returned only if the <code>executionArn</code> is a child workflow execution that was started by a Distributed Map state.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1405:          "shape":"MapRunLabel",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1481:          "shape":"MapRunLabel",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1610:      "documentation":"<p>The maximum number of running executions has been reached. Running executions must end or be stopped before a new execution can be started.</p>",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1651:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1653:          "documentation":"<p>The Amazon Resource Name (ARN) of a Map Run. This field is returned only if <code>mapRunArn</code> was specified in the <code>ListExecutions</code> API action. If <code>stateMachineArn</code> was specified in <code>ListExecutions</code>, the <code>mapRunArn</code> isn't returned.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1657:          "documentation":"<p>The total number of items processed in a child workflow execution. This field is returned only if <code>mapRunArn</code> was specified in the <code>ListExecutions</code> API action. If <code>stateMachineArn</code> was specified in <code>ListExecutions</code>, the <code>itemCount</code> field isn't returned.</p>",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1959:        "mapRunStartedEventDetails":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1960:          "shape":"MapRunStartedEventDetails",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1961:          "documentation":"<p>Contains details, such as <code>mapRunArn</code>, and the start date and time of a Map Run. <code>mapRunArn</code> is the Amazon Resource Name (ARN) of the Map Run that was started.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1963:        "mapRunFailedEventDetails":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1964:          "shape":"MapRunFailedEventDetails",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1965:          "documentation":"<p>Contains error and cause details about a Map Run that failed.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1967:        "mapRunRedrivenEventDetails":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1968:          "shape":"MapRunRedrivenEventDetails",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:1969:          "documentation":"<p>Contains details about the redrive attempt of a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2051:        "MapRunAborted",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2052:        "MapRunFailed",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2053:        "MapRunStarted",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2054:        "MapRunSucceeded",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2056:        "MapRunRedriven",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2434:          "documentation":"<p>The Amazon Resource Name (ARN) of the state machine whose executions is listed.</p> <p>You can specify either a <code>mapRunArn</code> or a <code>stateMachineArn</code>, but not both.</p> <p>You can also return a list of executions associated with a specific <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html\">alias</a> or <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html\">version</a>, by specifying an alias ARN or a version ARN in the <code>stateMachineArn</code> parameter.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2438:          "documentation":"<p>If specified, only list the executions whose current execution status matches the given filter.</p> <p>If you provide a <code>PENDING_REDRIVE</code> statusFilter, you must specify <code>mapRunArn</code>. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/redrive-map-run.html#redrive-child-workflow-behavior\">Child workflow execution redrive behaviour</a> in the <i>Step Functions Developer Guide</i>. </p> <p>If you provide a stateMachineArn and a <code>PENDING_REDRIVE</code> statusFilter, the API returns a validation exception.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2448:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2450:          "documentation":"<p>The Amazon Resource Name (ARN) of the Map Run that started the child workflow executions. If the <code>mapRunArn</code> field is specified, a list of all of the child workflow executions started by a Map Run is returned. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-examine-map-run.html\">Examining Map Run</a> in the <i>Step Functions Developer Guide</i>.</p> <p>You can specify either a <code>mapRunArn</code> or a <code>stateMachineArn</code>, but not both.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2477:    "ListMapRunsInput":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2483:          "documentation":"<p>The Amazon Resource Name (ARN) of the execution for which the Map Runs must be listed.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2495:    "ListMapRunsOutput":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2497:      "required":["mapRuns"],
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2499:        "mapRuns":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2500:          "shape":"MapRunList",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2501:          "documentation":"<p>An array that lists information related to a Map Run, such as the Amazon Resource Name (ARN) of the Map Run and the ARN of the state machine that started the Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2677:    "MapRunExecutionCounts":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2692:          "documentation":"<p>The total number of child workflow executions that were started by a Map Run, but haven't started executing yet. </p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2696:          "documentation":"<p>The total number of child workflow executions that were started by a Map Run and are currently in-progress.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2700:          "documentation":"<p>The total number of child workflow executions that were started by a Map Run and have completed successfully.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2704:          "documentation":"<p>The total number of child workflow executions that were started by a Map Run, but have failed.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2708:          "documentation":"<p>The total number of child workflow executions that were started by a Map Run and have timed out.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2712:          "documentation":"<p>The total number of child workflow executions that were started by a Map Run and were running, but were either stopped by the user or by Step Functions because the Map Run failed. </p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2716:          "documentation":"<p>The total number of child workflow executions that were started by a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2731:      "documentation":"<p>Contains details about all of the child workflow executions started by a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2733:    "MapRunFailedEventDetails":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2738:          "documentation":"<p>The error code of the Map Run failure.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2745:      "documentation":"<p>Contains details about a Map Run failure event that occurred during a state machine execution.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2747:    "MapRunItemCounts":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2782:          "documentation":"<p>The total number of items processed in child workflow executions that were either stopped by the user or by Step Functions, because the Map Run failed.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2786:          "documentation":"<p>The total number of items processed in all the child workflow executions started by a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2801:      "documentation":"<p>Contains details about items that were processed in all of the child workflow executions that were started by a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2803:    "MapRunLabel":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2804:    "MapRunList":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2806:      "member":{"shape":"MapRunListItem"}
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2808:    "MapRunListItem":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2812:        "mapRunArn",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2819:          "documentation":"<p>The <code>executionArn</code> of the execution from which the Map Run was started.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2821:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2823:          "documentation":"<p>The Amazon Resource Name (ARN) of the Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2831:          "documentation":"<p>The date on which the Map Run started.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2835:          "documentation":"<p>The date on which the Map Run stopped.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2838:      "documentation":"<p>Contains details about a specific Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2840:    "MapRunRedrivenEventDetails":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2843:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2845:          "documentation":"<p>The Amazon Resource Name (ARN) of a Map Run that was redriven.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2849:          "documentation":"<p>The number of times the Map Run has been redriven at this point in the execution's history including this event. The redrive count for a redriven Map Run is always greater than 0.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2852:      "documentation":"<p>Contains details about a Map Run that was redriven.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2854:    "MapRunStartedEventDetails":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2857:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2859:          "documentation":"<p>The Amazon Resource Name (ARN) of a Map Run that was started.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2862:      "documentation":"<p>Contains details about a Map Run that was started during a state machine execution.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:2864:    "MapRunStatus":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:3875:    "UpdateMapRunInput":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:3877:      "required":["mapRunArn"],
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:3879:        "mapRunArn":{
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:3881:          "documentation":"<p>The Amazon Resource Name (ARN) of a Map Run.</p>"
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:3885:          "documentation":"<p>The maximum number of child workflow executions that can be specified to run in parallel for the Map Run at the same time.</p>",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:3890:          "documentation":"<p>The maximum percentage of failed items before the Map Run fails.</p>",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:3895:          "documentation":"<p>The maximum number of failed items before the Map Run fails.</p>",
./backend/aws/dist/awscli/botocore/data/stepfunctions/2016-11-23/service-2.json:3900:    "UpdateMapRunOutput":{
./backend/aws/dist/awscli/botocore/data/bcm-pricing-calculator/2024-06-19/service-2.json:908:          "documentation":"<p> The specific operation associated with this usage modification. Describes the specific Amazon Web Services operation that this usage line models. For example, <code>RunInstances</code> indicates the operation of an Amazon EC2 instance. </p>"
./backend/aws/dist/awscli/botocore/data/pinpoint-sms-voice-v2/2022-03-31/service-2.json:6433:          "documentation":"<p>The time when the registration was in the draft state, in <a href=\"https://www.epochconverter.com/\">UNIX epoch time</a> format.</p>"
./backend/aws/dist/awscli/botocore/data/pinpoint-sms-voice-v2/2022-03-31/service-2.json:7040:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/pinpoint-sms-voice-v2/2022-03-31/service-2.json:7107:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/pinpoint-sms-voice-v2/2022-03-31/service-2.json:7109:          "documentation":"<p>When set to true, the message is checked and validated, but isn't sent to the end recipient. You are not charged for using <code>DryRun</code>.</p> <p>The Message Parts per Second (MPS) limit when using <code>DryRun</code> is five. If your origination identity has a lower MPS limit then the lower MPS limit is used. For more information about MPS limits, see <a href=\"https://docs.aws.amazon.com/sms-voice/latest/userguide/sms-limitations-mps.html\">Message Parts per Second (MPS) limits</a> in the <i>AWS End User Messaging SMS User Guide</i>..</p>"
./backend/aws/dist/awscli/botocore/data/pinpoint-sms-voice-v2/2022-03-31/service-2.json:7173:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/waiters-2.json:180:    "InstanceRunning": {
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/completions-1.json:4264:    "RunInstances": {
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/completions-1.json:4383:    "RunScheduledInstances": {
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:901:      "documentation":"<p>Creates a launch template.</p> <p>A launch template contains the parameters to launch an instance. When you launch an instance using <a>RunInstances</a>, you can specify a launch template instead of providing the launch parameters in the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html\">Store instance launch parameters in Amazon EC2 launch templates</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>To clone an existing launch template as the basis for a new launch template, use the Amazon EC2 console. The API, SDKs, and CLI do not support cloning a template. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-launch-template.html#create-launch-template-from-existing-launch-template\">Create a launch template from an existing launch template</a> in the <i>Amazon EC2 User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6243:      "documentation":"<note> <p>You can no longer purchase Scheduled Instances.</p> </note> <p>Purchases the Scheduled Instances with the specified schedule.</p> <p>Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a> to check for available schedules and obtain a purchase token. After you purchase a Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled time period.</p> <p>After you purchase a Scheduled Instance, you can't cancel, modify, or resell your purchase.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6636:    "RunInstances":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6637:      "name":"RunInstances",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6642:      "input":{"shape":"RunInstancesRequest"},
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6644:      "documentation":"<p>Launches the specified number of instances using an AMI for which you have permissions.</p> <p>You can specify a number of options, or leave the default options. The following rules apply:</p> <ul> <li> <p>If you don't specify a subnet ID, we choose a default subnet from your default VPC for you. If you don't have a default VPC, you must specify a subnet ID in the request.</p> </li> <li> <p>All instances have a network interface with a primary private IPv4 address. If you don't specify this address, we choose one from the IPv4 range of your subnet.</p> </li> <li> <p>Not all instance types support IPv6 addresses. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance types</a>.</p> </li> <li> <p>If you don't specify a security group ID, we use the default security group for the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html\">Security groups</a>.</p> </li> <li> <p>If any of the AMIs have a product code attached for which the user has not subscribed, the request fails.</p> </li> </ul> <p>You can create a <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html\">launch template</a>, which is a resource that contains the parameters to launch an instance. When you launch an instance using <a>RunInstances</a>, you can specify the launch template instead of specifying the launch parameters.</p> <p>To ensure faster instance launches, break up large requests into smaller batches. For example, create five separate launch requests for 100 instances each instead of one launch request for 500 instances.</p> <p> <code>RunInstances</code> is subject to both request rate limiting and resource rate limiting. For more information, see <a href=\"https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-throttling.html\">Request throttling</a>.</p> <p>An instance is ready for you to use when it's in the <code>running</code> state. You can check the state of your instance using <a>DescribeInstances</a>. You can tag instances and EBS volumes during launch, after launch, or both. For more information, see <a>CreateTags</a> and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\">Tagging your Amazon EC2 resources</a>.</p> <p>Linux instances have access to the public key of the key pair at boot. You can use this key to provide secure access to the instance. Amazon EC2 public images use this feature to provide secure access without passwords. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\">Key pairs</a>.</p> <p>For troubleshooting, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html\">What to do if an instance immediately terminates</a>, and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html\">Troubleshooting connecting to your instance</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6646:    "RunScheduledInstances":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6647:      "name":"RunScheduledInstances",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6652:      "input":{"shape":"RunScheduledInstancesRequest"},
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6653:      "output":{"shape":"RunScheduledInstancesResult"},
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6985:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:6987:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7005:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7007:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7029:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7031:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7072:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7074:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7096:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7098:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7120:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7122:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7143:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7145:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7172:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7174:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7175:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7779:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7781:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7838:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7840:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7841:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7930:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7965:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:7967:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8450:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8452:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8717:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8719:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8771:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8773:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8774:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8810:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8812:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8854:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8856:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8890:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8892:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8893:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8912:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8914:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8972:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:8974:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9003:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9005:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9034:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9036:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9089:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9091:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9125:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9127:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9153:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9155:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9156:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9200:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9202:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9275:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9277:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9306:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9308:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9337:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9339:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9381:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9383:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9613:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9615:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9616:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9652:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9654:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9655:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9689:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9691:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9692:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9748:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9750:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9789:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9791:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9792:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9811:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9813:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:9814:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10001:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10003:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10026:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10028:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10029:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10132:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10134:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10135:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10573:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10575:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10576:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10795:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10797:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10798:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10836:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10838:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10870:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10872:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10890:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10892:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10893:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10911:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10913:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10950:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10952:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10973:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:10975:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:11072:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:11074:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:11075:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:11148:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:11150:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:11151:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13161:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13163:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13164:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13454:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13456:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13500:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency in Amazon EC2 API requests</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13546:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13548:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13549:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13617:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13619:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13620:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13741:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13743:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13747:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensure Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13798:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensure Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13827:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13829:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13903:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensure Idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13953:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:13955:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14002:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14004:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14069:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14071:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14167:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14169:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14198:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14200:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14227:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14229:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14280:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14282:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14283:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14306:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14308:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14333:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14335:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14358:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14361:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14363:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14404:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14406:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14407:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14429:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14431:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14537:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14539:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14543:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14624:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14626:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14708:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14710:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14770:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14772:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14773:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14816:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14818:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14867:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14869:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14954:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14956:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14957:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14975:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:14977:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15012:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15014:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15098:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15100:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15138:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15140:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15187:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15189:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15242:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15244:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15245:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15256:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15258:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15262:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If a client token isn't specified, a randomly generated token is used in the request to ensure idempotency.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15307:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15309:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15313:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If a client token isn't specified, a randomly generated token is used in the request to ensure idempotency.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15373:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15375:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15414:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15416:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15450:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15452:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15486:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15488:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15523:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15525:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15578:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15580:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15607:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15610:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15612:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15655:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15657:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15711:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15713:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15773:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15775:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15776:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15839:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15841:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15842:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15890:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15892:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15948:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:15950:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16000:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16002:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16106:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16108:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16109:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16144:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16146:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16147:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16174:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16176:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16216:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16218:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16275:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16316:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16318:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16364:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16366:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16367:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16446:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16448:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16487:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16489:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16521:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16523:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16568:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16570:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16571:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16620:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16622:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16623:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16672:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16674:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16675:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16700:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16702:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16728:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16730:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16731:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16777:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16779:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16817:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16819:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16891:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16893:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16894:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16915:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16917:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16918:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16944:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:16946:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17021:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17023:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17094:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17096:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17140:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17142:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17203:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17205:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17239:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17241:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17283:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17285:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17351:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17353:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17389:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17391:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17428:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17430:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17460:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17462:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17499:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17501:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17535:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17537:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17563:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17565:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17607:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17609:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17839:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17841:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17900:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17902:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17937:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:17939:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18092:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18094:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18219:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18221:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18222:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18230:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18232:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18270:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18272:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18315:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18317:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18408:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18410:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18479:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18481:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18482:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18551:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18553:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18554:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18610:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18612:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18613:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18673:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18675:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:18676:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19002:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19004:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19026:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19028:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19061:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19063:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19092:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19094:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19116:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19118:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19140:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19142:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19143:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19156:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19158:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19159:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19167:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19169:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19270:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19272:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19304:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19306:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19329:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19331:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19353:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19355:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19377:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19379:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19405:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19407:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19408:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19421:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19423:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19445:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19447:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19473:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19475:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19491:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19493:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19525:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19527:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19556:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19558:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19559:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19581:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19583:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19609:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19611:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19716:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19718:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19744:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19746:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19768:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19770:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19792:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19794:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19816:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19818:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19840:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19842:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19860:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19862:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19884:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19886:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19912:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19914:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19915:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19938:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19940:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19941:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19958:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19960:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19978:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:19980:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20002:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20004:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20026:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20028:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20058:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20060:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20080:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20082:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20083:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20097:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20099:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20100:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20113:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20115:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20174:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20176:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20208:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20210:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20211:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20238:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20240:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20262:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20264:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20286:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20288:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20306:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20308:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20309:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20329:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20331:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20332:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20359:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20361:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20362:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20392:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20394:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20395:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20408:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20410:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20432:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20434:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20435:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20443:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20445:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20446:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20468:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20470:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20492:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20494:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20516:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20518:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20540:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20542:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20564:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20566:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20588:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20590:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20612:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20614:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20636:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20638:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20660:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20662:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20691:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20693:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20715:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20717:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20746:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20748:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20770:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20772:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20794:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20796:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20818:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20820:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20847:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20849:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20876:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20878:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20900:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20902:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20929:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20931:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20958:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20960:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20961:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20969:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20971:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20993:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:20995:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21018:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21020:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21043:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21045:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21068:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21070:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21071:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21098:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21100:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21101:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21113:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21115:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21116:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21147:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21149:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21150:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21163:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21165:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21186:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21188:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21214:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21216:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21245:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21247:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21293:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21295:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21296:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21320:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21322:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21370:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21372:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21401:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21403:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21420:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21422:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21423:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21463:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21465:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21504:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21506:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21533:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21535:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21536:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21563:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21565:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21601:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21603:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21604:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21639:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21641:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21668:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21670:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21671:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21699:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21701:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21749:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21751:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21782:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21784:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21828:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21830:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21911:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21913:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21958:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:21960:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22005:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22007:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22057:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22059:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22104:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22106:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22146:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22148:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22175:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22177:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22178:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22230:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22232:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22290:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22292:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22337:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22339:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22384:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22386:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22435:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22437:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22477:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22479:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22508:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22510:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22511:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22543:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22545:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22546:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22565:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22567:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22620:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22622:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22623:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22655:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22657:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22707:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22709:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22754:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22756:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22839:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:22841:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23012:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23014:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23066:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23068:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23126:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23128:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23217:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23219:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23259:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23261:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23304:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23306:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23336:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23338:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23613:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23615:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23616:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23655:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23657:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23658:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23685:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23687:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23726:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23728:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23771:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23773:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23774:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23791:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23793:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23838:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23840:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23880:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23882:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23899:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23901:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23965:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:23967:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24002:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24004:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24005:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24050:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24052:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24097:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24099:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24138:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24140:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24185:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24187:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24188:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24192:          "documentation":"<p>The filters.</p> <ul> <li> <p> <code>affinity</code> - The affinity setting for an instance running on a Dedicated Host (<code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code> | <code>arm64</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>availability-zone-id</code> - The ID of the Availability Zone of the instance.</p> </li> <li> <p> <code>block-device-mapping.attach-time</code> - The attach time for an EBS volume mapped to the instance, for example, <code>2022-09-15T17:15:20.000Z</code>.</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</p> </li> <li> <p> <code>boot-mode</code> - The boot mode that was specified by the AMI (<code>legacy-bios</code> | <code>uefi</code> | <code>uefi-preferred</code>).</p> </li> <li> <p> <code>capacity-reservation-id</code> - The ID of the Capacity Reservation into which the instance was launched.</p> </li> <li> <p> <code>capacity-reservation-specification.capacity-reservation-preference</code> - The instance's Capacity Reservation preference (<code>open</code> | <code>none</code>).</p> </li> <li> <p> <code>capacity-reservation-specification.capacity-reservation-target.capacity-reservation-id</code> - The ID of the targeted Capacity Reservation.</p> </li> <li> <p> <code>capacity-reservation-specification.capacity-reservation-target.capacity-reservation-resource-group-arn</code> - The ARN of the targeted Capacity Reservation group.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance.</p> </li> <li> <p> <code>current-instance-boot-mode</code> - The boot mode that is used to launch the instance at launch or start (<code>legacy-bios</code> | <code>uefi</code>).</p> </li> <li> <p> <code>dns-name</code> - The public DNS name of the instance.</p> </li> <li> <p> <code>ebs-optimized</code> - A Boolean that indicates whether the instance is optimized for Amazon EBS I/O.</p> </li> <li> <p> <code>ena-support</code> - A Boolean that indicates whether the instance is enabled for enhanced networking with ENA.</p> </li> <li> <p> <code>enclave-options.enabled</code> - A Boolean that indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.</p> </li> <li> <p> <code>hibernation-options.configured</code> - A Boolean that indicates whether the instance is enabled for hibernation. A value of <code>true</code> means that the instance is enabled for hibernation.</p> </li> <li> <p> <code>host-id</code> - The ID of the Dedicated Host on which the instance is running, if applicable.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>). The value <code>xen</code> is used for both Xen and Nitro hypervisors.</p> </li> <li> <p> <code>iam-instance-profile.arn</code> - The instance profile associated with the instance. Specified as an ARN.</p> </li> <li> <p> <code>iam-instance-profile.id</code> - The instance profile associated with the instance. Specified as an ID.</p> </li> <li> <p> <code>image-id</code> - The ID of the image used to launch the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance, a Scheduled Instance, or a Capacity Block (<code>spot</code> | <code>scheduled</code> | <code>capacity-block</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</p> </li> <li> <p> <code>instance.group-id</code> - The ID of the security group for the instance. </p> </li> <li> <p> <code>instance.group-name</code> - The name of the security group for the instance. </p> </li> <li> <p> <code>ip-address</code> - The public IPv4 address of the instance.</p> </li> <li> <p> <code>ipv6-address</code> - The IPv6 address of the instance.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair used when the instance was launched.</p> </li> <li> <p> <code>launch-index</code> - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p> <code>launch-time</code> - The time when the instance was launched, in the ISO 8601 format in the UTC time zone (YYYY-MM-DDThh:mm:ss.sssZ), for example, <code>2021-09-29T11:04:43.305Z</code>. You can use a wildcard (<code>*</code>), for example, <code>2021-09-29T*</code>, which matches an entire day.</p> </li> <li> <p> <code>maintenance-options.auto-recovery</code> - The current automatic recovery behavior of the instance (<code>disabled</code> | <code>default</code>).</p> </li> <li> <p> <code>metadata-options.http-endpoint</code> - The status of access to the HTTP metadata endpoint on your instance (<code>enabled</code> | <code>disabled</code>)</p> </li> <li> <p> <code>metadata-options.http-protocol-ipv4</code> - Indicates whether the IPv4 endpoint is enabled (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>metadata-options.http-protocol-ipv6</code> - Indicates whether the IPv6 endpoint is enabled (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>metadata-options.http-put-response-hop-limit</code> - The HTTP metadata request put response hop limit (integer, possible values <code>1</code> to <code>64</code>)</p> </li> <li> <p> <code>metadata-options.http-tokens</code> - The metadata request authorization state (<code>optional</code> | <code>required</code>)</p> </li> <li> <p> <code>metadata-options.instance-metadata-tags</code> - The status of access to instance tags from the instance metadata (<code>enabled</code> | <code>disabled</code>)</p> </li> <li> <p> <code>metadata-options.state</code> - The state of the metadata option changes (<code>pending</code> | <code>applied</code>).</p> </li> <li> <p> <code>monitoring-state</code> - Indicates whether detailed monitoring is enabled (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>network-interface.addresses.association.allocation-id</code> - The allocation ID.</p> </li> <li> <p> <code>network-interface.addresses.association.association-id</code> - The association ID.</p> </li> <li> <p> <code>network-interface.addresses.association.carrier-ip</code> - The carrier IP address.</p> </li> <li> <p> <code>network-interface.addresses.association.customer-owned-ip</code> - The customer-owned IP address.</p> </li> <li> <p> <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of the private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.addresses.association.public-dns-name</code> - The public DNS name.</p> </li> <li> <p> <code>network-interface.addresses.association.public-ip</code> - The ID of the association of an Elastic IP address (IPv4) with a network interface.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Specifies whether the IPv4 address of the network interface is the primary private IPv4 address.</p> </li> <li> <p> <code>network-interface.addresses.private-dns-name</code> - The private DNS name.</p> </li> <li> <p> <code>network-interface.addresses.private-ip-address</code> - The private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>network-interface.association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>network-interface.association.carrier-ip</code> - The customer-owned IP address.</p> </li> <li> <p> <code>network-interface.association.customer-owned-ip</code> - The customer-owned IP address.</p> </li> <li> <p> <code>network-interface.association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.public-dns-name</code> - The public DNS name.</p> </li> <li> <p> <code>network-interface.association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>network-interface.attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>network-interface.attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>network-interface.attachment.delete-on-termination</code> - Specifies whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>network-interface.attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.network-card-index</code> - The index of the network card.</p> </li> <li> <p> <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>network-interface.availability-zone</code> - The Availability Zone for the network interface.</p> </li> <li> <p> <code>network-interface.deny-all-igw-traffic</code> - A Boolean that indicates whether a network interface with an IPv6 address is unreachable from the public internet.</p> </li> <li> <p> <code>network-interface.description</code> - The description of the network interface.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.ipv4-prefixes.ipv4-prefix</code> - The IPv4 prefixes that are assigned to the network interface.</p> </li> <li> <p> <code>network-interface.ipv6-address</code> - The IPv6 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.ipv6-addresses.ipv6-address</code> - The IPv6 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.ipv6-addresses.is-primary-ipv6</code> - A Boolean that indicates whether this is the primary IPv6 address.</p> </li> <li> <p> <code>network-interface.ipv6-native</code> - A Boolean that indicates whether this is an IPv6 only network interface.</p> </li> <li> <p> <code>network-interface.ipv6-prefixes.ipv6-prefix</code> - The IPv6 prefix assigned to the network interface.</p> </li> <li> <p> <code>network-interface.mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.operator.managed</code> - A Boolean that indicates whether the instance has a managed network interface.</p> </li> <li> <p> <code>network-interface.operator.principal</code> - The principal that manages the network interface. Only valid for instances with managed network interfaces, where <code>managed</code> is <code>true</code>.</p> </li> <li> <p> <code>network-interface.outpost-arn</code> - The ARN of the Outpost.</p> </li> <li> <p> <code>network-interface.owner-id</code> - The ID of the owner of the network interface.</p> </li> <li> <p> <code>network-interface.private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>network-interface.private-ip-address</code> - The private IPv4 address.</p> </li> <li> <p> <code>network-interface.public-dns-name</code> - The public DNS name.</p> </li> <li> <p> <code>network-interface.requester-id</code> - The requester ID for the network interface.</p> </li> <li> <p> <code>network-interface.requester-managed</code> - Indicates whether the network interface is being managed by Amazon Web Services.</p> </li> <li> <p> <code>network-interface.status</code> - The status of the network interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li> <p> <code>network-interface.source-dest-check</code> - Whether the network interface performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>network-interface.tag-key</code> - The key of a tag assigned to the network interface.</p> </li> <li> <p> <code>network-interface.tag-value</code> - The value of a tag assigned to the network interface.</p> </li> <li> <p> <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</p> </li> <li> <p> <code>network-performance-options.bandwidth-weighting</code> - Where the performance boost is applied, if applicable. Valid values: <code>default</code>, <code>vpc-1</code>, <code>ebs-1</code>.</p> </li> <li> <p> <code>operator.managed</code> - A Boolean that indicates whether this is a managed instance.</p> </li> <li> <p> <code>operator.principal</code> - The principal that manages the instance. Only valid for managed instances, where <code>managed</code> is <code>true</code>.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the instance owner.</p> </li> <li> <p> <code>placement-group-name</code> - The name of the placement group for the instance.</p> </li> <li> <p> <code>placement-partition-number</code> - The partition in which the instance is located.</p> </li> <li> <p> <code>platform</code> - The platform. To list only Windows instances, use <code>windows</code>.</p> </li> <li> <p> <code>platform-details</code> - The platform (<code>Linux/UNIX</code> | <code>Red Hat BYOL Linux</code> | <code> Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux with HA</code> | <code>Red Hat Enterprise Linux with SQL Server Standard and HA</code> | <code>Red Hat Enterprise Linux with SQL Server Enterprise and HA</code> | <code>Red Hat Enterprise Linux with SQL Server Standard</code> | <code>Red Hat Enterprise Linux with SQL Server Web</code> | <code>Red Hat Enterprise Linux with SQL Server Enterprise</code> | <code>SQL Server Enterprise</code> | <code>SQL Server Standard</code> | <code>SQL Server Web</code> | <code>SUSE Linux</code> | <code>Ubuntu Pro</code> | <code>Windows</code> | <code>Windows BYOL</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Web</code>).</p> </li> <li> <p> <code>private-dns-name</code> - The private IPv4 DNS name of the instance.</p> </li> <li> <p> <code>private-dns-name-options.enable-resource-name-dns-a-record</code> - A Boolean that indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p> </li> <li> <p> <code>private-dns-name-options.enable-resource-name-dns-aaaa-record</code> - A Boolean that indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p> </li> <li> <p> <code>private-dns-name-options.hostname-type</code> - The type of hostname (<code>ip-name</code> | <code>resource-name</code>).</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address of the instance. This can only be used to filter by the primary IP address of the network interface attached to the instance. To filter by additional IP addresses assigned to the network interface, use the filter <code>network-interface.addresses.private-ip-address</code>.</p> </li> <li> <p> <code>product-code</code> - The product code associated with the AMI used to launch the instance.</p> </li> <li> <p> <code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>reason</code> - The reason for the current state of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, Amazon Web Services Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>reservation-id</code> - The ID of the instance's reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you get one reservation ID. If you launch ten instances using the same launch request, you also get one reservation ID.</p> </li> <li> <p> <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the instance performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the instance to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>spot-instance-request-id</code> - The ID of the Spot Instance request.</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - A message that describes the state change.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>tpm-support</code> - Indicates if the instance is configured for NitroTPM support (<code>v2.0</code>). </p> </li> <li> <p> <code>usage-operation</code> - The usage operation value for the instance (<code>RunInstances</code> | <code>RunInstances:00g0</code> | <code>RunInstances:0010</code> | <code>RunInstances:1010</code> | <code>RunInstances:1014</code> | <code>RunInstances:1110</code> | <code>RunInstances:0014</code> | <code>RunInstances:0210</code> | <code>RunInstances:0110</code> | <code>RunInstances:0100</code> | <code>RunInstances:0004</code> | <code>RunInstances:0200</code> | <code>RunInstances:000g</code> | <code>RunInstances:0g00</code> | <code>RunInstances:0002</code> | <code>RunInstances:0800</code> | <code>RunInstances:0102</code> | <code>RunInstances:0006</code> | <code>RunInstances:0202</code>).</p> </li> <li> <p> <code>usage-operation-update-time</code> - The time that the usage operation was last updated, for example, <code>2022-09-15T17:15:20.000Z</code>.</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is running in.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24238:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24240:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24241:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24278:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24280:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24310:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24312:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24352:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24354:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24394:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24396:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24436:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24438:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24478:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24480:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24520:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24522:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24575:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24577:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24618:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24620:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24621:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24643:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24645:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24710:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24712:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24775:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24777:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24817:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24819:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24859:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24861:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24901:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24903:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24943:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24945:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24985:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:24987:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25032:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25034:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25104:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25106:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25146:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25148:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25193:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25195:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25196:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25243:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25245:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25297:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25299:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25300:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25358:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25360:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25400:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25402:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25454:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25456:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25496:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25498:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25525:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25527:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25528:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25640:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25642:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25643:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25694:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25696:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25723:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25725:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25726:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25753:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25755:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25800:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25802:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25884:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25886:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25887:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25932:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:25934:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26066:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26068:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26069:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26127:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26129:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26130:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26177:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26179:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26219:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26221:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26261:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26263:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26298:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26300:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26301:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26343:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26345:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26398:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26400:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26447:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26449:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26485:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26487:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26535:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26537:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26582:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26584:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26585:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26630:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26632:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26666:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26668:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26669:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26702:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26704:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26757:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26759:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26760:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26787:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26789:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26790:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26815:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26817:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26818:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26871:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26873:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26874:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26938:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26940:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26941:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26988:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26990:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:26991:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27029:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27031:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27032:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27107:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27109:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27148:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27150:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27197:          "documentation":"<p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for the subnet. You can also use <code>availabilityZone</code> as the filter name.</p> </li> <li> <p> <code>availability-zone-id</code> - The ID of the Availability Zone for the subnet. You can also use <code>availabilityZoneId</code> as the filter name.</p> </li> <li> <p> <code>available-ip-address-count</code> - The number of IPv4 addresses in the subnet that are available.</p> </li> <li> <p> <code>cidr-block</code> - The IPv4 CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use <code>cidr</code> or <code>cidrBlock</code> as the filter names.</p> </li> <li> <p> <code>customer-owned-ipv4-pool</code> - The customer-owned IPv4 address pool associated with the subnet.</p> </li> <li> <p> <code>default-for-az</code> - Indicates whether this is the default subnet for the Availability Zone (<code>true</code> | <code>false</code>). You can also use <code>defaultForAz</code> as the filter name.</p> </li> <li> <p> <code>enable-dns64</code> - Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations.</p> </li> <li> <p> <code>enable-lni-at-device-index</code> - Indicates the device position for local network interfaces in this subnet. For example, <code>1</code> indicates local network interfaces in this subnet are the secondary network interface (eth1). </p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - An association ID for an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-native</code> - Indicates whether this is an IPv6 only subnet (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>map-customer-owned-ip-on-launch</code> - Indicates whether a network interface created in this subnet (including a network interface created by <a>RunInstances</a>) receives a customer-owned IPv4 address.</p> </li> <li> <p> <code>map-public-ip-on-launch</code> - Indicates whether instances launched in this subnet receive a public IPv4 address.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the subnet.</p> </li> <li> <p> <code>private-dns-name-options-on-launch.hostname-type</code> - The type of hostname to assign to instances in the subnet at launch. For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name) or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).</p> </li> <li> <p> <code>private-dns-name-options-on-launch.enable-resource-name-dns-a-record</code> - Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p> </li> <li> <p> <code>private-dns-name-options-on-launch.enable-resource-name-dns-aaaa-record</code> - Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p> </li> <li> <p> <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>subnet-arn</code> - The Amazon Resource Name (ARN) of the subnet.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the subnet.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27213:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27215:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27216:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27238:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27240:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27241:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27287:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27289:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27329:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27331:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27371:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27373:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27413:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27415:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27467:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27469:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27508:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27510:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27549:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27551:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27590:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27592:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27631:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27633:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27672:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27674:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27713:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27715:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27754:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27756:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27795:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27797:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27836:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27838:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27870:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27872:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27938:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27940:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27989:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:27991:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28036:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28038:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28083:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28085:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28130:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28132:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28166:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28168:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28169:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28209:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28211:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28212:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28239:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28241:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28286:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28288:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28289:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28338:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28340:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28341:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28378:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28380:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28420:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28422:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28483:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28485:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28486:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28513:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28515:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28555:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28557:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28596:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28598:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28633:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28635:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28676:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28678:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28717:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28719:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28769:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28771:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28824:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28826:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28827:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28882:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28884:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28885:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28917:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28919:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28920:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28949:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28951:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:28952:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29021:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29023:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29024:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29055:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29057:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29058:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29076:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29078:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29079:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29114:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29116:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29155:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29157:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29158:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29177:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29179:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29180:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29323:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29325:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29342:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29344:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29377:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29379:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29396:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29398:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29424:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29426:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29627:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29629:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29651:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29653:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29675:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29677:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29699:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29701:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29723:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29725:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29743:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29745:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29778:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29780:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29797:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29799:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29816:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29818:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29844:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29846:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29879:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29881:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29909:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29911:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29912:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29942:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29944:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29945:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29956:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29958:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29995:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:29997:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30031:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30033:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30074:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30076:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30105:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30107:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30133:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30135:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30173:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30175:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30209:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30211:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30229:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30231:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30232:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30256:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30258:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30319:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30321:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30350:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30352:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30381:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30383:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30410:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30412:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30743:          "documentation":"<p>Identifier (key ID, key alias, key ARN, or alias ARN) of the customer managed KMS key to use for EBS encryption.</p> <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html\">RequestSpotFleet</a>, and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html\">RequestSpotInstances</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30758:          "documentation":"<p>The Availability Zone where the EBS volume will be created (for example, <code>us-east-1a</code>).</p> <p>Either <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code> can be specified, but not both. If neither is specified, Amazon EC2 automatically selects an Availability Zone within the Region.</p> <p>This parameter is not supported when using <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html\">CreateFleet</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html\">CreateImage</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html\">DescribeImages</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html\">RequestSpotFleet</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html\">RequestSpotInstances</a>, and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:30772:          "documentation":"<p>The ID of the Availability Zone where the EBS volume will be created (for example, <code>use1-az1</code>).</p> <p>Either <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code> can be specified, but not both. If neither is specified, Amazon EC2 automatically selects an Availability Zone within the Region.</p> <p>This parameter is not supported when using <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html\">CreateFleet</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html\">CreateImage</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html\">DescribeImages</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html\">RequestSpotFleet</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html\">RequestSpotInstances</a>, and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31474:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31476:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31498:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31500:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31533:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31535:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31552:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31554:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31592:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31594:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31795:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31797:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31824:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31826:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31855:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31857:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31883:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31885:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31907:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31909:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31927:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31929:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31950:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31952:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31981:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:31983:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32000:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32002:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32024:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32026:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32052:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32054:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32087:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32089:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32098:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32100:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32101:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32133:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32135:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32136:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32566:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32568:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32595:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32597:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32640:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32642:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32947:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32949:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32971:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:32973:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:33459:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:33566:          "documentation":"<p>Identifier (key ID, key alias, key ARN, or alias ARN) of the customer managed KMS key to use for EBS encryption.</p> <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html\">CreateFleet</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html\">RequestSpotInstances</a>, and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34291:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34310:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34312:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34344:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34346:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34376:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34378:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34421:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34423:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34458:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34460:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34530:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34532:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34573:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34575:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34576:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34604:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34606:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34637:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34639:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34701:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34703:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34724:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34726:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34743:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34745:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34772:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34774:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34817:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34819:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34888:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34890:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34912:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34914:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34948:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34950:          "documentation":"<p>Specify this parameter to verify whether the request will succeed, without actually making the request. If the request will succeed, the response is <code>DryRunOperation</code>. Otherwise, the response is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34987:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:34989:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35042:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35044:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35070:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35072:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35126:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35128:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35175:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35177:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35229:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35231:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35280:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35282:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35326:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35328:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35368:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35370:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35430:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35432:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35459:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35461:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35496:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35498:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35554:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35556:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35593:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35595:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35617:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35619:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35620:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35648:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35650:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35724:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35726:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35752:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35754:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35784:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35786:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35836:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35838:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35865:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35867:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35889:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35891:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35940:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35942:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35987:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:35989:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36042:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36044:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36084:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36086:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36126:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36128:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36168:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36170:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36205:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36207:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36247:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36249:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36289:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36291:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36318:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36320:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36360:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36362:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36389:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36391:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36433:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36435:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36460:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36462:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36496:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36498:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:36750:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:37788:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:37790:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:37863:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:37865:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38159:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38161:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38162:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38287:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38289:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38290:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38352:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38354:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38460:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38462:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:38463:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:39675:          "documentation":"<p>Determines if an IPv6 address associated with a network interface is the primary IPv6 address. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the instance is terminated or the network interface is detached. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:40177:          "documentation":"<p>The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you're launching more than one instance in a <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a> request.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:40182:          "documentation":"<p>The private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a> request.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:40206:          "documentation":"<p>The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.</p> <p>If you are using <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html\">RequestSpotInstances</a> to create Spot Instances, omit this parameter because you can’t specify the network card index when using this API. To specify the network card index, use <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:40228:          "documentation":"<p>The primary IPv6 address of the network interface. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the instance is terminated or the network interface is detached. For more information about primary IPv6 addresses, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:40442:      "documentation":"<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other attributes are optional. Any unspecified optional attribute is set to its default.</p> <p>When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.</p> <p>To limit the list of instance types from which Amazon EC2 can identify matching instance types, you can use one of the following parameters, but not both in the same request:</p> <ul> <li> <p> <code>AllowedInstanceTypes</code> - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.</p> </li> <li> <p> <code>ExcludedInstanceTypes</code> - The instance types to exclude from the list, even if they match your specified attributes.</p> </li> </ul> <note> <p>If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceType</code>.</p> <p>Attribute-based instance type selection is only supported when using Auto Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. If you plan to use the launch template in the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html\">launch instance wizard</a> or with the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances API</a>, you can't specify <code>InstanceRequirements</code>.</p> </note> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-mixed-instances-group-attribute-based-instance-type-selection.html\">Create mixed instances group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>, and also <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html\">Specify attributes for instance type selection for EC2 Fleet or Spot Fleet</a> and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html\">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:40560:      "documentation":"<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other attributes are optional. Any unspecified optional attribute is set to its default.</p> <p>When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.</p> <p>To limit the list of instance types from which Amazon EC2 can identify matching instance types, you can use one of the following parameters, but not both in the same request:</p> <ul> <li> <p> <code>AllowedInstanceTypes</code> - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.</p> </li> <li> <p> <code>ExcludedInstanceTypes</code> - The instance types to exclude from the list, even if they match your specified attributes.</p> </li> </ul> <note> <p>If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceType</code>.</p> <p>Attribute-based instance type selection is only supported when using Auto Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. If you plan to use the launch template in the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html\">launch instance wizard</a>, or with the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a> API or <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\">AWS::EC2::Instance</a> Amazon Web Services CloudFormation resource, you can't specify <code>InstanceRequirements</code>.</p> </note> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html\">Specify attributes for instance type selection for EC2 Fleet or Spot Fleet</a> and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html\">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:44357:          "shape":"RunInstancesMonitoringEnabled",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:45101:          "documentation":"<p>The primary IPv6 address of the network interface. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the instance is terminated or the network interface is detached. For more information about primary IPv6 addresses, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:45213:          "documentation":"<p>The primary IPv6 address of the network interface. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the instance is terminated or the network interface is detached. For more information about primary IPv6 addresses, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:45757:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:45759:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:45799:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:45801:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:46470:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:46472:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47117:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47119:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47148:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47150:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47187:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47189:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47231:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47233:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47287:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47289:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47343:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47345:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47375:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47377:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47395:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47397:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47436:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47438:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47637:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47639:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47640:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47657:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47659:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47660:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47749:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47751:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47769:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47771:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47822:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47824:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47852:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47854:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47858:          "documentation":"<p>A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47890:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47892:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47922:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47924:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47971:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:47973:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48016:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48018:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48052:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48054:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48096:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48098:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48173:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48175:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48231:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48233:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48277:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48279:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48321:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48323:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48379:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48381:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48406:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48408:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48412:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If a client token isn't specified, a randomly generated token is used in the request to ensure idempotency.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48460:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48462:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48484:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48486:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48551:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48553:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48554:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48588:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48590:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48635:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48637:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48665:          "documentation":"<p>A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48707:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48709:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48739:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48741:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48785:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48787:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48788:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48804:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48806:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48940:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:48942:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49005:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49007:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49058:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49060:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49147:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49149:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49179:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49181:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49215:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49217:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49328:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49330:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49427:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49429:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49479:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49481:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49530:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49532:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49561:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49563:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49594:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49596:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49721:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49723:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49762:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49764:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49765:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49773:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49775:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49843:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49845:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49871:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49873:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49895:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49897:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49927:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:49929:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50006:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50008:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50085:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50087:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50113:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50115:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50154:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50156:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50198:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50200:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50238:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50240:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50274:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50276:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50305:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50307:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50341:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50343:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50468:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50470:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50471:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50509:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50511:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50512:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50544:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50546:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50580:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50582:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:50586:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensure Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:53882:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:53884:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:53919:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:53921:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:53951:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:53953:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54004:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54006:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54284:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54286:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54307:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54309:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54350:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54380:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54450:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54452:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54453:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54480:          "documentation":"<p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54483:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54485:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54549:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54551:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54552:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54724:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54726:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54727:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54797:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54799:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54851:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54853:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54886:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54888:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54906:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54908:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54941:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54943:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54965:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54967:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54989:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:54991:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55012:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55014:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55041:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55043:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55044:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55078:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55080:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55081:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55119:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55121:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55231:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55233:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55254:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55256:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55257:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55291:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55293:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55294:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55456:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55458:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55459:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55515:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55517:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55518:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55570:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55572:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55605:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55607:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55650:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55652:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55653:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55824:          "documentation":"<p>The user data to make available to the instance. You must provide base64-encoded text. User data is limited to 16 KB. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html\">Run commands when you launch an EC2 instance with user data input</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>If you are creating the launch template for use with Batch, the user data must be provided in the <a href=\"https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive\">MIME multi-part archive format</a>. For more information, see <a href=\"https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html#lt-user-data\">Amazon EC2 user data in launch templates</a> in the <i>Batch User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55835:          "deprecatedMessage":"Specifying Elastic Graphics accelerators is no longer supported on the RunInstances API.",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55843:          "deprecatedMessage":"Specifying Elastic Inference accelerators is no longer supported on the RunInstances API.",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55892:          "documentation":"<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other attributes are optional. Any unspecified optional attribute is set to its default.</p> <p>When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.</p> <p>To limit the list of instance types from which Amazon EC2 can identify matching instance types, you can use one of the following parameters, but not both in the same request:</p> <ul> <li> <p> <code>AllowedInstanceTypes</code> - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.</p> </li> <li> <p> <code>ExcludedInstanceTypes</code> - The instance types to exclude from the list, even if they match your specified attributes.</p> </li> </ul> <note> <p>If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceType</code>.</p> <p>Attribute-based instance type selection is only supported when using Auto Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. If you plan to use the launch template in the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html\">launch instance wizard</a>, or with the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a> API or <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\">AWS::EC2::Instance</a> Amazon Web Services CloudFormation resource, you can't specify <code>InstanceRequirements</code>.</p> </note> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html\">Specify attributes for instance type selection for EC2 Fleet or Spot Fleet</a> and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html\">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55921:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55923:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55924:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55961:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55963:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55964:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:55973:          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">Ensuring idempotency in Amazon EC2 API requests</a> in the <i>Amazon EC2 User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56079:          "shape":"RunInstancesMonitoringEnabled",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56463:          "documentation":"<p>A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56527:          "documentation":"<p>A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56731:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56733:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56750:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56752:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56774:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56776:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56817:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56819:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56820:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56832:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56834:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56835:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56853:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56855:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56856:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56886:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56888:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:56889:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57252:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57254:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57255:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57287:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57289:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57311:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57313:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57347:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57349:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57429:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57431:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57495:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57497:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57520:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57522:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57523:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57631:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57633:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:57634:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58574:    "RunInstancesMonitoringEnabled":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58586:    "RunInstancesRequest":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58632:          "shape":"RunInstancesMonitoringEnabled",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58658:          "shape":"RunInstancesUserData",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58659:          "documentation":"<p>The user data to make available to the instance. User data must be base64-encoded. Depending on the tool or SDK that you're using, the base64-encoding might be performed for you. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html\">Run commands at launch using instance user data</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58665:          "deprecatedMessage":"Specifying Elastic Graphics accelerators is no longer supported on the RunInstances API.",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58672:          "deprecatedMessage":"Specifying Elastic Inference accelerators is no longer supported on the RunInstances API.",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58687:          "documentation":"<p>The market (purchasing) option for the instances.</p> <p>For <a>RunInstances</a>, persistent Spot Instance requests are only supported when <b>InstanceInterruptionBehavior</b> is set to either <code>hibernate</code> or <code>stop</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58742:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58744:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58745:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58790:    "RunInstancesUserData":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58794:    "RunScheduledInstancesRequest":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58803:          "documentation":"<p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58806:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58808:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58823:      "documentation":"<p>Contains the parameters for RunScheduledInstances.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58825:    "RunScheduledInstancesResult":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:58834:      "documentation":"<p>Contains the output of RunScheduledInstances.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:59422:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:59424:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:59464:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:59466:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:59505:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:59507:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:59963:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:59965:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61109:          "documentation":"<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of your listings. This helps to avoid duplicate listings. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61467:          "documentation":"<p>The Spot Instance request type. For <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances\">RunInstances</a>, persistent Spot Instance requests are only supported when the instance interruption behavior is either <code>hibernate</code> or <code>stop</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61770:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61772:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61817:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61819:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61820:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61845:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61847:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61897:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61899:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61927:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:61929:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:62026:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:62028:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:62029:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:62155:          "documentation":"<p>Indicates whether a network interface created in this subnet (including a network interface created by <a>RunInstances</a>) receives a customer-owned IPv4 address.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:62170:          "documentation":"<p>Indicates whether a network interface created in this subnet (including a network interface created by <a>RunInstances</a>) receives an IPv6 address.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:62929:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:62931:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:63000:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:63002:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:63003:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65482:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65484:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65520:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65522:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65545:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65547:          "documentation":"<p>Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65548:          "locationName":"dryRun"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65659:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65661:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65695:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:65697:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:69050:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/ec2/2016-11-15/service-2.json:69052:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/apigatewayv2/2018-11-29/service-2.json:3794:          "documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>"
./backend/aws/dist/awscli/botocore/data/apigatewayv2/2018-11-29/service-2.json:3830:          "documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>"
./backend/aws/dist/awscli/botocore/data/apigatewayv2/2018-11-29/service-2.json:3866:          "documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>"
./backend/aws/dist/awscli/botocore/data/apigatewayv2/2018-11-29/service-2.json:6067:          "documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>"
./backend/aws/dist/awscli/botocore/data/apigatewayv2/2018-11-29/service-2.json:7172:          "documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>"
./backend/aws/dist/awscli/botocore/data/apigatewayv2/2018-11-29/service-2.json:9300:          "documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>"
./backend/aws/dist/awscli/botocore/data/apigatewayv2/2018-11-29/service-2.json:9338:          "documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>"
./backend/aws/dist/awscli/botocore/data/apigatewayv2/2018-11-29/service-2.json:9373:          "documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>"
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:506:    "DescribeDryRunProgress":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:507:      "name":"DescribeDryRunProgress",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:510:        "requestUri":"/2021-01-01/opensearch/domain/{DomainName}/dryRun"
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:512:      "input":{"shape":"DescribeDryRunProgressRequest"},
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:513:      "output":{"shape":"DescribeDryRunProgressResponse"},
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:2126:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:2127:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:2143:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:2144:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3346:    "DescribeDryRunProgressRequest":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3356:        "DryRunId":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3360:          "locationName":"dryRunId"
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3362:        "LoadDryRunConfig":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3366:          "locationName":"loadDryRunConfig"
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3370:    "DescribeDryRunProgressResponse":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3373:        "DryRunProgressStatus":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3374:          "shape":"DryRunProgressStatus",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3377:        "DryRunConfig":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3381:        "DryRunResults":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:3382:          "shape":"DryRunResults",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:4322:    "DryRun":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:4323:    "DryRunMode":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:4330:    "DryRunProgressStatus":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:4333:        "DryRunId",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:4334:        "DryRunStatus",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:4339:        "DryRunId":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:4343:        "DryRunStatus":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:4362:    "DryRunResults":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:7788:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:7789:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:7792:        "DryRunMode":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:7793:          "shape":"DryRunMode",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:7819:        "DryRunResults":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:7820:          "shape":"DryRunResults",
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:7823:        "DryRunProgressStatus":{
./backend/aws/dist/awscli/botocore/data/opensearch/2021-01-01/service-2.json:7824:          "shape":"DryRunProgressStatus",
./backend/aws/dist/awscli/botocore/data/codebuild/2016-10-06/service-2.json:1127:          "documentation":"<p>An array of strings that specify the fleets that are allowed for the batch build. See <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/fleets.html\">Run builds on reserved capacity fleets</a> in the <i>CodeBuild User Guide</i> for more information. </p>"
./backend/aws/dist/awscli/botocore/data/workmailmessageflow/2019-05-01/service-2.json:41:      "documentation":"<p>Updates the raw content of an in-transit email message, in MIME format.</p> <p>This example describes how to update in-transit email message. For more information and examples for using this API, see <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html\"> Updating message content with AWS Lambda</a>.</p> <note> <p>Updates to an in-transit message only appear when you call <code>PutRawMessageContent</code> from an AWS Lambda function configured with a synchronous <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/lambda.html#synchronous-rules\"> Run Lambda</a> rule. If you call <code>PutRawMessageContent</code> on a delivered or sent message, the message remains unchanged, even though <a href=\"https://docs.aws.amazon.com/workmail/latest/APIReference/API_messageflow_GetRawMessageContent.html\">GetRawMessageContent</a> returns an updated message. </p> </note>"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:76:    "GetSuiteRun":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:77:      "name":"GetSuiteRun",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:80:        "requestUri":"/suiteDefinitions/{suiteDefinitionId}/suiteRuns/{suiteRunId}"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:82:      "input":{"shape":"GetSuiteRunRequest"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:83:      "output":{"shape":"GetSuiteRunResponse"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:89:      "documentation":"<p>Gets information about a Device Advisor test suite run.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetSuiteRun</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:91:    "GetSuiteRunReport":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:92:      "name":"GetSuiteRunReport",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:95:        "requestUri":"/suiteDefinitions/{suiteDefinitionId}/suiteRuns/{suiteRunId}/report"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:97:      "input":{"shape":"GetSuiteRunReportRequest"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:98:      "output":{"shape":"GetSuiteRunReportResponse"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:104:      "documentation":"<p>Gets a report download link for a successful Device Advisor qualifying test suite run.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetSuiteRunReport</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:120:    "ListSuiteRuns":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:121:      "name":"ListSuiteRuns",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:124:        "requestUri":"/suiteRuns"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:126:      "input":{"shape":"ListSuiteRunsRequest"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:127:      "output":{"shape":"ListSuiteRunsResponse"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:132:      "documentation":"<p>Lists runs of the specified Device Advisor test suite. You can list all runs of the test suite, or the runs of a specific version of the test suite.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListSuiteRuns</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:149:    "StartSuiteRun":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:150:      "name":"StartSuiteRun",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:153:        "requestUri":"/suiteDefinitions/{suiteDefinitionId}/suiteRuns"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:155:      "input":{"shape":"StartSuiteRunRequest"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:156:      "output":{"shape":"StartSuiteRunResponse"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:162:      "documentation":"<p>Starts a Device Advisor test suite run.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">StartSuiteRun</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:164:    "StopSuiteRun":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:165:      "name":"StopSuiteRun",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:168:        "requestUri":"/suiteDefinitions/{suiteDefinitionId}/suiteRuns/{suiteRunId}/stop"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:170:      "input":{"shape":"StopSuiteRunRequest"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:171:      "output":{"shape":"StopSuiteRunResponse"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:177:      "documentation":"<p>Stops a Device Advisor test suite run that is currently running.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">StopSuiteRun</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:435:    "GetSuiteRunReportRequest":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:439:        "suiteRunId"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:448:        "suiteRunId":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:452:          "locationName":"suiteRunId"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:456:    "GetSuiteRunReportResponse":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:465:    "GetSuiteRunRequest":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:469:        "suiteRunId"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:478:        "suiteRunId":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:482:          "locationName":"suiteRunId"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:486:    "GetSuiteRunResponse":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:497:        "suiteRunId":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:501:        "suiteRunArn":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:505:        "suiteRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:506:          "shape":"SuiteRunConfiguration",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:522:          "shape":"SuiteRunStatus",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:548:          "shape":"TestCaseRuns",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:604:    "ListSuiteRunsRequest":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:633:    "ListSuiteRunsResponse":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:636:        "suiteRunsList":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:637:          "shape":"SuiteRunsList",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:652:          "documentation":"<p>The resource ARN of the IoT Device Advisor resource. This can be SuiteDefinition ARN or SuiteRun ARN.</p>",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:678:    "ParallelRun":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:712:    "StartSuiteRunRequest":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:716:        "suiteRunConfiguration"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:729:        "suiteRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:730:          "shape":"SuiteRunConfiguration",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:739:    "StartSuiteRunResponse":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:742:        "suiteRunId":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:744:          "documentation":"<p>Suite Run ID of the started suite run.</p>"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:746:        "suiteRunArn":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:774:    "StopSuiteRunRequest":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:778:        "suiteRunId"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:787:        "suiteRunId":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:791:          "locationName":"suiteRunId"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:795:    "StopSuiteRunResponse":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:896:    "SuiteRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:908:        "parallelRun":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:909:          "shape":"ParallelRun",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:915:    "SuiteRunInformation":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:930:        "suiteRunId":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:947:          "shape":"SuiteRunStatus",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:951:          "shape":"SuiteRunResultCount",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:955:          "shape":"SuiteRunResultCount",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:959:      "documentation":"<p>Information about the suite run.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">SuiteRunInformation</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:961:    "SuiteRunResultCount":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:966:    "SuiteRunStatus":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:980:    "SuiteRunsList":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:982:      "member":{"shape":"SuiteRunInformation"}
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:1007:          "documentation":"<p>The resource ARN of an IoT Device Advisor resource. This can be SuiteDefinition ARN or SuiteRun ARN.</p>",
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:1022:    "TestCaseRun":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:1025:        "testCaseRunId":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:1068:    "TestCaseRuns":{
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:1070:      "member":{"shape":"TestCaseRun"},
./backend/aws/dist/awscli/botocore/data/iotdeviceadvisor/2020-09-18/service-2.json:1154:          "documentation":"<p>The resource ARN of an IoT Device Advisor resource. This can be SuiteDefinition ARN or SuiteRun ARN.</p>",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/paginators-1.json:28:    "ListRuns": {
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/completions-1.json:105:    "DeleteRun": {
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/completions-1.json:226:    "GetRun": {
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/completions-1.json:385:    "ListRuns": {
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/completions-1.json:471:    "ScheduleRun": {
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/completions-1.json:504:    "StopRun": {
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:239:    "DeleteRun":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:240:      "name":"DeleteRun",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:245:      "input":{"shape":"DeleteRunRequest"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:246:      "output":{"shape":"DeleteRunResult"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:480:    "GetRun":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:481:      "name":"GetRun",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:486:      "input":{"shape":"GetRunRequest"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:487:      "output":{"shape":"GetRunResult"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:800:    "ListRuns":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:801:      "name":"ListRuns",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:806:      "input":{"shape":"ListRunsRequest"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:807:      "output":{"shape":"ListRunsResult"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1018:    "ScheduleRun":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1019:      "name":"ScheduleRun",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1024:      "input":{"shape":"ScheduleRunRequest"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1025:      "output":{"shape":"ScheduleRunResult"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1067:    "StopRun":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1068:      "name":"StopRun",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1073:      "input":{"shape":"StopRunRequest"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1074:      "output":{"shape":"StopRunResult"},
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1949:    "DeleteRunRequest":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:1960:    "DeleteRunResult":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:2153:      "documentation":"<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to <code>ScheduleRun</code>. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to <code>ListDevices</code>. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>"
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:2359:      "documentation":"<p>Represents the device filters used in a test run and the maximum number of devices to be included in the run. It is passed in as the <code>deviceSelectionConfiguration</code> request parameter in <a>ScheduleRun</a>.</p>"
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:2377:      "documentation":"<p>Contains the run results requested by the device selection configuration and how many devices were returned. For an example of the JSON response syntax, see <a>ScheduleRun</a>.</p>"
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:2500:          "shape":"ScheduleRunTest",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:2504:          "shape":"ScheduleRunConfiguration",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:2699:    "GetRunRequest":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:2710:    "GetRunResult":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:2714:          "shape":"Run",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:3409:    "ListRunsRequest":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:3424:    "ListRunsResult":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:3428:          "shape":"Runs",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4425:    "Run":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4563:    "Runs":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4565:      "member":{"shape":"Run"}
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4611:    "ScheduleRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4657:    "ScheduleRunRequest":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4685:          "shape":"ScheduleRunTest",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4689:          "shape":"ScheduleRunConfiguration",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4699:    "ScheduleRunResult":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4703:          "shape":"Run",
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4709:    "ScheduleRunTest":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4731:          "documentation":"<p>The test's parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p> <code>app_performance_monitoring</code>: Performance monitoring is enabled by default. Set this parameter to false to disable it.</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are 1.6.5 (and later), latest, and default.</p> <ul> <li> <p>latest runs the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For default, Device Farm selects a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier and 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: <code>com.android.abc.Test1</code> </p> </li> <li> <p>Running a single test: <code>com.android.abc.Test1#smoke</code> </p> </li> <li> <p>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code> </p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: <code>LoginTests</code> </p> </li> <li> <p>Running a multiple test classes: <code>LoginTests,SmokeTests</code> </p> </li> <li> <p>Running a single test: <code>LoginTests/testValid</code> </p> </li> <li> <p>Running multiple tests: <code>LoginTests/testValid,LoginTests/testInvalid</code> </p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4734:      "documentation":"<p>Represents test settings. This data structure is passed in as the test parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p>"
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4820:    "StopRunRequest":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4831:    "StopRunResult":{
./backend/aws/dist/awscli/botocore/data/devicefarm/2015-06-23/service-2.json:4835:          "shape":"Run",
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:814:    "GetRuntimeLogConfiguration":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:815:      "name":"GetRuntimeLogConfiguration",
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:821:      "input":{"shape":"GetRuntimeLogConfigurationRequest"},
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:822:      "output":{"shape":"GetRuntimeLogConfigurationResponse"},
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:1216:    "PutRuntimeLogConfiguration":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:1217:      "name":"PutRuntimeLogConfiguration",
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:1223:      "input":{"shape":"PutRuntimeLogConfigurationRequest"},
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:1274:    "ResetRuntimeLogConfiguration":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:1275:      "name":"ResetRuntimeLogConfiguration",
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:1281:      "input":{"shape":"ResetRuntimeLogConfigurationRequest"},
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:4331:    "GetRuntimeLogConfigurationRequest":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:4343:    "GetRuntimeLogConfigurationResponse":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:4350:        "RuntimeLogConfigurations":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:4351:          "shape":"RuntimeLogConfigurations",
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:6259:    "PutRuntimeLogConfigurationRequest":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:6263:        "RuntimeLogConfigurations"
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:6272:        "RuntimeLogConfigurations":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:6273:          "shape":"RuntimeLogConfigurations",
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:6333:    "ResetRuntimeLogConfigurationRequest":{
./backend/aws/dist/awscli/botocore/data/iot-managed-integrations/2025-03-03/service-2.json:6416:    "RuntimeLogConfigurations":{
./backend/aws/dist/awscli/botocore/data/autoscaling/2011-01-01/service-2.json:1626:          "documentation":"<p>The lifecycle state for the instance. The <code>Quarantined</code> state is not used. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-lifecycle.html\">Amazon EC2 Auto Scaling instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. </p> <p>Valid values: <code>Pending</code> | <code>Pending:Wait</code> | <code>Pending:Proceed</code> | <code>Quarantined</code> | <code>InService</code> | <code>Terminating</code> | <code>Terminating:Wait</code> | <code>Terminating:Proceed</code> | <code>Terminated</code> | <code>Detaching</code> | <code>Detached</code> | <code>EnteringStandby</code> | <code>Standby</code> | <code>Warmed:Pending</code> | <code>Warmed:Pending:Wait</code> | <code>Warmed:Pending:Proceed</code> | <code>Warmed:Terminating</code> | <code>Warmed:Terminating:Wait</code> | <code>Warmed:Terminating:Proceed</code> | <code>Warmed:Terminated</code> | <code>Warmed:Stopped</code> | <code>Warmed:Running</code> </p>"
./backend/aws/dist/awscli/botocore/data/autoscaling/2011-01-01/service-2.json:3969:        "Warmed:Running",
./backend/aws/dist/awscli/botocore/data/autoscaling/2011-01-01/service-2.json:5907:        "Running",
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:2748:        "RunningMode":{
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:2749:          "shape":"PoolsRunningMode",
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:5315:    "PoolsRunningMode":{
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:5668:    "RunningMode":{
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:5676:    "RunningModeAutoStopTimeoutInMinutes":{"type":"integer"},
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:5740:        "SwitchRunningMode":{
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:6332:        "RunningMode":{
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:6333:          "shape":"PoolsRunningMode",
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:7111:        "RunningMode":{
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:7112:          "shape":"RunningMode",
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:7113:          "documentation":"<p>The running mode. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html\">Manage the WorkSpace Running Mode</a>.</p> <note> <p>The <code>MANUAL</code> value is only supported by Amazon WorkSpaces Core. Contact your account team to be allow-listed to use this value. For more information, see <a href=\"http://aws.amazon.com/workspaces/core/\">Amazon WorkSpaces Core</a>.</p> </note> <p>Review your running mode to ensure you are using one that is optimal for your needs and budget. For more information on switching running modes, see <a href=\"http://aws.amazon.com/workspaces-family/workspaces/faqs/#:~:text=Can%20I%20switch%20between%20hourly%20and%20monthly%20billing%20on%20WorkSpaces%20Personal%3F\"> Can I switch between hourly and monthly billing?</a> </p>"
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:7115:        "RunningModeAutoStopTimeoutInMinutes":{
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:7116:          "shape":"RunningModeAutoStopTimeoutInMinutes",
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:7311:        "RunningMode"
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:7362:        "RunningMode":{
./backend/aws/dist/awscli/botocore/data/workspaces/2015-04-08/service-2.json:7363:          "shape":"PoolsRunningMode",
./backend/aws/dist/awscli/botocore/data/tnb/2008-10-21/service-2.json:1566:        "dryRun":{
./backend/aws/dist/awscli/botocore/data/tnb/2008-10-21/service-2.json:1568:          "documentation":"<p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
./backend/aws/dist/awscli/botocore/data/cloudfront/2020-05-31/service-2.json:7238:        "Runtime"
./backend/aws/dist/awscli/botocore/data/cloudfront/2020-05-31/service-2.json:7245:        "Runtime":{
./backend/aws/dist/awscli/botocore/data/cloudfront/2020-05-31/service-2.json:7246:          "shape":"FunctionRuntime",
./backend/aws/dist/awscli/botocore/data/cloudfront/2020-05-31/service-2.json:7337:    "FunctionRuntime":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/paginators-1.sdk-extras.json:5:      "ListTableOptimizerRuns": {
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/paginators-1.json:45:    "GetJobRuns": {
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/paginators-1.json:46:      "result_key": "JobRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/paginators-1.json:122:    "GetWorkflowRuns": {
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/paginators-1.json:126:      "result_key": "Runs"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/paginators-1.json:152:    "ListTableOptimizerRuns": {
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/paginators-1.json:156:      "result_key": "TableOptimizerRuns"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:273:    "BatchStopJobRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:274:      "name":"BatchStopJobRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:279:      "input":{"shape":"BatchStopJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:280:      "output":{"shape":"BatchStopJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:305:    "CancelDataQualityRuleRecommendationRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:306:      "name":"CancelDataQualityRuleRecommendationRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:311:      "input":{"shape":"CancelDataQualityRuleRecommendationRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:312:      "output":{"shape":"CancelDataQualityRuleRecommendationRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:321:    "CancelDataQualityRulesetEvaluationRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:322:      "name":"CancelDataQualityRulesetEvaluationRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:327:      "input":{"shape":"CancelDataQualityRulesetEvaluationRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:328:      "output":{"shape":"CancelDataQualityRulesetEvaluationRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:337:    "CancelMLTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:338:      "name":"CancelMLTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:343:      "input":{"shape":"CancelMLTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:344:      "output":{"shape":"CancelMLTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:351:      "documentation":"<p>Cancels (stops) a task run. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can cancel a machine learning task run at any time by calling <code>CancelMLTaskRun</code> with a task run's parent transform's <code>TransformID</code> and the task run's <code>TaskRunId</code>. </p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:456:        {"shape":"ColumnStatisticsTaskRunningException"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1057:        {"shape":"CrawlerRunningException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1563:    "GetBlueprintRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1564:      "name":"GetBlueprintRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1569:      "input":{"shape":"GetBlueprintRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1570:      "output":{"shape":"GetBlueprintRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1578:    "GetBlueprintRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1579:      "name":"GetBlueprintRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1584:      "input":{"shape":"GetBlueprintRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1585:      "output":{"shape":"GetBlueprintRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1710:    "GetColumnStatisticsTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1711:      "name":"GetColumnStatisticsTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1716:      "input":{"shape":"GetColumnStatisticsTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1717:      "output":{"shape":"GetColumnStatisticsTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1725:    "GetColumnStatisticsTaskRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1726:      "name":"GetColumnStatisticsTaskRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1731:      "input":{"shape":"GetColumnStatisticsTaskRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1732:      "output":{"shape":"GetColumnStatisticsTaskRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1905:    "GetDataQualityRuleRecommendationRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1906:      "name":"GetDataQualityRuleRecommendationRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1911:      "input":{"shape":"GetDataQualityRuleRecommendationRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1912:      "output":{"shape":"GetDataQualityRuleRecommendationRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1937:    "GetDataQualityRulesetEvaluationRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1938:      "name":"GetDataQualityRulesetEvaluationRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1943:      "input":{"shape":"GetDataQualityRulesetEvaluationRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:1944:      "output":{"shape":"GetDataQualityRulesetEvaluationRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2146:    "GetJobRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2147:      "name":"GetJobRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2152:      "input":{"shape":"GetJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2153:      "output":{"shape":"GetJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2162:    "GetJobRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2163:      "name":"GetJobRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2168:      "input":{"shape":"GetJobRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2169:      "output":{"shape":"GetJobRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2176:      "documentation":"<p>Retrieves metadata for all runs of a given job definition.</p> <p> <code>GetJobRuns</code> returns the job runs in chronological order, with the newest jobs returned first.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2194:    "GetMLTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2195:      "name":"GetMLTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2200:      "input":{"shape":"GetMLTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2201:      "output":{"shape":"GetMLTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2208:      "documentation":"<p>Gets details for a specific task run on a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can check the stats of any task run by calling <code>GetMLTaskRun</code> with the <code>TaskRunID</code> and its parent transform's <code>TransformID</code>.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2210:    "GetMLTaskRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2211:      "name":"GetMLTaskRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2216:      "input":{"shape":"GetMLTaskRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2217:      "output":{"shape":"GetMLTaskRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2224:      "documentation":"<p>Gets a list of runs for a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can get a sortable, filterable list of machine learning task runs by calling <code>GetMLTaskRuns</code> with their parent transform's <code>TransformID</code> and other optional parameters as documented in this section.</p> <p>This operation returns a list of historic runs and must be paginated.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2790:    "GetWorkflowRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2791:      "name":"GetWorkflowRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2796:      "input":{"shape":"GetWorkflowRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2797:      "output":{"shape":"GetWorkflowRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2806:    "GetWorkflowRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2807:      "name":"GetWorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2812:      "input":{"shape":"GetWorkflowRunPropertiesRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2813:      "output":{"shape":"GetWorkflowRunPropertiesResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2822:    "GetWorkflowRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2823:      "name":"GetWorkflowRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2828:      "input":{"shape":"GetWorkflowRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2829:      "output":{"shape":"GetWorkflowRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2867:    "ListColumnStatisticsTaskRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2868:      "name":"ListColumnStatisticsTaskRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2873:      "input":{"shape":"ListColumnStatisticsTaskRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2874:      "output":{"shape":"ListColumnStatisticsTaskRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2952:    "ListDataQualityRuleRecommendationRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2953:      "name":"ListDataQualityRuleRecommendationRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2958:      "input":{"shape":"ListDataQualityRuleRecommendationRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2959:      "output":{"shape":"ListDataQualityRuleRecommendationRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2967:    "ListDataQualityRulesetEvaluationRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2968:      "name":"ListDataQualityRulesetEvaluationRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2973:      "input":{"shape":"ListDataQualityRulesetEvaluationRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:2974:      "output":{"shape":"ListDataQualityRulesetEvaluationRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3175:    "ListTableOptimizerRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3176:      "name":"ListTableOptimizerRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3181:      "input":{"shape":"ListTableOptimizerRunsRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3182:      "output":{"shape":"ListTableOptimizerRunsResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3327:    "PutWorkflowRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3328:      "name":"PutWorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3333:      "input":{"shape":"PutWorkflowRunPropertiesRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3334:      "output":{"shape":"PutWorkflowRunPropertiesResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3410:    "ResumeWorkflowRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3411:      "name":"ResumeWorkflowRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3416:      "input":{"shape":"ResumeWorkflowRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3417:      "output":{"shape":"ResumeWorkflowRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3423:        {"shape":"ConcurrentRunsExceededException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3428:    "RunStatement":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3429:      "name":"RunStatement",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3434:      "input":{"shape":"RunStatementRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3435:      "output":{"shape":"RunStatementResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3463:    "StartBlueprintRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3464:      "name":"StartBlueprintRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3469:      "input":{"shape":"StartBlueprintRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3470:      "output":{"shape":"StartBlueprintRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3481:    "StartColumnStatisticsTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3482:      "name":"StartColumnStatisticsTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3487:      "input":{"shape":"StartColumnStatisticsTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3488:      "output":{"shape":"StartColumnStatisticsTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3492:        {"shape":"ColumnStatisticsTaskRunningException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3499:    "StartColumnStatisticsTaskRunSchedule":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3500:      "name":"StartColumnStatisticsTaskRunSchedule",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3505:      "input":{"shape":"StartColumnStatisticsTaskRunScheduleRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3506:      "output":{"shape":"StartColumnStatisticsTaskRunScheduleResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3525:        {"shape":"CrawlerRunningException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3528:      "documentation":"<p>Starts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException\">CrawlerRunningException</a>.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3540:        {"shape":"SchedulerRunningException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3547:    "StartDataQualityRuleRecommendationRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3548:      "name":"StartDataQualityRuleRecommendationRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3553:      "input":{"shape":"StartDataQualityRuleRecommendationRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3554:      "output":{"shape":"StartDataQualityRuleRecommendationRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3564:    "StartDataQualityRulesetEvaluationRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3565:      "name":"StartDataQualityRulesetEvaluationRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3570:      "input":{"shape":"StartDataQualityRulesetEvaluationRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3571:      "output":{"shape":"StartDataQualityRulesetEvaluationRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3582:    "StartExportLabelsTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3583:      "name":"StartExportLabelsTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3588:      "input":{"shape":"StartExportLabelsTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3589:      "output":{"shape":"StartExportLabelsTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3596:      "documentation":"<p>Begins an asynchronous task to export all labeled data for a particular transform. This task is the only label-related API call that is not part of the typical active learning workflow. You typically use <code>StartExportLabelsTaskRun</code> when you want to work with all of your existing labels at the same time, such as when you want to remove or change labels that were previously submitted as truth. This API operation accepts the <code>TransformId</code> whose labels you want to export and an Amazon Simple Storage Service (Amazon S3) path to export the labels to. The operation returns a <code>TaskRunId</code>. You can check on the status of your task run by calling the <code>GetMLTaskRun</code> API.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3598:    "StartImportLabelsTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3599:      "name":"StartImportLabelsTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3604:      "input":{"shape":"StartImportLabelsTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3605:      "output":{"shape":"StartImportLabelsTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3613:      "documentation":"<p>Enables you to provide additional labels (examples of truth) to be used to teach the machine learning transform and improve its quality. This API operation is generally used as part of the active learning workflow that starts with the <code>StartMLLabelingSetGenerationTaskRun</code> call and that ultimately results in improving the quality of your machine learning transform. </p> <p>After the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue machine learning will have generated a series of questions for humans to answer. (Answering these questions is often called 'labeling' in the machine learning workflows). In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” After the labeling process is finished, users upload their answers/labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform use the new and improved labels and perform a higher-quality transformation.</p> <p>By default, <code>StartMLLabelingSetGenerationTaskRun</code> continually learns from and combines all labels that you upload unless you set <code>Replace</code> to true. If you set <code>Replace</code> to true, <code>StartImportLabelsTaskRun</code> deletes and forgets all previously uploaded labels and learns only from the exact set that you upload. Replacing labels can be helpful if you realize that you previously uploaded incorrect labels, and you believe that they are having a negative effect on your transform quality.</p> <p>You can check on the status of your task run by calling the <code>GetMLTaskRun</code> operation. </p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3615:    "StartJobRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3616:      "name":"StartJobRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3621:      "input":{"shape":"StartJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3622:      "output":{"shape":"StartJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3629:        {"shape":"ConcurrentRunsExceededException"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3633:    "StartMLEvaluationTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3634:      "name":"StartMLEvaluationTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3639:      "input":{"shape":"StartMLEvaluationTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3640:      "output":{"shape":"StartMLEvaluationTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3646:        {"shape":"ConcurrentRunsExceededException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3649:      "documentation":"<p>Starts a task to estimate the quality of the transform. </p> <p>When you provide label sets as examples of truth, Glue machine learning uses some of those examples to learn from them. The rest of the labels are used as a test to estimate quality.</p> <p>Returns a unique identifier for the run. You can call <code>GetMLTaskRun</code> to get more information about the stats of the <code>EvaluationTaskRun</code>.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3651:    "StartMLLabelingSetGenerationTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3652:      "name":"StartMLLabelingSetGenerationTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3657:      "input":{"shape":"StartMLLabelingSetGenerationTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3658:      "output":{"shape":"StartMLLabelingSetGenerationTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3664:        {"shape":"ConcurrentRunsExceededException"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3666:      "documentation":"<p>Starts the active learning workflow for your machine learning transform to improve the transform's quality by generating label sets and adding labels.</p> <p>When the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue will have generated a \"labeling set\" or a set of questions for humans to answer.</p> <p>In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” </p> <p>After the labeling process is finished, you can upload your labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform will use the new and improved labels and perform a higher-quality transformation.</p> <p>Note: The role used to write the generated labeling set to the <code>OutputS3Path</code> is the role associated with the Machine Learning Transform, specified in the <code>CreateMLTransform</code> API.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3682:        {"shape":"ConcurrentRunsExceededException"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3686:    "StartWorkflowRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3687:      "name":"StartWorkflowRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3692:      "input":{"shape":"StartWorkflowRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3693:      "output":{"shape":"StartWorkflowRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3700:        {"shape":"ConcurrentRunsExceededException"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3704:    "StopColumnStatisticsTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3705:      "name":"StopColumnStatisticsTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3710:      "input":{"shape":"StopColumnStatisticsTaskRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3711:      "output":{"shape":"StopColumnStatisticsTaskRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3714:        {"shape":"ColumnStatisticsTaskNotRunningException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3720:    "StopColumnStatisticsTaskRunSchedule":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3721:      "name":"StopColumnStatisticsTaskRunSchedule",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3726:      "input":{"shape":"StopColumnStatisticsTaskRunScheduleRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3727:      "output":{"shape":"StopColumnStatisticsTaskRunScheduleResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3745:        {"shape":"CrawlerNotRunningException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3761:        {"shape":"SchedulerNotRunningException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3802:    "StopWorkflowRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3803:      "name":"StopWorkflowRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3808:      "input":{"shape":"StopWorkflowRunRequest"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:3809:      "output":{"shape":"StopWorkflowRunResponse"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:4006:        {"shape":"CrawlerRunningException"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:4192:      "documentation":"<p>Updates an existing machine learning transform. Call this operation to tune the algorithm parameters to achieve better results.</p> <p>After calling this operation, you can call the <code>StartMLEvaluationTaskRun</code> operation to assess how well your new parameters achieved your goals (such as improving the quality of your machine learning transform, or making it more cost-effective).</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:4417:          "documentation":"<p>The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. This overrides the timeout value set in the parent job.</p> <p>Jobs must have timeout values less than 7 days or 10080 minutes. Otherwise, the jobs will throw an exception.</p> <p>When the value is left blank, the timeout is defaulted to 2880 minutes.</p> <p>Any existing Glue jobs that had a timeout value greater than 7 days will be defaulted to 7 days. For instance if you have specified a timeout of 20 days for a batch job, it will be stopped on the 7th day.</p> <p>For streaming jobs, if you have set up a maintenance window, it will be restarted during the maintenance window after 7 days.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5624:    "BatchStopJobRunError":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5631:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5633:          "documentation":"<p>The <code>JobRunId</code> of the job run in question.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5642:    "BatchStopJobRunErrorList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5644:      "member":{"shape":"BatchStopJobRunError"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5646:    "BatchStopJobRunJobRunIdList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5652:    "BatchStopJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5656:        "JobRunIds"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5663:        "JobRunIds":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5664:          "shape":"BatchStopJobRunJobRunIdList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5665:          "documentation":"<p>A list of the <code>JobRunIds</code> that should be stopped for that job definition.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5669:    "BatchStopJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5673:          "shape":"BatchStopJobRunSuccessfulSubmissionList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5674:          "documentation":"<p>A list of the JobRuns that were successfully submitted for stopping.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5677:          "shape":"BatchStopJobRunErrorList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5678:          "documentation":"<p>A list of the errors that were encountered in trying to stop <code>JobRuns</code>, including the <code>JobRunId</code> for which each error was encountered and details about the error.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5682:    "BatchStopJobRunSuccessfulSubmission":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5689:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5691:          "documentation":"<p>The <code>JobRunId</code> of the job run that was stopped.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5694:      "documentation":"<p>Records a successful request to stop a specified <code>JobRun</code>.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5696:    "BatchStopJobRunSuccessfulSubmissionList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5698:      "member":{"shape":"BatchStopJobRunSuccessfulSubmission"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5886:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5907:    "BlueprintRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5914:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5923:          "shape":"BlueprintRunState",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5924:          "documentation":"<p>The state of the blueprint run. Possible values are:</p> <ul> <li> <p>Running — The blueprint run is in progress.</p> </li> <li> <p>Succeeded — The blueprint run completed successfully.</p> </li> <li> <p>Failed — The blueprint run failed and rollback is complete.</p> </li> <li> <p>Rolling Back — The blueprint run failed and rollback is in progress.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5953:    "BlueprintRunState":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5962:    "BlueprintRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:5964:      "member":{"shape":"BlueprintRun"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6044:    "CancelDataQualityRuleRecommendationRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6046:      "required":["RunId"],
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6048:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6054:    "CancelDataQualityRuleRecommendationRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6058:    "CancelDataQualityRulesetEvaluationRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6060:      "required":["RunId"],
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6062:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6068:    "CancelDataQualityRulesetEvaluationRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6072:    "CancelMLTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6076:        "TaskRunId"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6083:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6089:    "CancelMLTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:6096:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7301:    "ColumnStatisticsTaskNotRunningException":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7312:    "ColumnStatisticsTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7319:        "ColumnStatisticsTaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7394:    "ColumnStatisticsTaskRunIdList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7400:    "ColumnStatisticsTaskRunningException":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7411:    "ColumnStatisticsTaskRunsList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7413:      "member":{"shape":"ColumnStatisticsTaskRun"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7670:    "ConcurrentRunsExceededException":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7690:          "documentation":"<p>The name of the job whose <code>JobRuns</code> this condition applies to, and on which this trigger waits.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:7693:          "shape":"JobRunState",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:8476:        "LastRuntimeSeconds":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:8480:        "MedianRuntimeSeconds":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:8519:    "CrawlerNotRunningException":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:8530:    "CrawlerRunningException":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:9434:        "JobRunQueuingEnabled":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:9502:          "documentation":"<p>In Spark jobs, <code>GlueVersion</code> determines the versions of Apache Spark and Python that Glue available in a job. The Python version indicates the version supported for jobs of type Spark. </p> <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code> or greater. However, the versions of Ray, Python and additional libraries available in your Ray job are determined by the <code>Runtime</code> parameter of the Job command.</p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10170:        "DefaultRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10171:          "shape":"WorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10172:          "documentation":"<p>A collection of properties to be used as part of each execution of the workflow.</p> <p>Run properties may be logged. Do not pass plaintext secrets as properties. Retrieve secrets from a Glue Connection, Amazon Web Services Secrets Manager or other secret management mechanism if you intend to use them within the workflow run.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10178:        "MaxConcurrentRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10716:    "DataQualityEvaluationRunAdditionalRunOptions":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10864:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10868:        "RulesetEvaluationRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10906:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10932:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10963:    "DataQualityRuleRecommendationRunDescription":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10966:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:10985:    "DataQualityRuleRecommendationRunFilter":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:11004:    "DataQualityRuleRecommendationRunList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:11006:      "member":{"shape":"DataQualityRuleRecommendationRunDescription"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:11063:    "DataQualityRulesetEvaluationRunDescription":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:11066:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:11085:    "DataQualityRulesetEvaluationRunFilter":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:11104:    "DataQualityRulesetEvaluationRunList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:11106:      "member":{"shape":"DataQualityRulesetEvaluationRunDescription"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:11169:        "RecommendationRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13191:        "ColumnStatisticsTaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13217:        "MaxConcurrentRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13218:          "shape":"MaxConcurrentRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13240:    "ExportLabelsTaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13711:    "FindMatchesTaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13722:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13782:    "GetBlueprintRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13786:        "RunId"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13793:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13799:    "GetBlueprintRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13802:        "BlueprintRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13803:          "shape":"BlueprintRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13804:          "documentation":"<p>Returns a <code>BlueprintRun</code> object.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13808:    "GetBlueprintRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13826:    "GetBlueprintRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13829:        "BlueprintRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13830:          "shape":"BlueprintRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:13831:          "documentation":"<p>Returns a list of <code>BlueprintRun</code> objects.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14049:    "GetColumnStatisticsTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14051:      "required":["ColumnStatisticsTaskRunId"],
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14053:        "ColumnStatisticsTaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14059:    "GetColumnStatisticsTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14062:        "ColumnStatisticsTaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14063:          "shape":"ColumnStatisticsTaskRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14064:          "documentation":"<p>A <code>ColumnStatisticsTaskRun</code> object representing the details of the column stats run.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14068:    "GetColumnStatisticsTaskRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14093:    "GetColumnStatisticsTaskRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14096:        "ColumnStatisticsTaskRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14097:          "shape":"ColumnStatisticsTaskRunsList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14453:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14457:        "RulesetEvaluationRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14480:    "GetDataQualityRuleRecommendationRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14482:      "required":["RunId"],
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14484:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14490:    "GetDataQualityRuleRecommendationRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14493:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14552:    "GetDataQualityRulesetEvaluationRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14554:      "required":["RunId"],
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14556:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14562:    "GetDataQualityRulesetEvaluationRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14565:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14585:        "AdditionalRunOptions":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14586:          "shape":"DataQualityEvaluationRunAdditionalRunOptions",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14664:        "RecommendationRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14962:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14963:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:14996:    "GetJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15000:        "RunId"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15007:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15017:    "GetJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15020:        "JobRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15021:          "shape":"JobRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15026:    "GetJobRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15044:    "GetJobRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15047:        "JobRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15048:          "shape":"JobRunList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15083:    "GetMLTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15087:        "TaskRunId"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15094:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15100:    "GetMLTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15107:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15120:          "shape":"TaskRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15145:    "GetMLTaskRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15162:          "shape":"TaskRunFilterCriteria",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15163:          "documentation":"<p>The filter criteria, in the <code>TaskRunFilterCriteria</code> structure, for the task run.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15166:          "shape":"TaskRunSortCriteria",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15167:          "documentation":"<p>The sorting criteria, in the <code>TaskRunSortCriteria</code> structure, for the task run.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15171:    "GetMLTaskRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15174:        "TaskRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:15175:          "shape":"TaskRunList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16560:    "GetWorkflowRunPropertiesRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16564:        "RunId"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16571:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16577:    "GetWorkflowRunPropertiesResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16580:        "RunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16581:          "shape":"WorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16586:    "GetWorkflowRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16590:        "RunId"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16597:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16607:    "GetWorkflowRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16610:        "Run":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16611:          "shape":"WorkflowRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16616:    "GetWorkflowRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16638:    "GetWorkflowRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16641:        "Runs":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:16642:          "shape":"WorkflowRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:17522:    "ImportLabelsTaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18121:        "JobRunQueuingEnabled":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18167:          "documentation":"<p>The maximum number of times to retry this job after a JobRun fails.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18201:          "documentation":"<p>In Spark jobs, <code>GlueVersion</code> determines the versions of Apache Spark and Python that Glue available in a job. The Python version indicates the version supported for jobs of type Spark. </p> <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code> or greater. However, the versions of Ray, Python and additional libraries available in your Ray job are determined by the <code>Runtime</code> parameter of the Job command.</p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18237:        "Run":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18245:        "PreviousRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18246:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18249:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18250:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18296:        "Runtime":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18297:          "shape":"RuntimeNameString",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18298:          "documentation":"<p>In Ray jobs, Runtime is used to specify the versions of Ray, Python and additional libraries available in your environment. This field is not used in other job types. For supported runtime environment values, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/ray-jobs-section.html\">Supported Ray runtime environments</a> in the Glue Developer Guide.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18323:        "JobRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18324:          "shape":"JobRunList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18330:    "JobRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18341:        "PreviousRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18343:          "documentation":"<p>The ID of the previous run of this job. For example, the <code>JobRunId</code> specified in the <code>StartJobRun</code> action.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18357:        "JobRunQueuingEnabled":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18373:        "JobRunState":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18374:          "shape":"JobRunState",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18375:          "documentation":"<p>The current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/job-run-statuses.html\">Glue Job Run Statuses</a>.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18385:        "PredecessorRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18391:          "documentation":"<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\">Glue pricing page</a>.</p>",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18401:          "documentation":"<p>The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. This value overrides the timeout value set in the parent job.</p> <p>Jobs must have timeout values less than 7 days or 10080 minutes. Otherwise, the jobs will throw an exception.</p> <p>When the value is left blank, the timeout is defaulted to 2880 minutes.</p> <p>Any existing Glue jobs that had a timeout value greater than 7 days will be defaulted to 7 days. For instance if you have specified a timeout of 20 days for a batch job, it will be stopped on the 7th day.</p> <p>For streaming jobs, if you have set up a maintenance window, it will be restarted during the maintenance window after 7 days.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18429:          "documentation":"<p>In Spark jobs, <code>GlueVersion</code> determines the versions of Apache Spark and Python that Glue available in a job. The Python version indicates the version supported for jobs of type Spark. </p> <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code> or greater. However, the versions of Ray, Python and additional libraries available in your Ray job are determined by the <code>Runtime</code> parameter of the Job command.</p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18433:          "documentation":"<p>This field can be set for either job runs with execution class <code>FLEX</code> or when Auto Scaling is enabled, and represents the total time each executor ran during the lifecycle of a job run in seconds, multiplied by a DPU factor (1 for <code>G.1X</code>, 2 for <code>G.2X</code>, or 0.25 for <code>G.025X</code> workers). This value may be different than the <code>executionEngineRuntime</code> * <code>MaxCapacity</code> as in the case of Auto Scaling jobs, as the number of executors running at a given time may be less than the <code>MaxCapacity</code>. Therefore, it is possible that the value of <code>DPUSeconds</code> is less than <code>executionEngineRuntime</code> * <code>MaxCapacity</code>.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18453:          "documentation":"<p>This inline session policy to the StartJobRun API allows you to dynamically restrict the permissions of the specified execution role for the scope of the job, without requiring the creation of additional IAM roles.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18458:    "JobRunList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18460:      "member":{"shape":"JobRun"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18462:    "JobRunState":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18484:        "JobRunQueuingEnabled":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18556:          "documentation":"<p>In Spark jobs, <code>GlueVersion</code> determines the versions of Apache Spark and Python that Glue available in a job. The Python version indicates the version supported for jobs of type Spark. </p> <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code> or greater. However, the versions of Ray, Python and additional libraries available in your Ray job are determined by the <code>Runtime</code> parameter of the Job command.</p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:18904:    "LabelingSetGenerationTaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19054:    "ListColumnStatisticsTaskRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19067:    "ListColumnStatisticsTaskRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19070:        "ColumnStatisticsTaskRunIds":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19071:          "shape":"ColumnStatisticsTaskRunIdList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19232:    "ListDataQualityRuleRecommendationRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19236:          "shape":"DataQualityRuleRecommendationRunFilter",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19249:    "ListDataQualityRuleRecommendationRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19252:        "Runs":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19253:          "shape":"DataQualityRuleRecommendationRunList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19254:          "documentation":"<p>A list of <code>DataQualityRuleRecommendationRunDescription</code> objects.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19262:    "ListDataQualityRulesetEvaluationRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19266:          "shape":"DataQualityRulesetEvaluationRunFilter",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19279:    "ListDataQualityRulesetEvaluationRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19282:        "Runs":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19283:          "shape":"DataQualityRulesetEvaluationRunList",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19284:          "documentation":"<p>A list of <code>DataQualityRulesetEvaluationRunDescription</code> objects representing data quality ruleset runs.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19699:    "ListTableOptimizerRunsRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19725:          "shape":"MaxListTableOptimizerRunsTokenResults",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19729:          "shape":"ListTableOptimizerRunsToken",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19734:    "ListTableOptimizerRunsResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19750:          "shape":"ListTableOptimizerRunsToken",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19753:        "TableOptimizerRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19754:          "shape":"TableOptimizerRuns",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:19759:    "ListTableOptimizerRunsToken":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:20007:          "documentation":"<p>The maximum number of times to retry after an <code>MLTaskRun</code> of the machine learning transform fails.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:20145:    "MaxConcurrentRuns":{"type":"integer"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:20146:    "MaxListTableOptimizerRunsTokenResults":{"type":"integer"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21480:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21807:    "PutWorkflowRunPropertiesRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21811:        "RunId",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21812:        "RunProperties"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21819:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21823:        "RunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21824:          "shape":"WorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21825:          "documentation":"<p>The properties to put for the specified run.</p> <p>Run properties may be logged. Do not pass plaintext secrets as properties. Retrieve secrets from a Glue Connection, Amazon Web Services Secrets Manager or other secret management mechanism if you intend to use them within the workflow run.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:21829:    "PutWorkflowRunPropertiesResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22334:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22335:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22436:    "ResumeWorkflowRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22440:        "RunId",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22448:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22458:    "ResumeWorkflowRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22461:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22533:    "RunId":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22534:    "RunIdentifier":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22537:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22539:          "documentation":"<p>The Run ID.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22541:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22543:          "documentation":"<p>The Job Run ID.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22548:    "RunMetrics":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22570:    "RunStatementRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22591:    "RunStatementResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:22600:    "RuntimeNameString":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:23670:    "SchedulerNotRunningException":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:23681:    "SchedulerRunningException":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24704:    "StartBlueprintRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24725:    "StartBlueprintRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24728:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24734:    "StartColumnStatisticsTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24772:    "StartColumnStatisticsTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24775:        "ColumnStatisticsTaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24781:    "StartColumnStatisticsTaskRunScheduleRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24798:    "StartColumnStatisticsTaskRunScheduleResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24830:    "StartDataQualityRuleRecommendationRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24868:    "StartDataQualityRuleRecommendationRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24871:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24877:    "StartDataQualityRulesetEvaluationRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24905:        "AdditionalRunOptions":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24906:          "shape":"DataQualityEvaluationRunAdditionalRunOptions",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24919:    "StartDataQualityRulesetEvaluationRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24922:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24928:    "StartExportLabelsTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24945:    "StartExportLabelsTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24948:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24954:    "StartImportLabelsTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24975:    "StartImportLabelsTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24978:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24984:    "StartJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24992:        "JobRunQueuingEnabled":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24996:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:24998:          "documentation":"<p>The ID of a previous <code>JobRun</code> to retry.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25006:          "documentation":"<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of Glue data processing units (DPUs) to allocate to this JobRun. You can allocate a minimum of 2 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\">Glue pricing page</a>.</p>",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25012:          "documentation":"<p>The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. This value overrides the timeout value set in the parent job. </p> <p>Jobs must have timeout values less than 7 days or 10080 minutes. Otherwise, the jobs will throw an exception.</p> <p>When the value is left blank, the timeout is defaulted to 2880 minutes.</p> <p>Any existing Glue jobs that had a timeout value greater than 7 days will be defaulted to 7 days. For instance if you have specified a timeout of 20 days for a batch job, it will be stopped on the 7th day.</p> <p>For streaming jobs, if you have set up a maintenance window, it will be restarted during the maintenance window after 7 days.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25040:          "documentation":"<p>This inline session policy to the StartJobRun API allows you to dynamically restrict the permissions of the specified execution role for the scope of the job, without requiring the creation of additional IAM roles.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25044:    "StartJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25047:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25053:    "StartMLEvaluationTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25063:    "StartMLEvaluationTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25066:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25072:    "StartMLLabelingSetGenerationTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25089:    "StartMLLabelingSetGenerationTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25092:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25117:    "StartWorkflowRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25125:        "RunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25126:          "shape":"WorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25127:          "documentation":"<p>The workflow run properties for the new workflow run.</p> <p>Run properties may be logged. Do not pass plaintext secrets as properties. Retrieve secrets from a Glue Connection, Amazon Web Services Secrets Manager or other secret management mechanism if you intend to use them within the workflow run.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25131:    "StartWorkflowRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25134:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25339:        "RunIdentifier":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25340:          "shape":"RunIdentifier",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25341:          "documentation":"<p>The Run Identifier</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25397:    "StopColumnStatisticsTaskRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25414:    "StopColumnStatisticsTaskRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25418:    "StopColumnStatisticsTaskRunScheduleRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25435:    "StopColumnStatisticsTaskRunScheduleResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25509:    "StopWorkflowRunRequest":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25513:        "RunId"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25520:        "RunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25526:    "StopWorkflowRunResponse":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25898:        "lastRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25899:          "shape":"TableOptimizerRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25900:          "documentation":"<p>A <code>TableOptimizerRun</code> object representing the last run of the table optimizer.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25948:    "TableOptimizerRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25956:          "shape":"TableOptimizerRunTimestamp",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25960:          "shape":"TableOptimizerRunTimestamp",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25964:          "shape":"RunMetrics",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25965:          "documentation":"<p>A <code>RunMetrics</code> object containing metrics for the optimizer run.</p> <p>This member is deprecated. See the individual metric members for compaction, retention, and orphan file deletion.</p>",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25992:    "TableOptimizerRunTimestamp":{"type":"timestamp"},
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25993:    "TableOptimizerRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:25995:      "member":{"shape":"TableOptimizerRun"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26239:    "TaskRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26246:        "TaskRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26259:          "shape":"TaskRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26285:    "TaskRunFilterCriteria":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26288:        "TaskRunType":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26307:    "TaskRunList":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26309:      "member":{"shape":"TaskRun"}
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26311:    "TaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26318:        "ImportLabelsTaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26319:          "shape":"ImportLabelsTaskRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26322:        "ExportLabelsTaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26323:          "shape":"ExportLabelsTaskRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26326:        "LabelingSetGenerationTaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26327:          "shape":"LabelingSetGenerationTaskRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26330:        "FindMatchesTaskRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26331:          "shape":"FindMatchesTaskRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26337:    "TaskRunSortColumnType":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26345:    "TaskRunSortCriteria":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26353:          "shape":"TaskRunSortColumnType",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:26561:        "TaskRunSecurityConfigurationName":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:27986:        "DefaultRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:27987:          "shape":"WorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:27988:          "documentation":"<p>A collection of properties to be used as part of each execution of the workflow.</p> <p>Run properties may be logged. Do not pass plaintext secrets as properties. Retrieve secrets from a Glue Connection, Amazon Web Services Secrets Manager or other secret management mechanism if you intend to use them within the workflow run.</p>"
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:27990:        "MaxConcurrentRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28410:        "DefaultRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28411:          "shape":"WorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28422:        "LastRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28423:          "shape":"WorkflowRun",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28430:        "MaxConcurrentRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28465:    "WorkflowRun":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28472:        "WorkflowRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28476:        "PreviousRunId":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28480:        "WorkflowRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28481:          "shape":"WorkflowRunProperties",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28493:          "shape":"WorkflowRunStatus",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28501:          "shape":"WorkflowRunStatistics",
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28515:    "WorkflowRunProperties":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28520:    "WorkflowRunStatistics":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28543:        "RunningActions":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28558:    "WorkflowRunStatus":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28568:    "WorkflowRuns":{
./backend/aws/dist/awscli/botocore/data/glue/2017-03-31/service-2.json:28570:      "member":{"shape":"WorkflowRun"},
./backend/aws/dist/awscli/botocore/data/qapps/2023-11-27/service-2.json:523:        "requestUri":"/runtime.deleteMiniAppRun",
./backend/aws/dist/awscli/botocore/data/iottwinmaker/2021-11-29/service-2.json:287:      "documentation":"<p>Run queries to access information from your knowledge graph of entities within individual workspaces.</p> <note> <p>The ExecuteQuery action only works with <a href=\"https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/home.html\">Amazon Web Services Java SDK2</a>. ExecuteQuery will not work with any Amazon Web Services Java SDK version &lt; 2.x.</p> </note>",
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1099:    "GetThingRuntimeConfiguration" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1100:      "name" : "GetThingRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1107:        "shape" : "GetThingRuntimeConfigurationRequest"
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1110:        "shape" : "GetThingRuntimeConfigurationResponse",
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1808:    "UpdateThingRuntimeConfiguration" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1809:      "name" : "UpdateThingRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1816:        "shape" : "UpdateThingRuntimeConfigurationRequest"
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1819:        "shape" : "UpdateThingRuntimeConfigurationResponse",
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:1978:      "enum" : [ "Initializing", "Running", "Completed", "Stopping", "Stopped", "Failed" ]
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:3365:        "FunctionRuntimeOverride" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:3409:        "RunAs" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:3410:          "shape" : "FunctionRunAsConfig"
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:3435:        "RunAs" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:3436:          "shape" : "FunctionRunAsConfig"
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:3446:    "FunctionRunAsConfig" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:3458:      "documentation" : "Specifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ''IsolationMode'' to ''NoContainer'' and update config.json in ''greengrass-root/config'' to set ''allowFunctionsToRunAsRoot'' to ''yes''."
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:4476:    "GetThingRuntimeConfigurationRequest" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:4488:    "GetThingRuntimeConfigurationResponse" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:4491:        "RuntimeConfiguration" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:4492:          "shape" : "RuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:4493:          "documentation" : "Runtime configuration for a thing."
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:5545:    "RuntimeConfiguration" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:5553:      "documentation" : "Runtime configuration for a thing."
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:5555:    "RuntimeConfigurationUpdate" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:5563:      "documentation" : "Runtime configuration for a thing."
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:6028:    "UpdateThingRuntimeConfigurationRequest" : {
./backend/aws/dist/awscli/botocore/data/greengrass/2017-06-07/service-2.json:6044:    "UpdateThingRuntimeConfigurationResponse" : {
./backend/aws/dist/awscli/botocore/data/logs/2014-03-28/service-2.json:877:      "documentation":"<p>Returns the results from the specified query.</p> <p>Only the fields requested in the query are returned, along with a <code>@ptr</code> field, which is the identifier for the log record. You can use the value of <code>@ptr</code> in a <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogRecord.html\">GetLogRecord</a> operation to get the full log record.</p> <p> <code>GetQueryResults</code> does not start running a query. To run a query, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a>. For more information about how long results of previous queries are available, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/cloudwatch_limits_cwl.html\">CloudWatch Logs quotas</a>.</p> <p>If the value of the <code>Status</code> field in the output is <code>Running</code>, this operation returns only partial results. If you see a value of <code>Scheduled</code> or <code>Running</code> for the status, you can retry the operation later to see the final results. </p> <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account to start queries in linked source accounts. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>"
./backend/aws/dist/awscli/botocore/data/logs/2014-03-28/service-2.json:2999:          "documentation":"<p>Limits the returned queries to only those that have the specified status. Valid values are <code>Cancelled</code>, <code>Complete</code>, <code>Failed</code>, <code>Running</code>, and <code>Scheduled</code>.</p>"
./backend/aws/dist/awscli/botocore/data/logs/2014-03-28/service-2.json:3955:          "documentation":"<p>The status of the most recent running of the query. Possible values are <code>Cancelled</code>, <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>, <code>Timeout</code>, and <code>Unknown</code>.</p> <p>Queries time out after 60 minutes of runtime. To avoid having your queries time out, reduce the time range being searched or partition your query into a number of queries.</p>"
./backend/aws/dist/awscli/botocore/data/logs/2014-03-28/service-2.json:6195:          "documentation":"<p>The status of this query. Possible values are <code>Cancelled</code>, <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>, and <code>Unknown</code>.</p>"
./backend/aws/dist/awscli/botocore/data/logs/2014-03-28/service-2.json:6263:        "Running",
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1410:        "LastRunStatus":{
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1411:          "shape":"ScheduledQueryRunStatus",
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1480:        "LastRunSummary":{
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1481:          "shape":"ScheduledQueryRunSummary",
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1482:          "documentation":"<p>Runtime summary for the last scheduled query run. </p>"
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1484:        "RecentlyFailedRuns":{
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1485:          "shape":"ScheduledQueryRunSummaryList",
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1486:          "documentation":"<p>Runtime summary for the last five failed scheduled query runs.</p>"
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1548:    "ScheduledQueryRunStatus":{
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1557:    "ScheduledQueryRunSummary":{
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1568:        "RunStatus":{
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1569:          "shape":"ScheduledQueryRunStatus",
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1574:          "documentation":"<p>Runtime statistics for a scheduled run.</p>"
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1589:      "documentation":"<p>Run summary for the scheduled query</p>"
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1591:    "ScheduledQueryRunSummaryList":{
./backend/aws/dist/awscli/botocore/data/timestream-query/2018-11-01/service-2.json:1593:      "member":{"shape":"ScheduledQueryRunSummary"}
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/paginators-1.json:33:    "ListAssessmentRunAgents": {
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/paginators-1.json:34:      "result_key": "assessmentRunAgents",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/paginators-1.json:39:    "ListAssessmentRuns": {
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/paginators-1.json:40:      "result_key": "assessmentRunArns",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:104:    "DeleteAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:105:      "name":"DeleteAssessmentRun",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:110:      "input":{"shape":"DeleteAssessmentRunRequest"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:114:        {"shape":"AssessmentRunInProgressException"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:131:        {"shape":"AssessmentRunInProgressException"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:148:        {"shape":"AssessmentRunInProgressException"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:155:    "DescribeAssessmentRuns":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:156:      "name":"DescribeAssessmentRuns",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:161:      "input":{"shape":"DescribeAssessmentRunsRequest"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:162:      "output":{"shape":"DescribeAssessmentRunsResponse"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:278:        {"shape":"AssessmentRunInProgressException"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:316:    "ListAssessmentRunAgents":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:317:      "name":"ListAssessmentRunAgents",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:322:      "input":{"shape":"ListAssessmentRunAgentsRequest"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:323:      "output":{"shape":"ListAssessmentRunAgentsResponse"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:332:    "ListAssessmentRuns":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:333:      "name":"ListAssessmentRuns",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:338:      "input":{"shape":"ListAssessmentRunsRequest"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:339:      "output":{"shape":"ListAssessmentRunsResponse"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:524:    "StartAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:525:      "name":"StartAssessmentRun",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:530:      "input":{"shape":"StartAssessmentRunRequest"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:531:      "output":{"shape":"StartAssessmentRunResponse"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:539:        {"shape":"AgentsAlreadyRunningAssessmentException"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:544:    "StopAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:545:      "name":"StopAssessmentRun",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:550:      "input":{"shape":"StopAssessmentRunRequest"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:681:    "AgentAlreadyRunningAssessment":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:685:        "assessmentRunArn"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:692:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:699:    "AgentAlreadyRunningAssessmentList":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:701:      "member":{"shape":"AgentAlreadyRunningAssessment"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:721:      "documentation":"<p>Contains information about an Amazon Inspector agent. This data type is used as a request parameter in the <a>ListAssessmentRunAgents</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:815:    "AgentsAlreadyRunningAssessmentException":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:829:          "shape":"AgentAlreadyRunningAssessmentList",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:861:    "AssessmentRun":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:884:          "shape":"AssessmentRunName",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:892:          "shape":"AssessmentRunState",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:896:          "shape":"AssessmentRunDuration",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:909:          "documentation":"<p>The time when <a>StartAssessmentRun</a> was called.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:913:          "documentation":"<p>The time when <a>StartAssessmentRun</a> was called.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:928:          "shape":"AssessmentRunStateChangeList",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:932:          "shape":"AssessmentRunNotificationList",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:936:          "shape":"AssessmentRunFindingCounts",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:940:      "documentation":"<p>A snapshot of an Amazon Inspector assessment run that contains the findings of the assessment run .</p> <p>Used as the response element in the <a>DescribeAssessmentRuns</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:942:    "AssessmentRunAgent":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:946:        "assessmentRunArn",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:956:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:981:      "documentation":"<p>Contains information about an Amazon Inspector agent. This data type is used as a response element in the <a>ListAssessmentRunAgents</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:983:    "AssessmentRunAgentList":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:985:      "member":{"shape":"AssessmentRunAgent"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:989:    "AssessmentRunDuration":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:994:    "AssessmentRunFilter":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:999:          "documentation":"<p>For a record to match a filter, an explicit value or a string containing a wildcard that is specified for this data type property must match the value of the <b>assessmentRunName</b> property of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1002:          "shape":"AssessmentRunStateList",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1003:          "documentation":"<p>For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>assessmentRunState</b> property of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1007:          "documentation":"<p>For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>durationInSeconds</b> property of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1011:          "documentation":"<p>For a record to match a filter, the value that is specified for this data type property must be contained in the list of values of the <b>rulesPackages</b> property of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1015:          "documentation":"<p>For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>startTime</b> property of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1019:          "documentation":"<p>For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>completedAt</b> property of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1023:          "documentation":"<p>For a record to match a filter, the value that is specified for this data type property must match the <b>stateChangedAt</b> property of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1026:      "documentation":"<p>Used as the request parameter in the <a>ListAssessmentRuns</a> action.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1028:    "AssessmentRunFindingCounts":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1033:    "AssessmentRunInProgressArnList":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1039:    "AssessmentRunInProgressException":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1043:        "assessmentRunArns",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1044:        "assessmentRunArnsTruncated",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1052:        "assessmentRunArns":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1053:          "shape":"AssessmentRunInProgressArnList",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1056:        "assessmentRunArnsTruncated":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1068:    "AssessmentRunList":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1070:      "member":{"shape":"AssessmentRun"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1074:    "AssessmentRunName":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1079:    "AssessmentRunNotification":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1108:          "shape":"AssessmentRunNotificationSnsStatusCode",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1112:      "documentation":"<p>Used as one of the elements of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1114:    "AssessmentRunNotificationList":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1116:      "member":{"shape":"AssessmentRunNotification"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1120:    "AssessmentRunNotificationSnsStatusCode":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1129:    "AssessmentRunState":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1147:    "AssessmentRunStateChange":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1159:          "shape":"AssessmentRunState",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1163:      "documentation":"<p>Used as one of the elements of the <a>AssessmentRun</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1165:    "AssessmentRunStateChangeList":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1167:      "member":{"shape":"AssessmentRunStateChange"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1171:    "AssessmentRunStateList":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1173:      "member":{"shape":"AssessmentRunState"},
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1239:        "assessmentRunCount",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1256:          "shape":"AssessmentRunDuration",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1267:        "lastAssessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1269:          "documentation":"<p>The Amazon Resource Name (ARN) of the most recent assessment run associated with this assessment template. This value exists only when the value of assessmentRunCount is greaterpa than zero.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1271:        "assessmentRunCount":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1457:          "shape":"AssessmentRunDuration",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1520:    "DeleteAssessmentRunRequest":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1522:      "required":["assessmentRunArn"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1524:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1550:    "DescribeAssessmentRunsRequest":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1552:      "required":["assessmentRunArns"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1554:        "assessmentRunArns":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1560:    "DescribeAssessmentRunsResponse":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1563:        "assessmentRuns",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1567:        "assessmentRuns":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1568:          "shape":"AssessmentRunList",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1774:          "shape":"AssessmentRunDuration",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:1778:          "shape":"AssessmentRunDuration",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2073:        "assessmentRunArn",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2078:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2155:      "required":["assessmentRunArn"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2157:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2196:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2400:    "ListAssessmentRunAgentsRequest":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2402:      "required":["assessmentRunArn"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2404:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2414:          "documentation":"<p>You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentRunAgents</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2422:    "ListAssessmentRunAgentsResponse":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2424:      "required":["assessmentRunAgents"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2426:        "assessmentRunAgents":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2427:          "shape":"AssessmentRunAgentList",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2436:    "ListAssessmentRunsRequest":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2444:          "shape":"AssessmentRunFilter",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2449:          "documentation":"<p>You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentRuns</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.</p>"
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2457:    "ListAssessmentRunsResponse":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2459:      "required":["assessmentRunArns"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2461:        "assessmentRunArns":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2571:      "required":["assessmentRunArn"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2573:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:2604:        "assessmentRunArns":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3155:    "StartAssessmentRunRequest":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3163:        "assessmentRunName":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3164:          "shape":"AssessmentRunName",
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3169:    "StartAssessmentRunResponse":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3171:      "required":["assessmentRunArn"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3173:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3186:    "StopAssessmentRunRequest":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3188:      "required":["assessmentRunArn"],
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3190:        "assessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/inspector/2016-02-16/service-2.json:3332:      "documentation":"<p>This data type is used in the <a>AssessmentRunFilter</a> data type.</p>"
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:472:      "output":{"shape":"Run"},
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3103:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3135:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3169:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3199:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3310:    "Run":{
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3314:          "shape":"WorkflowRunId",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3493:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3533:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3568:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3612:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:3999:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:4222:          "shape":"WorkflowRunId",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:4331:        "newExecutionRunId",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:4345:        "newExecutionRunId":{
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:4346:          "shape":"WorkflowRunId",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:4622:        "continuedExecutionRunId":{
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:4623:          "shape":"WorkflowRunIdOptional",
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:4699:    "WorkflowRunId":{
./backend/aws/dist/awscli/botocore/data/swf/2012-01-25/service-2.json:4704:    "WorkflowRunIdOptional":{
./backend/aws/dist/awscli/botocore/data/customer-profiles/2020-08-15/service-2.json:1182:      "documentation":"<p>Runs an AWS Lambda job that does the following:</p> <ol> <li> <p>All the profileKeys in the <code>ProfileToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>All the objects in the <code>ProfileToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>All the <code>ProfileToBeMerged</code> will be deleted at the end.</p> </li> <li> <p>All the profileKeys in the <code>ProfileIdsToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>Standard fields are merged as follows:</p> <ol> <li> <p>Fields are always \"union\"-ed if there are no conflicts in standard fields or attributeKeys.</p> </li> <li> <p>When there are conflicting fields:</p> <ol> <li> <p>If no <code>SourceProfileIds</code> entry is specified, the main Profile value is always taken. </p> </li> <li> <p>If a <code>SourceProfileIds</code> entry is specified, the specified profileId is always taken, even if it is a NULL value.</p> </li> </ol> </li> </ol> </li> </ol> <p>You can use MergeProfiles together with <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a>, which returns potentially matching profiles, or use it with the results of another matching system. After profiles have been merged, they cannot be separated (unmerged).</p>"
./backend/aws/dist/awscli/botocore/data/migrationhuborchestrator/2021-08-28/service-2.json:2122:    "RunEnvironment":{
./backend/aws/dist/awscli/botocore/data/migrationhuborchestrator/2021-08-28/service-2.json:2200:          "shape":"RunEnvironment",
./backend/aws/dist/awscli/botocore/data/migrationhuborchestrator/2021-08-28/service-2.json:3000:          "shape":"RunEnvironment",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:643:        "DefaultRuntimeContextDevice":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:644:          "shape":"DefaultRuntimeContextDevice",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:647:        "DefaultRuntimeContextDeviceName":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:663:        "RuntimeContextStates":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:664:          "shape":"ReportedRuntimeContextStates",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:812:        "DefaultRuntimeContextDevice",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:820:        "DefaultRuntimeContextDevice":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:821:          "shape":"DefaultRuntimeContextDevice",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:840:        "RuntimeRoleArn":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:841:          "shape":"RuntimeRoleArn",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1026:    "DefaultRuntimeContextDevice":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1148:        "DefaultRuntimeContextDevice":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1149:          "shape":"DefaultRuntimeContextDevice",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1201:        "DefaultRuntimeContextDevice":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1202:          "shape":"DefaultRuntimeContextDevice",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1205:        "DefaultRuntimeContextDeviceName":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1225:        "RuntimeContextStates":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1226:          "shape":"ReportedRuntimeContextStates",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1229:        "RuntimeRoleArn":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:1230:          "shape":"RuntimeRoleArn",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:3411:    "ReportedRuntimeContextState":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:3417:        "RuntimeContextName"
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:3432:        "RuntimeContextName":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:3433:          "shape":"RuntimeContextName",
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:3439:    "ReportedRuntimeContextStates":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:3441:      "member":{"shape":"ReportedRuntimeContextState"}
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:3475:    "RuntimeContextName":{
./backend/aws/dist/awscli/botocore/data/panorama/2019-07-24/service-2.json:3481:    "RuntimeRoleArn":{
./backend/aws/dist/awscli/botocore/data/scheduler/2021-06-30/service-2.json:564:          "documentation":"<p>The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html\"> <code>RunTask</code> </a> in the <i>Amazon ECS API Reference</i>.</p>"
./backend/aws/dist/awscli/botocore/data/scheduler/2021-06-30/service-2.json:575:      "documentation":"<p>The templated target type for the Amazon ECS <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html\"> <code>RunTask</code> </a> API operation.</p>"
./backend/aws/dist/awscli/botocore/data/scheduler/2021-06-30/service-2.json:1375:          "documentation":"<p>The templated target type for the Amazon ECS <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html\"> <code>RunTask</code> </a> API operation.</p>"
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:10:    "serviceAbbreviation":"Lex Runtime V2",
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:11:    "serviceFullName":"Amazon Lex Runtime V2",
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:12:    "serviceId":"Lex Runtime V2",
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1182:    "RuntimeHintDetails":{
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1186:          "shape":"RuntimeHintValuesList",
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1196:    "RuntimeHintPhrase":{
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1201:    "RuntimeHintValue":{
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1206:          "shape":"RuntimeHintPhrase",
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1212:    "RuntimeHintValuesList":{
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1214:      "member":{"shape":"RuntimeHintValue"},
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1218:    "RuntimeHints":{
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1304:          "shape":"RuntimeHints",
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1348:      "value":{"shape":"RuntimeHintDetails"}
./backend/aws/dist/awscli/botocore/data/lexv2-runtime/2020-08-07/service-2.json:1603:  "documentation":"<p>This section contains documentation for the Amazon Lex V2 Runtime V2 API operations.</p>"
./backend/aws/dist/awscli/botocore/data/lakeformation/2017-03-31/service-2.json:3991:        "LastRunDetails":{
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:229:        {"shape":"NoRunningConfigurationRecorderException"}
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:286:        {"shape":"NoRunningConfigurationRecorderException"}
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:1271:        {"shape":"NoRunningConfigurationRecorderException"},
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:1366:      "documentation":"<p>Runs an on-demand evaluation for the specified Config rules against the last known configuration state of the resources. Use <code>StartConfigRulesEvaluation</code> when you want to test that a rule you updated is working as expected. <code>StartConfigRulesEvaluation</code> does not re-record the latest configuration state for your resources. It re-runs an evaluation against the last known state of your resources. </p> <p>You can specify up to 25 Config rules per request. </p> <p>An existing <code>StartConfigRulesEvaluation</code> call for the specified rules must complete before you can call the API again. If you chose to have Config stream to an Amazon SNS topic, you will receive a <code>ConfigRuleEvaluationStarted</code> notification when the evaluation starts.</p> <note> <p>You don't need to call the <code>StartConfigRulesEvaluation</code> API to run an evaluation for a new rule. When you create a rule, Config evaluates your resources against the rule automatically. </p> </note> <p>The <code>StartConfigRulesEvaluation</code> API is useful if you want to run on-demand evaluations, such as the following example:</p> <ol> <li> <p>You have a custom rule that evaluates your IAM resources every 24 hours.</p> </li> <li> <p>You update your Lambda function to add additional conditions to your rule.</p> </li> <li> <p>Instead of waiting for the next periodic evaluation, you call the <code>StartConfigRulesEvaluation</code> API.</p> </li> <li> <p>Config invokes your Lambda function and evaluates your IAM resources.</p> </li> <li> <p>Your custom rule will still run periodic evaluations every 24 hours.</p> </li> </ol>"
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:1395:      "documentation":"<p>Runs an on-demand remediation for the specified Config rules against the last known remediation configuration. It runs an execution against the current state of your resources. Remediation execution is asynchronous.</p> <p>You can specify up to 100 resource keys per request. An existing StartRemediationExecution call for the specified resource keys must complete before you can call the API again.</p>"
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:1409:      "documentation":"<p>Runs an on-demand evaluation for the specified resource to determine whether the resource details will comply with configured Config rules. You can also use it for evaluation purposes. Config recommends using an evaluation context. It runs an execution against the resource details with all of the Config rules in your account that match with the specified proactive mode and resource type.</p> <note> <p>Ensure you have the <code>cloudformation:DescribeType</code> role setup to validate the resource type schema.</p> <p>You can find the <a href=\"https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-schema.html\">Resource type schema</a> in \"<i>Amazon Web Services public extensions</i>\" within the CloudFormation registry or with the following CLI commmand: <code>aws cloudformation describe-type --type-name \"AWS::S3::Bucket\" --type RESOURCE</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-view\">Managing extensions through the CloudFormation registry</a> and <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">Amazon Web Services resource and property types reference</a> in the CloudFormation User Guide.</p> </note>"
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:3132:        "PolicyRuntime",
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:3136:        "PolicyRuntime":{
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:3137:          "shape":"PolicyRuntime",
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:5807:    "NoRunningConfigurationRecorderException":{
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:6169:        "PolicyRuntime",
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:6205:        "PolicyRuntime":{
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:6206:          "shape":"PolicyRuntime",
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:6255:        "PolicyRuntime":{
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:6256:          "shape":"PolicyRuntime",
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:6460:    "PolicyRuntime":{
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:7883:        "AWS::AppRunner::VpcConnector",
./backend/aws/dist/awscli/botocore/data/config/2014-11-12/service-2.json:7921:        "AWS::AppRunner::Service",
./backend/aws/dist/awscli/botocore/data/iotevents/2018-07-27/service-2.json:713:          "documentation":"<p>The type of the analysis result. Analyses fall into the following types based on the validators used to generate the analysis result:</p> <ul> <li> <p> <code>supported-actions</code> - You must specify AWS IoT Events supported actions that work with other AWS services in a supported AWS Region.</p> </li> <li> <p> <code>service-limits</code> - Resources or API operations can't exceed service quotas (also known as limits). Update your detector model or request a quota increase.</p> </li> <li> <p> <code>structure</code> - The detector model must follow a structure that AWS IoT Events supports. </p> </li> <li> <p> <code>expression-syntax</code> - Your expression must follow the required syntax.</p> </li> <li> <p> <code>data-type</code> - Data types referenced in the detector model must be compatible.</p> </li> <li> <p> <code>referenced-data</code> - You must define the data referenced in your detector model before you can use the data.</p> </li> <li> <p> <code>referenced-resource</code> - Resources that the detector model uses must be available.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-analyze-api.html\">Running detector model analyses</a> in the <i>AWS IoT Events Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/lex-runtime/2016-11-28/service-2.json:8:    "serviceFullName":"Amazon Lex Runtime Service",
./backend/aws/dist/awscli/botocore/data/lex-runtime/2016-11-28/service-2.json:9:    "serviceId":"Lex Runtime Service",
./backend/aws/dist/awscli/botocore/data/cloudtrail/2013-11-01/service-2.json:891:      "documentation":"<p>Configures event selectors (also referred to as <i>basic event selectors</i>) or advanced event selectors for your trail. You can use either <code>AdvancedEventSelectors</code> or <code>EventSelectors</code>, but not both. If you apply <code>AdvancedEventSelectors</code> to a trail, any existing <code>EventSelectors</code> are overwritten.</p> <p>You can use <code>AdvancedEventSelectors</code> to log management events, data events for all resource types, and network activity events.</p> <p>You can use <code>EventSelectors</code> to log management events and data events for the following resource types:</p> <ul> <li> <p> <code>AWS::DynamoDB::Table</code> </p> </li> <li> <p> <code>AWS::Lambda::Function</code> </p> </li> <li> <p> <code>AWS::S3::Object</code> </p> </li> </ul> <p>You can't use <code>EventSelectors</code> to log network activity events.</p> <p>If you want your trail to log Insights events, be sure the event selector or advanced event selector enables logging of the Insights event types you want configured for your trail. For more information about logging Insights events, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-insights-events-with-cloudtrail.html\">Working with CloudTrail Insights</a> in the <i>CloudTrail User Guide</i>. By default, trails created without specific event selectors are configured to log all read and write management events, and no data events or network activity events.</p> <p>When an event occurs in your account, CloudTrail evaluates the event selectors or advanced event selectors in all trails. For each trail, if the event matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the trail doesn't log the event.</p> <p>Example</p> <ol> <li> <p>You create an event selector for a trail and specify that you want to log write-only events.</p> </li> <li> <p>The EC2 <code>GetConsoleOutput</code> and <code>RunInstances</code> API operations occur in your account.</p> </li> <li> <p>CloudTrail evaluates whether the events match your event selectors.</p> </li> <li> <p>The <code>RunInstances</code> is a write-only event and it matches your event selector. The trail logs the event.</p> </li> <li> <p>The <code>GetConsoleOutput</code> is a read-only event that doesn't match your event selector. The trail doesn't log the event. </p> </li> </ol> <p>The <code>PutEventSelectors</code> operation must be called from the Region in which the trail was created; otherwise, an <code>InvalidHomeRegionException</code> exception is thrown.</p> <p>You can configure up to five event selectors for each trail.</p> <p>You can add advanced event selectors, and conditions for your advanced event selectors, up to a maximum of 500 values for all conditions and selectors on a trail. For more information, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-events-with-cloudtrail.html\">Logging management events</a>, <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html\">Logging data events</a>, <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-network-events-with-cloudtrail.html\">Logging network activity events</a>, and <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html\">Quotas in CloudTrail</a> in the <i>CloudTrail User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/cloudtrail/2013-11-01/service-2.json:2519:          "documentation":"<p>Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 <code>GetConsoleOutput</code> is a read-only API operation and <code>RunInstances</code> is a write-only API operation.</p> <p> By default, the value is <code>All</code>.</p>"
./backend/aws/dist/awscli/botocore/data/cloudtrail/2013-11-01/service-2.json:5340:          "documentation":"<p> An array of widgets for the dashboard. A custom dashboard can have a maximum of 10 widgets. </p> <p>To add new widgets, pass in an array that includes the existing widgets along with any new widgets. Run the <code>GetDashboard</code> operation to get the list of widgets for the dashboard.</p> <p>To remove widgets, pass in an array that includes the existing widgets minus the widgets you want removed.</p>"
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:663:      "documentation":"<p>Running <code>PutPermission</code> permits the specified Amazon Web Services account or Amazon Web Services organization to put events to the specified <i>event bus</i>. Amazon EventBridge rules in your account are triggered by these events arriving to an event bus in your account. </p> <p>For another account to send events to your account, that external account must have an EventBridge rule with your account's event bus as a target.</p> <p>To enable multiple Amazon Web Services accounts to put events to your event bus, run <code>PutPermission</code> once for each of these accounts. Or, if all the accounts are members of the same Amazon Web Services organization, you can run <code>PutPermission</code> once specifying <code>Principal</code> as \"*\" and specifying the Amazon Web Services organization ID in <code>Condition</code>, to grant permissions to all accounts in that organization.</p> <p>If you grant permissions using an organization, then accounts in that organization must specify a <code>RoleArn</code> with proper permissions when they use <code>PutTarget</code> to add your account's event bus as a target. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\">Sending and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge User Guide</i>.</p> <p>The permission policy on the event bus cannot exceed 10 KB in size.</p>"
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:698:      "documentation":"<p>Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.</p> <p>Targets are the resources that are invoked when a rule is triggered.</p> <p>The maximum number of entries per request is 10.</p> <note> <p>Each rule can have up to five (5) targets associated with it at one time.</p> </note> <p>For a list of services you can configure as targets for events, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-targets.html\">EventBridge targets</a> in the <i> <i>Amazon EventBridge User Guide</i> </i>.</p> <p>Creating rules with built-in targets is supported only in the Amazon Web Services Management Console. The built-in targets are:</p> <ul> <li> <p> <code>Amazon EBS CreateSnapshot API call</code> </p> </li> <li> <p> <code>Amazon EC2 RebootInstances API call</code> </p> </li> <li> <p> <code>Amazon EC2 StopInstances API call</code> </p> </li> <li> <p> <code>Amazon EC2 TerminateInstances API call</code> </p> </li> </ul> <p>For some target types, <code>PutTargets</code> provides target-specific parameters. If the target is a Kinesis data stream, you can optionally specify which shard the event goes to by using the <code>KinesisParameters</code> argument. To invoke a command on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code> field.</p> <p>To be able to make API calls against the resources that you own, Amazon EventBridge needs the appropriate permissions: </p> <ul> <li> <p>For Lambda and Amazon SNS resources, EventBridge relies on resource-based policies.</p> </li> <li> <p>For EC2 instances, Kinesis Data Streams, Step Functions state machines and API Gateway APIs, EventBridge relies on IAM roles that you specify in the <code>RoleARN</code> argument in <code>PutTargets</code>.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html\">Authentication and Access Control</a> in the <i> <i>Amazon EventBridge User Guide</i> </i>.</p> <p>If another Amazon Web Services account is in the same region and has granted you permission (using <code>PutPermission</code>), you can send events to that account. Set that account's event bus as a target of the rules in your account. To send the matched events to the other account, specify that account's event bus as the <code>Arn</code> value when you run <code>PutTargets</code>. If your account sends events to another account, your account is charged for each sent event. Each event sent to another account is charged as a custom event. The account receiving the event is not charged. For more information, see <a href=\"http://aws.amazon.com/eventbridge/pricing/\">Amazon EventBridge Pricing</a>.</p> <note> <p> <code>Input</code>, <code>InputPath</code>, and <code>InputTransformer</code> are not available with <code>PutTarget</code> if the target is an event bus of a different Amazon Web Services account.</p> </note> <p>If you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code> structure. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\">Sending and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge User Guide</i>.</p> <note> <p>If you have an IAM role on a cross-account event bus target, a <code>PutTargets</code> call without a role on the same target (same <code>Id</code> and <code>Arn</code>) will not remove the role.</p> </note> <p>For more information about enabling cross-account events, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html\">PutPermission</a>.</p> <p> <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive and optional parameters of a target. When a rule is triggered due to a matched event:</p> <ul> <li> <p>If none of the following arguments are specified for a target, then the entire event is passed to the target in JSON format (unless the target is Amazon EC2 Run Command or Amazon ECS task, in which case nothing from the event is passed to the target).</p> </li> <li> <p>If <b>Input</b> is specified in the form of valid JSON, then the matched event is overridden with this constant.</p> </li> <li> <p>If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>), then only the part of the event specified in the path is passed to the target (for example, only the detail part of the event is passed).</p> </li> <li> <p>If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are extracted from the event and used as values in a template that you specify as the input to the target.</p> </li> </ul> <p>When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must use JSON dot notation, not bracket notation.</p> <p>When you add targets to a rule and the associated rule triggers soon after, new or updated targets might not be immediately invoked. Allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>"
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:2747:          "documentation":"<p>The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html#ECS-RunTask-request-tags\">RunTask</a> in the Amazon ECS API Reference.</p>"
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:3111:      "documentation":"<p>An error occurred because a replay can be canceled only when the state is Running or Starting.</p>",
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4558:    "RunCommandParameters":{
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4560:      "required":["RunCommandTargets"],
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4562:        "RunCommandTargets":{
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4563:          "shape":"RunCommandTargets",
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4564:          "documentation":"<p>Currently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag.</p>"
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4569:    "RunCommandTarget":{
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4577:          "shape":"RunCommandTargetKey",
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4581:          "shape":"RunCommandTargetValues",
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4585:      "documentation":"<p>Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values.</p>"
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4587:    "RunCommandTargetKey":{
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4593:    "RunCommandTargetValue":{
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4598:    "RunCommandTargetValues":{
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4600:      "member":{"shape":"RunCommandTargetValue"},
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4604:    "RunCommandTargets":{
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4606:      "member":{"shape":"RunCommandTarget"},
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4870:        "RunCommandParameters":{
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4871:          "shape":"RunCommandParameters",
./backend/aws/dist/awscli/botocore/data/events/2015-10-07/service-2.json:4872:          "documentation":"<p>Parameters used when you are using the rule to invoke Amazon EC2 Run Command.</p>"
./backend/aws/dist/awscli/botocore/data/s3tables/2018-05-10/service-2.json:1500:        "Not_Yet_Run",
./backend/aws/dist/awscli/botocore/data/s3tables/2018-05-10/service-2.json:2116:        "lastRunTimestamp":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:116:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:164:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:234:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:370:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:391:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:413:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:435:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:456:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:476:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:751:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:792:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:810:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:869:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1002:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1023:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1341:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1343:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1584:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1586:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1699:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1701:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1842:    "DryRunOperationException":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1847:      "documentation":"<p> The request was rejected because the DryRun parameter was specified. </p>",
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1901:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1903:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1987:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:1989:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:2049:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:2051:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:2108:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:2110:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:2163:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:2165:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:2210:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:2212:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3403:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3405:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3527:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3529:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3548:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3550:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3694:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3696:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3954:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:3956:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:4010:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/kms/2014-11-01/service-2.json:4012:          "documentation":"<p>Checks if your request will succeed. <code>DryRun</code> is an optional parameter. </p> <p>To learn more about how to use this parameter, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/testing-permissions.html\">Testing your permissions</a> in the <i>Key Management Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/launch-wizard/2018-05-10/service-2.json:233:        "dryRun":{
./backend/aws/dist/awscli/botocore/data/launch-wizard/2018-05-10/service-2.json:235:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:1046:          "documentation":"<p>The number of active simulation jobs create as part of the batch that can be in an active state at the same time. </p> <p>Active states include: <code>Pending</code>,<code>Preparing</code>, <code>Running</code>, <code>Restarting</code>, <code>RunningFailed</code> and <code>Terminating</code>. All other states are terminal states. </p>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:1836:          "documentation":"<p>The status of the world export job.</p> <dl> <dt>Pending</dt> <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world export job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world export job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world export job is being cancelled.</p> </dd> </dl>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:1900:          "documentation":"<p>The status of the world generator job.</p> <dl> <dt>Pending</dt> <dd> <p>The world generator job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world generator job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world generator job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world generator job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world generator job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world generator job is being cancelled.</p> </dd> </dl>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:2835:          "documentation":"<p>The status of the world export job.</p> <dl> <dt>Pending</dt> <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world export job failed. See <code>failureCode</code> and <code>failureReason</code> for more information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world export job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world export job is being cancelled.</p> </dd> </dl>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:2887:          "documentation":"<p>The status of the world generation job:</p> <dl> <dt>Pending</dt> <dd> <p>The world generation job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world generation job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world generation job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world generation job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world generation job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world generation job is being cancelled.</p> </dd> </dl>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:3289:          "documentation":"<p>If you've specified <code>General</code> as the value for your <code>RobotSoftwareSuite</code>, you can use this field to specify a list of commands for your container image.</p> <p>If you've specified <code>SimulationRuntime</code> as the value for your <code>SimulationSoftwareSuite</code>, you can use this field to specify a list of commands for your container image.</p>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:3516:          "documentation":"<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Preparing</code> or the status <code>Running</code>.</p>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:4560:        "Running",
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:4564:        "RunningFailed",
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:4623:          "documentation":"<p>The name of the simulation software suite. <code>SimulationRuntime</code> is the only supported value.</p>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:4627:          "documentation":"<p>The version of the simulation software suite. Not applicable for <code>SimulationRuntime</code>.</p>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:4637:        "SimulationRuntime"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:5341:        "Running",
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:5363:          "documentation":"<p>The status of the world export job.</p> <dl> <dt>Pending</dt> <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world export job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world export job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world export job is being cancelled.</p> </dd> </dl>"
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:5416:        "Running",
./backend/aws/dist/awscli/botocore/data/robomaker/2018-06-29/service-2.json:5447:          "documentation":"<p>The status of the world generator job:</p> <dl> <dt>Pending</dt> <dd> <p>The world generator job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world generator job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world generator job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world generator job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world generator job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world generator job is being cancelled.</p> </dd> </dl>"
./backend/aws/dist/awscli/botocore/data/servicecatalog/2015-12-10/service-2.json:475:      "documentation":"<p>Gets information about the specified product.</p> <note> <p> Running this operation with administrator access results in a failure. <a>DescribeProductAsAdmin</a> should be used instead. </p> </note>"
./backend/aws/dist/awscli/botocore/data/opsworks/2013-02-18/service-2.json:108:      "documentation":"<p>Runs deployment or stack commands. For more information, see <a href=\"https://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-deploying.html\">Deploying Apps</a> and <a href=\"https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-commands.html\">Run Stack Commands</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Deploy or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href=\"https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html\">Managing User Permissions</a>.</p>"
./backend/aws/dist/awscli/botocore/data/opsworks/2013-02-18/service-2.json:1287:          "documentation":"<p>The ID of the VPC that the cloned stack is to be launched into. It must be in the specified region. All instances are launched into this VPC, and you cannot change the ID later.</p> <ul> <li> <p>If your account supports EC2 Classic, the default value is no VPC.</p> </li> <li> <p>If your account does not support EC2 Classic, the default value is the default VPC for the specified region.</p> </li> </ul> <p>If the VPC ID corresponds to a default VPC and you have specified either the <code>DefaultAvailabilityZone</code> or the <code>DefaultSubnetId</code> parameter only, OpsWorks Stacks infers the value of the other parameter. If you specify neither parameter, OpsWorks Stacks sets these parameters to the first valid Availability Zone for the specified region and the corresponding default VPC subnet ID, respectively. </p> <p>If you specify a nondefault VPC ID, note the following:</p> <ul> <li> <p>It must belong to a VPC in your account that is in the specified region.</p> </li> <li> <p>You must specify a value for <code>DefaultSubnetId</code>.</p> </li> </ul> <p>For more information about how to use OpsWorks Stacks with a VPC, see <a href=\"https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-vpc.html\">Running a Stack in a VPC</a>. For more information about default VPC and EC2 Classic, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html\">Supported Platforms</a>. </p>"
./backend/aws/dist/awscli/botocore/data/opsworks/2013-02-18/service-2.json:1925:          "documentation":"<p>The ID of the VPC that the stack is to be launched into. The VPC must be in the stack's region. All instances are launched into this VPC. You cannot change the ID later.</p> <ul> <li> <p>If your account supports EC2-Classic, the default value is <code>no VPC</code>.</p> </li> <li> <p>If your account does not support EC2-Classic, the default value is the default VPC for the specified region.</p> </li> </ul> <p>If the VPC ID corresponds to a default VPC and you have specified either the <code>DefaultAvailabilityZone</code> or the <code>DefaultSubnetId</code> parameter only, OpsWorks Stacks infers the value of the other parameter. If you specify neither parameter, OpsWorks Stacks sets these parameters to the first valid Availability Zone for the specified region and the corresponding default VPC subnet ID, respectively.</p> <p>If you specify a nondefault VPC ID, note the following:</p> <ul> <li> <p>It must belong to a VPC in your account that is in the specified region.</p> </li> <li> <p>You must specify a value for <code>DefaultSubnetId</code>.</p> </li> </ul> <p>For more information about how to use OpsWorks Stacks with a VPC, see <a href=\"https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-vpc.html\">Running a Stack in a VPC</a>. For more information about default VPC and EC2-Classic, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html\">Supported Platforms</a>. </p>"
./backend/aws/dist/awscli/botocore/data/opsworks/2013-02-18/service-2.json:3240:        "RunningSetup":{
./backend/aws/dist/awscli/botocore/data/workspaces-web/2020-07-08/service-2.json:2895:        "ContentPasteToWebsite",
./backend/aws/dist/awscli/botocore/data/apigateway/2015-07-09/service-2.json:2860:          "documentation":"<p>The schema for the model. For <code>application/json</code> models, this should be JSON schema draft 4 model. The maximum size of the model is 400 KB.</p>"
./backend/aws/dist/awscli/botocore/data/apigateway/2015-07-09/service-2.json:5771:          "documentation":"<p>The schema for the model. For <code>application/json</code> models, this should be JSON schema draft 4 model. Do not include \"\\*/\" characters in the description of any properties because such \"\\*/\" characters may be interpreted as the closing marker for comments in some languages, such as Java or JavaScript, causing the installation of your API's SDK generated by API Gateway to fail.</p>"
./backend/aws/dist/awscli/botocore/data/redshift/2012-12-01/service-2.json:4846:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/redshift/2012-12-01/service-2.json:9403:        "RuntimeFailure",
./backend/aws/dist/awscli/botocore/data/kinesis-video-signaling/2019-12-04/service-2.json:32:      "documentation":"<p>Gets the Interactive Connectivity Establishment (ICE) server configuration information, including URIs, username, and password which can be used to configure the WebRTC connection. The ICE component uses this configuration information to setup the WebRTC connection, including authenticating with the Traversal Using Relays around NAT (TURN) relay server. </p> <p>TURN is a protocol that is used to improve the connectivity of peer-to-peer applications. By providing a cloud-based relay service, TURN ensures that a connection can be established even when one or more peers are incapable of a direct peer-to-peer connection. For more information, see <a href=\"https://tools.ietf.org/html/draft-uberti-rtcweb-turn-rest-00\">A REST API For Access To TURN Services</a>.</p> <p> You can invoke this API to establish a fallback mechanism in case either of the peers is unable to establish a direct peer-to-peer connection over a signaling channel. You must specify either a signaling channel ARN or the client ID in order to invoke this API.</p>"
./backend/aws/dist/awscli/botocore/data/kinesis-video-signaling/2019-12-04/service-2.json:109:          "documentation":"<p>An array of URIs, in the form specified in the <a href=\"https://tools.ietf.org/html/draft-petithuguenin-behave-turn-uris-03\">I-D.petithuguenin-behave-turn-uris</a> spec. These URIs provide the different addresses and/or protocols that can be used to reach the TURN server.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/completions-1.json:16:        "Runtime": "Functions[].Runtime",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/completions-1.json:436:      "Runtime": {
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/completions-1.json:441:            "resourceIdentifier": "Runtime"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:593:    "GetRuntimeManagementConfig":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:594:      "name":"GetRuntimeManagementConfig",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:600:      "input":{"shape":"GetRuntimeManagementConfigRequest"},
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:601:      "output":{"shape":"GetRuntimeManagementConfigResponse"},
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:608:      "documentation":"<p>Retrieves the runtime management configuration for a function's version. If the runtime update mode is <b>Manual</b>, this includes the ARN of the runtime version and the runtime update mode. If the runtime update mode is <b>Auto</b> or <b>Function update</b>, this includes the runtime update mode and <code>null</code> is returned for the ARN. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html\">Runtime updates</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:631:        {"shape":"InvalidRuntimeException"},
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:663:        {"shape":"InvalidRuntimeException"},
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:693:        {"shape":"InvalidRuntimeException"},
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:812:      "documentation":"<p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version.</p> <note> <p>The <code>ListFunctions</code> operation returns a subset of the <a>FunctionConfiguration</a> fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode, RuntimeVersionConfig) for a function or version, use <a>GetFunction</a>.</p> </note>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1044:    "PutRuntimeManagementConfig":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1045:      "name":"PutRuntimeManagementConfig",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1051:      "input":{"shape":"PutRuntimeManagementConfigRequest"},
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1052:      "output":{"shape":"PutRuntimeManagementConfigResponse"},
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1060:      "documentation":"<p>Sets the runtime management configuration for a function's version. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html\">Runtime updates</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1709:    "CompatibleRuntimes":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1711:      "member":{"shape":"Runtime"},
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1944:        "Runtime":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1945:          "shape":"Runtime",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:1946:          "documentation":"<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\"> runtime</a>. Runtime is required if the deployment package is a .zip file archive. Specifying a runtime results in an error if you're deploying a function using a container image.</p> <p>The following list includes deprecated runtimes. Lambda blocks creating new functions and updating existing functions shortly after each runtime is deprecated. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels\">Runtime use after deprecation</a>.</p> <p>For a list of all currently supported runtimes, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported\">Supported runtimes</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2026:          "documentation":"<p>The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but can be any whole number between 512 and 10,240 MB. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-ephemeral-storage\">Configuring ephemeral storage (console)</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2518:          "documentation":"<p>The size of the function's <code>/tmp</code> directory.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2521:      "documentation":"<p>The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but can be any whole number between 512 and 10,240 MB. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-ephemeral-storage\">Configuring ephemeral storage (console)</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2869:        "Runtime":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2870:          "shape":"Runtime",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2871:          "documentation":"<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\"> runtime</a>. Runtime is required if the deployment package is a .zip file archive. Specifying a runtime results in an error if you're deploying a function using a container image.</p> <p>The following list includes deprecated runtimes. Lambda blocks creating new functions and updating existing functions shortly after each runtime is deprecated. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels\">Runtime use after deprecation</a>.</p> <p>For a list of all currently supported runtimes, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported\">Supported runtimes</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2991:          "documentation":"<p>The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but can be any whole number between 512 and 10,240 MB. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-ephemeral-storage\">Configuring ephemeral storage (console)</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2997:        "RuntimeVersionConfig":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:2998:          "shape":"RuntimeVersionConfig",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3498:        "CompatibleRuntimes":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3499:          "shape":"CompatibleRuntimes",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3500:          "documentation":"<p>The layer's compatible runtimes.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels\">Runtime use after deprecation</a>.</p> <p>For a list of all currently supported runtimes, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported\">Supported runtimes</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3593:    "GetRuntimeManagementConfigRequest":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3611:    "GetRuntimeManagementConfigResponse":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3614:        "UpdateRuntimeOn":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3615:          "shape":"UpdateRuntimeOn",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3618:        "RuntimeVersionArn":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3619:          "shape":"RuntimeVersionArn",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3745:    "InvalidRuntimeException":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3801:          "documentation":"<p>Choose from the following options.</p> <ul> <li> <p> <code>RequestResponse</code> (default) – Invoke the function synchronously. Keep the connection open until the function returns a response or times out. The API response includes the function response and additional data.</p> </li> <li> <p> <code>Event</code> – Invoke the function asynchronously. Send events that fail multiple times to the function's dead-letter queue (if one is configured). The API response only includes a status code.</p> </li> <li> <p> <code>DryRun</code> – Validate parameter values and verify that the user or role has permission to invoke the function.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3835:          "documentation":"<p>The HTTP status code is in the 200 range for a successful request. For the <code>RequestResponse</code> invocation type, this status code is 200. For the <code>Event</code> invocation type, this status code is 202. For the <code>DryRun</code> invocation type, the status code is 204.</p>",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3868:        "DryRun"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3954:          "documentation":"<p>Use one of the following options:</p> <ul> <li> <p> <code>RequestResponse</code> (default) – Invoke the function synchronously. Keep the connection open until the function returns a response or times out. The API operation response includes the function response and additional data.</p> </li> <li> <p> <code>DryRun</code> – Validate parameter values and verify that the IAM user or role has permission to invoke the function.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:3988:          "documentation":"<p>For a successful request, the HTTP status code is in the 200 range. For the <code>RequestResponse</code> invocation type, this status code is 200. For the <code>DryRun</code> invocation type, this status code is 204.</p>",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4172:        "InvalidRuntime",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4303:        "CompatibleRuntimes":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4304:          "shape":"CompatibleRuntimes",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4305:          "documentation":"<p>The layer's compatible runtimes.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels\">Runtime use after deprecation</a>.</p> <p>For a list of all currently supported runtimes, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported\">Supported runtimes</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4623:        "CompatibleRuntime":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4624:          "shape":"Runtime",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4625:          "documentation":"<p>A runtime identifier.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels\">Runtime use after deprecation</a>.</p> <p>For a list of all currently supported runtimes, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported\">Supported runtimes</a>.</p>",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4627:          "locationName":"CompatibleRuntime"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4671:        "CompatibleRuntime":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4672:          "shape":"Runtime",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4673:          "documentation":"<p>A runtime identifier.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels\">Runtime use after deprecation</a>.</p> <p>For a list of all currently supported runtimes, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported\">Supported runtimes</a>.</p>",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:4675:          "locationName":"CompatibleRuntime"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5171:        "CompatibleRuntimes":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5172:          "shape":"CompatibleRuntimes",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5173:          "documentation":"<p>A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy\">Runtime deprecation policy</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5212:        "CompatibleRuntimes":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5213:          "shape":"CompatibleRuntimes",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5214:          "documentation":"<p>The layer's compatible runtimes.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels\">Runtime use after deprecation</a>.</p> <p>For a list of all currently supported runtimes, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported\">Supported runtimes</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5418:    "PutRuntimeManagementConfigRequest":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5422:        "UpdateRuntimeOn"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5437:        "UpdateRuntimeOn":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5438:          "shape":"UpdateRuntimeOn",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5441:        "RuntimeVersionArn":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5442:          "shape":"RuntimeVersionArn",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5447:    "PutRuntimeManagementConfigResponse":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5450:        "UpdateRuntimeOn",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5454:        "UpdateRuntimeOn":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5455:          "shape":"UpdateRuntimeOn",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5462:        "RuntimeVersionArn":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5463:          "shape":"RuntimeVersionArn",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5667:        "DryRun"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5674:    "Runtime":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5720:    "RuntimeVersionArn":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5726:    "RuntimeVersionConfig":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5729:        "RuntimeVersionArn":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5730:          "shape":"RuntimeVersionArn",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5734:          "shape":"RuntimeVersionError",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5740:    "RuntimeVersionError":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:5995:        "InvalidRuntime",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:6429:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:6485:        "Runtime":{
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:6486:          "shape":"Runtime",
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:6487:          "documentation":"<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\"> runtime</a>. Runtime is required if the deployment package is a .zip file archive. Specifying a runtime results in an error if you're deploying a function using a container image.</p> <p>The following list includes deprecated runtimes. Lambda blocks creating new functions and updating existing functions shortly after each runtime is deprecated. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels\">Runtime use after deprecation</a>.</p> <p>For a list of all currently supported runtimes, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported\">Supported runtimes</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:6519:          "documentation":"<p>The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but can be any whole number between 512 and 10,240 MB. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-ephemeral-storage\">Configuring ephemeral storage (console)</a>.</p>"
./backend/aws/dist/awscli/botocore/data/lambda/2015-03-31/service-2.json:6631:    "UpdateRuntimeOn":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:2278:    "AcceleratorRuntime":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:2292:          "shape":"AcceleratorRuntime",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:2468:        "taskRun":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:2469:          "shape":"AssignedTaskRunSessionActionDefinition",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:2499:    "AssignedTaskRunSessionActionDefinition":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:3545:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:3546:          "shape":"CreateJobTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:3577:    "CreateJobTargetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:3895:        "jobRunAsUser":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:3896:          "shape":"JobRunAsUser",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:5638:        "taskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:5639:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:5642:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:5643:          "shape":"JobTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:5646:        "taskRunStatusCounts":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:5647:          "shape":"TaskRunStatusCounts",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6193:        "jobRunAsUser":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6194:          "shape":"JobRunAsUser",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6304:          "shape":"TaskRunManifestPropertiesListResponse",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6501:        "taskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6502:        "taskRunStatusCounts",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6523:        "taskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6524:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6527:        "taskRunStatusCounts":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6528:          "shape":"TaskRunStatusCounts",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6535:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6536:          "shape":"StepTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6764:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6767:        "targetRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6768:          "shape":"TaskTargetRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:6888:          "documentation":"<p>The text of the script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet. The script runs after a worker enters the <code>STARTING</code> state and before the worker processes tasks.</p> <p>For more information about using the script, see <a href=\"https://docs.aws.amazon.com/deadline-cloud/latest/developerguide/smf-admin.html\">Run scripts as an administrator to configure workers</a> in the <i>Deadline Cloud Developer Guide</i>. </p> <important> <p>The script runs as an administrative user (<code>sudo root</code> on Linux, as an Administrator on Windows). </p> </important>"
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7137:        "jobRunAsUser":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7138:          "shape":"JobRunAsUser",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7381:    "JobRunAsUser":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7394:          "shape":"RunAs",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7427:        "taskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7428:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7431:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7432:          "shape":"JobTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7435:        "taskRunStatusCounts":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7436:          "shape":"TaskRunStatusCounts",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7554:        "taskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7555:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7558:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7559:          "shape":"JobTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7562:        "taskRunStatusCounts":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7563:          "shape":"TaskRunStatusCounts",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:7589:    "JobTargetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:9930:    "RunAs":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:10548:        "taskRun":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:10549:          "shape":"TaskRunSessionActionDefinition",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:10571:        "taskRun":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:10572:          "shape":"TaskRunSessionActionDefinitionSummary",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:10662:          "shape":"TaskRunManifestPropertiesListResponse",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11232:        "taskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11233:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11236:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11237:          "shape":"StepTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11240:        "taskRunStatusCounts":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11241:          "shape":"TaskRunStatusCounts",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11289:        "taskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11290:        "taskRunStatusCounts",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11311:        "taskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11312:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11315:        "taskRunStatusCounts":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11316:          "shape":"TaskRunStatusCounts",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11323:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11324:          "shape":"StepTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11358:    "StepTargetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11558:    "TaskRunManifestPropertiesListRequest":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11560:      "member":{"shape":"TaskRunManifestPropertiesRequest"},
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11564:    "TaskRunManifestPropertiesListResponse":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11566:      "member":{"shape":"TaskRunManifestPropertiesResponse"}
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11568:    "TaskRunManifestPropertiesRequest":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11572:          "shape":"TaskRunManifestPropertiesRequestOutputManifestPathString",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11576:          "shape":"TaskRunManifestPropertiesRequestOutputManifestHashString",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11582:    "TaskRunManifestPropertiesRequestOutputManifestHashString":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11587:    "TaskRunManifestPropertiesRequestOutputManifestPathString":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11592:    "TaskRunManifestPropertiesResponse":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11606:    "TaskRunSessionActionDefinition":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11628:    "TaskRunSessionActionDefinitionSummary":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11647:    "TaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11664:    "TaskRunStatusCounts":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11666:      "key":{"shape":"TaskRunStatus"},
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11693:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11696:        "targetRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11697:          "shape":"TaskTargetRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11753:          "shape":"TaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11756:        "targetRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11757:          "shape":"TaskTargetRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:11791:    "TaskTargetRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12048:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12049:          "shape":"JobTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12354:        "jobRunAsUser":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12355:          "shape":"JobRunAsUser",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12436:        "targetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12443:        "targetTaskRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12444:          "shape":"StepTargetTaskRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12537:        "targetRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12552:        "targetRunStatus":{
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12553:          "shape":"TaskTargetRunStatus",
./backend/aws/dist/awscli/botocore/data/deadline/2023-10-12/service-2.json:12746:          "shape":"TaskRunManifestPropertiesListRequest",
./backend/aws/dist/awscli/botocore/data/fis/2020-12-01/service-2.json:750:          "documentation":"<p>Scopes the identified resources to a specific count of the resources at random, or a percentage of the resources. All identified resources are included in the target.</p> <ul> <li> <p>ALL - Run the action on all identified targets. This is the default.</p> </li> <li> <p>COUNT(n) - Run the action on the specified number of targets, chosen from the identified targets at random. For example, COUNT(1) selects one of the targets.</p> </li> <li> <p>PERCENT(n) - Run the action on the specified percentage of targets, chosen from the identified targets at random. For example, PERCENT(25) selects 25% of the targets.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/paginators-1.json:9:    "GetReplicationRuns": {
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/paginators-1.json:13:      "result_key": "replicationRunList"
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:318:    "GetReplicationRuns":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:319:      "name":"GetReplicationRuns",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:324:      "input":{"shape":"GetReplicationRunsRequest"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:325:      "output":{"shape":"GetReplicationRunsResponse"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:519:    "StartOnDemandReplicationRun":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:520:      "name":"StartOnDemandReplicationRun",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:525:      "input":{"shape":"StartOnDemandReplicationRunRequest"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:526:      "output":{"shape":"StartOnDemandReplicationRunResponse"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:532:        {"shape":"ReplicationRunLimitExceededException"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:533:        {"shape":"DryRunOperationException"}
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:965:          "shape":"RunOnce",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1109:    "DryRunOperationException":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1344:    "GetReplicationRunsRequest":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1362:    "GetReplicationRunsResponse":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1369:        "replicationRunList":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1370:          "shape":"ReplicationRunList",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1710:          "shape":"RunOnce",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1713:        "nextReplicationRunStartTime":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1753:        "replicationRunList":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1754:          "shape":"ReplicationRunList",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1796:    "ReplicationRun":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1799:        "replicationRunId":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1800:          "shape":"ReplicationRunId",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1804:          "shape":"ReplicationRunState",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1808:          "shape":"ReplicationRunType",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1812:          "shape":"ReplicationRunStageDetails",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1816:          "shape":"ReplicationRunStatusMessage",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1846:    "ReplicationRunId":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1847:    "ReplicationRunLimitExceededException":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1855:    "ReplicationRunList":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1857:      "member":{"shape":"ReplicationRun"}
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1859:    "ReplicationRunStage":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1860:    "ReplicationRunStageDetails":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1864:          "shape":"ReplicationRunStage",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1868:          "shape":"ReplicationRunStageProgress",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1874:    "ReplicationRunStageProgress":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1875:    "ReplicationRunState":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1887:    "ReplicationRunStatusMessage":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1888:    "ReplicationRunType":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:1896:    "RunOnce":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:2181:          "shape":"RunOnce",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:2287:    "StartOnDemandReplicationRunRequest":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:2301:    "StartOnDemandReplicationRunResponse":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:2304:        "replicationRunId":{
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:2305:          "shape":"ReplicationRunId",
./backend/aws/dist/awscli/botocore/data/sms/2016-10-24/service-2.json:2436:        "nextReplicationRunStartTime":{
./backend/aws/dist/awscli/botocore/data/elasticbeanstalk/2010-12-01/service-2.json:240:      "documentation":"<p>Deletes the draft configuration associated with the running environment.</p> <p>Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.</p>"
./backend/aws/dist/awscli/botocore/data/elasticbeanstalk/2010-12-01/service-2.json:332:      "documentation":"<p>Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.</p> <p>When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li> <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/elasticbeanstalk/2010-12-01/service-2.json:673:      "documentation":"<p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>"
./backend/aws/dist/awscli/botocore/data/elasticbeanstalk/2010-12-01/service-2.json:739:        "Running",
./backend/aws/dist/awscli/botocore/data/elasticbeanstalk/2010-12-01/service-2.json:1359:          "documentation":"<p> If this configuration set is associated with an environment, the <code>DeploymentStatus</code> parameter indicates the deployment status of this configuration set: </p> <ul> <li> <p> <code>null</code>: This configuration is not associated with a running environment.</p> </li> <li> <p> <code>pending</code>: This is a draft configuration that is not deployed to the associated environment but is in the process of deploying.</p> </li> <li> <p> <code>deployed</code>: This is the configuration that is currently deployed to the associated running environment.</p> </li> <li> <p> <code>failed</code>: This is a draft configuration that failed to successfully deploy.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/elasticbeanstalk/2010-12-01/service-2.json:1742:          "documentation":"<p>The name of the environment to delete the draft configuration from.</p>"
./backend/aws/dist/awscli/botocore/data/elasticbeanstalk/2010-12-01/service-2.json:1745:      "documentation":"<p>Request to delete a draft environment configuration.</p>"
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:16:    "CancelPracticeRun":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:17:      "name":"CancelPracticeRun",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:23:      "input":{"shape":"CancelPracticeRunRequest"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:24:      "output":{"shape":"CancelPracticeRunResponse"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:55:    "CreatePracticeRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:56:      "name":"CreatePracticeRunConfiguration",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:62:      "input":{"shape":"CreatePracticeRunConfigurationRequest"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:63:      "output":{"shape":"CreatePracticeRunConfigurationResponse"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:74:    "DeletePracticeRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:75:      "name":"DeletePracticeRunConfiguration",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:81:      "input":{"shape":"DeletePracticeRunConfigurationRequest"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:82:      "output":{"shape":"DeletePracticeRunConfigurationResponse"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:179:    "StartPracticeRun":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:180:      "name":"StartPracticeRun",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:186:      "input":{"shape":"StartPracticeRunRequest"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:187:      "output":{"shape":"StartPracticeRunResponse"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:235:    "UpdatePracticeRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:236:      "name":"UpdatePracticeRunConfiguration",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:242:      "input":{"shape":"UpdatePracticeRunConfigurationRequest"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:243:      "output":{"shape":"UpdatePracticeRunConfigurationResponse"},
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:431:    "CancelPracticeRunRequest":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:443:    "CancelPracticeRunResponse":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:565:    "CreatePracticeRunConfigurationRequest":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:594:    "CreatePracticeRunConfigurationResponse":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:600:        "practiceRunConfiguration"
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:615:        "practiceRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:616:          "shape":"PracticeRunConfiguration",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:621:    "DeletePracticeRunConfigurationRequest":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:633:    "DeletePracticeRunConfigurationResponse":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:715:        "practiceRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:716:          "shape":"PracticeRunConfiguration",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:880:        "practiceRunStatus":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:899:    "PracticeRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:922:    "PracticeRunOutcome":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:970:    "StartPracticeRunRequest":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:992:    "StartPracticeRunResponse":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1095:    "UpdatePracticeRunConfigurationRequest":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1123:    "UpdatePracticeRunConfigurationResponse":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1129:        "practiceRunConfiguration"
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1144:        "practiceRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1145:          "shape":"PracticeRunConfiguration",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1354:        "practiceRunOutcome":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1355:          "shape":"PracticeRunOutcome",
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1417:        "practiceRunOutcome":{
./backend/aws/dist/awscli/botocore/data/arc-zonal-shift/2022-10-30/service-2.json:1418:          "shape":"PracticeRunOutcome",
./backend/aws/dist/awscli/botocore/data/iotanalytics/2017-11-27/service-2.json:445:    "RunPipelineActivity":{
./backend/aws/dist/awscli/botocore/data/iotanalytics/2017-11-27/service-2.json:446:      "name":"RunPipelineActivity",
./backend/aws/dist/awscli/botocore/data/iotanalytics/2017-11-27/service-2.json:451:      "input":{"shape":"RunPipelineActivityRequest"},
./backend/aws/dist/awscli/botocore/data/iotanalytics/2017-11-27/service-2.json:452:      "output":{"shape":"RunPipelineActivityResponse"},
./backend/aws/dist/awscli/botocore/data/iotanalytics/2017-11-27/service-2.json:2718:          "documentation":"<p>Runs a Lambda function to modify the message.</p>"
./backend/aws/dist/awscli/botocore/data/iotanalytics/2017-11-27/service-2.json:2942:    "RunPipelineActivityRequest":{
./backend/aws/dist/awscli/botocore/data/iotanalytics/2017-11-27/service-2.json:2959:    "RunPipelineActivityResponse":{
./backend/aws/dist/awscli/botocore/data/ivs-realtime/2020-07-14/service-2.json:1525:          "documentation":"<p>If the event is an error event, the error code is provided to give insight into the specific error that occurred. If the event is not an error event, this field is null.</p> <ul> <li> <p> <code>B_FRAME_PRESENT</code> — The participant's stream includes B-frames. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/rt-rtmp-publishing.html\"> IVS RTMP Publishing</a>.</p> </li> <li> <p> <code>BITRATE_EXCEEDED</code> — The participant exceeded the maximum supported bitrate. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/service-quotas.html\"> Service Quotas</a>.</p> </li> <li> <p> <code>INSUFFICIENT_CAPABILITIES</code> — The participant tried to take an action that the participant’s token is not allowed to do. For details on participant capabilities, see the <code>capabilities</code> field in <a>CreateParticipantToken</a>.</p> </li> <li> <p> <code>INTERNAL_SERVER_EXCEPTION</code> — The participant failed to publish to the stage due to an internal server error.</p> </li> <li> <p> <code>INVALID_AUDIO_CODEC</code> — The participant is using an invalid audio codec. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/rt-stream-ingest.html\"> Stream Ingest</a>.</p> </li> <li> <p> <code>INVALID_INPUT</code> — The participant is using an invalid input stream.</p> </li> <li> <p> <code>INVALID_PROTOCOL</code> — The participant's IngestConfiguration resource is configured for RTMPS but they tried streaming with RTMP. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/rt-rtmp-publishing.html\"> IVS RTMP Publishing</a>.</p> </li> <li> <p> <code>INVALID_STREAM_KEY</code> — The participant is using an invalid stream key. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/rt-rtmp-publishing.html\"> IVS RTMP Publishing</a>.</p> </li> <li> <p> <code>INVALID_VIDEO_CODEC</code> — The participant is using an invalid video codec. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/rt-stream-ingest.html\"> Stream Ingest</a>.</p> </li> <li> <p> <code>PUBLISHER_NOT_FOUND</code> — The participant tried to subscribe to a publisher that doesn’t exist.</p> </li> <li> <p> <code>QUOTA_EXCEEDED</code> — The number of participants who want to publish/subscribe to a stage exceeds the quota. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/service-quotas.html\"> Service Quotas</a>.</p> </li> <li> <p> <code>RESOLUTION_EXCEEDED</code> — The participant exceeded the maximum supported resolution. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/service-quotas.html\"> Service Quotas</a>.</p> </li> <li> <p> <code>REUSE_OF_STREAM_KEY</code> — The participant tried to use a stream key that is associated with another active stage session.</p> </li> <li> <p> <code>STREAM_DURATION_EXCEEDED</code> — The participant exceeded the maximum allowed stream duration. For details, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/service-quotas.html\"> Service Quotas</a>.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ivs-realtime/2020-07-14/service-2.json:3356:        "rtmp":{
./backend/aws/dist/awscli/botocore/data/ivs-realtime/2020-07-14/service-2.json:3360:        "rtmps":{
./backend/aws/dist/awscli/botocore/data/cloudsearchdomain/2013-01-01/service-2.json:96:    "Cursor":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/cloudsearchdomain/2013-01-01/service-2.json:272:          "shape":"Cursor",
./backend/aws/dist/awscli/botocore/data/kinesis-video-archived-media/2017-09-30/service-2.json:73:      "documentation":"<p>Retrieves an HTTP Live Streaming (HLS) URL for the stream. You can then open the URL in a browser or media player to view the stream contents.</p> <p>Both the <code>StreamName</code> and the <code>StreamARN</code> parameters are optional, but you must specify either the <code>StreamName</code> or the <code>StreamARN</code> when invoking this API operation.</p> <p>An Amazon Kinesis video stream has the following requirements for providing data through HLS:</p> <ul> <li> <p>For streaming video, the media must contain H.264 or H.265 encoded video and, optionally, AAC encoded audio. Specifically, the codec ID of track 1 should be <code>V_MPEG/ISO/AVC</code> (for H.264) or <code>V_MPEG/ISO/HEVC</code> (for H.265). Optionally, the codec ID of track 2 should be <code>A_AAC</code>. For audio only streaming, the codec ID of track 1 should be <code>A_AAC</code>.</p> </li> <li> <p>Data retention must be greater than 0.</p> </li> <li> <p>The video track of each fragment must contain codec private data in the Advanced Video Coding (AVC) for H.264 format or HEVC for H.265 format (<a href=\"https://www.iso.org/standard/55980.html\">MPEG-4 specification ISO/IEC 14496-15</a>). For information about adapting stream data to a given format, see <a href=\"http://docs.aws.amazon.com/kinesisvideostreams/latest/dg/producer-reference-nal.html\">NAL Adaptation Flags</a>.</p> </li> <li> <p>The audio track (if present) of each fragment must contain codec private data in the AAC format (<a href=\"https://www.iso.org/standard/43345.html\">AAC specification ISO/IEC 13818-7</a>).</p> </li> </ul> <p>Kinesis Video Streams HLS sessions contain fragments in the fragmented MPEG-4 form (also called fMP4 or CMAF) or the MPEG-2 form (also called TS chunks, which the HLS specification also supports). For more information about HLS fragment types, see the <a href=\"https://tools.ietf.org/html/draft-pantos-http-live-streaming-23\">HLS specification</a>.</p> <p>The following procedure shows how to use HLS with Kinesis Video Streams:</p> <ol> <li> <p>Get an endpoint using <a href=\"http://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_GetDataEndpoint.html\">GetDataEndpoint</a>, specifying <code>GET_HLS_STREAMING_SESSION_URL</code> for the <code>APIName</code> parameter.</p> </li> <li> <p>Retrieve the HLS URL using <code>GetHLSStreamingSessionURL</code>. Kinesis Video Streams creates an HLS streaming session to be used for accessing content in a stream using the HLS protocol. <code>GetHLSStreamingSessionURL</code> returns an authenticated URL (that includes an encrypted session token) for the session's HLS <i>master playlist</i> (the root resource needed for streaming with HLS).</p> <note> <p>Don't share or store this token where an unauthorized entity could access it. The token provides access to the content of the stream. Safeguard the token with the same measures that you would use with your Amazon Web Services credentials.</p> </note> <p>The media that is made available through the playlist consists only of the requested stream, time range, and format. No other media data (such as frames outside the requested window or alternate bitrates) is made available.</p> </li> <li> <p>Provide the URL (containing the encrypted session token) for the HLS master playlist to a media player that supports the HLS protocol. Kinesis Video Streams makes the HLS media playlist, initialization fragment, and media fragments available through the master playlist URL. The initialization fragment contains the codec private data for the stream, and other data needed to set up the video or audio decoder and renderer. The media fragments contain H.264-encoded video frames or AAC-encoded audio samples.</p> </li> <li> <p>The media player receives the authenticated URL and requests stream metadata and media data normally. When the media player requests data, it calls the following actions:</p> <ul> <li> <p> <b>GetHLSMasterPlaylist:</b> Retrieves an HLS master playlist, which contains a URL for the <code>GetHLSMediaPlaylist</code> action for each track, and additional metadata for the media player, including estimated bitrate and resolution.</p> </li> <li> <p> <b>GetHLSMediaPlaylist:</b> Retrieves an HLS media playlist, which contains a URL to access the MP4 initialization fragment with the <code>GetMP4InitFragment</code> action, and URLs to access the MP4 media fragments with the <code>GetMP4MediaFragment</code> actions. The HLS media playlist also contains metadata about the stream that the player needs to play it, such as whether the <code>PlaybackMode</code> is <code>LIVE</code> or <code>ON_DEMAND</code>. The HLS media playlist is typically static for sessions with a <code>PlaybackType</code> of <code>ON_DEMAND</code>. The HLS media playlist is continually updated with new fragments for sessions with a <code>PlaybackType</code> of <code>LIVE</code>. There is a distinct HLS media playlist for the video track and the audio track (if applicable) that contains MP4 media URLs for the specific track. </p> </li> <li> <p> <b>GetMP4InitFragment:</b> Retrieves the MP4 initialization fragment. The media player typically loads the initialization fragment before loading any media fragments. This fragment contains the \"<code>fytp</code>\" and \"<code>moov</code>\" MP4 atoms, and the child atoms that are needed to initialize the media player decoder.</p> <p>The initialization fragment does not correspond to a fragment in a Kinesis video stream. It contains only the codec private data for the stream and respective track, which the media player needs to decode the media frames.</p> </li> <li> <p> <b>GetMP4MediaFragment:</b> Retrieves MP4 media fragments. These fragments contain the \"<code>moof</code>\" and \"<code>mdat</code>\" MP4 atoms and their child atoms, containing the encoded fragment's media frames and their timestamps. </p> <note> <p>For the HLS streaming session, in-track codec private data (CPD) changes are supported. After the first media fragment is made available in a streaming session, fragments can contain CPD changes for each track. Therefore, the fragments in a session can have a different resolution, bit rate, or other information in the CPD without interrupting playback. However, any change made in the track number or track codec format can return an error when those different media fragments are loaded. For example, streaming will fail if the fragments in the stream change from having only video to having both audio and video, or if an AAC audio track is changed to an ALAW audio track. For each streaming session, only 500 CPD changes are allowed.</p> </note> <p>Data retrieved with this action is billable. For information, see <a href=\"https://aws.amazon.com/kinesis/video-streams/pricing/\">Pricing</a>.</p> </li> <li> <p> <b>GetTSFragment:</b> Retrieves MPEG TS fragments containing both initialization and media data for all tracks in the stream.</p> <note> <p>If the <code>ContainerFormat</code> is <code>MPEG_TS</code>, this API is used instead of <code>GetMP4InitFragment</code> and <code>GetMP4MediaFragment</code> to retrieve stream media.</p> </note> <p>Data retrieved with this action is billable. For more information, see <a href=\"https://aws.amazon.com/kinesis/video-streams/pricing/\">Kinesis Video Streams pricing</a>.</p> </li> </ul> </li> </ol> <p>A streaming session URL must not be shared between players. The service might throttle a session if multiple media players are sharing it. For connection limits, see <a href=\"http://docs.aws.amazon.com/kinesisvideostreams/latest/dg/limits.html\">Kinesis Video Streams Limits</a>.</p> <p>You can monitor the amount of data that the media player consumes by monitoring the <code>GetMP4MediaFragment.OutgoingBytes</code> Amazon CloudWatch metric. For information about using CloudWatch to monitor Kinesis Video Streams, see <a href=\"http://docs.aws.amazon.com/kinesisvideostreams/latest/dg/monitoring.html\">Monitoring Kinesis Video Streams</a>. For pricing information, see <a href=\"https://aws.amazon.com/kinesis/video-streams/pricing/\">Amazon Kinesis Video Streams Pricing</a> and <a href=\"https://aws.amazon.com/pricing/\">Amazon Web Services Pricing</a>. Charges for both HLS sessions and outgoing Amazon Web Services data apply.</p> <p>For more information about HLS, see <a href=\"https://developer.apple.com/streaming/\">HTTP Live Streaming</a> on the <a href=\"https://developer.apple.com\">Apple Developer site</a>.</p> <important> <p>If an error is thrown after invoking a Kinesis Video Streams archived media API, in addition to the HTTP status code and the response body, it includes the following pieces of information: </p> <ul> <li> <p> <code>x-amz-ErrorType</code> HTTP header – contains a more specific error type in addition to what the HTTP status code provides. </p> </li> <li> <p> <code>x-amz-RequestId</code> HTTP header – if you want to report an issue to Amazon Web Services, the support team can better diagnose the problem if given the Request Id.</p> </li> </ul> <p>Both the HTTP status code and the ErrorType header can be utilized to make programmatic decisions about whether errors are retry-able and under what conditions, as well as provide information on what actions the client programmer might need to take in order to successfully try again.</p> <p>For more information, see the <b>Errors</b> section at the bottom of this topic, as well as <a href=\"https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/CommonErrors.html\">Common Errors</a>. </p> </important>"
./backend/aws/dist/awscli/botocore/data/rds-data/2018-08-01/service-2.json:42:      "documentation":"<p>Runs a batch SQL statement over an array of data.</p> <p>You can run bulk update and insert operations for multiple records using a DML statement with different parameter sets. Bulk operations can provide a significant performance improvement over individual insert and update operations.</p> <note> <p>If a call isn't part of a transaction because it doesn't include the <code>transactionID</code> parameter, changes that result from the call are committed automatically.</p> <p>There isn't a fixed upper limit on the number of parameter sets. However, the maximum size of the HTTP request submitted through the Data API is 4 MiB. If the request exceeds this limit, the Data API returns an error and doesn't process the request. This 4-MiB limit includes the size of the HTTP headers and the JSON notation in the request. Thus, the number of parameter sets that you can include depends on a combination of factors, such as the size of the SQL statement and the size of each parameter set.</p> <p>The response size limit is 1 MiB. If the call returns more than 1 MiB of response data, the call is terminated.</p> </note>"
./backend/aws/dist/awscli/botocore/data/rds-data/2018-08-01/service-2.json:116:      "documentation":"<p>Runs one or more SQL statements.</p> <note> <p>This operation isn't supported for Aurora Serverless v2 and provisioned DB clusters. For Aurora Serverless v1 DB clusters, the operation is deprecated. Use the <code>BatchExecuteStatement</code> or <code>ExecuteStatement</code> operation.</p> </note>",
./backend/aws/dist/awscli/botocore/data/rds-data/2018-08-01/service-2.json:148:      "documentation":"<p>Runs a SQL statement against a database.</p> <note> <p>If a call isn't part of a transaction because it doesn't include the <code>transactionID</code> parameter, changes that result from the call are committed automatically.</p> <p>If the binary response data from the database is more than 1 MB, the call is terminated.</p> </note>"
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:1401:        "KinesisVideoStreamSourceRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:1402:          "shape":"KinesisVideoStreamSourceRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:1405:        "MediaInsightsRuntimeMetadata":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:1406:          "shape":"MediaInsightsRuntimeMetadata",
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:1409:        "KinesisVideoStreamRecordingSourceRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:1410:          "shape":"KinesisVideoStreamRecordingSourceRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:1413:        "S3RecordingSinkRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:1414:          "shape":"S3RecordingSinkRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2079:    "KinesisVideoStreamRecordingSourceRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2097:    "KinesisVideoStreamSourceRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2532:        "KinesisVideoStreamSourceRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2533:          "shape":"KinesisVideoStreamSourceRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2536:        "MediaInsightsRuntimeMetadata":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2537:          "shape":"MediaInsightsRuntimeMetadata",
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2540:        "KinesisVideoStreamRecordingSourceRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2541:          "shape":"KinesisVideoStreamRecordingSourceRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2544:        "S3RecordingSinkRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2545:          "shape":"S3RecordingSinkRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:2708:    "MediaInsightsRuntimeMetadata":{
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:3191:      "documentation":"<p>The structure that holds the settings for transmitting media to the Amazon S3 bucket. These values are used as defaults if <code>S3RecordingSinkRuntimeConfiguration</code> is not specified.</p>"
./backend/aws/dist/awscli/botocore/data/chime-sdk-media-pipelines/2021-07-15/service-2.json:3193:    "S3RecordingSinkRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/lookoutmetrics/2017-07-25/service-2.json:51:      "documentation":"<p>Runs a backtest for anomaly detection for the specified resource.</p>"
./backend/aws/dist/awscli/botocore/data/lookoutmetrics/2017-07-25/service-2.json:1114:      "required":["RunBackTestMode"],
./backend/aws/dist/awscli/botocore/data/lookoutmetrics/2017-07-25/service-2.json:1116:        "RunBackTestMode":{
./backend/aws/dist/awscli/botocore/data/lookoutmetrics/2017-07-25/service-2.json:1118:          "documentation":"<p>Run a backtest instead of monitoring new data.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker-runtime/2017-05-13/service-2.json:9:    "serviceFullName":"Amazon SageMaker Runtime",
./backend/aws/dist/awscli/botocore/data/sagemaker-runtime/2017-05-13/service-2.json:10:    "serviceId":"SageMaker Runtime",
./backend/aws/dist/awscli/botocore/data/b2bi/2022-06-23/service-2.json:385:      "documentation":"<p>Runs a job, using a transformer, to parse input EDI (electronic data interchange) file into the output structures used by Amazon Web Services B2B Data Interchange.</p> <p>If you only want to transform EDI (electronic data interchange) documents, you don't need to create profiles, partnerships or capabilities. Just create and configure a transformer, and then run the <code>StartTransformerJob</code> API to process your files.</p> <note> <p>The system stores transformer jobs for 30 days. During that period, you can run <a href=\"https://docs.aws.amazon.com/b2bi/latest/APIReference/API_GetTransformerJob.html\">GetTransformerJob</a> and supply its <code>transformerId</code> and <code>transformerJobId</code> to return details of the job.</p> </note>",
./backend/aws/dist/awscli/botocore/data/outposts/2019-12-03/service-2.json:1328:    "DryRun":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/outposts/2019-12-03/service-2.json:1422:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/outposts/2019-12-03/service-2.json:1423:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/outposts/2019-12-03/service-2.json:2805:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/outposts/2019-12-03/service-2.json:2806:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/outposts/2019-12-03/service-2.json:2842:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/outposts/2019-12-03/service-2.json:2843:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/waiters-2.json:35:    "ChannelRunning": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/waiters-2.json:222:    "MultiplexRunning": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7041:        "RtmpCaptionInfoDestinationSettings": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7042:          "shape": "RtmpCaptionInfoDestinationSettings",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7043:          "locationName": "rtmpCaptionInfoDestinationSettings"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7274:          "documentation": "Runtime details for the pipelines of a running channel."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7276:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7278:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7422:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7424:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7632:        "DryRun": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7634:          "locationName": "dryRun"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7722:        "DryRun": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:7724:          "locationName": "dryRun"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:8315:          "documentation": "Runtime details for the pipelines of a running channel."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:8317:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:8319:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:8495:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:8497:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:8780:          "documentation": "Runtime details for the pipelines of a running channel."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:8782:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:8784:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:9253:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:9255:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:13220:          "documentation": "Uniform Resource Identifier - This should be a path to a file accessible to the Live system (eg. a http:// URI) depending on the output type. For example, a RTMP destination should have a uri simliar to: \"rtmp://fmsserver/live\"."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:13249:    "InputLossActionForRtmpOut": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:13251:      "documentation": "Input Loss Action For Rtmp Out",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:15433:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:15435:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:15824:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:15826:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16190:          "documentation": "Stream name for RTMP destinations (URLs of type rtmp://)"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16256:        "RtmpGroupSettings": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16257:          "shape": "RtmpGroupSettings",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16258:          "locationName": "rtmpGroupSettings"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16326:        "RtmpOutputSettings": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16327:          "shape": "RtmpOutputSettings",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16328:          "locationName": "rtmpOutputSettings"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16394:      "documentation": "Runtime details of a pipeline when a channel is running."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16912:    "RtmpAdMarkers": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16914:      "documentation": "Rtmp Ad Markers",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16919:    "RtmpCacheFullBehavior": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16921:      "documentation": "Rtmp Cache Full Behavior",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16927:    "RtmpCaptionData": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16929:      "documentation": "Rtmp Caption Data",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16936:    "RtmpCaptionInfoDestinationSettings": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16939:      "documentation": "Rtmp Caption Info Destination Settings"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16941:    "RtmpGroupSettings": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16945:          "shape": "__listOfRtmpAdMarkers",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16955:          "shape": "RtmpCacheFullBehavior",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16965:          "shape": "RtmpCaptionData",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16970:          "shape": "InputLossActionForRtmpOut",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16985:      "documentation": "Rtmp Group Settings"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16987:    "RtmpOutputCertificateMode": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16989:      "documentation": "Rtmp Output Certificate Mode",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16995:    "RtmpOutputSettings": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:16999:          "shape": "RtmpOutputCertificateMode",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:17001:          "documentation": "If set to verifyAuthenticity, verify the tls certificate chain to a trusted Certificate Authority (CA).  This will cause rtmps outputs with self-signed certificates to fail."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:17011:          "documentation": "The RTMP endpoint excluding the stream name (eg. rtmp://host/appname). For connection to Akamai, a username and password must be supplied. URI fields accept format identifiers."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:17019:      "documentation": "Rtmp Output Settings",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:17750:          "documentation": "Runtime details for the pipelines of a running channel."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:17752:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:17754:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:17877:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:17879:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18174:          "documentation": "Runtime details for the pipelines of a running channel."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18176:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18178:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18281:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18283:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18871:        "DryRun": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18873:          "locationName": "dryRun"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18996:        "DryRun": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:18998:          "locationName": "dryRun"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:20529:    "__listOfRtmpAdMarkers": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:20532:        "shape": "RtmpAdMarkers"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:20534:      "documentation": "Placeholder documentation for __listOfRtmpAdMarkers"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:20925:          "documentation": "Runtime details for the pipelines of a running channel."
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:20927:        "PipelinesRunningCount": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:20929:          "locationName": "pipelinesRunningCount",
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:24152:        "DryRun": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:24154:          "locationName": "dryRun"
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:24171:        "DryRun": {
./backend/aws/dist/awscli/botocore/data/medialive/2017-10-14/service-2.json:24173:          "locationName": "dryRun"
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:1501:    "AppSyncRuntime":{
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:1509:          "shape":"RuntimeName",
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:2253:        "runtime":{"shape":"AppSyncRuntime"},
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:2411:        "runtime":{"shape":"AppSyncRuntime"},
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:3171:          "shape":"AppSyncRuntime",
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:3400:        "runtime":{"shape":"AppSyncRuntime"},
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:4948:        "runtime":{"shape":"AppSyncRuntime"},
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:5002:    "RuntimeName":{
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:5691:        "runtime":{"shape":"AppSyncRuntime"},
./backend/aws/dist/awscli/botocore/data/appsync/2017-07-25/service-2.json:5846:        "runtime":{"shape":"AppSyncRuntime"},
./backend/aws/dist/awscli/botocore/data/iot/2015-05-28/service-2.json:5416:        "checkRunStatus":{
./backend/aws/dist/awscli/botocore/data/iot/2015-05-28/service-2.json:5417:          "shape":"AuditCheckRunStatus",
./backend/aws/dist/awscli/botocore/data/iot/2015-05-28/service-2.json:5451:    "AuditCheckRunStatus":{
./backend/aws/dist/awscli/botocore/data/iot/2015-05-28/service-2.json:21788:          "documentation":"<p>Metadata that can be used to define a package version’s configuration. For example, the Amazon S3 file location, configuration options that are being sent to the device or fleet. </p> <p> <b>Note:</b> Attributes can be updated only when the package version is in a draft state.</p> <p>The combined size of all the attributes on a package version is limited to 3KB.</p>"
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:1441:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:1576:          "documentation":"<p>The maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group. </p> <p>You can retrieve the capacity that would be required for a rule group before you create the rule group by calling <a>CreateRuleGroup</a> with <code>DryRun</code> set to <code>TRUE</code>. </p> <note> <p>You can't change or exceed this capacity when you update the rule group, so leave room for your rule group to grow. </p> </note> <p> <b>Capacity for a stateless rule group</b> </p> <p>For a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules that you expect to have in the rule group. </p> <p>To calculate the capacity requirement of a single rule, multiply the capacity requirement values of each of the rule's match settings:</p> <ul> <li> <p>A match setting with no criteria specified has a value of 1. </p> </li> <li> <p>A match setting with <code>Any</code> specified has a value of 1. </p> </li> <li> <p>All other match settings have a value equal to the number of elements provided in the setting. For example, a protocol setting [\"UDP\"] and a source setting [\"10.0.0.0/24\"] each have a value of 1. A protocol setting [\"UDP\",\"TCP\"] has a value of 2. A source setting [\"10.0.0.0/24\",\"10.0.0.1/24\",\"10.0.0.2/24\"] has a value of 3. </p> </li> </ul> <p>A rule with no criteria specified in any of its match settings has a capacity requirement of 1. A rule with protocol setting [\"UDP\",\"TCP\"], source setting [\"10.0.0.0/24\",\"10.0.0.1/24\",\"10.0.0.2/24\"], and a single specification or no specification for each of the other match settings has a capacity requirement of 6. </p> <p> <b>Capacity for a stateful rule group</b> </p> <p>For a stateful rule group, the minimum capacity required is the number of individual rules that you expect to have in the rule group. </p>"
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:1582:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:1596:          "documentation":"<p>Indicates whether you want Network Firewall to analyze the stateless rules in the rule group for rule behavior such as asymmetric routing. If set to <code>TRUE</code>, Network Firewall runs the analysis and then creates the rule group for you. To run the stateless rule group analyzer without creating the rule group, set <code>DryRun</code> to <code>TRUE</code>.</p>"
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:2148:          "documentation":"<p>The maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group. </p> <p>You can retrieve the capacity that would be required for a rule group before you create the rule group by calling <a>CreateRuleGroup</a> with <code>DryRun</code> set to <code>TRUE</code>. </p>"
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:2629:          "documentation":"<p>The Amazon Resource Name (ARN) of the firewall policy.</p> <note> <p>If this response is for a create request that had <code>DryRun</code> set to <code>TRUE</code>, then this ARN is a placeholder that isn't attached to a valid resource.</p> </note>"
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:3888:          "documentation":"<p>The Amazon Resource Name (ARN) of the rule group.</p> <note> <p>If this response is for a create request that had <code>DryRun</code> set to <code>TRUE</code>, then this ARN is a placeholder that isn't attached to a valid resource.</p> </note>"
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:3908:          "documentation":"<p>The maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group. </p> <p>You can retrieve the capacity that would be required for a rule group before you create the rule group by calling <a>CreateRuleGroup</a> with <code>DryRun</code> set to <code>TRUE</code>. </p>"
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:5199:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:5297:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/network-firewall/2020-11-12/service-2.json:5311:          "documentation":"<p>Indicates whether you want Network Firewall to analyze the stateless rules in the rule group for rule behavior such as asymmetric routing. If set to <code>TRUE</code>, Network Firewall runs the analysis and then updates the rule group for you. To run the stateless rule group analyzer without updating the rule group, set <code>DryRun</code> to <code>TRUE</code>. </p>"
./backend/aws/dist/awscli/botocore/data/personalize-runtime/2018-05-22/service-2.json:9:    "serviceFullName":"Amazon Personalize Runtime",
./backend/aws/dist/awscli/botocore/data/personalize-runtime/2018-05-22/service-2.json:10:    "serviceId":"Personalize Runtime",
./backend/aws/dist/awscli/botocore/data/odb/2024-08-20/service-2.json:1299:        "lastMaintenanceRunId":{
./backend/aws/dist/awscli/botocore/data/odb/2024-08-20/service-2.json:1335:        "nextMaintenanceRunId":{
./backend/aws/dist/awscli/botocore/data/odb/2024-08-20/service-2.json:1462:        "lastMaintenanceRunId":{
./backend/aws/dist/awscli/botocore/data/odb/2024-08-20/service-2.json:1498:        "nextMaintenanceRunId":{
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:13:    "serviceFullName":"Amazon Bedrock Runtime",
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:14:    "serviceId":"Bedrock Runtime",
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:648:          "documentation":"<p>Image to include in the message. </p> <note> <p>This field is only supported by Anthropic Claude 3 models.</p> </note>"
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:815:          "documentation":"<p>Specifies the model or throughput with which to run inference, or the prompt resource to use in inference. The value depends on the resource that you use:</p> <ul> <li> <p>If you use a base model, specify the model ID or its ARN. For a list of model IDs for base models, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns\">Amazon Bedrock base model IDs (on-demand throughput)</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an inference profile, specify the inference profile ID or its ARN. For a list of inference profile IDs, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html\">Supported Regions and models for cross-region inference</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a provisioned model, specify the ARN of the Provisioned Throughput. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html\">Run inference using a Provisioned Throughput</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a custom model, first purchase Provisioned Throughput for it. Then specify the ARN of the resulting provisioned model. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html\">Use a custom model in Amazon Bedrock</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>To include a prompt that was defined in <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management.html\">Prompt management</a>, specify the ARN of the prompt version to use.</p> </li> </ul> <p>The Converse API doesn't support <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html\">imported models</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:1006:          "documentation":"<p>Specifies the model or throughput with which to run inference, or the prompt resource to use in inference. The value depends on the resource that you use:</p> <ul> <li> <p>If you use a base model, specify the model ID or its ARN. For a list of model IDs for base models, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns\">Amazon Bedrock base model IDs (on-demand throughput)</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an inference profile, specify the inference profile ID or its ARN. For a list of inference profile IDs, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html\">Supported Regions and models for cross-region inference</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a provisioned model, specify the ARN of the Provisioned Throughput. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html\">Run inference using a Provisioned Throughput</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a custom model, first purchase Provisioned Throughput for it. Then specify the ARN of the resulting provisioned model. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html\">Use a custom model in Amazon Bedrock</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>To include a prompt that was defined in <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management.html\">Prompt management</a>, specify the ARN of the prompt version to use.</p> </li> </ul> <p>The Converse API doesn't support <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html\">imported models</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:2787:          "documentation":"<p>The prompt and inference parameters in the format specified in the <code>contentType</code> in the header. You must provide the body in JSON format. To see the format and content of the request and response bodies for different models, refer to <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters</a>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/api-methods-run.html\">Run inference</a> in the Bedrock User Guide.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:2803:          "documentation":"<p>The unique identifier of the model to invoke to run inference.</p> <p>The <code>modelId</code> to provide depends on the type of model or throughput that you use:</p> <ul> <li> <p>If you use a base model, specify the model ID or its ARN. For a list of model IDs for base models, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns\">Amazon Bedrock base model IDs (on-demand throughput)</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an inference profile, specify the inference profile ID or its ARN. For a list of inference profile IDs, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html\">Supported Regions and models for cross-region inference</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a provisioned model, specify the ARN of the Provisioned Throughput. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html\">Run inference using a Provisioned Throughput</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a custom model, specify the ARN of the custom model deployment (for on-demand inference) or the ARN of your provisioned model (for Provisioned Throughput). For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html\">Use a custom model in Amazon Bedrock</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html\">imported model</a>, specify the ARN of the imported model. You can get the model ARN from a successful call to <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateModelImportJob.html\">CreateModelImportJob</a> or from the Imported models page in the Amazon Bedrock console.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:2932:          "documentation":"<p>The prompt and inference parameters in the format specified in the <code>BidirectionalInputPayloadPart</code> in the header. You must provide the body in JSON format. To see the format and content of the request and response bodies for different models, refer to <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters</a>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/api-methods-run.html\">Run inference</a> in the Bedrock User Guide.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:2954:          "documentation":"<p>The prompt and inference parameters in the format specified in the <code>contentType</code> in the header. You must provide the body in JSON format. To see the format and content of the request and response bodies for different models, refer to <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters</a>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/api-methods-run.html\">Run inference</a> in the Bedrock User Guide.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:2970:          "documentation":"<p>The unique identifier of the model to invoke to run inference.</p> <p>The <code>modelId</code> to provide depends on the type of model or throughput that you use:</p> <ul> <li> <p>If you use a base model, specify the model ID or its ARN. For a list of model IDs for base models, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns\">Amazon Bedrock base model IDs (on-demand throughput)</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an inference profile, specify the inference profile ID or its ARN. For a list of inference profile IDs, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html\">Supported Regions and models for cross-region inference</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a provisioned model, specify the ARN of the Provisioned Throughput. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html\">Run inference using a Provisioned Throughput</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a custom model, specify the ARN of the custom model deployment (for on-demand inference) or the ARN of your provisioned model (for Provisioned Throughput). For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html\">Use a custom model in Amazon Bedrock</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html\">imported model</a>, specify the ARN of the imported model. You can get the model ARN from a successful call to <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateModelImportJob.html\">CreateModelImportJob</a> or from the Imported models page in the Amazon Bedrock console.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:3497:      "documentation":"<p>The model must request a specific tool. For example, <code>{\"tool\" : {\"name\" : \"Your tool name\"}}</code>.</p> <note> <p>This field is only supported by Anthropic Claude 3 models.</p> </note>"
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:3725:          "documentation":"<p>The Model must request the specified tool. Only supported by Anthropic Claude 3 models. </p>"
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:3728:      "documentation":"<p>Determines which tools the model should request in a call to <code>Converse</code> or <code>ConverseStream</code>. <code>ToolChoice</code> is only supported by Anthropic Claude 3 models and by Mistral AI Mistral Large.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:3785:          "documentation":"<p>The status for the tool result content block.</p> <note> <p>This field is only supported Anthropic Claude 3 models.</p> </note>"
./backend/aws/dist/awscli/botocore/data/bedrock-runtime/2023-09-30/service-2.json:3803:          "documentation":"<p>A tool result that is an image.</p> <note> <p>This field is only supported by Anthropic Claude 3 models.</p> </note>"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/paginators-1.json:9:    "ListJobRuns": {
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/paginators-1.json:13:      "result_key": "JobRuns"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:258:    "DescribeJobRun":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:259:      "name":"DescribeJobRun",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:262:        "requestUri":"/jobs/{name}/jobRun/{runId}"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:264:      "input":{"shape":"DescribeJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:265:      "output":{"shape":"DescribeJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:341:    "ListJobRuns":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:342:      "name":"ListJobRuns",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:345:        "requestUri":"/jobs/{name}/jobRuns"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:347:      "input":{"shape":"ListJobRunsRequest"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:348:      "output":{"shape":"ListJobRunsResponse"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:479:    "StartJobRun":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:480:      "name":"StartJobRun",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:483:        "requestUri":"/jobs/{name}/startJobRun"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:485:      "input":{"shape":"StartJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:486:      "output":{"shape":"StartJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:493:      "documentation":"<p>Runs a DataBrew job.</p>"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:511:    "StopJobRun":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:512:      "name":"StopJobRun",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:515:        "requestUri":"/jobs/{name}/jobRun/{runId}/stopJobRun"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:517:      "input":{"shape":"StopJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:518:      "output":{"shape":"StopJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1836:    "DescribeJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1840:        "RunId"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1849:        "RunId":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1850:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1857:    "DescribeJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1874:          "shape":"JobRunErrorMessage",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1893:        "RunId":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1894:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:1898:          "shape":"JobRunState",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2486:    "JobRun":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2502:          "shape":"JobRunErrorMessage",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2513:        "RunId":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2514:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2518:          "shape":"JobRunState",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2564:    "JobRunErrorMessage":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2565:    "JobRunId":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2570:    "JobRunList":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2572:      "member":{"shape":"JobRun"}
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2574:    "JobRunState":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2655:    "ListJobRunsRequest":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2679:    "ListJobRunsResponse":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2681:      "required":["JobRuns"],
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2683:        "JobRuns":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:2684:          "shape":"JobRunList",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3762:    "StartJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3774:    "StartJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3776:      "required":["RunId"],
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3778:        "RunId":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3779:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3871:    "StopJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3875:        "RunId"
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3884:        "RunId":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3885:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3892:    "StopJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3894:      "required":["RunId"],
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3896:        "RunId":{
./backend/aws/dist/awscli/botocore/data/databrew/2017-07-25/service-2.json:3897:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:1873:        "Running":{
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:1990:          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role to apply to the app block builder. To assume a role, the app block builder calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:2287:          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role to apply to the fleet. To assume a role, a fleet instance calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:2361:          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role to apply to the image builder. To assume a role, the image builder calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:2603:        "dryRun":{
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:3869:          "documentation":"<p>The ARN of the IAM role that is applied to the fleet. To assume a role, the fleet instance calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:4120:          "documentation":"<p>The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:5277:          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role to apply to the app block builder. To assume a role, the app block builder calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/appstream/2016-12-01/service-2.json:5478:          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role to apply to the fleet. To assume a role, a fleet instance calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3060:    "GetJourneyRunExecutionActivityMetrics": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3061:      "name": "GetJourneyRunExecutionActivityMetrics",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3068:        "shape": "GetJourneyRunExecutionActivityMetricsRequest"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3071:        "shape": "GetJourneyRunExecutionActivityMetricsResponse",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3106:    "GetJourneyRunExecutionMetrics": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3107:      "name": "GetJourneyRunExecutionMetrics",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3114:        "shape": "GetJourneyRunExecutionMetricsRequest"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3117:        "shape": "GetJourneyRunExecutionMetricsResponse",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3152:    "GetJourneyRuns": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3153:      "name": "GetJourneyRuns",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3160:        "shape": "GetJourneyRunsRequest"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:3163:        "shape": "GetJourneyRunsResponse",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10856:    "GetJourneyRunExecutionActivityMetricsRequest": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10889:        "RunId": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10897:        "RunId",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10903:    "GetJourneyRunExecutionActivityMetricsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10906:        "JourneyRunExecutionActivityMetricsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10907:          "shape": "JourneyRunExecutionActivityMetricsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10911:        "JourneyRunExecutionActivityMetricsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10913:      "payload": "JourneyRunExecutionActivityMetricsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10915:    "GetJourneyRunExecutionMetricsRequest": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10942:        "RunId": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10950:        "RunId",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10955:    "GetJourneyRunExecutionMetricsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10958:        "JourneyRunExecutionMetricsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10959:          "shape": "JourneyRunExecutionMetricsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10963:        "JourneyRunExecutionMetricsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10965:      "payload": "JourneyRunExecutionMetricsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:10967:    "GetJourneyRunsRequest": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:11000:    "GetJourneyRunsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:11003:        "JourneyRunsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:11004:          "shape": "JourneyRunsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:11008:        "JourneyRunsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:11010:      "payload": "JourneyRunsResponse"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12282:    "JourneyRunExecutionActivityMetricsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12309:        "RunId": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12321:        "RunId",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12325:    "JourneyRunExecutionMetricsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12344:        "RunId": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12354:        "RunId",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12358:    "JourneyRunResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12369:        "RunId": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12374:          "shape": "JourneyRunStatus",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12383:        "RunId"
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12386:    "JourneyRunsResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12390:          "shape": "ListOfJourneyRunResponse",
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:12403:    "JourneyRunStatus": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:16344:    "ListOfJourneyRunResponse": {
./backend/aws/dist/awscli/botocore/data/pinpoint/2016-12-01/service-2.json:16347:        "shape": "JourneyRunResponse"
./backend/aws/dist/awscli/botocore/data/connect/2017-08-08/service-2.json:4127:      "documentation":"<p>Updates details about a contact evaluation in the specified Amazon Connect instance. A contact evaluation must be in draft state. Answers included in the request are merged with existing answers for the given evaluation. An answer or note can be deleted by passing an empty object (<code>{}</code>) to the question identifier. </p>"
./backend/aws/dist/awscli/botocore/data/redshift-data/2019-12-20/service-2.json:33:      "documentation":"<p>Runs one or more SQL statements, which can be data manipulation language (DML) or data definition language (DDL). Depending on the authorization method, use one of the following combinations of request parameters: </p> <ul> <li> <p>Secrets Manager - when connecting to a cluster, provide the <code>secret-arn</code> of a secret stored in Secrets Manager which has <code>username</code> and <code>password</code>. The specified secret contains credentials to connect to the <code>database</code> you specify. When you are connecting to a cluster, you also supply the database name, If you provide a cluster identifier (<code>dbClusterIdentifier</code>), it must match the cluster identifier stored in the secret. When you are connecting to a serverless workgroup, you also supply the database name.</p> </li> <li> <p>Temporary credentials - when connecting to your data warehouse, choose one of the following options:</p> <ul> <li> <p>When connecting to a serverless workgroup, specify the workgroup name and database name. The database user name is derived from the IAM identity. For example, <code>arn:iam::123456789012:user:foo</code> has the database user name <code>IAM:foo</code>. Also, permission to call the <code>redshift-serverless:GetCredentials</code> operation is required.</p> </li> <li> <p>When connecting to a cluster as an IAM identity, specify the cluster identifier and the database name. The database user name is derived from the IAM identity. For example, <code>arn:iam::123456789012:user:foo</code> has the database user name <code>IAM:foo</code>. Also, permission to call the <code>redshift:GetClusterCredentialsWithIAM</code> operation is required.</p> </li> <li> <p>When connecting to a cluster as a database user, specify the cluster identifier, the database name, and the database user name. Also, permission to call the <code>redshift:GetClusterCredentials</code> operation is required.</p> </li> </ul> </li> </ul> <p>For more information about the Amazon Redshift Data API and CLI usage examples, see <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/data-api.html\">Using the Amazon Redshift Data API</a> in the <i>Amazon Redshift Management Guide</i>. </p>"
./backend/aws/dist/awscli/botocore/data/redshift-data/2019-12-20/service-2.json:97:      "documentation":"<p>Runs an SQL statement, which can be data manipulation language (DML) or data definition language (DDL). This statement must be a single SQL statement. Depending on the authorization method, use one of the following combinations of request parameters: </p> <ul> <li> <p>Secrets Manager - when connecting to a cluster, provide the <code>secret-arn</code> of a secret stored in Secrets Manager which has <code>username</code> and <code>password</code>. The specified secret contains credentials to connect to the <code>database</code> you specify. When you are connecting to a cluster, you also supply the database name, If you provide a cluster identifier (<code>dbClusterIdentifier</code>), it must match the cluster identifier stored in the secret. When you are connecting to a serverless workgroup, you also supply the database name.</p> </li> <li> <p>Temporary credentials - when connecting to your data warehouse, choose one of the following options:</p> <ul> <li> <p>When connecting to a serverless workgroup, specify the workgroup name and database name. The database user name is derived from the IAM identity. For example, <code>arn:iam::123456789012:user:foo</code> has the database user name <code>IAM:foo</code>. Also, permission to call the <code>redshift-serverless:GetCredentials</code> operation is required.</p> </li> <li> <p>When connecting to a cluster as an IAM identity, specify the cluster identifier and the database name. The database user name is derived from the IAM identity. For example, <code>arn:iam::123456789012:user:foo</code> has the database user name <code>IAM:foo</code>. Also, permission to call the <code>redshift:GetClusterCredentialsWithIAM</code> operation is required.</p> </li> <li> <p>When connecting to a cluster as a database user, specify the cluster identifier, the database name, and the database user name. Also, permission to call the <code>redshift:GetClusterCredentials</code> operation is required.</p> </li> </ul> </li> </ul> <p>For more information about the Amazon Redshift Data API and CLI usage examples, see <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/data-api.html\">Using the Amazon Redshift Data API</a> in the <i>Amazon Redshift Management Guide</i>. </p>"
./backend/aws/dist/awscli/botocore/data/migrationhub-config/2019-06-30/service-2.json:29:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/migrationhub-config/2019-06-30/service-2.json:116:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/migrationhub-config/2019-06-30/service-2.json:117:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/migrationhub-config/2019-06-30/service-2.json:190:    "DryRun":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/migrationhub-config/2019-06-30/service-2.json:191:    "DryRunOperation":{
./backend/aws/dist/awscli/botocore/data/migrationhub-config/2019-06-30/service-2.json:196:      "documentation":"<p>Exception raised to indicate that authorization of an action was successful, when the <code>DryRun</code> flag is set to true.</p>",
./backend/aws/dist/awscli/botocore/data/cloud9/2017-09-23/service-2.json:324:          "documentation":"<p>A unique, case-sensitive string that helps Cloud9 to ensure this operation completes no more than one time.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Client Tokens</a> in the <i>Amazon EC2 API Reference</i>.</p>"
./backend/aws/dist/awscli/botocore/data/cloud9/2017-09-23/service-2.json:354:        "dryRun":{
./backend/aws/dist/awscli/botocore/data/cloud9/2017-09-23/service-2.json:356:          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
./backend/aws/dist/awscli/botocore/data/mpa/2022-07-26/service-2.json:110:      "documentation":"<p>Deletes an inactive approval team. For more information, see <a href=\"https://docs.aws.amazon.com/mpa/latest/userguide/mpa-health.html\">Team health</a> in the <i>Multi-party approval User Guide</i>.</p> <p>You can also use this operation to delete a team draft. For more information, see <a href=\"https://docs.aws.amazon.com/mpa/latest/userguide/update-team.html#update-team-draft-status\">Interacting with drafts</a> in the <i>Multi-party approval User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/dynamodb/2012-08-10/service-2.json:31:      "documentation":"<p>This operation allows you to perform batch reads or writes on data stored in DynamoDB, using PartiQL. Each read statement in a <code>BatchExecuteStatement</code> must specify an equality condition on all key attributes. This enforces that each <code>SELECT</code> statement in a batch returns at most a single item. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ql-reference.multiplestatements.batching.html\">Running batch operations with PartiQL for DynamoDB </a>.</p> <note> <p>The entire batch must consist of either read statements or write statements, you cannot mix both in one batch.</p> </note> <important> <p>A HTTP 200 response does not mean that all statements in the BatchExecuteStatement succeeded. Error details for individual statements can be found under the <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchStatementResponse.html#DDB-Type-BatchStatementResponse-Error\">Error</a> field of the <code>BatchStatementResponse</code> for each statement.</p> </important>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:112:    "DescribeCanariesLastRun":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:113:      "name":"DescribeCanariesLastRun",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:118:      "input":{"shape":"DescribeCanariesLastRunRequest"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:119:      "output":{"shape":"DescribeCanariesLastRunResponse"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:126:    "DescribeRuntimeVersions":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:127:      "name":"DescribeRuntimeVersions",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:132:      "input":{"shape":"DescribeRuntimeVersionsRequest"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:133:      "output":{"shape":"DescribeRuntimeVersionsResponse"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:138:      "documentation":"<p>Returns a list of Synthetics canary runtime versions. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:170:    "GetCanaryRuns":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:171:      "name":"GetCanaryRuns",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:176:      "input":{"shape":"GetCanaryRunsRequest"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:177:      "output":{"shape":"GetCanaryRunsResponse"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:279:    "StartCanaryDryRun":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:280:      "name":"StartCanaryDryRun",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:285:      "input":{"shape":"StartCanaryDryRunRequest"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:286:      "output":{"shape":"StartCanaryDryRunResponse"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:362:      "documentation":"<p>Updates the configuration of a canary that has already been created.</p> <p>For multibrowser canaries, you can add or remove browsers by updating the browserConfig list in the update call. For example:</p> <ul> <li> <p>To add Firefox to a canary that currently uses Chrome, specify browserConfigs as [CHROME, FIREFOX]</p> </li> <li> <p>To remove Firefox and keep only Chrome, specify browserConfigs as [CHROME]</p> </li> </ul> <p>You can't use this operation to update the tags of an existing canary. To change the tags of an existing canary, use <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_TagResource.html\">TagResource</a>.</p> <note> <p>When you use the <code>dryRunId</code> field when updating a canary, the only other field you can provide is the <code>Schedule</code>. Adding any other field will thrown an exception.</p> </note>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:488:    "CanariesLastRun":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:490:      "member":{"shape":"CanaryLastRun"}
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:512:        "RunConfig":{"shape":"CanaryRunConfigOutput"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:515:          "documentation":"<p>The number of days to retain data about successful runs of this canary.</p> <p>This setting affects the range of information returned by <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanaryRuns.html\">GetCanaryRuns</a>, as well as the range of information displayed in the Synthetics console. </p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:519:          "documentation":"<p>The number of days to retain data about failed runs of this canary.</p> <p>This setting affects the range of information returned by <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanaryRuns.html\">GetCanaryRuns</a>, as well as the range of information displayed in the Synthetics console. </p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:537:        "RuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:539:          "documentation":"<p>Specifies the runtime version to use for the canary. For more information about runtime versions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:556:          "documentation":"<p>A list of engine configurations for the canary, one for each browser type that the canary is configured to run on.</p> <p>All runtime versions <code>syn-nodejs-puppeteer-11.0</code> and above, and <code>syn-nodejs-playwright-3.0</code> and above, use <code>engineConfigs</code> only. You can no longer use <code>engineArn</code> in these versions.</p> <p>Runtime versions older than <code>syn-nodejs-puppeteer-11.0</code> and <code>syn-nodejs-playwright-3.0</code> continue to support <code>engineArn</code> to ensure backward compatibility.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:570:        "DryRunConfig":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:571:          "shape":"DryRunConfigOutput",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:632:    "CanaryDryRunConfigOutput":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:635:        "DryRunId":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:637:          "documentation":"<p>The DryRunId associated with an existing canary’s dry run. You can use this DryRunId to retrieve information about the dry run.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:642:    "CanaryLastRun":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:649:        "LastRun":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:650:          "shape":"CanaryRun",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:662:    "CanaryRun":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:669:        "ScheduledRunId":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:682:          "shape":"CanaryRunStatus",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:686:          "shape":"CanaryRunTimeline",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:693:        "DryRunConfig":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:694:          "shape":"CanaryDryRunConfigOutput",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:704:    "CanaryRunConfigInput":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:721:          "documentation":"<p>Specifies the keys and values to use for any environment variables used in the canary script. Use the following format:</p> <p>{ \"key1\" : \"value1\", \"key2\" : \"value2\", ...}</p> <p>Keys must start with a letter and be at least two characters. The total size of your environment variables cannot exceed 4 KB. You can't specify any Lambda reserved environment variables as the keys for your environment variables. For more information about reserved keys, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime\"> Runtime environment variables</a>.</p> <important> <p>Environment variable keys and values are encrypted at rest using Amazon Web Services owned KMS keys. However, the environment variables are not encrypted on the client side. Do not store sensitive information in them.</p> </important>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:730:    "CanaryRunConfigOutput":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:752:    "CanaryRunState":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:760:    "CanaryRunStateReasonCode":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:767:    "CanaryRunStatus":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:771:          "shape":"CanaryRunState",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:779:          "shape":"CanaryRunStateReasonCode",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:780:          "documentation":"<p>If this value is <code>CANARY_FAILURE</code>, either the canary script failed or Synthetics ran into a fatal error when running the canary. For example, a canary timeout misconfiguration setting can cause the canary to timeout before Synthetics can evaluate its status. </p> <p> If this value is <code>EXECUTION_FAILURE</code>, a non-critical failure occurred such as failing to save generated debug artifacts (for example, screenshots or har files).</p> <p>If both types of failures occurred, the <code>CANARY_FAILURE</code> takes precedence. To understand the exact error, use the <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CanaryRunStatus.html\">StateReason</a> API.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:783:          "shape":"CanaryRunTestResult",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:784:          "documentation":"<p>Specifies the status of canary script for this run. When Synthetics tries to determine the status but fails, the result is marked as <code>UNKNOWN</code>. For the overall status of canary run, see <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CanaryRunStatus.html\">State</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:789:    "CanaryRunTestResult":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:797:    "CanaryRunTimeline":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:808:        "MetricTimestampForRunAndRetries":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:815:    "CanaryRuns":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:817:      "member":{"shape":"CanaryRun"}
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:950:        "RuntimeVersion"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:973:        "RunConfig":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:974:          "shape":"CanaryRunConfigInput",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:979:          "documentation":"<p>The number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.</p> <p>This setting affects the range of information returned by <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanaryRuns.html\">GetCanaryRuns</a>, as well as the range of information displayed in the Synthetics console. </p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:983:          "documentation":"<p>The number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.</p> <p>This setting affects the range of information returned by <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanaryRuns.html\">GetCanaryRuns</a>, as well as the range of information displayed in the Synthetics console. </p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:985:        "RuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:987:          "documentation":"<p>Specifies the runtime version to use for the canary. For a list of valid runtime versions and more information about runtime versions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:991:          "documentation":"<p>If this canary is to test an endpoint in a VPC, this structure contains information about the subnet and security groups of the VPC endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html\"> Running a Canary in a VPC</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1110:    "DescribeCanariesLastRunNameFilter":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1116:    "DescribeCanariesLastRunRequest":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1121:          "documentation":"<p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeCanariesLastRun</code> operation to retrieve the next set of results.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1125:          "documentation":"<p>Specify this parameter to limit how many runs are returned each time you use the <code>DescribeLastRun</code> operation. If you omit this parameter, the default of 100 is used.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1128:          "shape":"DescribeCanariesLastRunNameFilter",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1137:    "DescribeCanariesLastRunResponse":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1140:        "CanariesLastRun":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1141:          "shape":"CanariesLastRun",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1146:          "documentation":"<p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeCanariesLastRun</code> operation to retrieve the next set of results.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1186:    "DescribeRuntimeVersionsRequest":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1191:          "documentation":"<p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeRuntimeVersions</code> operation to retrieve the next set of results.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1195:          "documentation":"<p>Specify this parameter to limit how many runs are returned each time you use the <code>DescribeRuntimeVersions</code> operation. If you omit this parameter, the default of 100 is used.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1199:    "DescribeRuntimeVersionsResponse":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1202:        "RuntimeVersions":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1203:          "shape":"RuntimeVersionList",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1208:          "documentation":"<p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeRuntimeVersions</code> operation to retrieve the next set of results.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1235:    "DryRunConfigOutput":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1238:        "DryRunId":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1240:          "documentation":"<p>The DryRunId associated with an existing canary’s dry run. You can use this DryRunId to retrieve information about the dry run.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1242:        "LastDryRunExecutionStatus":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1306:        "DryRunId":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1308:          "documentation":"<p>The DryRunId associated with an existing canary’s dry run. You can use this DryRunId to retrieve information about the dry run.</p>",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1310:          "locationName":"dryRunId"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1323:    "GetCanaryRunsRequest":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1335:          "documentation":"<p>A token that indicates that there is more data available. You can use this token in a subsequent <code>GetCanaryRuns</code> operation to retrieve the next set of results.</p> <note> <p>When auto retry is enabled for the canary, the first subsequent retry is suffixed with *1 indicating its the first retry and the next subsequent try is suffixed with *2.</p> </note>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1339:          "documentation":"<p>Specify this parameter to limit how many runs are returned each time you use the <code>GetCanaryRuns</code> operation. If you omit this parameter, the default of 100 is used.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1341:        "DryRunId":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1343:          "documentation":"<p>The DryRunId associated with an existing canary’s dry run. You can use this DryRunId to retrieve information about the dry run.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1345:        "RunType":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1346:          "shape":"RunType",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1347:          "documentation":"<ul> <li> <p>When you provide <code>RunType=CANARY_RUN</code> and <code>dryRunId</code>, you will get an exception </p> </li> <li> <p>When a value is not provided for <code>RunType</code>, the default value is <code>CANARY_RUN</code> </p> </li> <li> <p>When <code>CANARY_RUN</code> is provided, all canary runs excluding dry runs are returned</p> </li> <li> <p>When <code>DRY_RUN</code> is provided, all dry runs excluding canary runs are returned</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1351:    "GetCanaryRunsResponse":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1354:        "CanaryRuns":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1355:          "shape":"CanaryRuns",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1360:          "documentation":"<p>A token that indicates that there is more data available. You can use this token in a subsequent <code>GetCanaryRuns</code> operation to retrieve the next set of results.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1701:      "documentation":"<p>This structure contains information about the canary's retry configuration.</p> <note> <p>The default account level concurrent execution limit from Lambda is 1000. When you have more than 1000 canaries, it's possible there are more than 1000 Lambda invocations due to retries and the console might hang. For more information on the Lambda execution limit, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-concurrency.html#:~:text=As%20your%20functions%20receive%20more,functions%20in%20an%20AWS%20Region\">Understanding Lambda function scaling</a>.</p> </note> <note> <p>For canary with <code>MaxRetries = 2</code>, you need to set the <code>CanaryRunConfigInput.TimeoutInSeconds</code> to less than 600 seconds to avoid validation errors.</p> </note>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1719:    "RunType":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1726:    "RuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1731:          "documentation":"<p>The name of the runtime version. For a list of valid runtime versions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1746:      "documentation":"<p>This structure contains information about one canary runtime version. For more information about runtime versions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1748:    "RuntimeVersionList":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1750:      "member":{"shape":"RuntimeVersion"}
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1782:    "StartCanaryDryRunRequest":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1793:        "RuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1795:          "documentation":"<p>Specifies the runtime version to use for the canary. For a list of valid runtime versions and for more information about runtime versions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1797:        "RunConfig":{"shape":"CanaryRunConfigInput"},
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1805:          "documentation":"<p>The number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.</p> <p>This setting affects the range of information returned by <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanaryRuns.html\">GetCanaryRuns</a>, as well as the range of information displayed in the Synthetics console. </p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1809:          "documentation":"<p>The number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.</p> <p>This setting affects the range of information returned by <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanaryRuns.html\">GetCanaryRuns</a>, as well as the range of information displayed in the Synthetics console. </p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1831:    "StartCanaryDryRunResponse":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1834:        "DryRunConfig":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1835:          "shape":"DryRunConfigOutput",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1996:        "RuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:1998:          "documentation":"<p>Specifies the runtime version to use for the canary. For a list of valid runtime versions and for more information about runtime versions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2004:        "RunConfig":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2005:          "shape":"CanaryRunConfigInput",
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2010:          "documentation":"<p>The number of days to retain data about successful runs of this canary.</p> <p>This setting affects the range of information returned by <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanaryRuns.html\">GetCanaryRuns</a>, as well as the range of information displayed in the Synthetics console. </p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2014:          "documentation":"<p>The number of days to retain data about failed runs of this canary.</p> <p>This setting affects the range of information returned by <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanaryRuns.html\">GetCanaryRuns</a>, as well as the range of information displayed in the Synthetics console. </p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2018:          "documentation":"<p>If this canary is to test an endpoint in a VPC, this structure contains information about the subnet and security groups of the VPC endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html\"> Running a Canary in a VPC</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2036:        "DryRunId":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2038:          "documentation":"<p>Update the existing canary using the updated configurations from the DryRun associated with the DryRunId.</p> <note> <p>When you use the <code>dryRunId</code> field when updating a canary, the only other field you can provide is the <code>Schedule</code>. Adding any other field will thrown an exception.</p> </note>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2065:      "required":["BaseCanaryRunId"],
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2071:        "BaseCanaryRunId":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2073:          "documentation":"<p>Specifies which canary run to use the screenshots from as the baseline for future visual monitoring with this canary. Valid values are <code>nextrun</code> to use the screenshots from the next run after this update is made, <code>lastrun</code> to use the screenshots from the most recent run before this update was made, or the value of <code>Id</code> in the <a href=\"https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CanaryRun.html\"> CanaryRun</a> from a run of this a canary in the past 31 days. If you specify the <code>Id</code> of a canary run older than 31 days, the operation returns a 400 validation exception error..</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2089:        "BaseCanaryRunId":{
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2128:      "documentation":"<p>If this canary is to test an endpoint in a VPC, this structure contains information about the subnets and security groups of the VPC endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html\"> Running a Canary in a VPC</a>.</p>"
./backend/aws/dist/awscli/botocore/data/synthetics/2017-10-11/service-2.json:2150:      "documentation":"<p>If this canary is to test an endpoint in a VPC, this structure contains information about the subnets and security groups of the VPC endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html\"> Running a Canary in a VPC</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/waiters-2.json:4:    "TasksRunning": {
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/completions-1.json:110:    "RunTask": {
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:70:      "documentation":"<p>Runs and maintains your desired number of tasks from a specified task definition. If the number of tasks running in a service drops below the <code>desiredCount</code>, Amazon ECS runs another copy of the task in the specified cluster. To update an existing service, use <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html\">UpdateService</a>.</p> <note> <p>On March 21, 2024, a change was made to resolve the task definition revision before authorization. When a task definition revision is not specified, authorization will occur using the latest revision of a task definition.</p> </note> <note> <p>Amazon Elastic Inference (EI) is no longer available to customers.</p> </note> <p>In addition to maintaining the desired count of tasks in your service, you can optionally run your service behind one or more load balancers. The load balancers distribute traffic across the tasks that are associated with the service. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html\">Service load balancing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when creating or updating a service. <code>volumeConfigurations</code> is only supported for REPLICA service and not DAEMON service. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types\">Amazon EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>Tasks for services that don't use a load balancer are considered healthy if they're in the <code>RUNNING</code> state. Tasks for services that use a load balancer are considered healthy if they're in the <code>RUNNING</code> state and are reported as healthy by the load balancer.</p> <p>There are two service scheduler strategies available:</p> <ul> <li> <p> <code>REPLICA</code> - The replica scheduling strategy places and maintains your desired number of tasks across your cluster. By default, the service scheduler spreads tasks across Availability Zones. You can use task placement strategies and constraints to customize task placement decisions. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html\">Service scheduler concepts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> </li> <li> <p> <code>DAEMON</code> - The daemon scheduling strategy deploys exactly one task on each active container instance that meets all of the task placement constraints that you specify in your cluster. The service scheduler also evaluates the task placement constraints for running tasks. It also stops tasks that don't meet the placement constraints. When using this strategy, you don't need to specify a desired number of tasks, a task placement strategy, or use Service Auto Scaling policies. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html\">Amazon ECS services</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> </li> </ul> <p>The deployment controller is the mechanism that determines how tasks are deployed for your service. The valid options are:</p> <ul> <li> <p>ECS</p> <p> When you create a service which uses the <code>ECS</code> deployment controller, you can choose between the following deployment strategies (which you can set in the “<code>strategy</code>” field in “<code>deploymentConfiguration</code>”): :</p> <ul> <li> <p> <code>ROLLING</code>: When you create a service which uses the <i>rolling update</i> (<code>ROLLING</code>) deployment strategy, the Amazon ECS service scheduler replaces the currently running tasks with new tasks. The number of tasks that Amazon ECS adds or removes from the service during a rolling update is controlled by the service deployment configuration. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html\">Deploy Amazon ECS services by replacing tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>Rolling update deployments are best suited for the following scenarios:</p> <ul> <li> <p>Gradual service updates: You need to update your service incrementally without taking the entire service offline at once.</p> </li> <li> <p>Limited resource requirements: You want to avoid the additional resource costs of running two complete environments simultaneously (as required by blue/green deployments).</p> </li> <li> <p>Acceptable deployment time: Your application can tolerate a longer deployment process, as rolling updates replace tasks one by one.</p> </li> <li> <p>No need for instant roll back: Your service can tolerate a rollback process that takes minutes rather than seconds.</p> </li> <li> <p>Simple deployment process: You prefer a straightforward deployment approach without the complexity of managing multiple environments, target groups, and listeners.</p> </li> <li> <p>No load balancer requirement: Your service doesn't use or require a load balancer, Application Load Balancer, Network Load Balancer, or Service Connect (which are required for blue/green deployments).</p> </li> <li> <p>Stateful applications: Your application maintains state that makes it difficult to run two parallel environments.</p> </li> <li> <p>Cost sensitivity: You want to minimize deployment costs by not running duplicate environments during deployment.</p> </li> </ul> <p>Rolling updates are the default deployment strategy for services and provide a balance between deployment safety and resource efficiency for many common application scenarios.</p> </li> <li> <p> <code>BLUE_GREEN</code>: A <i>blue/green</i> deployment strategy (<code>BLUE_GREEN</code>) is a release methodology that reduces downtime and risk by running two identical production environments called blue and green. With Amazon ECS blue/green deployments, you can validate new service revisions before directing production traffic to them. This approach provides a safer way to deploy changes with the ability to quickly roll back if needed. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-blue-green.html\">Amazon ECS blue/green deployments</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>Amazon ECS blue/green deployments are best suited for the following scenarios:</p> <ul> <li> <p>Service validation: When you need to validate new service revisions before directing production traffic to them</p> </li> <li> <p>Zero downtime: When your service requires zero-downtime deployments</p> </li> <li> <p>Instant roll back: When you need the ability to quickly roll back if issues are detected</p> </li> <li> <p>Load balancer requirement: When your service uses Application Load Balancer, Network Load Balancer, or Service Connect</p> </li> </ul> </li> </ul> </li> <li> <p>External</p> <p>Use a third-party deployment controller.</p> </li> <li> <p>Blue/green deployment (powered by CodeDeploy)</p> <p>CodeDeploy installs an updated version of the application as a new replacement task set and reroutes production traffic from the original application task set to the replacement task set. The original task set is terminated after a successful deployment. Use this deployment controller to verify a new deployment of a service before sending production traffic to it.</p> </li> </ul> <p>When creating a service that uses the <code>EXTERNAL</code> deployment controller, you can specify only parameters that aren't controlled at the task set level. The only required parameter is the service name. You control your services using the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateTaskSet.html\">CreateTaskSet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\">Amazon ECS deployment types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>When the service scheduler launches new tasks, it determines task placement. For information about task placement and task placement strategies, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html\">Amazon ECS task placement</a> in the <i>Amazon Elastic Container Service Developer Guide</i> </p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:426:      "documentation":"<p>Runs a command remotely on a container within a task.</p> <p>If you use a condition key in your IAM policy to refine the conditions for the policy statement, for example limit the actions to a specific cluster, you receive an <code>AccessDeniedException</code> when there is a mismatch between the condition key value and the corresponding parameter value.</p> <p>For information about required permissions and considerations, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html\">Using Amazon ECS Exec for debugging</a> in the <i>Amazon ECS Developer Guide</i>. </p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:714:    "RunTask":{
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:715:      "name":"RunTask",
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:720:      "input":{"shape":"RunTaskRequest"},
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:721:      "output":{"shape":"RunTaskResponse"},
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:734:      "documentation":"<p>Starts a new task using the specified task definition.</p> <note> <p>On March 21, 2024, a change was made to resolve the task definition revision before authorization. When a task definition revision is not specified, authorization will occur using the latest revision of a task definition.</p> </note> <note> <p>Amazon Elastic Inference (EI) is no longer available to customers.</p> </note> <p>You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS places tasks using placement constraints and placement strategies. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html\">Scheduling Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>Alternatively, you can use <code>StartTask</code> to use your own scheduler or place tasks manually on specific container instances.</p> <p>You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when creating or updating a service. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types\">Amazon EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>The Amazon ECS API follows an eventual consistency model. This is because of the distributed nature of the system supporting the API. This means that the result of an API command you run that affects your Amazon ECS resources might not be immediately visible to all subsequent commands you run. Keep this in mind when you carry out an API command that immediately follows a previous API command.</p> <p>To manage eventual consistency, you can do the following:</p> <ul> <li> <p>Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks command using an exponential backoff algorithm to ensure that you allow enough time for the previous command to propagate through the system. To do this, run the DescribeTasks command repeatedly, starting with a couple of seconds of wait time and increasing gradually up to five minutes of wait time.</p> </li> <li> <p>Add wait time between subsequent commands, even if the DescribeTasks command returns an accurate response. Apply an exponential backoff algorithm starting with a couple of seconds of wait time, and increase gradually up to about five minutes of wait time.</p> </li> </ul> <p>If you get a <code>ConflictException</code> error, the <code>RunTask</code> request could not be processed due to conflicts. The provided <code>clientToken</code> is already in use with a different <code>RunTask</code> request. The <code>resourceIds</code> are the existing task ARNs which are already associated with the <code>clientToken</code>. </p> <p>To fix this issue:</p> <ul> <li> <p>Run <code>RunTask</code> with a unique <code>clientToken</code>.</p> </li> <li> <p>Run <code>RunTask</code> with the <code>clientToken</code> and the original set of parameters</p> </li> </ul> <p>If you get a <code>ClientException</code>error, the <code>RunTask</code> could not be processed because you use managed scaling and there is a capacity error because the quota of tasks in the <code>PROVISIONING</code> per cluster has been reached. For information about the service quotas, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-quotas.html\">Amazon ECS service quotas</a>.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:751:      "documentation":"<p>Starts a new task from the specified task definition on the specified container instance or instances.</p> <note> <p>On March 21, 2024, a change was made to resolve the task definition revision before authorization. When a task definition revision is not specified, authorization will occur using the latest revision of a task definition.</p> </note> <note> <p>Amazon Elastic Inference (EI) is no longer available to customers.</p> </note> <p>Alternatively, you can use<code>RunTask</code> to place tasks for you. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html\">Scheduling Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>You can attach Amazon EBS volumes to Amazon ECS tasks by configuring the volume when creating or updating a service. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volume-types\">Amazon EBS volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:1329:          "documentation":"<p>The <i>weight</i> value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The <code>weight</code> value is taken into consideration after the <code>base</code> value, if defined, is satisfied.</p> <p>If no <code>weight</code> value is specified, the default value of <code>0</code> is used. When multiple capacity providers are specified within a capacity provider strategy, at least one of the capacity providers must have a weight value greater than zero and any capacity providers with a weight of <code>0</code> can't be used to place tasks. If you specify multiple capacity providers in a strategy that all have a weight of <code>0</code>, any <code>RunTask</code> or <code>CreateService</code> actions using the capacity provider strategy will fail.</p> <p>Weight value characteristics:</p> <ul> <li> <p>Weight is considered after the base value is satisfied</p> </li> <li> <p>Default value is <code>0</code> if not specified</p> </li> <li> <p>Valid range: 0 to 1,000</p> </li> <li> <p>At least one capacity provider must have a weight greater than zero</p> </li> <li> <p>Capacity providers with weight of <code>0</code> cannot place tasks</p> </li> </ul> <p>Task distribution logic:</p> <ol> <li> <p>Base satisfaction: The minimum number of tasks specified by the base value are placed on that capacity provider</p> </li> <li> <p>Weight distribution: After base requirements are met, additional tasks are distributed according to weight ratios</p> </li> </ol> <p>Examples:</p> <p>Equal Distribution: Two capacity providers both with weight <code>1</code> will split tasks evenly after base requirements are met.</p> <p>Weighted Distribution: If capacityProviderA has weight <code>1</code> and capacityProviderB has weight <code>4</code>, then for every 1 task on A, 4 tasks will run on B.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:1336:      "documentation":"<p>The details of a capacity provider strategy. A capacity provider strategy can be set when using the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html\">RunTask</a>or <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCluster.html\">CreateCluster</a> APIs or as the default capacity provider strategy for a cluster with the <code>CreateCluster</code> API.</p> <p>Only capacity providers that are already associated with a cluster and have an <code>ACTIVE</code> or <code>UPDATING</code> status can be used in a capacity provider strategy. The <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html\">PutClusterCapacityProviders</a> API is used to associate a capacity provider with a cluster.</p> <p>If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New Auto Scaling group capacity providers can be created with the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateClusterCapacityProvider.html\">CreateClusterCapacityProvider</a> API operation.</p> <p>To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code> capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used in a capacity provider strategy.</p> <p>With <code>FARGATE_SPOT</code>, you can run interruption tolerant tasks at a rate that's discounted compared to the <code>FARGATE</code> price. <code>FARGATE_SPOT</code> runs tasks on spare compute capacity. When Amazon Web Services needs the capacity back, your tasks are interrupted with a two-minute warning. <code>FARGATE_SPOT</code> supports Linux tasks with the X86_64 architecture on platform version 1.3.0 or later. <code>FARGATE_SPOT</code> supports Linux tasks with the ARM64 architecture on platform version 1.4.0 or later.</p> <p>A capacity provider strategy can contain a maximum of 20 capacity providers.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:1411:          "documentation":"<p>Additional information about your clusters that are separated by launch type. They include the following:</p> <ul> <li> <p>runningEC2TasksCount</p> </li> <li> <p>RunningFargateTasksCount</p> </li> <li> <p>pendingEC2TasksCount</p> </li> <li> <p>pendingFargateTasksCount</p> </li> <li> <p>activeEC2ServiceCount</p> </li> <li> <p>activeFargateServiceCount</p> </li> <li> <p>drainingEC2ServiceCount</p> </li> <li> <p>drainingFargateServiceCount</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:2149:          "documentation":"<p>The short name of one or more capacity providers to associate with the cluster. A capacity provider must be associated with a cluster before it can be included as part of the default capacity provider strategy of the cluster or used in a capacity provider strategy when calling the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html\">CreateService</a> or <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html\">RunTask</a> actions.</p> <p>If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must be created but not associated with another cluster. New Auto Scaling group capacity providers can be created with the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCapacityProvider.html\">CreateCapacityProvider</a> API operation.</p> <p>To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code> capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.</p> <p>The <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutCapacityProvider.html\">PutCapacityProvider</a> API operation is used to update the list of available capacity providers for a cluster after the cluster is created.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:2153:          "documentation":"<p>The capacity provider strategy to set as the default for the cluster. After a default capacity provider strategy is set for a cluster, when you call the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html\">CreateService</a> or <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html\">RunTask</a> APIs with no capacity provider strategy or launch type specified, the default capacity provider strategy for the cluster is used.</p> <p>If a default capacity provider strategy isn't defined for a cluster when it was created, it can be defined later with the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutClusterCapacityProviders.html\">PutClusterCapacityProviders</a> API operation.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:3798:          "documentation":"<p>Run an <code>init</code> process inside the container that forwards signals and reaps processes. This parameter maps to the <code>--init</code> option to docker run. This parameter requires version 1.25 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version --format '{{.Server.APIVersion}}'</code> </p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:3804:        "tmpfs":{
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:3806:          "documentation":"<p>The container path, mount options, and size (in MiB) of the tmpfs mount. This parameter maps to the <code>--tmpfs</code> option to docker run.</p> <note> <p>If you're using tasks that use the Fargate launch type, the <code>tmpfs</code> parameter isn't supported.</p> </note>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:4762:          "documentation":"<p>The resource name for which to modify the account setting.</p> <p>The following are the valid values for the account setting name.</p> <ul> <li> <p> <code>serviceLongArnFormat</code> - When modified, the Amazon Resource Name (ARN) and resource ID format of the resource type for a specified user, role, or the root user for an account is affected. The opt-in and opt-out account setting must be set for each Amazon ECS resource separately. The ARN and resource ID format of a resource is defined by the opt-in status of the user or role that created the resource. You must turn on this setting to use Amazon ECS features such as resource tagging.</p> </li> <li> <p> <code>taskLongArnFormat</code> - When modified, the Amazon Resource Name (ARN) and resource ID format of the resource type for a specified user, role, or the root user for an account is affected. The opt-in and opt-out account setting must be set for each Amazon ECS resource separately. The ARN and resource ID format of a resource is defined by the opt-in status of the user or role that created the resource. You must turn on this setting to use Amazon ECS features such as resource tagging.</p> </li> <li> <p> <code>containerInstanceLongArnFormat</code> - When modified, the Amazon Resource Name (ARN) and resource ID format of the resource type for a specified user, role, or the root user for an account is affected. The opt-in and opt-out account setting must be set for each Amazon ECS resource separately. The ARN and resource ID format of a resource is defined by the opt-in status of the user or role that created the resource. You must turn on this setting to use Amazon ECS features such as resource tagging.</p> </li> <li> <p> <code>awsvpcTrunking</code> - When modified, the elastic network interface (ENI) limit for any new container instances that support the feature is changed. If <code>awsvpcTrunking</code> is turned on, any new container instances that support the feature are launched have the increased ENI limits available to them. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html\">Elastic Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> </li> <li> <p> <code>containerInsights</code> - Container Insights with enhanced observability provides all the Container Insights metrics, plus additional task and container metrics. This version supports enhanced observability for Amazon ECS clusters using the Amazon EC2 and Fargate launch types. After you configure Container Insights with enhanced observability on Amazon ECS, Container Insights auto-collects detailed infrastructure telemetry from the cluster level down to the container level in your environment and displays these critical performance data in curated dashboards removing the heavy lifting in observability set-up. </p> <p>To use Container Insights with enhanced observability, set the <code>containerInsights</code> account setting to <code>enhanced</code>.</p> <p>To use Container Insights, set the <code>containerInsights</code> account setting to <code>enabled</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html\">Monitor Amazon ECS containers using Container Insights with enhanced observability</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> </li> <li> <p> <code>dualStackIPv6</code> - When turned on, when using a VPC in dual stack mode, your tasks using the <code>awsvpc</code> network mode can have an IPv6 address assigned. For more information on using IPv6 with tasks launched on Amazon EC2 instances, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking-awsvpc.html#task-networking-vpc-dual-stack\">Using a VPC in dual-stack mode</a>. For more information on using IPv6 with tasks launched on Fargate, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-task-networking.html#fargate-task-networking-vpc-dual-stack\">Using a VPC in dual-stack mode</a>.</p> </li> <li> <p> <code>fargateFIPSMode</code> - If you specify <code>fargateFIPSMode</code>, Fargate FIPS 140 compliance is affected.</p> </li> <li> <p> <code>fargateTaskRetirementWaitPeriod</code> - When Amazon Web Services determines that a security or infrastructure update is needed for an Amazon ECS task hosted on Fargate, the tasks need to be stopped and new tasks launched to replace them. Use <code>fargateTaskRetirementWaitPeriod</code> to configure the wait time to retire a Fargate task. For information about the Fargate tasks maintenance, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-maintenance.html\">Amazon Web Services Fargate task maintenance</a> in the <i>Amazon ECS Developer Guide</i>.</p> </li> <li> <p> <code>tagResourceAuthorization</code> - Amazon ECS is introducing tagging authorization for resource creation. Users must have permissions for actions that create the resource, such as <code>ecsCreateCluster</code>. If tags are specified when you create a resource, Amazon Web Services performs additional authorization to verify if users or roles have permissions to create tags. Therefore, you must grant explicit permissions to use the <code>ecs:TagResource</code> action. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/supported-iam-actions-tagging.html\">Grant permission to tag resources on creation</a> in the <i>Amazon ECS Developer Guide</i>.</p> </li> <li> <p> <code>defaultLogDriverMode</code> -Amazon ECS supports setting a default delivery mode of log messages from a container to the <code>logDriver</code> that you specify in the container's <code>logConfiguration</code>. The delivery mode affects application stability when the flow of logs from the container to the log driver is interrupted. The <code>defaultLogDriverMode</code> setting supports two values: <code>blocking</code> and <code>non-blocking</code>. If you don't specify a delivery mode in your container definition's <code>logConfiguration</code>, the mode you specify using this account setting will be used as the default. For more information about log delivery modes, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_LogConfiguration.html\">LogConfiguration</a>.</p> <note> <p>On June 25, 2025, Amazon ECS changed the default log driver mode from <code>blocking</code> to <code>non-blocking</code> to prioritize task availability over logging. To continue using the <code>blocking</code> mode after this change, do one of the following:</p> <ul> <li> <p>Set the <code>mode</code> option in your container definition's <code>logConfiguration</code> as <code>blocking</code>.</p> </li> <li> <p>Set the <code>defaultLogDriverMode</code> account setting to <code>blocking</code>.</p> </li> </ul> </note> </li> <li> <p> <code>guardDutyActivate</code> - The <code>guardDutyActivate</code> parameter is read-only in Amazon ECS and indicates whether Amazon ECS Runtime Monitoring is enabled or disabled by your security administrator in your Amazon ECS account. Amazon GuardDuty controls this account setting on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-guard-duty-integration.html\">Protecting Amazon ECS workloads with Amazon ECS Runtime Monitoring</a>.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:4788:          "documentation":"<p>The Amazon ECS account setting name to modify.</p> <p>The following are the valid values for the account setting name.</p> <ul> <li> <p> <code>serviceLongArnFormat</code> - When modified, the Amazon Resource Name (ARN) and resource ID format of the resource type for a specified user, role, or the root user for an account is affected. The opt-in and opt-out account setting must be set for each Amazon ECS resource separately. The ARN and resource ID format of a resource is defined by the opt-in status of the user or role that created the resource. You must turn on this setting to use Amazon ECS features such as resource tagging.</p> </li> <li> <p> <code>taskLongArnFormat</code> - When modified, the Amazon Resource Name (ARN) and resource ID format of the resource type for a specified user, role, or the root user for an account is affected. The opt-in and opt-out account setting must be set for each Amazon ECS resource separately. The ARN and resource ID format of a resource is defined by the opt-in status of the user or role that created the resource. You must turn on this setting to use Amazon ECS features such as resource tagging.</p> </li> <li> <p> <code>containerInstanceLongArnFormat</code> - When modified, the Amazon Resource Name (ARN) and resource ID format of the resource type for a specified user, role, or the root user for an account is affected. The opt-in and opt-out account setting must be set for each Amazon ECS resource separately. The ARN and resource ID format of a resource is defined by the opt-in status of the user or role that created the resource. You must turn on this setting to use Amazon ECS features such as resource tagging.</p> </li> <li> <p> <code>awsvpcTrunking</code> - When modified, the elastic network interface (ENI) limit for any new container instances that support the feature is changed. If <code>awsvpcTrunking</code> is turned on, any new container instances that support the feature are launched have the increased ENI limits available to them. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html\">Elastic Network Interface Trunking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> </li> <li> <p> <code>containerInsights</code> - Container Insights with enhanced observability provides all the Container Insights metrics, plus additional task and container metrics. This version supports enhanced observability for Amazon ECS clusters using the Amazon EC2 and Fargate launch types. After you configure Container Insights with enhanced observability on Amazon ECS, Container Insights auto-collects detailed infrastructure telemetry from the cluster level down to the container level in your environment and displays these critical performance data in curated dashboards removing the heavy lifting in observability set-up. </p> <p>To use Container Insights with enhanced observability, set the <code>containerInsights</code> account setting to <code>enhanced</code>.</p> <p>To use Container Insights, set the <code>containerInsights</code> account setting to <code>enabled</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html\">Monitor Amazon ECS containers using Container Insights with enhanced observability</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> </li> <li> <p> <code>dualStackIPv6</code> - When turned on, when using a VPC in dual stack mode, your tasks using the <code>awsvpc</code> network mode can have an IPv6 address assigned. For more information on using IPv6 with tasks launched on Amazon EC2 instances, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking-awsvpc.html#task-networking-vpc-dual-stack\">Using a VPC in dual-stack mode</a>. For more information on using IPv6 with tasks launched on Fargate, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-task-networking.html#fargate-task-networking-vpc-dual-stack\">Using a VPC in dual-stack mode</a>.</p> </li> <li> <p> <code>fargateTaskRetirementWaitPeriod</code> - When Amazon Web Services determines that a security or infrastructure update is needed for an Amazon ECS task hosted on Fargate, the tasks need to be stopped and new tasks launched to replace them. Use <code>fargateTaskRetirementWaitPeriod</code> to configure the wait time to retire a Fargate task. For information about the Fargate tasks maintenance, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-maintenance.html\">Amazon Web Services Fargate task maintenance</a> in the <i>Amazon ECS Developer Guide</i>.</p> </li> <li> <p> <code>tagResourceAuthorization</code> - Amazon ECS is introducing tagging authorization for resource creation. Users must have permissions for actions that create the resource, such as <code>ecsCreateCluster</code>. If tags are specified when you create a resource, Amazon Web Services performs additional authorization to verify if users or roles have permissions to create tags. Therefore, you must grant explicit permissions to use the <code>ecs:TagResource</code> action. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/supported-iam-actions-tagging.html\">Grant permission to tag resources on creation</a> in the <i>Amazon ECS Developer Guide</i>.</p> </li> <li> <p> <code>defaultLogDriverMode</code> - Amazon ECS supports setting a default delivery mode of log messages from a container to the <code>logDriver</code> that you specify in the container's <code>logConfiguration</code>. The delivery mode affects application stability when the flow of logs from the container to the log driver is interrupted. The <code>defaultLogDriverMode</code> setting supports two values: <code>blocking</code> and <code>non-blocking</code>. If you don't specify a delivery mode in your container definition's <code>logConfiguration</code>, the mode you specify using this account setting will be used as the default. For more information about log delivery modes, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_LogConfiguration.html\">LogConfiguration</a>. </p> <note> <p>On June 25, 2025, Amazon ECS changed the default log driver mode from <code>blocking</code> to <code>non-blocking</code> to prioritize task availability over logging. To continue using the <code>blocking</code> mode after this change, do one of the following:</p> <ul> <li> <p>Set the <code>mode</code> option in your container definition's <code>logConfiguration</code> as <code>blocking</code>.</p> </li> <li> <p>Set the <code>defaultLogDriverMode</code> account setting to <code>blocking</code>.</p> </li> </ul> </note> </li> <li> <p> <code>guardDutyActivate</code> - The <code>guardDutyActivate</code> parameter is read-only in Amazon ECS and indicates whether Amazon ECS Runtime Monitoring is enabled or disabled by your security administrator in your Amazon ECS account. Amazon GuardDuty controls this account setting on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-guard-duty-integration.html\">Protecting Amazon ECS workloads with Amazon ECS Runtime Monitoring</a>.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:4985:          "shape":"RuntimePlatform",
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:5129:    "RunTaskRequest":{
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:5212:    "RunTaskResponse":{
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:5225:    "RuntimePlatform":{
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:5237:      "documentation":"<p>Information about the platform for the Amazon ECS service or task.</p> <p>For more information about <code>RuntimePlatform</code>, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#runtime-platform\">RuntimePlatform</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:5979:          "documentation":"<p>Indicates whether Runtime Monitoring is turned on.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:6718:          "shape":"RuntimePlatform",
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:7135:          "documentation":"<p>The absolute file path where the tmpfs volume is to be mounted.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:7139:          "documentation":"<p>The maximum size (in MiB) of the tmpfs volume.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:7143:          "documentation":"<p>The list of tmpfs volume mount options.</p> <p>Valid values: <code>\"defaults\" | \"ro\" | \"rw\" | \"suid\" | \"nosuid\" | \"dev\" | \"nodev\" | \"exec\" | \"noexec\" | \"sync\" | \"async\" | \"dirsync\" | \"remount\" | \"mand\" | \"nomand\" | \"atime\" | \"noatime\" | \"diratime\" | \"nodiratime\" | \"bind\" | \"rbind\" | \"unbindable\" | \"runbindable\" | \"private\" | \"rprivate\" | \"shared\" | \"rshared\" | \"slave\" | \"rslave\" | \"relatime\" | \"norelatime\" | \"strictatime\" | \"nostrictatime\" | \"mode\" | \"uid\" | \"gid\" | \"nr_inodes\" | \"nr_blocks\" | \"mpol\"</code> </p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:7146:      "documentation":"<p>The container path, mount options, and size of the tmpfs mount.</p>"
./backend/aws/dist/awscli/botocore/data/ecs/2014-11-13/service-2.json:7635:          "documentation":"<p>Indicates whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration.</p> <p>To configure a volume at launch time, use this task definition revision and specify a <code>volumeConfigurations</code> object when calling the <code>CreateService</code>, <code>UpdateService</code>, <code>RunTask</code> or <code>StartTask</code> APIs.</p>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:39:        "requestUri":"/add-draft-app-version-resource-mappings",
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:53:      "documentation":"<p>Adds the source of resource-maps to the draft version of an application. During assessment, Resilience Hub will use these resource-maps to resolve the latest physical ID for each resource in the application template. For more information about different types of resources supported by Resilience Hub and how to add them in your application, see <a href=\"https://docs.aws.amazon.com/resilience-hub/latest/userguide/how-app-manage.html\">Step 2: How is your application managed?</a> in the Resilience Hub User Guide.</p>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:111:      "documentation":"<p>Creates a new Application Component in the Resilience Hub application.</p> <note> <p>This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the <code>PublishAppVersion</code> API.</p> </note>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:131:      "documentation":"<p>Adds a resource to the Resilience Hub application and assigns it to the specified Application Components. If you specify a new Application Component, Resilience Hub will automatically create the Application Component.</p> <note> <ul> <li> <p>This action has no effect outside Resilience Hub.</p> </li> <li> <p>This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the <code>PublishAppVersion</code> API.</p> </li> <li> <p>To update application version with new <code>physicalResourceID</code>, you must call <code>ResolveAppVersionResources</code> API.</p> </li> </ul> </note>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:245:      "documentation":"<p>Deletes an Application Component from the Resilience Hub application.</p> <note> <ul> <li> <p>This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the <code>PublishAppVersion</code> API.</p> </li> <li> <p>You will not be able to delete an Application Component if it has resources associated with it.</p> </li> </ul> </note>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:264:      "documentation":"<p>Deletes a resource from the Resilience Hub application.</p> <note> <ul> <li> <p>You can only delete a manually added resource. To exclude non-manually added resources, use the <code>UpdateAppVersionResource</code> API.</p> </li> <li> <p>This action has no effect outside Resilience Hub.</p> </li> <li> <p>This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the <code>PublishAppVersion</code> API.</p> </li> </ul> </note>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:435:        "requestUri":"/describe-draft-app-version-resources-import-status",
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:507:        "requestUri":"/import-resources-to-draft-app-version",
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:521:      "documentation":"<p>Imports resources to Resilience Hub application draft version from different input sources. For more information about the input sources supported by Resilience Hub, see <a href=\"https://docs.aws.amazon.com/resilience-hub/latest/userguide/discover-structure.html\">Discover the structure and describe your Resilience Hub application</a>.</p>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:923:        "requestUri":"/put-draft-app-version-template",
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:936:      "documentation":"<p>Adds or updates the app template for an Resilience Hub application draft version.</p>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:960:        "requestUri":"/remove-draft-app-version-resource-mappings",
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:973:      "documentation":"<p>Removes resource mappings from a draft application version.</p>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:1124:      "documentation":"<p>Updates the Resilience Hub application version.</p> <note> <p>This API updates the Resilience Hub application draft version. To use this information for running resiliency assessments, you must publish the Resilience Hub application using the <code>PublishAppVersion</code> API.</p> </note>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:1143:      "documentation":"<p>Updates an existing Application Component in the Resilience Hub application.</p> <note> <p>This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the <code>PublishAppVersion</code> API.</p> </note>"
./backend/aws/dist/awscli/botocore/data/resiliencehub/2020-04-30/service-2.json:1163:      "documentation":"<p>Updates the resource details in the Resilience Hub application.</p> <note> <ul> <li> <p>This action has no effect outside Resilience Hub.</p> </li> <li> <p>This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the <code>PublishAppVersion</code> API.</p> </li> <li> <p>To update application version with new <code>physicalResourceID</code>, you must call <code>ResolveAppVersionResources</code> API.</p> </li> </ul> </note>"
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:3434:        "testRunStatus",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:3446:        "testRunStatus":{
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:3447:          "shape":"AutomatedReasoningPolicyTestRunStatus",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:3454:        "testRunResult":{
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:3455:          "shape":"AutomatedReasoningPolicyTestRunResult",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:3469:    "AutomatedReasoningPolicyTestRunResult":{
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:3476:    "AutomatedReasoningPolicyTestRunStatus":{
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4168:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4203:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4335:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than once. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon S3 User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4383:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than once. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon S3 User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4422:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4519:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4559:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4653:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4695:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:4793:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the Amazon S3 User Guide.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:5885:          "documentation":"<p>The Amazon Resource Name (ARN) of the Automated Reasoning policy to export. Can be either the unversioned ARN for the draft policy or a versioned ARN for a specific policy version.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:6410:          "documentation":"<p>The Amazon Resource Name (ARN) of the Automated Reasoning policy to retrieve. Can be either the unversioned ARN for the draft policy or an ARN for a specific policy version.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:7380:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:10979:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:11281:          "documentation":"<p>The template for the prompt that's sent to the model for response generation. You can include prompt placeholders, which become replaced before the prompt is sent to the model to provide instructions and context to the model. In addition, you can include XML tags to delineate meaningful sections of the prompt template.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html\">Knowledge base prompt template</a> and <a href=\"https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/use-xml-tags\">Use XML tags with Anthropic Claude models</a>.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:11729:          "documentation":"<p>The type of resource that contains your data for retrieving information and generating responses.</p> <p>If you choose to use <code>EXTERNAL_SOURCES</code>, then currently only Claude 3 Sonnet models for knowledge bases are supported.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock/2023-04-20/service-2.json:12441:          "documentation":"<p>The Amazon Resource Name (ARN) of the Automated Reasoning policy to update. This must be the ARN of a draft policy.</p>",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:30:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:51:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:73:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:93:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:113:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:173:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:194:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:215:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:235:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:386:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:408:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:429:        {"shape":"DryRunOperation"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:511:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:512:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:542:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:543:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:573:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:574:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:598:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:599:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:648:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:649:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:728:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:729:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:759:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:760:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:790:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:791:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:826:    "DryRun":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:827:    "DryRunOperation":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:832:      "documentation":"<p>Exception raised to indicate a successfully authorized action when the <code>DryRun</code> flag is set to \"true\".</p>",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:859:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:860:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:1263:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:1264:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:1304:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:1305:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:1369:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:1370:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/mgh/2017-05-31/service-2.json:1544:      "documentation":"<p>Exception raised to indicate a request was not authorized when the <code>DryRun</code> flag is set to \"true\".</p>",
./backend/aws/dist/awscli/botocore/data/meteringmarketplace/2016-01-14/service-2.json:287:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/meteringmarketplace/2016-01-14/service-2.json:289:          "documentation":"<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns <code>DryRunOperation</code>; otherwise, it returns <code>UnauthorizedException</code>. Defaults to <code>false</code> if not specified.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/paginators-1.json:9:    "ListDataSourceRunActivities": {
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/paginators-1.json:15:    "ListDataSourceRuns": {
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/paginators-1.json:129:    "ListMetadataGenerationRuns": {
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/paginators-1.json:195:    "ListJobRuns": {
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:122:    "CancelMetadataGenerationRun":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:123:      "name":"CancelMetadataGenerationRun",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:129:      "input":{"shape":"CancelMetadataGenerationRunInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:130:      "output":{"shape":"CancelMetadataGenerationRunOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1388:    "GetDataSourceRun":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1389:      "name":"GetDataSourceRun",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1395:      "input":{"shape":"GetDataSourceRunInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1396:      "output":{"shape":"GetDataSourceRunOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1658:    "GetJobRun":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1659:      "name":"GetJobRun",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1662:        "requestUri":"/v2/domains/{domainIdentifier}/jobRuns/{identifier}",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1665:      "input":{"shape":"GetJobRunInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1666:      "output":{"shape":"GetJobRunOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1734:    "GetMetadataGenerationRun":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1735:      "name":"GetMetadataGenerationRun",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1741:      "input":{"shape":"GetMetadataGenerationRunInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:1742:      "output":{"shape":"GetMetadataGenerationRunOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2036:    "ListDataSourceRunActivities":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2037:      "name":"ListDataSourceRunActivities",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2043:      "input":{"shape":"ListDataSourceRunActivitiesInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2044:      "output":{"shape":"ListDataSourceRunActivitiesOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2057:    "ListDataSourceRuns":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2058:      "name":"ListDataSourceRuns",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2064:      "input":{"shape":"ListDataSourceRunsInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2065:      "output":{"shape":"ListDataSourceRunsOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2248:    "ListJobRuns":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2249:      "name":"ListJobRuns",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2255:      "input":{"shape":"ListJobRunsInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2256:      "output":{"shape":"ListJobRunsOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2304:    "ListMetadataGenerationRuns":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2305:      "name":"ListMetadataGenerationRuns",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2311:      "input":{"shape":"ListMetadataGenerationRunsInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2312:      "output":{"shape":"ListMetadataGenerationRunsOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2807:    "StartDataSourceRun":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2808:      "name":"StartDataSourceRun",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2814:      "input":{"shape":"StartDataSourceRunInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2815:      "output":{"shape":"StartDataSourceRunOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2829:    "StartMetadataGenerationRun":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2830:      "name":"StartMetadataGenerationRun",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2836:      "input":{"shape":"StartMetadataGenerationRunInput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:2837:      "output":{"shape":"StartMetadataGenerationRunOutput"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:4670:    "CancelMetadataGenerationRunInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:4684:          "shape":"MetadataGenerationRunIdentifier",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:4691:    "CancelMetadataGenerationRunOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:6056:          "documentation":"<p>Specifies the configuration of the data source. It can be set to either <code>glueRunConfiguration</code> or <code>redshiftRunConfiguration</code>.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:6133:          "documentation":"<p>Specifies the configuration of the data source. It can be set to either <code>glueRunConfiguration</code> or <code>redshiftRunConfiguration</code>.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:6167:        "lastRunAt":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:6171:        "lastRunErrorMessage":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:6175:        "lastRunStatus":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:6176:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8245:        "glueRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8246:          "shape":"GlueRunConfigurationInput",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8249:        "redshiftRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8250:          "shape":"RedshiftRunConfigurationInput",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8253:        "sageMakerRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8254:          "shape":"SageMakerRunConfigurationInput",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8264:        "glueRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8265:          "shape":"GlueRunConfigurationOutput",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8268:        "redshiftRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8269:          "shape":"RedshiftRunConfigurationOutput",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8272:        "sageMakerRunConfiguration":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8273:          "shape":"SageMakerRunConfigurationOutput",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8311:    "DataSourceRunActivities":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8313:      "member":{"shape":"DataSourceRunActivity"}
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8315:    "DataSourceRunActivity":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8320:        "dataSourceRunId",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8339:        "dataSourceRunId":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8340:          "shape":"DataSourceRunId",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8371:    "DataSourceRunId":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8375:    "DataSourceRunLineageSummary":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8385:    "DataSourceRunStatus":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8395:    "DataSourceRunSummaries":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8397:      "member":{"shape":"DataSourceRunSummary"}
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8399:    "DataSourceRunSummary":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8421:          "shape":"DataSourceRunId",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8425:          "shape":"DataSourceRunLineageSummary",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8432:        "runStatisticsForAssets":{"shape":"RunStatisticsForAssets"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8438:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8446:          "shape":"DataSourceRunType",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8456:    "DataSourceRunType":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8518:        "lastRunAssetCount":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8522:        "lastRunAt":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8526:        "lastRunErrorMessage":{"shape":"DataSourceErrorMessage"},
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8527:        "lastRunStatus":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8528:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8813:        "lastRunAt":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8817:        "lastRunErrorMessage":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8821:        "lastRunStatus":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:8822:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:10399:        "openLineageRunEventSummary":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:10400:          "shape":"OpenLineageRunEventSummary",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11366:        "lastRunAssetCount":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11370:        "lastRunAt":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11374:        "lastRunErrorMessage":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11378:        "lastRunStatus":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11379:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11420:    "GetDataSourceRunInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11434:          "shape":"DataSourceRunId",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11441:    "GetDataSourceRunOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11475:          "shape":"DataSourceRunId",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11479:          "shape":"DataSourceRunLineageSummary",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11487:          "shape":"RunStatisticsForAssets",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11495:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:11503:          "shape":"DataSourceRunType",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12425:    "GetJobRunInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12439:          "shape":"RunIdentifier",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12446:    "GetJobRunOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12458:          "shape":"JobRunDetails",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12470:          "shape":"JobRunError",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12486:          "shape":"JobRunMode",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12494:          "shape":"JobRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12744:    "GetMetadataGenerationRunInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12758:          "shape":"MetadataGenerationRunIdentifier",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12765:    "GetMetadataGenerationRunOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12786:          "shape":"MetadataGenerationRunIdentifier",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12794:          "shape":"MetadataGenerationRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12798:          "shape":"MetadataGenerationRunTarget",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:12802:          "shape":"MetadataGenerationRunType",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14022:    "GlueRunConfigurationInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14031:          "shape":"GlueRunConfigurationInputCatalogNameString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14035:          "shape":"GlueRunConfigurationInputDataAccessRoleString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14045:    "GlueRunConfigurationInputCatalogNameString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14050:    "GlueRunConfigurationInputDataAccessRoleString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14054:    "GlueRunConfigurationOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14059:          "shape":"GlueRunConfigurationOutputAccountIdString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14067:          "shape":"GlueRunConfigurationOutputCatalogNameString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14071:          "shape":"GlueRunConfigurationOutputDataAccessRoleString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14075:          "shape":"GlueRunConfigurationOutputRegionString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14085:    "GlueRunConfigurationOutputAccountIdString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14091:    "GlueRunConfigurationOutputCatalogNameString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14096:    "GlueRunConfigurationOutputDataAccessRoleString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14100:    "GlueRunConfigurationOutputRegionString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14454:    "JobRunDetails":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14457:        "lineageRunDetails":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14458:          "shape":"LineageRunDetails",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14465:    "JobRunError":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14476:    "JobRunMode":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14483:    "JobRunStatus":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14496:    "JobRunSummaries":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14498:      "member":{"shape":"JobRunSummary"}
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14500:    "JobRunSummary":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14520:          "shape":"JobRunError",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14536:          "shape":"JobRunMode",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14544:          "shape":"JobRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14864:    "LineageRunDetails":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14867:        "sqlQueryRunDetails":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14868:          "shape":"LineageSqlQueryRunDetails",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:14874:    "LineageSqlQueryRunDetails":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15238:    "ListDataSourceRunActivitiesInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15252:          "shape":"DataSourceRunId",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15259:          "documentation":"<p>The maximum number of activities to return in a single call to <code>ListDataSourceRunActivities</code>. When the number of activities to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15265:          "documentation":"<p>When the number of activities is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of activities, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15277:    "ListDataSourceRunActivitiesOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15282:          "shape":"DataSourceRunActivities",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15283:          "documentation":"<p>The results of the <code>ListDataSourceRunActivities</code> action.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15287:          "documentation":"<p>When the number of activities is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of activities, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15291:    "ListDataSourceRunsInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15306:          "documentation":"<p>The identifier of the Amazon DataZone domain in which to invoke the <code>ListDataSourceRuns</code> action.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15312:          "documentation":"<p>The maximum number of runs to return in a single call to <code>ListDataSourceRuns</code>. When the number of runs to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15318:          "documentation":"<p>When the number of runs is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of runs, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15323:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15330:    "ListDataSourceRunsOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15335:          "shape":"DataSourceRunSummaries",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15336:          "documentation":"<p>The results of the <code>ListDataSourceRuns</code> action.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15340:          "documentation":"<p>When the number of runs is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of runs, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15853:    "ListJobRunsInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15867:          "shape":"ListJobRunsInputJobIdentifierString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15874:          "documentation":"<p>The maximum number of job runs to return in a single call to ListJobRuns. When the number of job runs to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListJobRuns to list the next set of job runs.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15880:          "documentation":"<p>When the number of job runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of job runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListJobRuns to list the next set of job runs.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15891:          "shape":"JobRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15898:    "ListJobRunsInputJobIdentifierString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15902:    "ListJobRunsOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15906:          "shape":"JobRunSummaries",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15907:          "documentation":"<p>The results of the ListJobRuns action.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:15911:          "documentation":"<p>When the number of job runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of job runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListJobRuns to list the next set of job runs.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16046:    "ListMetadataGenerationRunsInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16058:          "documentation":"<p>The maximum number of metadata generation runs to return in a single call to ListMetadataGenerationRuns. When the number of metadata generation runs to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16064:          "documentation":"<p>When the number of metadata generation runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of metadata generation runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16069:          "shape":"MetadataGenerationRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16075:          "shape":"MetadataGenerationRunType",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16082:    "ListMetadataGenerationRunsOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16086:          "shape":"MetadataGenerationRuns",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16087:          "documentation":"<p>The results of the ListMetadataGenerationRuns action.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:16091:          "documentation":"<p>When the number of metadata generation runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of metadata generation runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>"
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17163:    "MetadataGenerationRunIdentifier":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17167:    "MetadataGenerationRunItem":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17188:          "shape":"MetadataGenerationRunIdentifier",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17196:          "shape":"MetadataGenerationRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17200:          "shape":"MetadataGenerationRunTarget",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17204:          "shape":"MetadataGenerationRunType",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17210:    "MetadataGenerationRunStatus":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17220:    "MetadataGenerationRunTarget":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17242:    "MetadataGenerationRunType":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17246:    "MetadataGenerationRuns":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17248:      "member":{"shape":"MetadataGenerationRunItem"}
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17531:    "OpenLineageRunEventSummary":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17535:          "shape":"OpenLineageRunState",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:17557:    "OpenLineageRunState":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18584:    "RedshiftRunConfigurationInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18589:          "shape":"RedshiftRunConfigurationInputDataAccessRoleString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18601:    "RedshiftRunConfigurationInputDataAccessRoleString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18605:    "RedshiftRunConfigurationOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18613:          "shape":"RedshiftRunConfigurationOutputAccountIdString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18617:          "shape":"RedshiftRunConfigurationOutputDataAccessRoleString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18623:          "shape":"RedshiftRunConfigurationOutputRegionString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18633:    "RedshiftRunConfigurationOutputAccountIdString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18639:    "RedshiftRunConfigurationOutputDataAccessRoleString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:18643:    "RedshiftRunConfigurationOutputRegionString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:19469:    "RunIdentifier":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:19473:    "RunStatisticsForAssets":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:19585:    "SageMakerRunConfigurationInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:19596:    "SageMakerRunConfigurationOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:19601:          "shape":"SageMakerRunConfigurationOutputAccountIdString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:19605:          "shape":"SageMakerRunConfigurationOutputRegionString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:19615:    "SageMakerRunConfigurationOutputAccountIdString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:19621:    "SageMakerRunConfigurationOutputRegionString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20225:          "shape":"SparkEmrPropertiesInputRuntimeRoleString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20260:    "SparkEmrPropertiesInputRuntimeRoleString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20343:          "shape":"SparkEmrPropertiesPatchRuntimeRoleString",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20378:    "SparkEmrPropertiesPatchRuntimeRoleString":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20516:    "StartDataSourceRunInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20542:    "StartDataSourceRunOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20576:          "shape":"DataSourceRunId",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20584:          "shape":"RunStatisticsForAssets",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20592:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20600:          "shape":"DataSourceRunType",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20609:    "StartMetadataGenerationRunInput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20634:          "shape":"MetadataGenerationRunTarget",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20638:          "shape":"MetadataGenerationRunType",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20643:    "StartMetadataGenerationRunOutput":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20663:          "shape":"MetadataGenerationRunIdentifier",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20671:          "shape":"MetadataGenerationRunStatus",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:20675:          "shape":"MetadataGenerationRunType",
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:22163:        "lastRunAt":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:22167:        "lastRunErrorMessage":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:22171:        "lastRunStatus":{
./backend/aws/dist/awscli/botocore/data/datazone/2018-05-10/service-2.json:22172:          "shape":"DataSourceRunStatus",
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:858:        "connectorRuntimeSettings":{
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:859:          "shape":"ConnectorRuntimeSettingList",
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:1510:    "ConnectorRuntimeSetting":{
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:1518:          "shape":"ConnectorRuntimeSettingDataType",
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:1534:          "shape":"ConnectorRuntimeSettingScope",
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:1544:    "ConnectorRuntimeSettingDataType":{
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:1549:    "ConnectorRuntimeSettingList":{
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:1551:      "member":{"shape":"ConnectorRuntimeSetting"}
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:1553:    "ConnectorRuntimeSettingScope":{
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:2283:        "lastRunExecutionDetails":{
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:2319:        "lastRunMetadataCatalogDetails":{
./backend/aws/dist/awscli/botocore/data/appflow/2020-08-23/service-2.json:2819:        "lastRunExecutionDetails":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/paginators-1.json:3:    "ListJobRuns": {
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/paginators-1.json:7:      "result_key": "jobRuns"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:17:    "CancelJobRun":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:18:      "name":"CancelJobRun",
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:21:        "requestUri":"/virtualclusters/{virtualClusterId}/jobruns/{jobRunId}"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:23:      "input":{"shape":"CancelJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:24:      "output":{"shape":"CancelJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:44:      "documentation":"<p>Creates a job template. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.</p>"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:103:      "documentation":"<p>Deletes a job template. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.</p>"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:133:    "DescribeJobRun":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:134:      "name":"DescribeJobRun",
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:137:        "requestUri":"/virtualclusters/{virtualClusterId}/jobruns/{jobRunId}"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:139:      "input":{"shape":"DescribeJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:140:      "output":{"shape":"DescribeJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:161:      "documentation":"<p>Displays detailed information about a specified job template. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.</p>"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:224:    "ListJobRuns":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:225:      "name":"ListJobRuns",
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:230:      "input":{"shape":"ListJobRunsRequest"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:231:      "output":{"shape":"ListJobRunsResponse"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:250:      "documentation":"<p>Lists job templates based on a set of parameters. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.</p>"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:309:    "StartJobRun":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:310:      "name":"StartJobRun",
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:315:      "input":{"shape":"StartJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:316:      "output":{"shape":"StartJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:389:    "CancelJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:400:          "locationName":"jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:410:    "CancelJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:580:          "documentation":"<p>The job template data which holds values of StartJobRun API request.</p>"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:877:    "DescribeJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:888:          "locationName":"jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:898:    "DescribeJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:901:        "jobRun":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:902:          "shape":"JobRun",
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1279:    "JobRun":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1299:          "shape":"JobRunState",
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1357:    "JobRunState":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1369:    "JobRunStates":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1371:      "member":{"shape":"JobRunState"},
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1374:    "JobRuns":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1376:      "member":{"shape":"JobRun"}
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1408:          "documentation":"<p>The job template data which holds values of StartJobRun API request.</p>"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1419:      "documentation":"<p>This entity describes a job template. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.</p>"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1457:      "documentation":"<p>The values of StartJobRun API requests used in job runs started using the job template.</p>"
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1493:    "ListJobRunsRequest":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1522:          "shape":"JobRunStates",
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1541:    "ListJobRunsResponse":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1544:        "jobRuns":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:1545:          "shape":"JobRuns",
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:2145:    "StartJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:2201:    "StartJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/emr-containers/2020-10-01/service-2.json:2466:  "documentation":"<p>Amazon EMR on EKS provides a deployment option for Amazon EMR that allows you to run open-source big data frameworks on Amazon Elastic Kubernetes Service (Amazon EKS). With this deployment option, you can focus on running analytics workloads while Amazon EMR on EKS builds, configures, and manages containers for open-source applications. For more information about Amazon EMR on EKS concepts and tasks, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/emr-eks.html\">What is Amazon EMR on EKS</a>.</p> <p> <i>Amazon EMR containers</i> is the API name for Amazon EMR on EKS. The <code>emr-containers</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR on EKS. For example, <code>aws emr-containers start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR on EKS. For example, <code>\"Action\": [ \"emr-containers:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR on EKS</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR on EKS service endpoints. For example, <code>emr-containers.us-east-2.amazonaws.com</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/service-quotas.html#service-endpoints\">Amazon EMR on EKSService Endpoints</a>.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:77:      "documentation":"<p>Creates a single GuardDuty detector. A detector is a resource that represents the GuardDuty service. To start using GuardDuty, you must create a detector in each Region where you enable the service. You can have only one detector per account per Region. All data sources are enabled in a new detector by default.</p> <ul> <li> <p>When you don't specify any <code>features</code>, with an exception to <code>RUNTIME_MONITORING</code>, all the optional features are enabled by default.</p> </li> <li> <p>When you specify some of the <code>features</code>, any feature that is not specified in the API call gets enabled by default, with an exception to <code>RUNTIME_MONITORING</code>. </p> </li> </ul> <p>Specifying both EKS Runtime Monitoring (<code>EKS_RUNTIME_MONITORING</code>) and Runtime Monitoring (<code>RUNTIME_MONITORING</code>) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html\">Runtime Monitoring</a>.</p> <p>There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html\">Regions and endpoints</a>.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:534:      "documentation":"<p>Retrieves aggregated statistics for your account. If you are a GuardDuty administrator, you can retrieve the statistics for all the resources associated with the active member accounts in your organization who have enabled Runtime Monitoring and have the GuardDuty security agent running on their resources.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:822:      "documentation":"<p>Lists coverage details for your GuardDuty account. If you're a GuardDuty administrator, you can retrieve all resources associated with the active member accounts in your organization.</p> <p>Make sure the accounts have Runtime Monitoring enabled and GuardDuty agent running on their resources.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:1127:      "documentation":"<p>Updates the GuardDuty detector specified by the detector ID.</p> <p>Specifying both EKS Runtime Monitoring (<code>EKS_RUNTIME_MONITORING</code>) and Runtime Monitoring (<code>RUNTIME_MONITORING</code>) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html\">Runtime Monitoring</a>.</p> <p>There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html\">Regions and endpoints</a>.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:1219:      "documentation":"<p>Contains information on member accounts to be updated.</p> <p>Specifying both EKS Runtime Monitoring (<code>EKS_RUNTIME_MONITORING</code>) and Runtime Monitoring (<code>RUNTIME_MONITORING</code>) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html\">Runtime Monitoring</a>.</p> <p>There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html\">Regions and endpoints</a>.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:1234:      "documentation":"<p>Configures the delegated administrator account with the provided values. You must provide a value for either <code>autoEnableOrganizationMembers</code> or <code>autoEnable</code>, but not both. </p> <p>Specifying both EKS Runtime Monitoring (<code>EKS_RUNTIME_MONITORING</code>) and Runtime Monitoring (<code>RUNTIME_MONITORING</code>) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html\">Runtime Monitoring</a>.</p> <p>There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html\">Regions and endpoints</a>.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:2157:        "ContainerRuntime":{
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:2160:          "locationName":"containerRuntime"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:3876:      "documentation":"<p>Contains information about a GuardDuty feature.</p> <p>Specifying both EKS Runtime Monitoring (<code>EKS_RUNTIME_MONITORING</code>) and Runtime Monitoring (<code>RUNTIME_MONITORING</code>) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html\">Runtime Monitoring</a>.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:3902:      "documentation":"<p>Contains information about a GuardDuty feature.</p> <p>Specifying both EKS Runtime Monitoring (<code>EKS_RUNTIME_MONITORING</code>) and Runtime Monitoring (<code>RUNTIME_MONITORING</code>) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html\">Runtime Monitoring</a>.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:4278:        "RunningTasksCount":{
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:4480:          "documentation":"<p>Runtime coverage issues identified for the resource running on Amazon Web Services Fargate.</p>",
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:7862:          "documentation":"<p>The name of the additional configuration that will be configured for the organization. These values are applicable to only Runtime Monitoring protection plan.</p>",
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:7871:      "documentation":"<p>A list of additional configurations which will be configured for the organization. </p> <p>Additional configuration applies to only GuardDuty Runtime Monitoring protection plan.</p>"
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:7878:          "documentation":"<p>The name of the additional configuration that is configured for the member accounts within the organization. These values are applicable to only Runtime Monitoring protection plan.</p>",
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:8952:    "RuntimeContext":{
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:8985:        "RuncBinaryPath":{
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:9083:    "RuntimeDetails":{
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:9092:          "shape":"RuntimeContext",
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:9757:        "RuntimeDetails":{
./backend/aws/dist/awscli/botocore/data/guardduty/2017-11-28/service-2.json:9758:          "shape":"RuntimeDetails",
./backend/aws/dist/awscli/botocore/data/inspector2/2020-06-08/service-2.json:2110:          "shape":"Runtime",
./backend/aws/dist/awscli/botocore/data/inspector2/2020-06-08/service-2.json:4006:        "lambdaFunctionRuntime":{
./backend/aws/dist/awscli/botocore/data/inspector2/2020-06-08/service-2.json:5738:        "lambdaFunctionRuntime":{
./backend/aws/dist/awscli/botocore/data/inspector2/2020-06-08/service-2.json:6971:          "shape":"Runtime",
./backend/aws/dist/awscli/botocore/data/inspector2/2020-06-08/service-2.json:8930:    "Runtime":{
./backend/aws/dist/awscli/botocore/data/workspaces-instances/2022-07-26/service-2.json:1332:          "shape":"RunInstancesMonitoringEnabled",
./backend/aws/dist/awscli/botocore/data/workspaces-instances/2022-07-26/service-2.json:1558:    "RunInstancesMonitoringEnabled":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/paginators-1.json:3:    "ListAgentRuntimeEndpoints": {
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/paginators-1.json:9:    "ListAgentRuntimeVersions": {
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/paginators-1.json:13:      "result_key": "agentRuntimes"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/paginators-1.json:15:    "ListAgentRuntimes": {
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/paginators-1.json:19:      "result_key": "agentRuntimes"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:16:    "CreateAgentRuntime":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:17:      "name":"CreateAgentRuntime",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:23:      "input":{"shape":"CreateAgentRuntimeRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:24:      "output":{"shape":"CreateAgentRuntimeResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:36:    "CreateAgentRuntimeEndpoint":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:37:      "name":"CreateAgentRuntimeEndpoint",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:40:        "requestUri":"/runtimes/{agentRuntimeId}/runtime-endpoints/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:43:      "input":{"shape":"CreateAgentRuntimeEndpointRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:44:      "output":{"shape":"CreateAgentRuntimeEndpointResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:229:    "DeleteAgentRuntime":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:230:      "name":"DeleteAgentRuntime",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:233:        "requestUri":"/runtimes/{agentRuntimeId}/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:236:      "input":{"shape":"DeleteAgentRuntimeRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:237:      "output":{"shape":"DeleteAgentRuntimeResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:248:    "DeleteAgentRuntimeEndpoint":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:249:      "name":"DeleteAgentRuntimeEndpoint",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:252:        "requestUri":"/runtimes/{agentRuntimeId}/runtime-endpoints/{endpointName}/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:255:      "input":{"shape":"DeleteAgentRuntimeEndpointRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:256:      "output":{"shape":"DeleteAgentRuntimeEndpointResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:428:    "GetAgentRuntime":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:429:      "name":"GetAgentRuntime",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:432:        "requestUri":"/runtimes/{agentRuntimeId}/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:435:      "input":{"shape":"GetAgentRuntimeRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:436:      "output":{"shape":"GetAgentRuntimeResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:446:    "GetAgentRuntimeEndpoint":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:447:      "name":"GetAgentRuntimeEndpoint",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:450:        "requestUri":"/runtimes/{agentRuntimeId}/runtime-endpoints/{endpointName}/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:453:      "input":{"shape":"GetAgentRuntimeEndpointRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:454:      "output":{"shape":"GetAgentRuntimeEndpointResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:632:    "ListAgentRuntimeEndpoints":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:633:      "name":"ListAgentRuntimeEndpoints",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:636:        "requestUri":"/runtimes/{agentRuntimeId}/runtime-endpoints/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:639:      "input":{"shape":"ListAgentRuntimeEndpointsRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:640:      "output":{"shape":"ListAgentRuntimeEndpointsResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:649:    "ListAgentRuntimeVersions":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:650:      "name":"ListAgentRuntimeVersions",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:653:        "requestUri":"/runtimes/{agentRuntimeId}/versions/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:656:      "input":{"shape":"ListAgentRuntimeVersionsRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:657:      "output":{"shape":"ListAgentRuntimeVersionsResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:667:    "ListAgentRuntimes":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:668:      "name":"ListAgentRuntimes",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:674:      "input":{"shape":"ListAgentRuntimesRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:675:      "output":{"shape":"ListAgentRuntimesResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:847:    "UpdateAgentRuntime":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:848:      "name":"UpdateAgentRuntime",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:851:        "requestUri":"/runtimes/{agentRuntimeId}/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:854:      "input":{"shape":"UpdateAgentRuntimeRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:855:      "output":{"shape":"UpdateAgentRuntimeResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:868:    "UpdateAgentRuntimeEndpoint":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:869:      "name":"UpdateAgentRuntimeEndpoint",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:872:        "requestUri":"/runtimes/{agentRuntimeId}/runtime-endpoints/{endpointName}/",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:875:      "input":{"shape":"UpdateAgentRuntimeEndpointRequest"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:876:      "output":{"shape":"UpdateAgentRuntimeEndpointResponse"},
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1036:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1037:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1038:        "agentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1039:        "agentRuntimeName",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1045:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1046:          "shape":"AgentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1049:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1050:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1053:        "agentRuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1054:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1057:        "agentRuntimeName":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1058:          "shape":"AgentRuntimeName",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1091:        "agentRuntimeEndpointArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1092:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1104:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1108:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1111:        "agentRuntimeEndpointArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1112:          "shape":"AgentRuntimeEndpointArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1115:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1116:          "shape":"AgentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1124:          "shape":"AgentRuntimeEndpointId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1162:    "AgentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1166:    "AgentRuntimeEndpointArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1170:    "AgentRuntimeEndpointId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1174:    "AgentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1178:    "AgentRuntimeName":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1182:    "AgentRuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1558:          "shape":"RuntimeContainerUri",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1564:    "CreateAgentRuntimeEndpointRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1567:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1571:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1572:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1575:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1581:        "agentRuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1582:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1596:    "CreateAgentRuntimeEndpointResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1600:        "agentRuntimeEndpointArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1601:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1607:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1610:        "agentRuntimeEndpointArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1611:          "shape":"AgentRuntimeEndpointArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1614:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1615:          "shape":"AgentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1628:    "CreateAgentRuntimeRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1631:        "agentRuntimeName",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1632:        "agentRuntimeArtifact",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1637:        "agentRuntimeName":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1638:          "shape":"AgentRuntimeName",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1645:        "agentRuntimeArtifact":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1673:    "CreateAgentRuntimeResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1676:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1677:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1678:        "agentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1683:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1684:          "shape":"AgentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1691:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1692:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1695:        "agentRuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:1696:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2477:    "DeleteAgentRuntimeEndpointRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2480:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2484:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2485:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2488:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2505:    "DeleteAgentRuntimeEndpointResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2515:    "DeleteAgentRuntimeRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2517:      "required":["agentRuntimeId"],
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2519:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2520:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2523:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2527:    "DeleteAgentRuntimeResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2976:    "GetAgentRuntimeEndpointRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2979:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2983:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2984:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2987:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:2997:    "GetAgentRuntimeEndpointResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3000:        "agentRuntimeEndpointArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3001:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3010:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3014:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3017:        "agentRuntimeEndpointArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3018:          "shape":"AgentRuntimeEndpointArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3021:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3022:          "shape":"AgentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3050:          "shape":"AgentRuntimeEndpointId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3055:    "GetAgentRuntimeRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3057:      "required":["agentRuntimeId"],
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3059:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3060:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3063:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3065:        "agentRuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3066:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3073:    "GetAgentRuntimeResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3076:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3077:        "agentRuntimeName",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3078:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3079:        "agentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3087:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3088:          "shape":"AgentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3095:        "agentRuntimeName":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3096:          "shape":"AgentRuntimeName",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3103:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3104:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3107:        "agentRuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3108:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3123:        "agentRuntimeArtifact":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3725:    "ListAgentRuntimeEndpointsRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3727:      "required":["agentRuntimeId"],
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3729:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3730:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3733:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3749:    "ListAgentRuntimeEndpointsResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3763:    "ListAgentRuntimeVersionsRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3765:      "required":["agentRuntimeId"],
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3767:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3768:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3771:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3787:    "ListAgentRuntimeVersionsResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3789:      "required":["agentRuntimes"],
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3791:        "agentRuntimes":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3801:    "ListAgentRuntimesRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3818:    "ListAgentRuntimesResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3820:      "required":["agentRuntimes"],
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:3822:        "agentRuntimes":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:4836:    "RuntimeContainerUri":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5457:    "UpdateAgentRuntimeEndpointRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5460:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5464:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5465:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5468:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5476:        "agentRuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5477:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5491:    "UpdateAgentRuntimeEndpointResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5494:        "agentRuntimeEndpointArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5495:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5502:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5506:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5509:        "agentRuntimeEndpointArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5510:          "shape":"AgentRuntimeEndpointArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5513:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5514:          "shape":"AgentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5531:    "UpdateAgentRuntimeRequest":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5534:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5535:        "agentRuntimeArtifact",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5540:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5541:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5544:          "locationName":"agentRuntimeId"
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5550:        "agentRuntimeArtifact":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5578:    "UpdateAgentRuntimeResponse":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5581:        "agentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5582:        "agentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5583:        "agentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5589:        "agentRuntimeArn":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5590:          "shape":"AgentRuntimeArn",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5593:        "agentRuntimeId":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5594:          "shape":"AgentRuntimeId",
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5601:        "agentRuntimeVersion":{
./backend/aws/dist/awscli/botocore/data/bedrock-agentcore-control/2023-06-05/service-2.json:5602:          "shape":"AgentRuntimeVersion",
./backend/aws/dist/awscli/botocore/data/cleanroomsml/2023-09-06/service-2.json:2014:          "documentation":"<p>The entrypoint script for a Docker container used to run a training job. This script takes precedence over the default train processing instructions. See How Amazon SageMaker Runs Your Training Image for additional information. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-training-algo-dockerfile.html\">How Sagemaker runs your training image</a>.</p>"
./backend/aws/dist/awscli/botocore/data/cleanroomsml/2023-09-06/service-2.json:2018:          "documentation":"<p>The arguments for a container used to run a training job. See How Amazon SageMaker Runs Your Training Image for additional information. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-training-algo-dockerfile.html\">How Sagemaker runs your training image</a>.</p>"
./backend/aws/dist/awscli/botocore/data/cleanroomsml/2023-09-06/service-2.json:5785:        "maxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/cleanroomsml/2023-09-06/service-2.json:5786:          "shape":"StoppingConditionMaxRuntimeInSecondsInteger",
./backend/aws/dist/awscli/botocore/data/cleanroomsml/2023-09-06/service-2.json:5792:    "StoppingConditionMaxRuntimeInSecondsInteger":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/paginators-1.json:15:    "ListTestRunSteps": {
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/paginators-1.json:19:      "result_key": "testRunSteps"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/paginators-1.json:21:    "ListTestRunTestCases": {
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/paginators-1.json:25:      "result_key": "testRunTestCases"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/paginators-1.json:27:    "ListTestRuns": {
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/paginators-1.json:31:      "result_key": "testRuns"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:116:    "DeleteTestRun":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:117:      "name":"DeleteTestRun",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:120:        "requestUri":"/testruns/{testRunId}",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:123:      "input":{"shape":"DeleteTestRunRequest"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:124:      "output":{"shape":"DeleteTestRunResponse"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:191:    "GetTestRunStep":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:192:      "name":"GetTestRunStep",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:195:        "requestUri":"/testruns/{testRunId}/steps/{stepName}",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:198:      "input":{"shape":"GetTestRunStepRequest"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:199:      "output":{"shape":"GetTestRunStepResponse"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:281:    "ListTestRunSteps":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:282:      "name":"ListTestRunSteps",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:285:        "requestUri":"/testruns/{testRunId}/steps",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:288:      "input":{"shape":"ListTestRunStepsRequest"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:289:      "output":{"shape":"ListTestRunStepsResponse"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:299:    "ListTestRunTestCases":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:300:      "name":"ListTestRunTestCases",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:303:        "requestUri":"/testruns/{testRunId}/testcases",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:306:      "input":{"shape":"ListTestRunTestCasesRequest"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:307:      "output":{"shape":"ListTestRunTestCasesResponse"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:317:    "ListTestRuns":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:318:      "name":"ListTestRuns",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:324:      "input":{"shape":"ListTestRunsRequest"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:325:      "output":{"shape":"ListTestRunsResponse"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:353:    "StartTestRun":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:354:      "name":"StartTestRun",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:360:      "input":{"shape":"StartTestRunRequest"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:361:      "output":{"shape":"StartTestRunResponse"},
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1160:    "DeleteTestRunRequest":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1162:      "required":["testRunId"],
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1164:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1168:          "locationName":"testRunId"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1172:    "DeleteTestRunResponse":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1405:    "GetTestRunStepRequest":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1408:        "testRunId",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1412:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1416:          "locationName":"testRunId"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1438:    "GetTestRunStepResponse":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1442:        "testRunId",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1451:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1480:          "shape":"StepRunStatus",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1495:        "stepRunSummary":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1496:          "shape":"StepRunSummary",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1752:    "ListTestRunStepsRequest":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1754:      "required":["testRunId"],
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1756:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1760:          "locationName":"testRunId"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1788:    "ListTestRunStepsResponse":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1790:      "required":["testRunSteps"],
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1792:        "testRunSteps":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1793:          "shape":"TestRunStepSummaryList",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1802:    "ListTestRunTestCasesRequest":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1804:      "required":["testRunId"],
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1806:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1810:          "locationName":"testRunId"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1826:    "ListTestRunTestCasesResponse":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1828:      "required":["testRunTestCases"],
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1830:        "testRunTestCases":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1831:          "shape":"TestCaseRunSummaryList",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1840:    "ListTestRunsRequest":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1849:        "testRunIds":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1850:          "shape":"TestRunIdList",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1869:    "ListTestRunsResponse":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1871:      "required":["testRuns"],
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1873:        "testRuns":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1874:          "shape":"TestRunSummaryList",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:1953:          "shape":"M2ManagedRuntime",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2061:          "shape":"M2ManagedRuntime",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2071:    "M2ManagedRuntime":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2099:          "shape":"M2NonManagedRuntime",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2145:          "shape":"M2NonManagedRuntime",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2197:          "shape":"M2NonManagedRuntime",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2207:    "M2NonManagedRuntime":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2541:    "StartTestRunRequest":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2564:    "StartTestRunResponse":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2567:        "testRunId",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2568:        "testRunStatus"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2571:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2575:        "testRunStatus":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2576:          "shape":"TestRunStatus",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2628:    "StepRunStatus":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2633:        "Running"
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2636:    "StepRunSummary":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2848:    "TestCaseRunStatus":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2852:        "Running",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2856:    "TestCaseRunSummary":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2861:        "testRunId",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2874:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2879:          "shape":"TestCaseRunStatus",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2897:    "TestCaseRunSummaryList":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:2899:      "member":{"shape":"TestCaseRunSummary"}
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3047:    "TestRunIdList":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3051:    "TestRunStatus":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3055:        "Running",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3060:    "TestRunStepSummary":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3064:        "testRunId",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3073:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3102:          "shape":"StepRunStatus",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3120:    "TestRunStepSummaryList":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3122:      "member":{"shape":"TestRunStepSummary"}
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3124:    "TestRunSummary":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3127:        "testRunId",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3128:        "testRunArn",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3135:        "testRunId":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3139:        "testRunArn":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3160:          "shape":"TestRunStatus",
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3178:    "TestRunSummaryList":{
./backend/aws/dist/awscli/botocore/data/apptest/2022-12-06/service-2.json:3180:      "member":{"shape":"TestRunSummary"}
./backend/aws/dist/awscli/botocore/data/transfer/2018-11-05/service-2.json:5007:          "documentation":"<p>The public portion of the host key, or keys, that are used to identify the external server to which you are connecting. You can use the <code>ssh-keyscan</code> command against the SFTP server to retrieve the necessary key.</p> <note> <p> <code>TrustedHostKeys</code> is optional for <code>CreateConnector</code>. If not provided, you can use <code>TestConnection</code> to retrieve the server host key during the initial connection attempt, and subsequently update the connector with the observed host key.</p> </note> <p>The three standard SSH public key format elements are <code>&lt;key type&gt;</code>, <code>&lt;body base64&gt;</code>, and an optional <code>&lt;comment&gt;</code>, with spaces between each element. Specify only the <code>&lt;key type&gt;</code> and <code>&lt;body base64&gt;</code>: do not enter the <code>&lt;comment&gt;</code> portion of the key.</p> <p>For the trusted host key, Transfer Family accepts RSA and ECDSA keys.</p> <ul> <li> <p>For RSA keys, the <code>&lt;key type&gt;</code> string is <code>ssh-rsa</code>.</p> </li> <li> <p>For ECDSA keys, the <code>&lt;key type&gt;</code> string is either <code>ecdsa-sha2-nistp256</code>, <code>ecdsa-sha2-nistp384</code>, or <code>ecdsa-sha2-nistp521</code>, depending on the size of the key you generated.</p> </li> </ul> <p>Run this command to retrieve the SFTP server host key, where your SFTP server name is <code>ftp.host.com</code>.</p> <p> <code>ssh-keyscan ftp.host.com</code> </p> <p>This prints the public host key to standard output.</p> <p> <code>ftp.host.com ssh-rsa AAAAB3Nza...&lt;long-string-for-public-key</code> </p> <p>Copy and paste this string into the <code>TrustedHostKeys</code> field for the <code>create-connector</code> command or into the <b>Trusted host keys</b> field in the console.</p>"
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2536:    "LaunchActionRun":{
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2548:          "shape":"LaunchActionRunId",
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2549:          "documentation":"<p>Run Id.</p>"
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2552:          "shape":"LaunchActionRunStatus",
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2553:          "documentation":"<p>Run status.</p>"
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2558:    "LaunchActionRunId":{
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2564:    "LaunchActionRunStatus":{
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2572:    "LaunchActionRuns":{
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2574:      "member":{"shape":"LaunchActionRun"}
./backend/aws/dist/awscli/botocore/data/drs/2020-02-26/service-2.json:2610:          "shape":"LaunchActionRuns",
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/completions-1.json:429:    "DescribeRuntimeConfiguration": {
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/completions-1.json:970:    "UpdateRuntimeConfiguration": {
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:143:      "documentation":"<p>Creates a fleet of compute resources to host your game servers. Use this operation to set up the following types of fleets based on compute type: </p> <p> <b>Managed EC2 fleet</b> </p> <p>An EC2 fleet is a set of Amazon Elastic Compute Cloud (Amazon EC2) instances. Your game server build is deployed to each fleet instance. Amazon GameLift Servers manages the fleet's instances and controls the lifecycle of game server processes, which host game sessions for players. EC2 fleets can have instances in multiple locations. Each instance in the fleet is designated a <code>Compute</code>.</p> <p>To create an EC2 fleet, provide these required parameters:</p> <ul> <li> <p>Either <code>BuildId</code> or <code>ScriptId</code> </p> </li> <li> <p> <code>ComputeType</code> set to <code>EC2</code> (the default value)</p> </li> <li> <p> <code>EC2InboundPermissions</code> </p> </li> <li> <p> <code>EC2InstanceType</code> </p> </li> <li> <p> <code>FleetType</code> </p> </li> <li> <p> <code>Name</code> </p> </li> <li> <p> <code>RuntimeConfiguration</code> with at least one <code>ServerProcesses</code> configuration</p> </li> </ul> <p>If successful, this operation creates a new fleet resource and places it in <code>NEW</code> status while Amazon GameLift Servers initiates the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-all.html#fleets-creation-workflow\">fleet creation workflow</a>. To debug your fleet, fetch logs, view performance metrics or other actions on the fleet, create a development fleet with port 22/3389 open. As a best practice, we recommend opening ports for remote access only when you need them and closing them when you're finished. </p> <p>When the fleet status is ACTIVE, you can adjust capacity settings and turn autoscaling on/off for each location.</p> <p> <b>Anywhere fleet</b> </p> <p>An Anywhere fleet represents compute resources that are not owned or managed by Amazon GameLift Servers. You might create an Anywhere fleet with your local machine for testing, or use one to host game servers with on-premises hardware or other game hosting solutions. </p> <p>To create an Anywhere fleet, provide these required parameters:</p> <ul> <li> <p> <code>ComputeType</code> set to <code>ANYWHERE</code> </p> </li> <li> <p> <code>Locations</code> specifying a custom location</p> </li> <li> <p> <code>Name</code> </p> </li> </ul> <p>If successful, this operation creates a new fleet resource and places it in <code>ACTIVE</code> status. You can register computes with a fleet in <code>ACTIVE</code> status. </p> <p> <b>Learn more</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html\">Setting up fleets</a> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-debug.html#fleets-creating-debug-creation\">Debug fleet creation issues</a> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html\">Multi-location fleets</a> </p>"
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1089:    "DescribeRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1090:      "name":"DescribeRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1095:      "input":{"shape":"DescribeRuntimeConfigurationInput"},
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1096:      "output":{"shape":"DescribeRuntimeConfigurationOutput"},
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1103:      "documentation":"<p>Retrieves a fleet's runtime configuration settings. The runtime configuration determines which server processes run, and how, on computes in the fleet. For managed EC2 fleets, the runtime configuration describes server processes that run on each fleet instance. can update a fleet's runtime configuration at any time using <a href=\"https://docs.aws.amazon.com/gamelift/latest/apireference/API_UpdateRuntimeConfiguration.html\">UpdateRuntimeConfiguration</a>.</p> <p>To get the current runtime configuration for a fleet, provide the fleet ID. </p> <p>If successful, a <code>RuntimeConfiguration</code> object is returned for the requested fleet. If the requested fleet has been deleted, the result set is empty.</p> <p> <b>Learn more</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html\">Setting up Amazon GameLift Servers fleets</a> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-multiprocess.html\">Running multiple processes on a fleet</a> </p>"
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1951:    "UpdateRuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1952:      "name":"UpdateRuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1957:      "input":{"shape":"UpdateRuntimeConfigurationInput"},
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1958:      "output":{"shape":"UpdateRuntimeConfigurationOutput"},
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:1967:      "documentation":"<p>Updates the runtime configuration for the specified fleet. The runtime configuration tells Amazon GameLift Servers how to launch server processes on computes in managed EC2 and Anywhere fleets. You can update a fleet's runtime configuration at any time after the fleet is created; it does not need to be in <code>ACTIVE</code> status.</p> <p>To update runtime configuration, specify the fleet ID and provide a <code>RuntimeConfiguration</code> with an updated set of server process configurations.</p> <p>If successful, the fleet's runtime configuration settings are updated. Fleet computes that run game server processes regularly check for and receive updated runtime configurations. The computes immediately take action to comply with the new configuration by launching new server processes or by not replacing existing processes when they shut down. Updating a fleet's runtime configuration never affects existing server processes.</p> <p> <b>Learn more</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html\">Setting up Amazon GameLift Servers fleets</a> </p>"
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:2449:        "ContainerRuntimeId":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:2830:        "ContainerRuntimeId":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:3178:          "documentation":"<p> <b>This parameter is no longer used.</b> Specify a server launch path using the <code>RuntimeConfiguration</code> parameter. Requests that use this parameter instead continue to be valid.</p>"
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:3182:          "documentation":"<p> <b>This parameter is no longer used.</b> Specify server launch parameters using the <code>RuntimeConfiguration</code> parameter. Requests that use this parameter instead continue to be valid.</p>"
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:3200:        "RuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:3201:          "shape":"RuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:4920:    "DescribeRuntimeConfigurationInput":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:4930:    "DescribeRuntimeConfigurationOutput":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:4933:        "RuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:4934:          "shape":"RuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:5823:          "documentation":"<p> <b>This parameter is no longer used.</b> Server launch paths are now defined using the fleet's <a href=\"https://docs.aws.amazon.com/gamelift/latest/apireference/RuntimeConfiguration.html\">RuntimeConfiguration</a>. Requests that use this parameter continue to be valid.</p>"
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:8889:    "RuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:8905:      "documentation":"<p>A set of instructions that define the set of server processes to run on computes in a fleet. Server processes run either an executable in a custom game build or a Amazon GameLift Servers Realtime script. Amazon GameLift Servers launches the processes, manages their life cycle, and replaces them as needed. Computes check regularly for an updated runtime configuration. </p> <p>An Amazon GameLift Servers instance is limited to 50 processes running concurrently. To calculate the total number of processes defined in a runtime configuration, add the values of the <code>ConcurrentExecutions</code> parameter for each server process. Learn more about <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-multiprocess.html\"> Running Multiple Processes on a Fleet</a>.</p>"
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:10238:    "UpdateRuntimeConfigurationInput":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:10242:        "RuntimeConfiguration"
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:10249:        "RuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:10250:          "shape":"RuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:10255:    "UpdateRuntimeConfigurationOutput":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:10258:        "RuntimeConfiguration":{
./backend/aws/dist/awscli/botocore/data/gamelift/2015-10-01/service-2.json:10259:          "shape":"RuntimeConfiguration",
./backend/aws/dist/awscli/botocore/data/opsworkscm/2016-11-01/service-2.json:222:      "documentation":"<p> Restores a backup to a server that is in a <code>CONNECTION_LOST</code>, <code>HEALTHY</code>, <code>RUNNING</code>, <code>UNHEALTHY</code>, or <code>TERMINATED</code> state. When you run RestoreServer, the server's EC2 instance is deleted, and a new EC2 instance is configured. RestoreServer maintains the existing server endpoint, so configuration management of the server's client devices (nodes) should continue to work. </p> <p>Restoring from a backup is performed by creating a new EC2 instance. If restoration is successful, and the server is in a <code>HEALTHY</code> state, OpsWorks CM switches traffic over to the new instance. After restoration is finished, the old EC2 instance is maintained in a <code>Running</code> or <code>Stopped</code> state, but is eventually terminated.</p> <p> This operation is asynchronous. </p> <p> An <code>InvalidStateException</code> is thrown when the server is not in a valid state. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>"
./backend/aws/dist/awscli/botocore/data/opsworkscm/2016-11-01/service-2.json:658:          "documentation":"<p>The ID of the backup to delete. Run the DescribeBackups command to get a list of backup IDs. Backup IDs are in the format <code>ServerName-yyyyMMddHHmmssSSS</code>. </p>"
./backend/aws/dist/awscli/botocore/data/opsworkscm/2016-11-01/service-2.json:894:          "documentation":"<p>The list of engine attributes. The list type is <code>EngineAttribute</code>. An <code>EngineAttribute</code> list item is a pair that includes an attribute name and its value. For the <code>Userdata</code> ExportAttributeName, the following are supported engine attribute names.</p> <ul> <li> <p> <b>RunList</b> In Chef, a list of roles or recipes that are run in the specified order. In Puppet, this parameter is ignored.</p> </li> <li> <p> <b>OrganizationName</b> In Chef, an organization name. OpsWorks for Chef Automate always creates the organization <code>default</code>. In Puppet, this parameter is ignored.</p> </li> <li> <p> <b>NodeEnvironment</b> In Chef, a node environment (for example, development, staging, or one-box). In Puppet, this parameter is ignored.</p> </li> <li> <p> <b>NodeClientVersion</b> In Chef, the version of the Chef engine (three numbers separated by dots, such as 13.8.5). If this attribute is empty, OpsWorks for Chef Automate uses the most current version. In Puppet, this parameter is ignored.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:455:    "GetQueryRuntimeStatistics":{
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:456:      "name":"GetQueryRuntimeStatistics",
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:461:      "input":{"shape":"GetQueryRuntimeStatisticsInput"},
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:462:      "output":{"shape":"GetQueryRuntimeStatisticsOutput"},
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:819:      "documentation":"<p>Runs the SQL query statements contained in the <code>Query</code>. Requires you to have access to the workgroup in which the query ran. Running queries against an external catalog requires <a>GetDataCatalog</a> permission to the catalog. For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:1047:        "ApplicationRuntimeId":{
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:2543:    "GetQueryRuntimeStatisticsInput":{
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:2553:    "GetQueryRuntimeStatisticsOutput":{
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:2556:        "QueryRuntimeStatistics":{
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:2557:          "shape":"QueryRuntimeStatistics",
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:2558:          "documentation":"<p>Runtime statistics about the query execution.</p>"
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:3882:    "QueryRuntimeStatistics":{
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:3885:        "Timeline":{"shape":"QueryRuntimeStatisticsTimeline"},
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:3886:        "Rows":{"shape":"QueryRuntimeStatisticsRows"},
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:3894:    "QueryRuntimeStatisticsRows":{
./backend/aws/dist/awscli/botocore/data/athena/2017-05-18/service-2.json:3916:    "QueryRuntimeStatisticsTimeline":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/waiters-2.json:224:        "ReplicationTaskRunning":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:59:    "CancelReplicationTaskAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:60:      "name":"CancelReplicationTaskAssessmentRun",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:65:      "input":{"shape":"CancelReplicationTaskAssessmentRunMessage"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:66:      "output":{"shape":"CancelReplicationTaskAssessmentRunResponse"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:492:    "DeleteReplicationTaskAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:493:      "name":"DeleteReplicationTaskAssessmentRun",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:498:      "input":{"shape":"DeleteReplicationTaskAssessmentRunMessage"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:499:      "output":{"shape":"DeleteReplicationTaskAssessmentRunResponse"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:992:    "DescribeReplicationTaskAssessmentRuns":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:993:      "name":"DescribeReplicationTaskAssessmentRuns",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:998:      "input":{"shape":"DescribeReplicationTaskAssessmentRunsMessage"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:999:      "output":{"shape":"DescribeReplicationTaskAssessmentRunsResponse"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1396:    "RunFleetAdvisorLsaAnalysis":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1397:      "name":"RunFleetAdvisorLsaAnalysis",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1402:      "output":{"shape":"RunFleetAdvisorLsaAnalysisResponse"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1407:      "documentation":"<important> <p> End of support notice: On May 20, 2026, Amazon Web Services will end support for Amazon Web Services DMS Fleet Advisor;. After May 20, 2026, you will no longer be able to access the Amazon Web Services DMS Fleet Advisor; console or Amazon Web Services DMS Fleet Advisor; resources. For more information, see <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/dms_fleet.advisor-end-of-support.html\">Amazon Web Services DMS Fleet Advisor end of support</a>. </p> </important> <p>Runs large-scale assessment (LSA) analysis on every Fleet Advisor collector in your account.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1604:    "StartReplicationTaskAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1605:      "name":"StartReplicationTaskAssessmentRun",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1610:      "input":{"shape":"StartReplicationTaskAssessmentRunMessage"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1611:      "output":{"shape":"StartReplicationTaskAssessmentRunResponse"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1885:    "CancelReplicationTaskAssessmentRunMessage":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1887:      "required":["ReplicationTaskAssessmentRunArn"],
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1889:        "ReplicationTaskAssessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1896:    "CancelReplicationTaskAssessmentRunResponse":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1899:        "ReplicationTaskAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1900:          "shape":"ReplicationTaskAssessmentRun",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:1901:          "documentation":"<p>The <code>ReplicationTaskAssessmentRun</code> object for the canceled assessment run.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:3540:    "DeleteReplicationTaskAssessmentRunMessage":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:3542:      "required":["ReplicationTaskAssessmentRunArn"],
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:3544:        "ReplicationTaskAssessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:3551:    "DeleteReplicationTaskAssessmentRunResponse":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:3554:        "ReplicationTaskAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:3555:          "shape":"ReplicationTaskAssessmentRun",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:3556:          "documentation":"<p>The <code>ReplicationTaskAssessmentRun</code> object for the deleted assessment run.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:4812:    "DescribeReplicationTaskAssessmentRunsMessage":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:4830:    "DescribeReplicationTaskAssessmentRunsResponse":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:4837:        "ReplicationTaskAssessmentRuns":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:4838:          "shape":"ReplicationTaskAssessmentRunList",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:7991:        "PremigrationAssessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:8003:        "PremigrationAssessmentRunCreationDate":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:8007:        "AssessmentProgress":{"shape":"ReplicationTaskAssessmentRunProgress"},
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:8028:        "ResultStatistic":{"shape":"ReplicationTaskAssessmentRunResultStatistic"}
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9080:          "documentation":"<p>The status of the replication task. This response parameter can return one of the following values:</p> <ul> <li> <p> <code>\"moving\"</code> – The task is being moved in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_MoveReplicationTask.html\"> <code>MoveReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"creating\"</code> – The task is being created in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_CreateReplicationTask.html\"> <code>CreateReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"deleting\"</code> – The task is being deleted in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_DeleteReplicationTask.html\"> <code>DeleteReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"failed\"</code> – The task failed to successfully complete the database migration in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html\"> <code>StartReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"failed-move\"</code> – The task failed to move in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_MoveReplicationTask.html\"> <code>MoveReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"modifying\"</code> – The task definition is being modified in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_ModifyReplicationTask.html\"> <code>ModifyReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"ready\"</code> – The task is in a <code>ready</code> state where it can respond to other task operations, such as <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html\"> <code>StartReplicationTask</code> </a> or <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_DeleteReplicationTask.html\"> <code>DeleteReplicationTask</code> </a>. </p> </li> <li> <p> <code>\"running\"</code> – The task is performing a database migration in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html\"> <code>StartReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"starting\"</code> – The task is preparing to perform a database migration in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html\"> <code>StartReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"stopped\"</code> – The task has stopped in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StopReplicationTask.html\"> <code>StopReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"stopping\"</code> – The task is preparing to stop in response to running the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StopReplicationTask.html\"> <code>StopReplicationTask</code> </a> operation.</p> </li> <li> <p> <code>\"testing\"</code> – The database migration specified for this task is being tested in response to running either the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessmentRun.html\"> <code>StartReplicationTaskAssessmentRun</code> </a> or the <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessment.html\"> <code>StartReplicationTaskAssessment</code> </a> operation.</p> <note> <p> <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessmentRun.html\"> <code>StartReplicationTaskAssessmentRun</code> </a> is an improved premigration task assessment operation. The <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessment.html\"> <code>StartReplicationTaskAssessment</code> </a> operation assesses data type compatibility only between the source and target database of a given migration task. In contrast, <a href=\"https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTaskAssessmentRun.html\"> <code>StartReplicationTaskAssessmentRun</code> </a> enables you to specify a variety of premigration task assessments in addition to data type compatibility. These assessments include ones for the validity of primary key definitions and likely issues with database migration performance, among others.</p> </note> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9167:    "ReplicationTaskAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9170:        "ReplicationTaskAssessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9180:          "documentation":"<p>Assessment run status. </p> <p>This status can have one of the following values:</p> <ul> <li> <p> <code>\"cancelling\"</code> – The assessment run was canceled by the <code>CancelReplicationTaskAssessmentRun</code> operation.</p> </li> <li> <p> <code>\"deleting\"</code> – The assessment run was deleted by the <code>DeleteReplicationTaskAssessmentRun</code> operation.</p> </li> <li> <p> <code>\"failed\"</code> – At least one individual assessment completed with a <code>failed</code> status.</p> </li> <li> <p> <code>\"error-provisioning\"</code> – An internal error occurred while resources were provisioned (during <code>provisioning</code> status).</p> </li> <li> <p> <code>\"error-executing\"</code> – An internal error occurred while individual assessments ran (during <code>running</code> status).</p> </li> <li> <p> <code>\"invalid state\"</code> – The assessment run is in an unknown state.</p> </li> <li> <p> <code>\"passed\"</code> – All individual assessments have completed, and none has a <code>failed</code> status.</p> </li> <li> <p> <code>\"provisioning\"</code> – Resources required to run individual assessments are being provisioned.</p> </li> <li> <p> <code>\"running\"</code> – Individual assessments are being run.</p> </li> <li> <p> <code>\"starting\"</code> – The assessment run is starting, but resources are not yet being provisioned for individual assessments.</p> </li> <li> <p> <code>\"warning\"</code> – At least one individual assessment completed with a <code>warning</code> status or all individual assessments were skipped (completed with a <code>skipped</code> status).</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9182:        "ReplicationTaskAssessmentRunCreationDate":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9184:          "documentation":"<p>Date on which the assessment run was created using the <code>StartReplicationTaskAssessmentRun</code> operation.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9187:          "shape":"ReplicationTaskAssessmentRunProgress",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9196:          "documentation":"<p>ARN of the service role used to start the assessment run using the <code>StartReplicationTaskAssessmentRun</code> operation. The role must allow the <code>iam:PassRole</code> action.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9214:        "AssessmentRunName":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9218:        "IsLatestTaskAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9220:          "documentation":"<p>Indicates that the following PreflightAssessmentRun is the latest for the ReplicationTask. The status is either true or false.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9223:          "shape":"ReplicationTaskAssessmentRunResultStatistic",
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9227:      "documentation":"<p>Provides information that describes a premigration assessment run that you have started using the <code>StartReplicationTaskAssessmentRun</code> operation.</p> <p>Some of the information appears based on other operations that can return the <code>ReplicationTaskAssessmentRun</code> object.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9229:    "ReplicationTaskAssessmentRunList":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9231:      "member":{"shape":"ReplicationTaskAssessmentRun"}
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9233:    "ReplicationTaskAssessmentRunProgress":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9247:    "ReplicationTaskAssessmentRunResultStatistic":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9264:          "documentation":"<p>Indicates that the recent completed AssessmentRun triggered a warning.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9284:        "ReplicationTaskAssessmentRunArn":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9298:          "documentation":"<p>Date when this individual assessment was started as part of running the <code>StartReplicationTaskAssessmentRun</code> operation.</p>"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:9413:    "RunFleetAdvisorLsaAnalysisResponse":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:10128:    "StartReplicationTaskAssessmentRunMessage":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:10134:        "AssessmentRunName"
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:10161:        "AssessmentRunName":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:10180:    "StartReplicationTaskAssessmentRunResponse":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:10183:        "ReplicationTaskAssessmentRun":{
./backend/aws/dist/awscli/botocore/data/dms/2016-01-01/service-2.json:10184:          "shape":"ReplicationTaskAssessmentRun",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:1601:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:1636:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2228:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2324:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2372:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2448:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2530:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2589:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2689:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2756:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:2817:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:3753:          "documentation":"<p>Runtime details for the specified runtime instance of the lifecycle policy.</p>"
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:4227:        "dateLastRun":{
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:4231:        "dateNextRun":{
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:4790:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:4862:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:4920:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:5295:          "documentation":"<p>Runtime state that reports if the policy action ran successfully, failed, or was skipped.</p>"
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:5504:        "dateLastRun":{
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:5782:        "dateLastRun":{
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:6325:          "documentation":"<p>Runtime details for the specified runtime instance of the lifecycle policy.</p>"
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:7200:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:7326:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:7382:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:7544:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:7616:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:7712:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:7775:          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:8252:          "documentation":"<p>Runtime status for the workflow step.</p>"
./backend/aws/dist/awscli/botocore/data/imagebuilder/2019-12-02/service-2.json:8279:      "documentation":"<p>Runtime details and status for the workflow step.</p>"
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:4606:        "initialRun": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:4608:          "locationName": "initialRun",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:4614:          "documentation": "<p>The schedule for running the job. Valid values are:</p> <ul><li><p>ONE_TIME - Run the job only once. If you specify this value, don't specify a value for the scheduleFrequency property.</p></li> <li><p>SCHEDULED - Run the job on a daily, weekly, or monthly basis. If you specify this value, use the scheduleFrequency property to specify the recurrence pattern for the job.</p></li></ul>"
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:5309:        "initialRun": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:5311:          "locationName": "initialRun",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:5334:        "lastRunErrorStatus": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:5335:          "shape": "LastRunErrorStatus",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:5336:          "locationName": "lastRunErrorStatus",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:5339:        "lastRunTime": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:5341:          "locationName": "lastRunTime",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:6970:        "lastJobRunTime": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:6972:          "locationName": "lastJobRunTime",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:7071:        "lastRunErrorStatus": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:7072:          "shape": "LastRunErrorStatus",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:7073:          "locationName": "lastRunErrorStatus",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:7120:    "LastRunErrorStatus": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:7124:          "shape": "LastRunErrorStatusCode",
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:7131:    "LastRunErrorStatusCode": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:9269:        "numberOfRuns": {
./backend/aws/dist/awscli/botocore/data/macie2/2020-01-01/service-2.json:9271:          "locationName": "numberOfRuns",
./backend/aws/dist/awscli/botocore/data/sagemaker-featurestore-runtime/2020-07-01/service-2.json:8:    "serviceFullName":"Amazon SageMaker Feature Store Runtime",
./backend/aws/dist/awscli/botocore/data/sagemaker-featurestore-runtime/2020-07-01/service-2.json:9:    "serviceId":"SageMaker FeatureStore Runtime",
./backend/aws/dist/awscli/botocore/data/snowball/2016-06-30/service-2.json:1299:      "documentation":"<p>The <code>NextToken</code> string was altered unexpectedly, and the operation has stopped. Run the operation without changing the <code>NextToken</code> string, and try again.</p>",
./backend/aws/dist/awscli/botocore/data/rekognition/2016-06-27/waiters-2.json:24:        "ProjectVersionRunning": {
./backend/aws/dist/awscli/botocore/data/sagemaker-a2i-runtime/2019-11-07/service-2.json:8:    "serviceFullName":"Amazon Augmented AI Runtime",
./backend/aws/dist/awscli/botocore/data/sagemaker-a2i-runtime/2019-11-07/service-2.json:9:    "serviceId":"SageMaker A2I Runtime",
./backend/aws/dist/awscli/botocore/data/bedrock-data-automation-runtime/2024-06-13/service-2.json:10:    "serviceFullName":"Runtime for Amazon Bedrock Data Automation",
./backend/aws/dist/awscli/botocore/data/bedrock-data-automation-runtime/2024-06-13/service-2.json:11:    "serviceId":"Bedrock Data Automation Runtime",
./backend/aws/dist/awscli/botocore/data/bedrock-data-automation-runtime/2024-06-13/service-2.json:14:    "targetPrefix":"AmazonBedrockKeystoneRuntimeService",
./backend/aws/dist/awscli/botocore/data/bedrock-data-automation-runtime/2024-06-13/service-2.json:619:  "documentation":"<p>Amazon Bedrock Data Automation Runtime</p>"
./backend/aws/dist/awscli/botocore/data/mediaconnect/2018-11-14/service-2.json:3113:        "RunningBridgeCount"
./backend/aws/dist/awscli/botocore/data/mediaconnect/2018-11-14/service-2.json:3151:        "RunningBridgeCount":{
./backend/aws/dist/awscli/botocore/data/freetier/2023-09-07/service-2.json:264:          "documentation":"<p>Describes <code>usageType</code> more granularly with the specific Amazon Web Services service API operation. For example, this can be the <code>RunInstances</code> API operation for Amazon Elastic Compute Cloud.</p>"
./backend/aws/dist/awscli/botocore/data/quicksight/2018-04-01/service-2.json:1152:      "documentation":"<p>Describes the customizations associated with the provided Amazon Web Services account and Amazon Amazon QuickSight namespace in an Amazon Web Services Region. The Amazon QuickSight console evaluates which customizations to apply by running this API operation with the <code>Resolved</code> flag included. </p> <p>To determine what customizations display when you run this command, it can help to visualize the relationship of the entities involved. </p> <ul> <li> <p> <code>Amazon Web Services account</code> - The Amazon Web Services account exists at the top of the hierarchy. It has the potential to use all of the Amazon Web Services Regions and Amazon Web Services Services. When you subscribe to Amazon QuickSight, you choose one Amazon Web Services Region to use as your home Region. That's where your free SPICE capacity is located. You can use Amazon QuickSight in any supported Amazon Web Services Region. </p> </li> <li> <p> <code>Amazon Web Services Region</code> - In each Amazon Web Services Region where you sign in to Amazon QuickSight at least once, Amazon QuickSight acts as a separate instance of the same service. If you have a user directory, it resides in us-east-1, which is the US East (N. Virginia). Generally speaking, these users have access to Amazon QuickSight in any Amazon Web Services Region, unless they are constrained to a namespace. </p> <p>To run the command in a different Amazon Web Services Region, you change your Region settings. If you're using the CLI, you can use one of the following options:</p> <ul> <li> <p>Use <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-options.html\">command line options</a>. </p> </li> <li> <p>Use <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html\">named profiles</a>. </p> </li> <li> <p>Run <code>aws configure</code> to change your default Amazon Web Services Region. Use Enter to key the same settings for your keys. For more information, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html\">Configuring the CLI</a>.</p> </li> </ul> </li> <li> <p> <code>Namespace</code> - A QuickSight namespace is a partition that contains users and assets (data sources, datasets, dashboards, and so on). To access assets that are in a specific namespace, users and groups must also be part of the same namespace. People who share a namespace are completely isolated from users and assets in other namespaces, even if they are in the same Amazon Web Services account and Amazon Web Services Region.</p> </li> <li> <p> <code>Applied customizations</code> - Within an Amazon Web Services Region, a set of Amazon QuickSight customizations can apply to an Amazon Web Services account or to a namespace. Settings that you apply to a namespace override settings that you apply to an Amazon Web Services account. All settings are isolated to a single Amazon Web Services Region. To apply them in other Amazon Web Services Regions, run the <code>CreateAccountCustomization</code> command in each Amazon Web Services Region where you want to apply the same customizations. </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/quicksight/2018-04-01/service-2.json:7473:        "AddOrRunAnomalyDetectionForAnalyses":{
./backend/aws/dist/awscli/botocore/data/quicksight/2018-04-01/service-2.json:9699:          "documentation":"<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/quicksight/2018-04-01/service-2.json:9730:          "documentation":"<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/quicksight/2018-04-01/service-2.json:36467:          "documentation":"<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/quicksight/2018-04-01/service-2.json:36500:          "documentation":"<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/sesv2/2019-09-27/service-2.json:5207:          "documentation":"<p>A string token indicating that there might be additional contact lists available to be listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the same parameters to retrieve the next page of contact lists.</p>"
./backend/aws/dist/awscli/botocore/data/sesv2/2019-09-27/service-2.json:5258:          "documentation":"<p>A string token indicating that there might be additional contacts available to be listed. Copy this token to a subsequent call to <code>ListContacts</code> with the same parameters to retrieve the next page of contacts.</p>"
./backend/aws/dist/awscli/botocore/data/sesv2/2019-09-27/service-2.json:5524:          "documentation":"<p>A string token indicating that there might be additional import jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the same parameters to retrieve the next page of import jobs.</p>"
./backend/aws/dist/awscli/botocore/data/sesv2/2019-09-27/service-2.json:5542:          "documentation":"<p>A string token indicating that there might be additional import jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the same parameters to retrieve the next page of import jobs.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:774:      "documentation":"<p>Retrieves information about the working draft (<code>DRAFT</code> version) of a prompt or a version of it, depending on whether you include the <code>promptVersion</code> field or not. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-manage.html#prompt-management-view.html\">View information about prompts using Prompt management</a> and <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-deploy.html#prompt-management-versions-view.html\">View information about a version of your prompt</a> in the Amazon Bedrock User Guide.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:1044:      "documentation":"<p>Returns either information about the working draft (<code>DRAFT</code> version) of each prompt in an account, or information about of all versions of a prompt, depending on whether you include the <code>promptIdentifier</code> field or not. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-manage.html#prompt-management-view.html\">View information about prompts using Prompt management</a> in the Amazon Bedrock User Guide.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:1569:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:1676:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:1696:          "documentation":"<p>The configuration settings for a computer use action.</p> <important> <p> Computer use is a new Anthropic Claude model capability (in beta) available with Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>. </p> </important>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:1748:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:2876:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:2885:          "documentation":"<p>Specify a built-in or computer use action for this action group. If you specify a value, you must leave the <code>description</code>, <code>apiSchema</code>, and <code>actionGroupExecutor</code> fields empty for this action group. </p> <ul> <li> <p>To allow your agent to request the user for additional information when trying to complete a task, set this field to <code>AMAZON.UserInput</code>. </p> </li> <li> <p>To allow your agent to generate, run, and troubleshoot code when trying to complete a task, set this field to <code>AMAZON.CodeInterpreter</code>.</p> </li> <li> <p>To allow your agent to use an Anthropic computer use tool, specify one of the following values. </p> <important> <p> Computer use is a new Anthropic Claude model capability (in beta) available with Anthropic Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. When operating computer use functionality, we recommend taking additional security precautions, such as executing computer actions in virtual environments with restricted data access and limited internet connectivity. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>. </p> </important> <ul> <li> <p> <code>ANTHROPIC.Computer</code> - Gives the agent permission to use the mouse and keyboard and take screenshots.</p> </li> <li> <p> <code>ANTHROPIC.TextEditor</code> - Gives the agent permission to view, create and edit files.</p> </li> <li> <p> <code>ANTHROPIC.Bash</code> - Gives the agent permission to run commands in a bash shell.</p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:2889:          "documentation":"<p>The configuration settings for a computer use action.</p> <important> <p> Computer use is a new Anthropic Claude model capability (in beta) available with Anthropic Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>. </p> </important>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:2938:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:2975:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:2984:          "documentation":"<p>The identifier for the model that you want to be used for orchestration by the agent you create.</p> <p>The <code>modelId</code> to provide depends on the type of model or throughput that you use:</p> <ul> <li> <p>If you use a base model, specify the model ID or its ARN. For a list of model IDs for base models, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns\">Amazon Bedrock base model IDs (on-demand throughput)</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an inference profile, specify the inference profile ID or its ARN. For a list of inference profile IDs, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html\">Supported Regions and models for cross-region inference</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a provisioned model, specify the ARN of the Provisioned Throughput. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html\">Run inference using a Provisioned Throughput</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a custom model, first purchase Provisioned Throughput for it. Then specify the ARN of the resulting provisioned model. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html\">Use a custom model in Amazon Bedrock</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html\">imported model</a>, specify the ARN of the imported model. You can get the model ARN from a successful call to <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateModelImportJob.html\">CreateModelImportJob</a> or from the Imported models page in the Amazon Bedrock console.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:3058:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:3129:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:3217:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:3301:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:3370:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:3435:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:3513:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:4226:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:4676:      "documentation":"<p>Determines how multiple nodes in a flow can run in parallel. Running nodes concurrently can improve your flow's performance.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:5009:          "documentation":"<p>Contains configurations for a prompt node in your flow. Runs a prompt and generates the model response as the output. You can use a prompt from Prompt management or you can configure one in this node.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:6108:          "documentation":"<p>The version of the prompt about which you want to retrieve information. Omit this field to return information about the working draft of the prompt.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:6338:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:10008:          "documentation":"<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:10694:          "documentation":"<p>Update the built-in or computer use action for this action group. If you specify a value, you must leave the <code>description</code>, <code>apiSchema</code>, and <code>actionGroupExecutor</code> fields empty for this action group. </p> <ul> <li> <p>To allow your agent to request the user for additional information when trying to complete a task, set this field to <code>AMAZON.UserInput</code>. </p> </li> <li> <p>To allow your agent to generate, run, and troubleshoot code when trying to complete a task, set this field to <code>AMAZON.CodeInterpreter</code>.</p> </li> <li> <p>To allow your agent to use an Anthropic computer use tool, specify one of the following values. </p> <important> <p> Computer use is a new Anthropic Claude model capability (in beta) available with Anthropic Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. When operating computer use functionality, we recommend taking additional security precautions, such as executing computer actions in virtual environments with restricted data access and limited internet connectivity. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>. </p> </important> <ul> <li> <p> <code>ANTHROPIC.Computer</code> - Gives the agent permission to use the mouse and keyboard and take screenshots.</p> </li> <li> <p> <code>ANTHROPIC.TextEditor</code> - Gives the agent permission to view, create and edit files.</p> </li> <li> <p> <code>ANTHROPIC.Bash</code> - Gives the agent permission to run commands in a bash shell.</p> </li> </ul> </li> </ul> <p>During orchestration, if your agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html\">Observation</a> reprompting the user for more information.</p>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:10698:          "documentation":"<p>The configuration settings for a computer use action.</p> <important> <p> Computer use is a new Anthropic Claude model capability (in beta) available with Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-computer-use.html\">Configure an Amazon Bedrock Agent to complete tasks with computer use tools</a>. </p> </important>"
./backend/aws/dist/awscli/botocore/data/bedrock-agent/2023-06-05/service-2.json:10904:          "documentation":"<p>The identifier for the model that you want to be used for orchestration by the agent you create.</p> <p>The <code>modelId</code> to provide depends on the type of model or throughput that you use:</p> <ul> <li> <p>If you use a base model, specify the model ID or its ARN. For a list of model IDs for base models, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns\">Amazon Bedrock base model IDs (on-demand throughput)</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an inference profile, specify the inference profile ID or its ARN. For a list of inference profile IDs, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html\">Supported Regions and models for cross-region inference</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a provisioned model, specify the ARN of the Provisioned Throughput. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html\">Run inference using a Provisioned Throughput</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use a custom model, first purchase Provisioned Throughput for it. Then specify the ARN of the resulting provisioned model. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html\">Use a custom model in Amazon Bedrock</a> in the Amazon Bedrock User Guide.</p> </li> <li> <p>If you use an <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html\">imported model</a>, specify the ARN of the imported model. You can get the model ARN from a successful call to <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateModelImportJob.html\">CreateModelImportJob</a> or from the Imported models page in the Amazon Bedrock console.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:897:      "documentation":"<p>Starts a model training job. After training completes, SageMaker saves the resulting model artifacts to an Amazon S3 location that you specify. </p> <p>If you choose to host your model using SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts in a machine learning service other than SageMaker, provided that you know how to use them for inference. </p> <p>In the request body, you provide the following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> - Identifies the training algorithm to use. </p> </li> <li> <p> <code>HyperParameters</code> - Specify these algorithm-specific parameters to enable the estimation of model parameters during training. Hyperparameters can be tuned to optimize this learning process. For a list of hyperparameters for each training algorithm provided by SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. </p> <important> <p>Do not include any security-sensitive information including account access IDs, secrets, or tokens in any hyperparameter fields. As part of the shared responsibility model, you are responsible for any potential exposure, unauthorized access, or compromise of your sensitive data if caused by security-sensitive information included in the request hyperparameter variable or plain text fields.</p> </important> </li> <li> <p> <code>InputDataConfig</code> - Describes the input required by the training job and the Amazon S3, EFS, or FSx location where it is stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies the Amazon S3 bucket where you want SageMaker to save the results of model training. </p> </li> <li> <p> <code>ResourceConfig</code> - Identifies the resources, ML compute instances, and ML storage volumes to deploy for model training. In distributed training, you specify more than one instance. </p> </li> <li> <p> <code>EnableManagedSpotTraining</code> - Optimize the cost of training machine learning models by up to 80% by using Amazon EC2 Spot instances. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html\">Managed Spot Training</a>. </p> </li> <li> <p> <code>RoleArn</code> - The Amazon Resource Name (ARN) that SageMaker assumes to perform tasks on your behalf during model training. You must grant this role the necessary permissions so that SageMaker can successfully complete model training. </p> </li> <li> <p> <code>StoppingCondition</code> - To help cap training costs, use <code>MaxRuntimeInSeconds</code> to set a time limit for training. Use <code>MaxWaitTimeInSeconds</code> to specify how long a managed spot training job has to complete. </p> </li> <li> <p> <code>Environment</code> - The environment variables to set in the Docker container.</p> <important> <p>Do not include any security-sensitive information including account access IDs, secrets, or tokens in any environment fields. As part of the shared responsibility model, you are responsible for any potential exposure, unauthorized access, or compromise of your sensitive data if caused by security-sensitive information included in the request environment variable or plain text fields.</p> </important> </li> <li> <p> <code>RetryStrategy</code> - The number of times to retry the job when the job fails due to an <code>InternalServerError</code>.</p> </li> </ul> <p> For more information about SageMaker, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html\">How It Works</a>. </p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:4271:    "UpdateInferenceComponentRuntimeConfig":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:4272:      "name":"UpdateInferenceComponentRuntimeConfig",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:4277:      "input":{"shape":"UpdateInferenceComponentRuntimeConfigInput"},
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:4278:      "output":{"shape":"UpdateInferenceComponentRuntimeConfigOutput"},
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:4282:      "documentation":"<p>Runtime settings for a model that is deployed with an inference component.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:4296:      "documentation":"<p> Updates an inference experiment that you created. The status of the inference experiment has to be either <code>Created</code>, <code>Running</code>. For more information on the status of an inference experiment, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeInferenceExperiment.html\">DescribeInferenceExperiment</a>. </p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:4990:          "documentation":"<p>The <a href=\"https://docs.docker.com/engine/reference/builder/\">entrypoint script for a Docker container</a> used to run a training job. This script takes precedence over the default train processing instructions. See <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-training-algo-dockerfile.html\">How Amazon SageMaker Runs Your Training Image</a> for more information.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:4994:          "documentation":"<p>The arguments for a container used to run a training job. See <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-training-algo-dockerfile.html\">How Amazon SageMaker Runs Your Training Image</a> for additional information.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:6308:        "MaxRuntimePerTrainingJobInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:6309:          "shape":"MaxRuntimePerTrainingJobInSeconds",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:6312:        "MaxAutoMLJobRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:6313:          "shape":"MaxAutoMLJobRuntimeInSeconds",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:6382:        "MaxAutoMLJobRuntimeReached",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:8639:        "Running",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:11569:        "RuntimeConfig":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:11570:          "shape":"InferenceComponentRuntimeConfig",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:11571:          "documentation":"<p>Runtime settings for a model that is deployed with an inference component.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:13805:          "documentation":"<p>Runtime configuration for rule container.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:17283:        "RuntimeConfig":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:17284:          "shape":"InferenceComponentRuntimeConfigSummary",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:17344:          "documentation":"<p> The status of the inference experiment. The following are the possible statuses for an inference experiment: </p> <ul> <li> <p> <code>Creating</code> - Amazon SageMaker is creating your experiment. </p> </li> <li> <p> <code>Created</code> - Amazon SageMaker has finished the creation of your experiment and will begin the experiment at the scheduled time. </p> </li> <li> <p> <code>Updating</code> - When you make changes to your experiment, your experiment shows as updating. </p> </li> <li> <p> <code>Starting</code> - Amazon SageMaker is beginning your experiment. </p> </li> <li> <p> <code>Running</code> - Your experiment is in progress. </p> </li> <li> <p> <code>Stopping</code> - Amazon SageMaker is stopping your experiment. </p> </li> <li> <p> <code>Completed</code> - Your experiment has completed. </p> </li> <li> <p> <code>Cancelled</code> - When you conclude your experiment early using the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StopInferenceExperiment.html\">StopInferenceExperiment</a> API, or if any operation fails with an unexpected error, it shows as cancelled. </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:18756:        "LastRunTime":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:19206:          "documentation":"<p> Provides detailed information about the state of the training job. For detailed information on the secondary status of the training job, see <code>StatusMessage</code> under <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_SecondaryStatusTransition.html\">SecondaryStatusTransition</a>.</p> <p>SageMaker provides primary statuses and secondary statuses that apply to each of them:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Interrupted</code> - The job stopped because the managed spot training instances were interrupted. </p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>MaxWaitTimeExceeded</code> - The job stopped because it exceeded the maximum allowed wait time.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <important> <p>Valid values for <code>SecondaryStatus</code> are subject to change. </p> </important> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTraining</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:21697:        "RunName":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:23741:        "RuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:23965:    "HyperParameterTuningMaxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:24622:    "InferenceComponentRuntimeConfig":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:24631:      "documentation":"<p>Runtime settings for a model that is deployed with an inference component.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:24633:    "InferenceComponentRuntimeConfigSummary":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:24858:        "Running",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:29770:          "documentation":"<p>Contains a sorted list of <code>PipelineSummary</code> objects matching the specified filters. Each <code>PipelineSummary</code> consists of PipelineArn, PipelineName, ExperimentName, PipelineDescription, CreationTime, LastModifiedTime, LastRunTime, and RoleArn. This list can be empty. </p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:30669:    "MaxAutoMLJobRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:30754:    "MaxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:30758:    "MaxRuntimePerTrainingJobInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:33181:    "MonitoringMaxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:33438:      "required":["MaxRuntimeInSeconds"],
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:33440:        "MaxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:33441:          "shape":"MonitoringMaxRuntimeInSeconds",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:33442:          "documentation":"<p>The maximum runtime allowed in seconds.</p> <note> <p>The <code>MaxRuntimeInSeconds</code> cannot exceed the frequency of the job. For data quality and model explainability, this can be up to 3600 seconds for an hourly schedule. For model bias and model quality hourly schedules, this can be up to 1800 seconds.</p> </note>",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:33593:          "documentation":"<p>The current status of the node. Possible values include <code>Pending</code>, <code>Running</code>, <code>Failed</code>, <code>ShuttingDown</code>, <code>SystemUpdating</code>, <code>DeepHealthCheckInProgress</code>, and <code>NotFound</code>.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:34910:        "LastRunTime":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:35895:    "ProcessingMaxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:36049:      "required":["MaxRuntimeInSeconds"],
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:36051:        "MaxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:36052:          "shape":"ProcessingMaxRuntimeInSeconds",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:36758:          "documentation":"<p>Runtime configuration for rule container.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:38350:        "MaxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:38351:          "shape":"HyperParameterTuningMaxRuntimeInSeconds",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:39180:        "MaxRuntimeExceeded",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:39199:          "documentation":"<p>Contains a secondary status information from a training job.</p> <p>Status might be one of the following secondary statuses:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:40409:        "MaxRuntimeInSeconds":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:40410:          "shape":"MaxRuntimeInSeconds",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:40411:          "documentation":"<p>The maximum length of time, in seconds, that a training or compilation job can run before it is stopped.</p> <p>For compilation jobs, if the job does not complete during this time, a <code>TimeOut</code> error is generated. We recommend starting with 900 seconds and increasing as necessary based on your model.</p> <p>For all other jobs, if the job does not complete during this time, SageMaker ends the job. When <code>RetryStrategy</code> is specified in the job request, <code>MaxRuntimeInSeconds</code> specifies the maximum time for all of the attempts in total, not each individual attempt. The default value is 1 day. The maximum value is 28 days.</p> <p>The maximum time that a <code>TrainingJob</code> can run in total, including any time spent publishing metrics or archiving and uploading models after it has been stopped, is 30 days.</p>",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:40416:          "documentation":"<p>The maximum length of time, in seconds, that a managed Spot training job has to complete. It is the amount of time spent waiting for Spot capacity plus the amount of time the job can run. It must be equal to or greater than <code>MaxRuntimeInSeconds</code>. If the job does not complete during this time, SageMaker ends the job.</p> <p>When <code>RetryStrategy</code> is specified in the job request, <code>MaxWaitTimeInSeconds</code> specifies the maximum time for all of the attempts in total, not each individual attempt.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:41026:          "documentation":"<p>How long a fine-tuning job is allowed to run. For <code>TextGenerationJobConfig</code> problem types, the <code>MaxRuntimePerTrainingJobInSeconds</code> attribute of <code>AutoMLJobCompletionCriteria</code> defaults to 72h (259200s).</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:41656:          "documentation":"<p> Provides detailed information about the state of the training job. For detailed information about the secondary status of the training job, see <code>StatusMessage</code> under <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_SecondaryStatusTransition.html\">SecondaryStatusTransition</a>.</p> <p>SageMaker provides primary statuses and secondary statuses that apply to each of them:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <important> <p>Valid values for <code>SecondaryStatus</code> are subject to change. </p> </important> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:42802:        "RunName":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44276:        "RuntimeConfig":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44277:          "shape":"InferenceComponentRuntimeConfig",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44278:          "documentation":"<p>Runtime settings for a model that is deployed with an inference component.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44296:    "UpdateInferenceComponentRuntimeConfigInput":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44300:        "DesiredRuntimeConfig"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44307:        "DesiredRuntimeConfig":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44308:          "shape":"InferenceComponentRuntimeConfig",
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44309:          "documentation":"<p>Runtime settings for a model that is deployed with an inference component.</p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44313:    "UpdateInferenceComponentRuntimeConfigOutput":{
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:44333:          "documentation":"<p> The duration for which the inference experiment will run. If the status of the inference experiment is <code>Created</code>, then you can update both the start and end dates. If the status of the inference experiment is <code>Running</code>, then you can update only the end date. </p>"
./backend/aws/dist/awscli/botocore/data/sagemaker/2017-07-24/service-2.json:45842:  "documentation":"<p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:1265:          "shape":"RuntimePlatform",
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:1409:          "shape":"RuntimePlatform",
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:2273:          "shape":"RuntimePlatform",
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:2324:          "shape":"RuntimePlatform",
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:2602:          "documentation":"<p>When this parameter is specified, the container is run as the specified user ID (<code>uid</code>). If this parameter isn't specified, the default is the user that's specified in the image metadata. This parameter maps to <code>RunAsUser</code> and <code>MustRanAs</code> policy in the <a href=\"https://kubernetes.io/docs/concepts/security/pod-security-policy/#users-and-groups\">Users and groups pod security policies</a> in the <i>Kubernetes documentation</i>.</p>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:2606:          "documentation":"<p>When this parameter is specified, the container is run as the specified group ID (<code>gid</code>). If this parameter isn't specified, the default is the group that's specified in the image metadata. This parameter maps to <code>RunAsGroup</code> and <code>MustRunAs</code> policy in the <a href=\"https://kubernetes.io/docs/concepts/security/pod-security-policy/#users-and-groups\">Users and groups pod security policies</a> in the <i>Kubernetes documentation</i>.</p>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:2622:          "documentation":"<p>When this parameter is specified, the container is run as a user with a <code>uid</code> other than 0. If this parameter isn't specified, so such rule is enforced. This parameter maps to <code>RunAsUser</code> and <code>MustRunAsNonRoot</code> policy in the <a href=\"https://kubernetes.io/docs/concepts/security/pod-security-policy/#users-and-groups\">Users and groups pod security policies</a> in the <i>Kubernetes documentation</i>.</p>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:2662:          "documentation":"<p>The medium to store the volume. The default value is an empty string, which uses the storage of the node.</p> <dl> <dt>\"\"</dt> <dd> <p> <b>(Default)</b> Use the disk storage of the node.</p> </dd> <dt>\"Memory\"</dt> <dd> <p>Use the <code>tmpfs</code> volume that's backed by the RAM of the node. Contents of the volume are lost when the node reboots, and any storage on the volume counts against the container's memory limit.</p> </dd> </dl>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:3689:        "tmpfs":{
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:3691:          "documentation":"<p>The container path, mount options, and size (in MiB) of the <code>tmpfs</code> mount. This parameter maps to the <code>--tmpfs</code> option to <a href=\"https://docs.docker.com/engine/reference/run/\">docker run</a>.</p> <note> <p>This parameter isn't applicable to jobs that are running on Fargate resources. Don't provide this parameter for this resource type.</p> </note>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:4423:    "RuntimePlatform":{
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:5291:          "documentation":"<p>The absolute file path in the container where the <code>tmpfs</code> volume is mounted.</p>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:5295:          "documentation":"<p>The size (in MiB) of the <code>tmpfs</code> volume.</p>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:5299:          "documentation":"<p>The list of <code>tmpfs</code> volume mount options.</p> <p>Valid values: \"<code>defaults</code>\" | \"<code>ro</code>\" | \"<code>rw</code>\" | \"<code>suid</code>\" | \"<code>nosuid</code>\" | \"<code>dev</code>\" | \"<code>nodev</code>\" | \"<code>exec</code>\" | \"<code>noexec</code>\" | \"<code>sync</code>\" | \"<code>async</code>\" | \"<code>dirsync</code>\" | \"<code>remount</code>\" | \"<code>mand</code>\" | \"<code>nomand</code>\" | \"<code>atime</code>\" | \"<code>noatime</code>\" | \"<code>diratime</code>\" | \"<code>nodiratime</code>\" | \"<code>bind</code>\" | \"<code>rbind\" | \"unbindable\" | \"runbindable\" | \"private\" | \"rprivate\" | \"shared\" | \"rshared\" | \"slave\" | \"rslave\" | \"relatime</code>\" | \"<code>norelatime</code>\" | \"<code>strictatime</code>\" | \"<code>nostrictatime</code>\" | \"<code>mode</code>\" | \"<code>uid</code>\" | \"<code>gid</code>\" | \"<code>nr_inodes</code>\" | \"<code>nr_blocks</code>\" | \"<code>mpol</code>\"</p>"
./backend/aws/dist/awscli/botocore/data/batch/2016-08-10/service-2.json:5302:      "documentation":"<p>The container path, mount options, and size of the <code>tmpfs</code> mount.</p> <note> <p>This object isn't applicable to jobs that are running on Fargate resources.</p> </note>"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/paginators-1.json:9:    "ListJobRuns": {
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/paginators-1.json:13:      "result_key": "jobRuns"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/paginators-1.json:15:    "ListJobRunAttempts": {
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/paginators-1.json:19:      "result_key": "jobRunAttempts"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:16:    "CancelJobRun":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:17:      "name":"CancelJobRun",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:20:        "requestUri":"/applications/{applicationId}/jobruns/{jobRunId}",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:23:      "input":{"shape":"CancelJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:24:      "output":{"shape":"CancelJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:84:    "GetDashboardForJobRun":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:85:      "name":"GetDashboardForJobRun",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:88:        "requestUri":"/applications/{applicationId}/jobruns/{jobRunId}/dashboard",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:91:      "input":{"shape":"GetDashboardForJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:92:      "output":{"shape":"GetDashboardForJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:100:    "GetJobRun":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:101:      "name":"GetJobRun",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:104:        "requestUri":"/applications/{applicationId}/jobruns/{jobRunId}",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:107:      "input":{"shape":"GetJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:108:      "output":{"shape":"GetJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:131:    "ListJobRunAttempts":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:132:      "name":"ListJobRunAttempts",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:135:        "requestUri":"/applications/{applicationId}/jobruns/{jobRunId}/attempts",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:138:      "input":{"shape":"ListJobRunAttemptsRequest"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:139:      "output":{"shape":"ListJobRunAttemptsResponse"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:147:    "ListJobRuns":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:148:      "name":"ListJobRuns",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:154:      "input":{"shape":"ListJobRunsRequest"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:155:      "output":{"shape":"ListJobRunsResponse"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:196:    "StartJobRun":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:197:      "name":"StartJobRun",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:203:      "input":{"shape":"StartJobRunRequest"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:204:      "output":{"shape":"StartJobRunResponse"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:533:    "CancelJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:537:        "jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:546:        "jobRunId":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:547:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:550:          "locationName":"jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:560:    "CancelJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:564:        "jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:571:        "jobRunId":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:572:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:873:    "GetDashboardForJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:877:        "jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:886:        "jobRunId":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:887:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:890:          "locationName":"jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:906:    "GetDashboardForJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:915:    "GetJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:919:        "jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:928:        "jobRunId":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:929:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:932:          "locationName":"jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:942:    "GetJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:944:      "required":["jobRun"],
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:946:        "jobRun":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:947:          "shape":"JobRun",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1132:    "JobRun":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1136:        "jobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1152:        "jobRunId":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1153:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1180:        "executionIamPolicy":{"shape":"JobRunExecutionIamPolicy"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1182:          "shape":"JobRunState",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1216:          "documentation":"<p>Returns the job run timeout value from the <code>StartJobRun</code> call. If no timeout was specified, then it returns the default timeout of 720 minutes.</p>",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1224:          "shape":"JobRunMode",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1258:    "JobRunAttemptSummary":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1279:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1287:          "shape":"JobRunMode",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1315:          "shape":"JobRunState",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1327:          "shape":"JobRunType",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1337:    "JobRunAttempts":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1339:      "member":{"shape":"JobRunAttemptSummary"}
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1341:    "JobRunExecutionIamPolicy":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1355:    "JobRunId":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1361:    "JobRunMode":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1368:    "JobRunState":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1382:    "JobRunStateSet":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1384:      "member":{"shape":"JobRunState"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1388:    "JobRunSummary":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1408:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1416:          "shape":"JobRunMode",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1440:          "shape":"JobRunState",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1452:          "shape":"JobRunType",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1470:    "JobRunType":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1471:    "JobRuns":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1473:      "member":{"shape":"JobRunSummary"}
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1518:    "ListJobRunAttemptsRequest":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1522:        "jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1531:        "jobRunId":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1532:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1535:          "locationName":"jobRunId"
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1544:          "shape":"ListJobRunAttemptsRequestMaxResultsInteger",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1551:    "ListJobRunAttemptsRequestMaxResultsInteger":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1557:    "ListJobRunAttemptsResponse":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1559:      "required":["jobRunAttempts"],
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1561:        "jobRunAttempts":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1562:          "shape":"JobRunAttempts",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1571:    "ListJobRunsRequest":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1588:          "shape":"ListJobRunsRequestMaxResultsInteger",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1606:          "shape":"JobRunStateSet",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1612:          "shape":"JobRunMode",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1619:    "ListJobRunsRequestMaxResultsInteger":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1625:    "ListJobRunsResponse":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1627:      "required":["jobRuns"],
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1629:        "jobRuns":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1630:          "shape":"JobRuns",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1904:        "maxConcurrentRuns":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:1991:    "StartJobRunRequest":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:2015:          "shape":"JobRunExecutionIamPolicy",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:2040:          "shape":"JobRunMode",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:2049:    "StartJobRunResponse":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:2053:        "jobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:2061:        "jobRunId":{
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:2062:          "shape":"JobRunId",
./backend/aws/dist/awscli/botocore/data/emr-serverless/2021-07-13/service-2.json:2381:  "documentation":"<p>Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you don’t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>. The <code>emr-serverless</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless. For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:1630:        "TotalRunningHours":{
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:1631:          "shape":"TotalRunningHours",
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:1653:        "TotalRunningNormalizedUnits":{
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:1654:          "shape":"TotalRunningNormalizedUnits",
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:1794:        "TotalRunningHoursInLookbackPeriod":{
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:2926:          "documentation":"<p>The context for the call to <code>GetDimensionValues</code>. This can be <code>RESERVATIONS</code> or <code>COST_AND_USAGE</code>. The default value is <code>COST_AND_USAGE</code>. If the context is set to <code>RESERVATIONS</code>, the resulting dimension values can be used in the <code>GetReservationUtilization</code> operation. If the context is set to <code>COST_AND_USAGE</code>, the resulting dimension values can be used in the <code>GetCostAndUsage</code> operation.</p> <p>If you set the context to <code>COST_AND_USAGE</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone. An example is <code>us-east-1a</code>.</p> </li> <li> <p>BILLING_ENTITY - The Amazon Web Services seller that your account is with. Possible values are the following:</p> <p>- Amazon Web Services(Amazon Web Services): The entity that sells Amazon Web Services services.</p> <p>- AISPL (Amazon Internet Services Pvt. Ltd.): The local Indian entity that's an acting reseller for Amazon Web Services services in India.</p> <p>- Amazon Web Services Marketplace: The entity that supports the sale of solutions that are built on Amazon Web Services by third-party software providers.</p> </li> <li> <p>CACHE_ENGINE - The Amazon ElastiCache operating system. Examples are Windows or Linux.</p> </li> <li> <p>DEPLOYMENT_OPTION - The scope of Amazon Relational Database Service deployments. Valid values are <code>SingleAZ</code> and <code>MultiAZ</code>.</p> </li> <li> <p>DATABASE_ENGINE - The Amazon Relational Database Service database. Examples are Aurora or MySQL.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>INSTANCE_TYPE_FAMILY - A family of instance types optimized to fit different use cases. Examples are <code>Compute Optimized</code> (for example, <code>C4</code>, <code>C5</code>, <code>C6g</code>, and <code>C7g</code>), <code>Memory Optimization</code> (for example, <code>R4</code>, <code>R5n</code>, <code>R5b</code>, and <code>R6g</code>).</p> </li> <li> <p>INVOICING_ENTITY - The name of the entity that issues the Amazon Web Services invoice.</p> </li> <li> <p>LEGAL_ENTITY_NAME - The name of the organization that sells you Amazon Web Services services, such as Amazon Web Services.</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.</p> </li> <li> <p>OPERATING_SYSTEM - The operating system. Examples are Windows or Linux.</p> </li> <li> <p>OPERATION - The action performed. Examples include <code>RunInstance</code> and <code>CreateBucket</code>.</p> </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.</p> </li> <li> <p>PURCHASE_TYPE - The reservation type of the purchase that this usage is related to. Examples include On-Demand Instances and Standard Reserved Instances.</p> </li> <li> <p>RESERVATION_ID - The unique identifier for an Amazon Web Services Reservation Instance.</p> </li> <li> <p>SAVINGS_PLAN_ARN - The unique identifier for your Savings Plans.</p> </li> <li> <p>SAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance or Compute).</p> </li> <li> <p>SERVICE - The Amazon Web Services service such as Amazon DynamoDB.</p> </li> <li> <p>TENANCY - The tenancy of a resource. Examples are shared or dedicated.</p> </li> <li> <p>USAGE_TYPE - The type of usage. An example is DataTransfer-In-Bytes. The response for the <code>GetDimensionValues</code> operation includes a unit attribute. Examples include GB and Hrs.</p> </li> <li> <p>USAGE_TYPE_GROUP - The grouping of common usage types. An example is Amazon EC2: CloudWatch – Alarms. The response for this operation includes a unit attribute.</p> </li> <li> <p>REGION - The Amazon Web Services Region.</p> </li> <li> <p>RECORD_TYPE - The different types of charges such as Reserved Instance (RI) fees, usage costs, tax refunds, and credits.</p> </li> <li> <p>RESOURCE_ID - The unique identifier of the resource. ResourceId is an opt-in feature only available for last 14 days for EC2-Compute Service.</p> </li> </ul> <p>If you set the context to <code>RESERVATIONS</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone. An example is <code>us-east-1a</code>.</p> </li> <li> <p>CACHE_ENGINE - The Amazon ElastiCache operating system. Examples are Windows or Linux.</p> </li> <li> <p>DEPLOYMENT_OPTION - The scope of Amazon Relational Database Service deployments. Valid values are <code>SingleAZ</code> and <code>MultiAZ</code>.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.</p> </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.</p> </li> <li> <p>REGION - The Amazon Web Services Region.</p> </li> <li> <p>SCOPE (Utilization only) - The scope of a Reserved Instance (RI). Values are regional or a single Availability Zone.</p> </li> <li> <p>TAG (Coverage only) - The tags that are associated with a Reserved Instance (RI).</p> </li> <li> <p>TENANCY - The tenancy of a resource. Examples are shared or dedicated.</p> </li> </ul> <p>If you set the context to <code>SAVINGS_PLANS</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>SAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance or Compute)</p> </li> <li> <p>PAYMENT_OPTION - The payment option for the given Savings Plans (for example, All Upfront)</p> </li> <li> <p>REGION - The Amazon Web Services Region.</p> </li> <li> <p>INSTANCE_TYPE_FAMILY - The family of instances (For example, <code>m5</code>)</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.</p> </li> <li> <p>SAVINGS_PLAN_ARN - The unique identifier for your Savings Plans.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:2957:          "documentation":"<p>The filters that you used to filter your request. Some dimensions are available only for a specific context.</p> <p>If you set the context to <code>COST_AND_USAGE</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone. An example is <code>us-east-1a</code>.</p> </li> <li> <p>DATABASE_ENGINE - The Amazon Relational Database Service database. Examples are Aurora or MySQL.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>LEGAL_ENTITY_NAME - The name of the organization that sells you Amazon Web Services services, such as Amazon Web Services.</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.</p> </li> <li> <p>OPERATING_SYSTEM - The operating system. Examples are Windows or Linux.</p> </li> <li> <p>OPERATION - The action performed. Examples include <code>RunInstance</code> and <code>CreateBucket</code>.</p> </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.</p> </li> <li> <p>PURCHASE_TYPE - The reservation type of the purchase to which this usage is related. Examples include On-Demand Instances and Standard Reserved Instances.</p> </li> <li> <p>SERVICE - The Amazon Web Services service such as Amazon DynamoDB.</p> </li> <li> <p>USAGE_TYPE - The type of usage. An example is DataTransfer-In-Bytes. The response for the <code>GetDimensionValues</code> operation includes a unit attribute. Examples include GB and Hrs.</p> </li> <li> <p>USAGE_TYPE_GROUP - The grouping of common usage types. An example is Amazon EC2: CloudWatch – Alarms. The response for this operation includes a unit attribute.</p> </li> <li> <p>RECORD_TYPE - The different types of charges such as RI fees, usage costs, tax refunds, and credits.</p> </li> <li> <p>RESOURCE_ID - The unique identifier of the resource. ResourceId is an opt-in feature only available for last 14 days for EC2-Compute Service. You can opt-in by enabling <code>Hourly</code> and <code>Resource Level Data</code> in Cost Management Console preferences.</p> </li> </ul> <p>If you set the context to <code>RESERVATIONS</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone. An example is <code>us-east-1a</code>.</p> </li> <li> <p>CACHE_ENGINE - The Amazon ElastiCache operating system. Examples are Windows or Linux.</p> </li> <li> <p>DEPLOYMENT_OPTION - The scope of Amazon Relational Database Service deployments. Valid values are <code>SingleAZ</code> and <code>MultiAZ</code>.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.</p> </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.</p> </li> <li> <p>REGION - The Amazon Web Services Region.</p> </li> <li> <p>SCOPE (Utilization only) - The scope of a Reserved Instance (RI). Values are regional or a single Availability Zone.</p> </li> <li> <p>TAG (Coverage only) - The tags that are associated with a Reserved Instance (RI).</p> </li> <li> <p>TENANCY - The tenancy of a resource. Examples are shared or dedicated.</p> </li> </ul> <p>If you set the context to <code>SAVINGS_PLANS</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>SAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance or Compute)</p> </li> <li> <p>PAYMENT_OPTION - Payment option for the given Savings Plans (for example, All Upfront)</p> </li> <li> <p>REGION - The Amazon Web Services Region.</p> </li> <li> <p>INSTANCE_TYPE_FAMILY - The family of instances (For example, <code>m5</code>)</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.</p> </li> <li> <p>SAVINGS_PLAN_ARN - The unique identifier for your Savings Plan</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:3003:          "documentation":"<p>The value by which you want to sort the data.</p> <p>The following values are supported for <code>Key</code>:</p> <ul> <li> <p> <code>OnDemandCost</code> </p> </li> <li> <p> <code>CoverageHoursPercentage</code> </p> </li> <li> <p> <code>OnDemandHours</code> </p> </li> <li> <p> <code>ReservedHours</code> </p> </li> <li> <p> <code>TotalRunningHours</code> </p> </li> <li> <p> <code>CoverageNormalizedUnitsPercentage</code> </p> </li> <li> <p> <code>OnDemandNormalizedUnits</code> </p> </li> <li> <p> <code>ReservedNormalizedUnits</code> </p> </li> <li> <p> <code>TotalRunningNormalizedUnits</code> </p> </li> <li> <p> <code>Time</code> </p> </li> </ul> <p>Supported values for <code>SortOrder</code> are <code>ASCENDING</code> or <code>DESCENDING</code>.</p>"
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:5786:    "TotalRunningHours":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/ce/2017-10-25/service-2.json:5787:    "TotalRunningNormalizedUnits":{"type":"string"},
./backend/aws/dist/awscli/botocore/data/qbusiness/2023-11-27/service-2.json:10021:  "documentation":"<p>This is the <i>Amazon Q Business</i> API Reference. Amazon Q Business is a fully managed, generative-AI powered enterprise chat assistant that you can deploy within your organization. Amazon Q Business enhances employee productivity by supporting key tasks such as question-answering, knowledge discovery, writing email messages, summarizing text, drafting document outlines, and brainstorming ideas. Users ask questions of Amazon Q Business and get answers that are presented in a conversational manner. For an introduction to the service, see the <a href=\"https://docs.aws.amazon.com/amazonq/latest/business-use-dg/what-is.html\"> <i>Amazon Q Business User Guide</i> </a>.</p> <p>For an overview of the Amazon Q Business APIs, see <a href=\"https://docs.aws.amazon.com/amazonq/latest/business-use-dg/api-ref.html#api-overview\">Overview of Amazon Q Business API operations</a>.</p> <p>For information about the IAM access control permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/amazonq/latest/business-use-dg/iam-roles.html\">IAM roles for Amazon Q Business</a> in the <i>Amazon Q Business User Guide</i>.</p> <p>The following resources provide additional information about using the Amazon Q Business API:</p> <ul> <li> <p> <i> <a href=\"https://docs.aws.amazon.com/amazonq/latest/business-use-dg/setting-up.html\">Setting up for Amazon Q Business</a> </i> </p> </li> <li> <p> <i> <a href=\"https://awscli.amazonaws.com/v2/documentation/api/latest/reference/qbusiness/index.html\">Amazon Q Business CLI Reference</a> </i> </p> </li> <li> <p> <i> <a href=\"https://docs.aws.amazon.com/general/latest/gr/amazonq.html\">Amazon Web Services General Reference</a> </i> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/frauddetector/2019-11-15/service-2.json:1791:          "documentation":"<p>The rule execution mode for the rules included in the detector version.</p> <p>You can define and edit the rule mode at the detector version level, when it is in draft status.</p> <p>If you specify <code>FIRST_MATCHED</code>, Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule.</p> <p>If you specifiy <code>ALL_MATCHED</code>, Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules. </p> <p>The default behavior is <code>FIRST_MATCHED</code>.</p>"
./backend/aws/dist/awscli/botocore/data/frauddetector/2019-11-15/service-2.json:3124:          "documentation":"<p>The execution mode of the rule in the dectector</p> <p> <code>FIRST_MATCHED</code> indicates that Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule.</p> <p> <code>ALL_MATCHED</code> indicates that Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules. You can define and edit the rule mode at the detector version level, when it is in draft status.</p>"
./backend/aws/dist/awscli/botocore/data/frauddetector/2019-11-15/service-2.json:5133:          "documentation":"<p>The rule execution mode to add to the detector.</p> <p>If you specify <code>FIRST_MATCHED</code>, Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule.</p> <p>If you specifiy <code>ALL_MATCHED</code>, Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules. You can define and edit the rule mode at the detector version level, when it is in draft status.</p> <p>The default behavior is <code>FIRST_MATCHED</code>.</p>"
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:8129:        "RunningTasksCount":{
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:8757:          "documentation":"<p>The container path, mount options, and size (in MiB) of the tmpfs mount.</p>"
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:8789:          "documentation":"<p>The absolute file path where the tmpfs volume is to be mounted.</p>"
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:8793:          "documentation":"<p>The list of tmpfs volume mount options.</p> <p>Valid values: <code>\"defaults\"</code> | <code>\"ro\"</code> | <code>\"rw\"</code> | <code>\"suid\"</code> | <code>\"nosuid\"</code> | <code>\"dev\"</code> | <code>\"nodev\"</code> |<code> \"exec\"</code> | <code>\"noexec\"</code> | <code>\"sync\"</code> | <code>\"async\"</code> | <code>\"dirsync\"</code> | <code>\"remount\"</code> | <code>\"mand\"</code> | <code>\"nomand\"</code> | <code>\"atime\"</code> | <code>\"noatime\"</code> | <code>\"diratime\"</code> | <code>\"nodiratime\"</code> | <code>\"bind\"</code> | <code>\"rbind\"</code> | <code>\"unbindable\"</code> | <code>\"runbindable\"</code> | <code>\"private\"</code> | <code>\"rprivate\"</code> | <code>\"shared\"</code> | <code>\"rshared\"</code> | <code>\"slave\"</code> | <code>\"rslave\"</code> | <code>\"relatime\"</code> | <code>\"norelatime\"</code> | <code>\"strictatime\"</code> | <code>\"nostrictatime\"</code> |<code> \"mode\"</code> | <code>\"uid\"</code> | <code>\"gid\"</code> | <code>\"nr_inodes\"</code> |<code> \"nr_blocks\"</code> | <code>\"mpol\"</code> </p>"
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:8797:          "documentation":"<p>The maximum size (in MiB) of the tmpfs volume.</p>"
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:8800:      "documentation":"<p>The container path, mount options, and size (in MiB) of a tmpfs mount.</p>"
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:11168:        "Runtime":{
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:11280:        "CompatibleRuntimes":{
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:11282:          "documentation":"<p>The layer's compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">function runtimes</a>.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy\">Runtime deprecation policy</a> in the <i>Lambda Developer Guide</i>.</p> <p>Array Members: Maximum number of 5 items.</p> <p>Valid Values: <code>nodejs | nodejs4.3 | nodejs6.10 | nodejs8.10 | nodejs10.x | nodejs12.x | nodejs14.x | nodejs16.x | java8 | java8.al2 | java11 | python2.7 | python3.6 | python3.7 | python3.8 | python3.9 | dotnetcore1.0 | dotnetcore2.0 | dotnetcore2.1 | dotnetcore3.1 | dotnet6 | nodejs4.3-edge | go1.x | ruby2.5 | ruby2.7 | provided | provided.al2 | nodejs18.x | python3.10 | java17 | ruby3.2 | python3.11 | nodejs20.x | provided.al2023 | python3.12 | java21</code> </p>"
./backend/aws/dist/awscli/botocore/data/securityhub/2018-10-26/service-2.json:16954:        "ContainerRuntime":{
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:4239:          "documentation":"<p>The version of the bot to build. This can only be the draft version of the bot.</p>",
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:4260:          "documentation":"<p>The version of the bot that was built. This is only the draft version of the bot.</p>"
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:4890:          "documentation":"<p>The version of the bot to create the locale for. This can only be the draft version of the bot.</p>",
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:7588:          "documentation":"<p>Indicates whether we use streaming or non-streaming APIs are used for the test set execution. For streaming, <code>StartConversation</code> Amazon Lex Runtime API is used. Whereas for non-streaming, <code>RecognizeUtterance</code> and <code>RecognizeText</code> Amazon Lex Runtime API is used.</p>"
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:8395:        "runtimeSettings":{"shape":"RuntimeSettings"},
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:8691:          "shape":"RuntimeHints",
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:8692:          "documentation":"<p>Runtime hints for the session state.</p>"
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11461:    "RuntimeHintDetails":{
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11465:          "shape":"RuntimeHintValuesList",
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11475:    "RuntimeHintPhrase":{
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11480:    "RuntimeHintValue":{
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11485:          "shape":"RuntimeHintPhrase",
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11491:    "RuntimeHintValuesList":{
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11493:      "member":{"shape":"RuntimeHintValue"},
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11497:    "RuntimeHints":{
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11507:    "RuntimeSettings":{
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:11976:      "value":{"shape":"RuntimeHintDetails"}
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:12632:          "documentation":"<p>Indicates whether we use streaming or non-streaming APIs for the test set execution. For streaming, StartConversation Runtime API is used. Whereas, for non-streaming, RecognizeUtterance and RecognizeText Amazon Lex Runtime API are used.</p>"
./backend/aws/dist/awscli/botocore/data/lexv2-models/2020-08-07/service-2.json:12661:          "documentation":"<p>Indicates whether we use streaming or non-streaming APIs for the test set execution. For streaming, StartConversation Amazon Lex Runtime API is used. Whereas for non-streaming, RecognizeUtterance and RecognizeText Amazon Lex Runtime API are used.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:9:    "serviceFullName":"AWS App Runner",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:10:    "serviceId":"AppRunner",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:13:    "targetPrefix":"AppRunner",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:31:      "documentation":"<p>Associate your own domain name with the App Runner subdomain URL of your App Runner service.</p> <p>After you call <code>AssociateCustomDomain</code> and receive a successful response, use the information in the <a>CustomDomain</a> record that's returned to add CNAME records to your Domain Name System (DNS). For each mapped domain name, add a mapping to the target App Runner subdomain and one or more certificate validation records. App Runner then performs DNS validation to verify that you own or control the domain name that you associated. App Runner tracks domain validity in a certificate stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:46:      "documentation":"<p>Create an App Runner automatic scaling configuration resource. App Runner requires this resource when you create or update App Runner services and you require non-default auto scaling settings. You can share an auto scaling configuration across multiple services.</p> <p>Create multiple revisions of a configuration by calling this action multiple times using the same <code>AutoScalingConfigurationName</code>. The call returns incremental <code>AutoScalingConfigurationRevision</code> values. When you create a service and configure an auto scaling configuration resource, the service uses the latest active revision of the auto scaling configuration by default. You can optionally configure the service to use a specific revision.</p> <p>Configure a higher <code>MinSize</code> to increase the spread of your App Runner service over more Availability Zones in the Amazon Web Services Region. The tradeoff is a higher minimal cost.</p> <p>Configure a lower <code>MaxSize</code> to control your cost. The tradeoff is lower responsiveness during peak demand.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:61:      "documentation":"<p>Create an App Runner connection resource. App Runner requires a connection resource when you create App Runner services that access private repositories from certain third-party providers. You can share a connection across multiple services.</p> <p>A connection resource is needed to access GitHub and Bitbucket repositories. Both require a user interface approval process through the App Runner console before you can use the connection.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:76:      "documentation":"<p>Create an App Runner observability configuration resource. App Runner requires this resource when you create or update App Runner services and you want to enable non-default observability features. You can share an observability configuration across multiple services.</p> <p>Create multiple revisions of a configuration by calling this action multiple times using the same <code>ObservabilityConfigurationName</code>. The call returns incremental <code>ObservabilityConfigurationRevision</code> values. When you create a service and configure an observability configuration resource, the service uses the latest active revision of the observability configuration by default. You can optionally configure the service to use a specific revision.</p> <p>The observability configuration resource is designed to configure multiple features (currently one feature, tracing). This action takes optional parameters that describe the configuration of these features (currently one parameter, <code>TraceConfiguration</code>). If you don't specify a feature parameter, App Runner doesn't enable the feature.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:91:      "documentation":"<p>Create an App Runner service. After the service is created, the action also automatically starts a deployment.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html\">ListOperations</a> call to track the operation's progress.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:106:      "documentation":"<p>Create an App Runner VPC connector resource. App Runner requires this resource when you want to associate your App Runner service to a custom Amazon Virtual Private Cloud (Amazon VPC).</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:122:      "documentation":"<p>Create an App Runner VPC Ingress Connection resource. App Runner requires this resource when you want to associate your App Runner service with an Amazon VPC endpoint.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:137:      "documentation":"<p>Delete an App Runner automatic scaling configuration resource. You can delete a top level auto scaling configuration, a specific revision of one, or all revisions associated with the top level configuration. You can't delete the default auto scaling configuration or a configuration that's used by one or more App Runner services.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:152:      "documentation":"<p>Delete an App Runner connection. You must first ensure that there are no running App Runner services that use this connection. If there are any, the <code>DeleteConnection</code> action fails.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:167:      "documentation":"<p>Delete an App Runner observability configuration resource. You can delete a specific revision or the latest active revision. You can't delete a configuration that's used by one or more App Runner services.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:183:      "documentation":"<p>Delete an App Runner service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p> <note> <p>Make sure that you don't have any active VPCIngressConnections associated with the service you want to delete. </p> </note>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:198:      "documentation":"<p>Delete an App Runner VPC connector resource. You can't delete a connector that's used by one or more App Runner services.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:214:      "documentation":"<p>Delete an App Runner VPC Ingress Connection resource that's associated with an App Runner service. The VPC Ingress Connection must be in one of the following states to be deleted: </p> <ul> <li> <p> <code>AVAILABLE</code> </p> </li> <li> <p> <code>FAILED_CREATION</code> </p> </li> <li> <p> <code>FAILED_UPDATE</code> </p> </li> <li> <p> <code>FAILED_DELETION</code> </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:229:      "documentation":"<p>Return a full description of an App Runner automatic scaling configuration resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:244:      "documentation":"<p>Return a description of custom domain names that are associated with an App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:259:      "documentation":"<p>Return a full description of an App Runner observability configuration resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:274:      "documentation":"<p>Return a full description of an App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:289:      "documentation":"<p>Return a description of an App Runner VPC connector resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:304:      "documentation":"<p>Return a full description of an App Runner VPC Ingress Connection resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:320:      "documentation":"<p>Disassociate a custom domain name from an App Runner service.</p> <p>Certificates tracking domain validity are associated with a custom domain and are stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>. These certificates aren't deleted as part of this action. App Runner delays certificate deletion for 30 days after a domain is disassociated from your service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:334:      "documentation":"<p>Returns a list of active App Runner automatic scaling configurations in your Amazon Web Services account. You can query the revisions for a specific configuration name or the revisions for all active configurations in your account. You can optionally query only the latest revision of each requested name.</p> <p>To retrieve a full description of a particular configuration revision, call and provide one of the ARNs returned by <code>ListAutoScalingConfigurations</code>.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:348:      "documentation":"<p>Returns a list of App Runner connections that are associated with your Amazon Web Services account.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:362:      "documentation":"<p>Returns a list of active App Runner observability configurations in your Amazon Web Services account. You can query the revisions for a specific configuration name or the revisions for all active configurations in your account. You can optionally query only the latest revision of each requested name.</p> <p>To retrieve a full description of a particular configuration revision, call and provide one of the ARNs returned by <code>ListObservabilityConfigurations</code>.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:377:      "documentation":"<p>Return a list of operations that occurred on an App Runner service.</p> <p>The resulting list of <a>OperationSummary</a> objects is sorted in reverse chronological order. The first object on the list represents the last started operation.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:391:      "documentation":"<p>Returns a list of running App Runner services in your Amazon Web Services account.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:406:      "documentation":"<p>Returns a list of the associated App Runner services using an auto scaling configuration.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:422:      "documentation":"<p>List tags that are associated with for an App Runner resource. The response contains a list of tag key-value pairs.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:436:      "documentation":"<p>Returns a list of App Runner VPC connectors in your Amazon Web Services account.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:450:      "documentation":"<p>Return a list of App Runner VPC Ingress Connections in your Amazon Web Services account.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:466:      "documentation":"<p>Pause an active App Runner service. App Runner reduces compute capacity for the service to zero and loses state (for example, ephemeral storage is removed).</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:482:      "documentation":"<p>Resume an active App Runner service. App Runner provisions compute capacity for the service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:497:      "documentation":"<p>Initiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an App Runner service.</p> <p>For a source code repository, App Runner retrieves the commit and builds a Docker image. For a source image repository, App Runner retrieves the latest Docker image. In both cases, App Runner then deploys the new image to your service and starts a new container instance.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:513:      "documentation":"<p>Add tags to, or update the tag values of, an App Runner resource. A tag is a key-value pair.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:529:      "documentation":"<p>Remove tags from an App Runner resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:560:      "documentation":"<p>Update an App Runner service. You can update the source configuration and instance configuration of the service. You can also update the ARN of the auto scaling configuration resource that's associated with the service. However, you can't change the name or the encryption configuration of the service. These can be set only when you create the service.</p> <p>To update the tags applied to your service, use the separate actions <a>TagResource</a> and <a>UntagResource</a>.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:576:      "documentation":"<p>Update an existing App Runner VPC Ingress Connection resource. The VPC Ingress Connection must be in one of the following states to be updated:</p> <ul> <li> <p> AVAILABLE </p> </li> <li> <p> FAILED_CREATION </p> </li> <li> <p> FAILED_UPDATE </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:594:    "AppRunnerResourceArn":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:608:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:609:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want to associate a custom domain name with.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:617:          "documentation":"<p>Set to <code>true</code> to associate the subdomain <code>www.<i>DomainName</i> </code> with the App Runner service in addition to the base domain.</p> <p>Default: <code>true</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:632:          "documentation":"<p>The App Runner subdomain of the App Runner service. The custom domain name is mapped to this target name.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:635:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:636:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service with which a custom domain name is associated.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:652:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:653:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It's required for GitHub code repositories.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:657:          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It's required for ECR image repositories (but not for ECR Public repositories).</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:666:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:687:          "documentation":"<p>The maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service up.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:691:          "documentation":"<p>The minimum number of instances that App Runner provisions for a service. The service always has at least <code>MinSize</code> provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.</p> <p>App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:707:          "documentation":"<p>Indicates if this auto scaling configuration has an App Runner service associated with it. A value of <code>true</code> indicates one or more services are associated. A value of <code>false</code> indicates no services are associated.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:711:          "documentation":"<p>Indicates if this auto scaling configuration should be used as the default for a new App Runner service that does not have an auto scaling configuration ARN specified during creation. Each account can have only one default <code>AutoScalingConfiguration</code> per region. The default <code>AutoScalingConfiguration</code> can be any revision under the same <code>AutoScalingConfigurationName</code>.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:714:      "documentation":"<p>Describes an App Runner automatic scaling configuration resource.</p> <p>A higher <code>MinSize</code> increases the spread of your App Runner service over more Availability Zones in the Amazon Web Services Region. The tradeoff is a higher minimal cost.</p> <p>A lower <code>MaxSize</code> controls your cost. The tradeoff is lower responsiveness during peak demand.</p> <p>Multiple revisions of a configuration might have the same <code>AutoScalingConfigurationName</code> and different <code>AutoScalingConfigurationRevision</code> values.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:734:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:755:          "documentation":"<p>Indicates if this auto scaling configuration has an App Runner service associated with it. A value of <code>true</code> indicates one or more services are associated. A value of <code>false</code> indicates no services are associated.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:759:          "documentation":"<p>Indicates if this auto scaling configuration should be used as the default for a new App Runner service that does not have an auto scaling configuration ARN specified during creation. Each account can have only one default <code>AutoScalingConfiguration</code> per region. The default <code>AutoScalingConfiguration</code> can be any revision under the same <code>AutoScalingConfigurationName</code>.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:762:      "documentation":"<p>Provides summary information about an App Runner automatic scaling configuration resource.</p> <p>This type contains limited information about an auto scaling configuration. It includes only identification information, without configuration details. It's returned by the <a>ListAutoScalingConfigurations</a> action. Complete configuration information is returned by the <a>CreateAutoScalingConfiguration</a>, <a>DescribeAutoScalingConfiguration</a>, and <a>DeleteAutoScalingConfiguration</a> actions using the <a>AutoScalingConfiguration</a> type.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:791:          "documentation":"<p>The current state of the certificate CNAME record validation. It should change to <code>SUCCESS</code> after App Runner completes validation with your DNS.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:814:          "documentation":"<p>The source of the App Runner configuration. Values are interpreted as follows:</p> <ul> <li> <p> <code>REPOSITORY</code> – App Runner reads configuration values from the <code>apprunner.yaml</code> file in the source code repository and ignores <code>CodeConfigurationValues</code>.</p> </li> <li> <p> <code>API</code> – App Runner uses configuration values provided in <code>CodeConfigurationValues</code> and ignores the <code>apprunner.yaml</code> file in the source code repository.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:818:          "documentation":"<p>The basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a <code>apprunner.yaml</code> file in the source code repository (or ignoring the file if it exists).</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:821:      "documentation":"<p>Describes the configuration that App Runner uses to build and run an App Runner service from a source code repository.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:825:      "required":["Runtime"],
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:827:        "Runtime":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:828:          "shape":"Runtime",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:829:          "documentation":"<p>A runtime environment type for building and running an App Runner service. It represents a programming language runtime.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:833:          "documentation":"<p>The command App Runner runs to build your application.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:837:          "documentation":"<p>The command App Runner runs to start your application.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:843:        "RuntimeEnvironmentVariables":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:844:          "shape":"RuntimeEnvironmentVariables",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:845:          "documentation":"<p>The environment variables that are available to your running App Runner service. An array of key-value pairs.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:847:        "RuntimeEnvironmentSecrets":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:848:          "shape":"RuntimeEnvironmentSecrets",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:852:      "documentation":"<p>Describes the basic configuration needed for building and running an App Runner service. This type doesn't support the full set of possible configuration options. Fur full configuration capabilities, use a <code>apprunner.yaml</code> file in the source code repository.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:895:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:904:          "documentation":"<p>The current state of the App Runner connection. When the state is <code>AVAILABLE</code>, you can use the connection to create an App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:908:          "documentation":"<p>The App Runner connection creation time, expressed as a Unix time stamp.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:911:      "documentation":"<p>Describes an App Runner connection resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:936:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:945:          "documentation":"<p>The current state of the App Runner connection. When the state is <code>AVAILABLE</code>, you can use the connection to create an App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:949:          "documentation":"<p>The App Runner connection creation time, expressed as a Unix time stamp.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:952:      "documentation":"<p>Provides summary information about an App Runner connection resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:970:          "documentation":"<p>A name for the auto scaling configuration. When you use it for the first time in an Amazon Web Services Region, App Runner creates revision number <code>1</code> of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.</p> <note> <p>Prior to the release of <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/release-2023-09-22-auto-scale-config.html\">Auto scale configuration enhancements</a>, the name <code>DefaultConfiguration</code> was reserved. </p> <p>This restriction is no longer in place. You can now manage <code>DefaultConfiguration</code> the same way you manage your custom auto scaling configurations. This means you can do the following with the <code>DefaultConfiguration</code> that App Runner provides:</p> <ul> <li> <p>Create new revisions of the <code>DefaultConfiguration</code>.</p> </li> <li> <p>Delete the revisions of the <code>DefaultConfiguration</code>.</p> </li> <li> <p>Delete the auto scaling configuration for which the App Runner <code>DefaultConfiguration</code> was created.</p> </li> <li> <p>If you delete the auto scaling configuration you can create another custom auto scaling configuration with the same <code>DefaultConfiguration</code> name. The original <code>DefaultConfiguration</code> resource provided by App Runner remains in your account unless you make changes to it.</p> </li> </ul> </note>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:974:          "documentation":"<p>The maximum number of concurrent requests that you want an instance to process. If the number of concurrent requests exceeds this limit, App Runner scales up your service.</p> <p>Default: <code>100</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:978:          "documentation":"<p>The minimum number of instances that App Runner provisions for your service. The service always has at least <code>MinSize</code> provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.</p> <p>App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.</p> <p>Default: <code>1</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:996:          "documentation":"<p>A description of the App Runner auto scaling configuration that's created by this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1009:          "documentation":"<p>A name for the new connection. It must be unique across all App Runner connections for the Amazon Web Services account in the Amazon Web Services Region.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1027:          "documentation":"<p>A description of the App Runner connection that's created by this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1037:          "documentation":"<p>A name for the observability configuration. When you use it for the first time in an Amazon Web Services Region, App Runner creates revision number <code>1</code> of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.</p> <note> <p>The name <code>DefaultConfiguration</code> is reserved. You can't use it to create a new observability configuration, and you can't create a revision of it.</p> <p>When you want to use your own observability configuration for your App Runner service, <i>create a configuration with a different name</i>, and then provide it when you create or update your service.</p> </note>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1041:          "documentation":"<p>The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1055:          "documentation":"<p>A description of the App Runner observability configuration that's created by this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1068:          "documentation":"<p>A name for the App Runner service. It must be unique across all the running App Runner services in your Amazon Web Services account in the Amazon Web Services Region.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1072:          "documentation":"<p>The source to deploy to the App Runner service. It can be a code or an image repository.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1080:          "documentation":"<p>An optional list of metadata items that you can associate with the App Runner service resource. A tag is a key-value pair.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1084:          "documentation":"<p>An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an Amazon Web Services managed key.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1088:          "documentation":"<p>The settings for the health check that App Runner performs to monitor the health of the App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1091:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1092:          "documentation":"<p>The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.</p> <p>Specify an ARN with a name and a revision number to associate that revision. For example: <code>arn:aws:apprunner:us-east-1:123456789012:autoscalingconfiguration/high-availability/3</code> </p> <p>Specify just the name to associate the latest revision. For example: <code>arn:aws:apprunner:us-east-1:123456789012:autoscalingconfiguration/high-availability</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1096:          "documentation":"<p>Configuration settings related to network traffic of the web application that the App Runner service runs.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1113:          "documentation":"<p>A description of the App Runner service that's created by this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1134:          "documentation":"<p>A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.</p> <note> <p> App Runner currently only provides support for IPv4. </p> </note>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1138:          "documentation":"<p>A list of IDs of security groups that App Runner should use for access to Amazon Web Services resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1152:          "documentation":"<p>A description of the App Runner VPC connector that's created by this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1165:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1166:          "documentation":"<p>The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1188:          "documentation":"<p>A description of the App Runner VPC Ingress Connection resource that's created by this request. </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1206:          "documentation":"<p>When <code>true</code>, the subdomain <code>www.<i>DomainName</i> </code> is associated with the App Runner service in addition to the base domain.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1217:      "documentation":"<p>Describes a custom domain that's associated with an App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1246:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1247:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want to delete.</p> <p>The ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either <code>.../<i>name</i> </code> or <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't specified, the latest active revision is deleted.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1261:          "documentation":"<p>A description of the App Runner auto scaling configuration that this request just deleted.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1270:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1271:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner connection that you want to delete.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1280:          "documentation":"<p>A description of the App Runner connection that this request just deleted.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1289:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1290:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner observability configuration that you want to delete.</p> <p>The ARN can be a full observability configuration ARN, or a partial ARN ending with either <code>.../<i>name</i> </code> or <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't specified, the latest active revision is deleted.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1300:          "documentation":"<p>A description of the App Runner observability configuration that this request just deleted.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1309:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1310:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want to delete.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1323:          "documentation":"<p>A description of the App Runner service that this request just deleted.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1336:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1337:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to delete.</p> <p>The ARN must be a full VPC connector ARN.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1347:          "documentation":"<p>A description of the App Runner VPC connector that this request just deleted.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1356:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1357:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner VPC Ingress Connection that you want to delete.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1367:          "documentation":"<p>A description of the App Runner VPC Ingress Connection that this request just deleted.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1376:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1377:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want a description for.</p> <p>The ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either <code>.../<i>name</i> </code> or <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't specified, the latest active revision is described.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1387:          "documentation":"<p>A full description of the App Runner auto scaling configuration that you specified in this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1401:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1402:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want associated custom domain names to be described for.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1425:          "documentation":"<p>The App Runner subdomain of the App Runner service. The associated custom domain names are mapped to this target name.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1428:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1429:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service whose associated custom domain names you want to describe.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1450:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1451:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner observability configuration that you want a description for.</p> <p>The ARN can be a full observability configuration ARN, or a partial ARN ending with either <code>.../<i>name</i> </code> or <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't specified, the latest active revision is described.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1461:          "documentation":"<p>A full description of the App Runner observability configuration that you specified in this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1470:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1471:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want a description for.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1481:          "documentation":"<p>A full description of the App Runner service that you specified in this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1490:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1491:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner VPC connector that you want a description for.</p> <p>The ARN must be a full VPC connector ARN.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1501:          "documentation":"<p>A description of the App Runner VPC connector that you specified in this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1510:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1511:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner VPC Ingress Connection that you want a description for.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1521:          "documentation":"<p>A description of the App Runner VPC Ingress Connection that you specified in this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1533:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1534:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want to disassociate a custom domain name from.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1538:          "documentation":"<p>The domain name that you want to disassociate from the App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1553:          "documentation":"<p>The App Runner subdomain of the App Runner service. The disassociated custom domain name was mapped to this target name.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1556:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1557:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that a custom domain name is disassociated from.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1583:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1584:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when <code>EgressType = VPC</code>.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1587:      "documentation":"<p>Describes configuration settings related to outbound network traffic of an App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1605:      "documentation":"<p>Describes a custom encryption key that App Runner uses to encrypt copies of the source repository and service logs.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1617:          "documentation":"<p>The IP protocol that App Runner uses to perform health checks for your service.</p> <p>If you set <code>Protocol</code> to <code>HTTP</code>, App Runner sends health check requests to the HTTP path specified by <code>Path</code>.</p> <p>Default: <code>TCP</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1633:          "documentation":"<p>The number of consecutive checks that must succeed before App Runner decides that the service is healthy.</p> <p>Default: <code>1</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1637:          "documentation":"<p>The number of consecutive checks that must fail before App Runner decides that the service is unhealthy.</p> <p>Default: <code>5</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1640:      "documentation":"<p>Describes the settings for the health check that App Runner performs to monitor the health of a service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1676:        "RuntimeEnvironmentVariables":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1677:          "shape":"RuntimeEnvironmentVariables",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1678:          "documentation":"<p>Environment variables that are available to your running App Runner service. An array of key-value pairs.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1682:          "documentation":"<p>An optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1688:        "RuntimeEnvironmentSecrets":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1689:          "shape":"RuntimeEnvironmentSecrets",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1693:      "documentation":"<p>Describes the configuration that App Runner uses to run an App Runner service using an image pulled from a source image repository.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1735:          "documentation":"<p>Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to <code>True</code>. To make the service privately accessible, from only within an Amazon VPC set it to <code>False</code>. </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1749:          "documentation":"<p>The ID of the VPC endpoint that your App Runner service connects to. </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1752:      "documentation":"<p>The configuration of your VPC and the associated VPC endpoint. The VPC endpoint is an Amazon Web Services PrivateLink resource that allows access to your App Runner services from within an Amazon VPC.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1759:          "documentation":"<p>The number of CPU units reserved for each instance of your App Runner service.</p> <p>Default: <code>1 vCPU</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1763:          "documentation":"<p>The amount of memory, in MB or GB, reserved for each instance of your App Runner service.</p> <p>Default: <code>2 GB</code> </p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1767:          "documentation":"<p>The Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1770:      "documentation":"<p>Describes the runtime configuration of an App Runner service instance (scaling unit).</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1818:          "documentation":"<p>The name of the App Runner auto scaling configuration that you want to list. If specified, App Runner lists revisions that share this name. If not specified, App Runner returns revisions of all active configurations.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1884:          "documentation":"<p>The name of the App Runner observability configuration that you want to list. If specified, App Runner lists revisions that share this name. If not specified, App Runner returns revisions of all active configurations.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1924:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1925:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want a list of operations for.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1955:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:1956:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want to list the services for.</p> <p>The ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either <code>.../<i>name</i> </code> or <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't specified, the latest active revision is used.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2014:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2015:          "documentation":"<p>The Amazon Resource Name (ARN) of the resource that a tag list is requested for.</p> <p>It must be the ARN of an App Runner resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2059:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2127:          "documentation":"<p>App Runner provides you with the option to choose between <i>Internet Protocol version 4 (IPv4)</i> and <i>dual stack</i> (IPv4 and IPv6) for your incoming public network configuration. This is an optional parameter. If you do not specify an <code>IpAddressType</code>, it defaults to select IPv4.</p> <note> <p> Currently, App Runner supports dual stack for only Public endpoint. Only IPv4 is supported for Private endpoint. If you update a service that's using dual-stack Public endpoint to a Private endpoint, your App Runner service will default to support only IPv4 for Private endpoint and fail to receive traffic originating from IPv6 endpoint. </p> </note>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2130:      "documentation":"<p>Describes configuration settings related to network traffic of an App Runner service. Consists of embedded objects for each configurable network feature.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2143:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2175:      "documentation":"<p>Describes an App Runner observability configuration resource. Multiple revisions of a configuration have the same <code>ObservabilityConfigurationName</code> and different <code>ObservabilityConfigurationRevision</code> values.</p> <p>The resource is designed to configure multiple features (currently one feature, tracing). This type contains optional members that describe the configuration of these features (currently one member, <code>TraceConfiguration</code>). If a feature member isn't specified, the feature isn't enabled.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2194:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2206:      "documentation":"<p>Provides summary information about an App Runner observability configuration resource.</p> <p>This type contains limited information about an observability configuration. It includes only identification information, without configuration details. It's returned by the <a>ListObservabilityConfigurations</a> action. Complete configuration information is returned by the <a>CreateObservabilityConfiguration</a>, <a>DescribeObservabilityConfiguration</a>, and <a>DeleteObservabilityConfiguration</a> actions using the <a>ObservabilityConfiguration</a> type.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2229:          "documentation":"<p>A unique ID of this operation. It's unique in the scope of the App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2240:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2241:          "documentation":"<p>The Amazon Resource Name (ARN) of the resource that the operation acted on (for example, an App Runner service).</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2256:      "documentation":"<p>Provides summary information for an operation that occurred on an App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2278:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2279:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want to pause.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2289:          "documentation":"<p>A description of the App Runner service that this request just paused.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2317:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2318:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want to resume.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2328:          "documentation":"<p>A description of the App Runner service that this request just resumed.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2342:    "Runtime":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2360:    "RuntimeEnvironmentSecrets":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2362:      "key":{"shape":"RuntimeEnvironmentSecretsName"},
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2363:      "value":{"shape":"RuntimeEnvironmentSecretsValue"}
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2365:    "RuntimeEnvironmentSecretsName":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2371:    "RuntimeEnvironmentSecretsValue":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2377:    "RuntimeEnvironmentVariables":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2379:      "key":{"shape":"RuntimeEnvironmentVariablesKey"},
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2380:      "value":{"shape":"RuntimeEnvironmentVariablesValue"}
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2382:    "RuntimeEnvironmentVariablesKey":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2389:    "RuntimeEnvironmentVariablesValue":{
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2417:          "documentation":"<p>An ID that App Runner generated for this service. It's unique within the Amazon Web Services Region.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2420:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2425:          "documentation":"<p>A subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2429:          "documentation":"<p>The time when the App Runner service was created. It's in the Unix time stamp format.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2433:          "documentation":"<p>The time when the App Runner service was last updated at. It's in the Unix time stamp format.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2437:          "documentation":"<p>The time when the App Runner service was deleted. It's in the Unix time stamp format.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2441:          "documentation":"<p>The current state of the App Runner service. These particular values mean the following.</p> <ul> <li> <p> <code>CREATE_FAILED</code> – The service failed to create. The failed service isn't usable, and still counts towards your service quota. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and rebuild your service using <code>UpdateService</code>.</p> </li> <li> <p> <code>DELETE_FAILED</code> – The service failed to delete and can't be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2445:          "documentation":"<p>The source deployed to the App Runner service. It can be a code or an image repository.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2453:          "documentation":"<p>The encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be either a customer-provided encryption key or an Amazon Web Services managed key.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2457:          "documentation":"<p>The settings for the health check that App Runner performs to monitor the health of this service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2461:          "documentation":"<p>Summary information for the App Runner automatic scaling configuration resource that's associated with this service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2472:      "documentation":"<p>Describes an App Runner service. It can describe a service in any state, including deleted services.</p> <p>This type contains the full information about a service, including configuration details. It's returned by the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html\">CreateService</a>, <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html\">DescribeService</a>, and <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html\">DeleteService</a> actions. A subset of this information is returned by the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html\">ListServices</a> action using the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_ServiceSummary.html\">ServiceSummary</a> type.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2476:      "member":{"shape":"AppRunnerResourceArn"}
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2504:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2508:      "documentation":"<p>Describes the observability configuration of an App Runner service. These are additional observability features, like tracing, that you choose to enable. They're configured in a separate resource that you associate with your service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2515:      "documentation":"<p>App Runner can't create this resource. You've reached your account quota for this resource type.</p> <p>For App Runner per-resource quotas, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2538:          "documentation":"<p>An ID that App Runner generated for this service. It's unique within the Amazon Web Services Region.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2541:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2546:          "documentation":"<p>A subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2550:          "documentation":"<p>The time when the App Runner service was created. It's in the Unix time stamp format.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2554:          "documentation":"<p>The time when the App Runner service was last updated. It's in theUnix time stamp format.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2558:          "documentation":"<p>The current state of the App Runner service. These particular values mean the following.</p> <ul> <li> <p> <code>CREATE_FAILED</code> – The service failed to create. The failed service isn't usable, and still counts towards your service quota. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and rebuild your service using <code>UpdateService</code>.</p> </li> <li> <p> <code>DELETE_FAILED</code> – The service failed to delete and can't be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.</p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2561:      "documentation":"<p>Provides summary information for an App Runner service.</p> <p>This type contains limited information about a service. It doesn't include configuration details. It's returned by the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html\">ListServices</a> action. Complete service information is returned by the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html\">CreateService</a>, <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html\">DescribeService</a>, and <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html\">DeleteService</a> actions using the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_Service.html\">Service</a> type.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2580:          "documentation":"<p>A source code version.</p> <p>For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2583:      "documentation":"<p>Identifies a version of code that App Runner refers to within a source code repository.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2602:          "documentation":"<p>If <code>true</code>, continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.</p> <p>Default: App Runner sets to <code>false</code> for a source image that uses an ECR Public repository or an ECR repository that's in an Amazon Web Services account other than the one that the service is in. App Runner sets to <code>true</code> in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2609:      "documentation":"<p>Describes the source deployed to an App Runner service. It can be a code or an image repository.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2627:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2628:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want to manually deploy to.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2664:      "documentation":"<p>Describes a tag that is applied to an App Runner resource. A tag is a metadata item consisting of a key-value pair.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2688:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2689:          "documentation":"<p>The Amazon Resource Name (ARN) of the resource that you want to update tags for.</p> <p>It must be the ARN of an App Runner resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2715:          "documentation":"<p>The implementation provider chosen for tracing App Runner services.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2718:      "documentation":"<p>Describes the configuration of the tracing feature within an App Runner observability configuration.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2738:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2739:          "documentation":"<p>The Amazon Resource Name (ARN) of the resource that you want to remove tags from.</p> <p>It must be the ARN of an App Runner resource.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2757:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2758:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want to set as the default.</p> <p>The ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either <code>.../<i>name</i> </code> or <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't specified, the latest active revision is set as the default.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2768:          "documentation":"<p>A description of the App Runner auto scaling configuration that was set as default.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2777:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2778:          "documentation":"<p>The Amazon Resource Name (ARN) of the App Runner service that you want to update.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2782:          "documentation":"<p>The source configuration to apply to the App Runner service.</p> <p>You can change the configuration of the code or image repository that the service uses. However, you can't switch from code to image or the other way around. This means that you must provide the same structure member of <code>SourceConfiguration</code> that you originally included when you created the service. Specifically, you can include either <code>CodeRepository</code> or <code>ImageRepository</code>. To update the source configuration, set the values to members of the structure that you include.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2789:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2790:          "documentation":"<p>The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with the App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2794:          "documentation":"<p>The settings for the health check that App Runner performs to monitor the health of the App Runner service.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2798:          "documentation":"<p>Configuration settings related to network traffic of the web application that the App Runner service runs.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2815:          "documentation":"<p>A description of the App Runner service updated by this request. All configuration values in the returned <code>Service</code> structure reflect configuration changes that are being applied by this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2831:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2832:          "documentation":"<p>The Amazon Resource Name (Arn) for the App Runner VPC Ingress Connection resource that you want to update.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2846:          "documentation":"<p>A description of the App Runner VPC Ingress Connection resource that's updated by this request.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2858:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2863:          "documentation":"<p>The revision of this VPC connector. It's unique among all the active connectors (<code>\"Status\": \"ACTIVE\"</code>) that share the same <code>Name</code>.</p> <note> <p>At this time, App Runner supports only one revision per name.</p> </note>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2867:          "documentation":"<p>A list of IDs of subnets that App Runner uses for your service. All IDs are of subnets of a single Amazon VPC.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2871:          "documentation":"<p>A list of IDs of security groups that App Runner uses for access to Amazon Web Services resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2886:      "documentation":"<p>Describes an App Runner VPC connector resource. A VPC connector describes the Amazon Virtual Private Cloud (Amazon VPC) that an App Runner service is associated with, and the subnets and security group that are used.</p> <p>Multiple revisions of a connector might have the same <code>Name</code> and different <code>Revision</code> values.</p> <note> <p>At this time, App Runner supports only one revision per name.</p> </note>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2909:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2931:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2939:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2964:          "documentation":"<p>The time when the App Runner service was deleted. It's in the Unix time stamp format.</p> <ul> <li> <p> Type: Timestamp </p> </li> <li> <p> Required: No </p> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2967:      "documentation":"<p>The App Runner resource that specifies an App Runner endpoint for incoming traffic. It establishes a connection between a VPC interface endpoint and a App Runner service, to make your App Runner service accessible from only within an Amazon VPC.</p>"
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2992:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:2996:          "shape":"AppRunnerResourceArn",
./backend/aws/dist/awscli/botocore/data/apprunner/2020-05-15/service-2.json:3007:  "documentation":"<fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>"
./backend/aws/dist/awscli/botocore/data/iotsitewise/2019-12-02/service-2.json:1056:      "documentation":"<p>Run SQL queries to retrieve metadata and time-series data from asset models, assets, measurements, metrics, transforms, and aggregates.</p>",
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:250:    "ReportTaskRunnerHeartbeat":{
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:251:      "name":"ReportTaskRunnerHeartbeat",
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:256:      "input":{"shape":"ReportTaskRunnerHeartbeatInput"},
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:257:      "output":{"shape":"ReportTaskRunnerHeartbeatOutput"},
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:262:      "documentation":"<p>Task runners call <code>ReportTaskRunnerHeartbeat</code> every 15 minutes to indicate that they are operational. If the AWS Data Pipeline Task Runner is launched on a resource managed by AWS Data Pipeline, the web service can use this call to detect when the task runner application has failed and restart a new instance.</p>"
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:1026:    "ReportTaskRunnerHeartbeatInput":{
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:1032:          "documentation":"<p>The ID of the task runner. This value should be unique across your AWS account. In the case of AWS Data Pipeline Task Runner launched on a resource managed by AWS Data Pipeline, the web service provides a unique identifier when it launches the application. If you have written a custom task runner, you should assign a unique identifier for the task runner.</p>"
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:1043:      "documentation":"<p>Contains the parameters for ReportTaskRunnerHeartbeat.</p>"
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:1045:    "ReportTaskRunnerHeartbeatOutput":{
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:1054:      "documentation":"<p>Contains the output of ReportTaskRunnerHeartbeat.</p>"
./backend/aws/dist/awscli/botocore/data/datapipeline/2012-10-29/service-2.json:1367:  "documentation":"<p>AWS Data Pipeline configures and manages a data-driven workflow called a pipeline. AWS Data Pipeline handles the details of scheduling and ensuring that data dependencies are met so that your application can focus on processing the data.</p> <p>AWS Data Pipeline provides a JAR implementation of a task runner called AWS Data Pipeline Task Runner. AWS Data Pipeline Task Runner provides logic for common data management scenarios, such as performing database queries and running data analysis using Amazon Elastic MapReduce (Amazon EMR). You can use AWS Data Pipeline Task Runner as your task runner, or you can write your own task runner to provide custom data management.</p> <p>AWS Data Pipeline implements two main sets of functionality. Use the first set to create a pipeline and define data sources, schedules, dependencies, and the transforms to be performed on the data. Use the second set in your task runner application to receive the next task ready for processing. The logic for performing the task, such as querying the data, running data analysis, or converting the data from one format to another, is contained within the task runner. The task runner performs the task assigned to it by the web service, reporting progress to the web service as it does so. When the task is done, the task runner reports the final success or failure of the task to the web service.</p>"
./backend/aws/dist/awscli/botocore/data/license-manager/2018-08-01/service-2.json:1029:        "LastRunTime":{
./backend/aws/dist/awscli/botocore/data/license-manager/2018-08-01/service-2.json:2051:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/license-manager/2018-08-01/service-2.json:3865:        "LastRunStatus":{
./backend/aws/dist/awscli/botocore/data/license-manager/2018-08-01/service-2.json:3869:        "LastRunFailureReason":{
./backend/aws/dist/awscli/botocore/data/arc-region-switch/2022-07-26/service-2.json:746:        "regionToRun"
./backend/aws/dist/awscli/botocore/data/arc-region-switch/2022-07-26/service-2.json:761:        "regionToRun":{
./backend/aws/dist/awscli/botocore/data/arc-region-switch/2022-07-26/service-2.json:762:          "shape":"RegionToRunIn",
./backend/aws/dist/awscli/botocore/data/arc-region-switch/2022-07-26/service-2.json:1993:    "RegionToRunIn":{
./backend/aws/dist/awscli/botocore/data/wisdom/2020-10-19/service-2.json:720:          "documentation":"<p>The Amazon Resource Name (ARN) of the AppIntegrations DataIntegration to use for ingesting content.</p> <ul> <li> <p> For <a href=\"https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm\"> Salesforce</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if objectFields is not provided, including at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code> as source fields. </p> </li> <li> <p> For <a href=\"https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api\"> ServiceNow</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if objectFields is not provided, including at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code> as source fields. </p> </li> <li> <p> For <a href=\"https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/\"> Zendesk</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration if <code>objectFields</code> is not provided, including at least <code>id</code>, <code>title</code>, <code>updated_at</code>, and <code>draft</code> as source fields. </p> </li> <li> <p> For <a href=\"https://learn.microsoft.com/en-us/sharepoint/dev/sp-add-ins/sharepoint-net-server-csom-jsom-and-rest-api-index\">SharePoint</a>, your AppIntegrations DataIntegration must have a FileConfiguration, including only file extensions that are among <code>docx</code>, <code>pdf</code>, <code>html</code>, <code>htm</code>, and <code>txt</code>. </p> </li> <li> <p> For <a href=\"https://aws.amazon.com/s3/\">Amazon S3</a>, the ObjectConfiguration and FileConfiguration of your AppIntegrations DataIntegration must be null. The <code>SourceURI</code> of your DataIntegration must use the following format: <code>s3://your_s3_bucket_name</code>.</p> <important> <p>The bucket policy of the corresponding S3 bucket must allow the Amazon Web Services principal <code>app-integrations.amazonaws.com</code> to perform <code>s3:ListBucket</code>, <code>s3:GetObject</code>, and <code>s3:GetBucketLocation</code> against the bucket.</p> </important> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/wisdom/2020-10-19/service-2.json:724:          "documentation":"<p>The fields from the source that are made available to your agents in Wisdom. Optional if ObjectConfiguration is included in the provided DataIntegration. </p> <ul> <li> <p> For <a href=\"https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm\"> Salesforce</a>, you must include at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code>. </p> </li> <li> <p>For <a href=\"https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api\"> ServiceNow</a>, you must include at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code>. </p> </li> <li> <p>For <a href=\"https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/\"> Zendesk</a>, you must include at least <code>id</code>, <code>title</code>, <code>updated_at</code>, and <code>draft</code>. </p> </li> </ul> <p>Make sure to include additional fields. These fields are indexed and used to source recommendations. </p>"
./backend/aws/dist/awscli/botocore/data/wisdom/2020-10-19/service-2.json:3404:          "documentation":"<p>A URI template containing exactly one variable in <code>${variableName} </code>format. This can only be set for <code>EXTERNAL</code> knowledge bases. For Salesforce, ServiceNow, and Zendesk, the variable must be one of the following:</p> <ul> <li> <p>Salesforce: <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, or <code>IsDeleted</code> </p> </li> <li> <p>ServiceNow: <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, or <code>active</code> </p> </li> <li> <p>Zendesk: <code>id</code>, <code>title</code>, <code>updated_at</code>, or <code>draft</code> </p> </li> </ul> <p>The variable is replaced with the actual value for a piece of content when calling <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_GetContent.html\">GetContent</a>. </p>"
./backend/aws/dist/awscli/botocore/data/connectcampaigns/2021-01-30/service-2.json:553:        "Running",
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1077:        "incrementalRunConfig":{
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1078:          "shape":"IncrementalRunConfig",
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1079:          "documentation":"<p>Optional. An object that defines the incremental run type. This object contains only the <code>incrementalRunType</code> field, which appears as \"Automatic\" in the console. </p> <important> <p>For workflows where <code>resolutionType</code> is <code>ML_MATCHING</code>, incremental processing is not supported. </p> </important>"
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1126:        "incrementalRunConfig":{
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1127:          "shape":"IncrementalRunConfig",
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1128:          "documentation":"<p>An object which defines an incremental run type and has only <code>incrementalRunType</code> as a field.</p>"
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1846:        "incrementalRunConfig":{
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1847:          "shape":"IncrementalRunConfig",
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:1848:          "documentation":"<p>An object which defines an incremental run type and has only <code>incrementalRunType</code> as a field.</p>"
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:2391:    "IncrementalRunConfig":{
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:2394:        "incrementalRunType":{
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:2395:          "shape":"IncrementalRunType",
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:2399:      "documentation":"<p>Optional. An object that defines the incremental run type. This object contains only the <code>incrementalRunType</code> field, which appears as \"Automatic\" in the console. </p> <important> <p>For workflows where <code>resolutionType</code> is <code>ML_MATCHING</code>, incremental processing is not supported. </p> </important>"
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:2401:    "IncrementalRunType":{
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:4029:        "incrementalRunConfig":{
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:4030:          "shape":"IncrementalRunConfig",
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:4031:          "documentation":"<p>Optional. An object that defines the incremental run type. This object contains only the <code>incrementalRunType</code> field, which appears as \"Automatic\" in the console. </p> <important> <p>For workflows where <code>resolutionType</code> is <code>ML_MATCHING</code>, incremental processing is not supported. </p> </important>"
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:4069:        "incrementalRunConfig":{
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:4070:          "shape":"IncrementalRunConfig",
./backend/aws/dist/awscli/botocore/data/entityresolution/2018-05-10/service-2.json:4071:          "documentation":"<p>An object which defines an incremental run type and has only <code>incrementalRunType</code> as a field.</p>"
./backend/aws/dist/awscli/botocore/data/marketplace-catalog/2018-09-17/service-2.json:1726:      "documentation":"<p>The visibility status of a machine learning product. Valid values are:</p> <ul> <li> <p> <code>Limited</code> - The product is available to a limited set of buyers.</p> </li> <li> <p> <code>Public</code> - The product is publicly available to all buyers.</p> </li> <li> <p> <code>Restricted</code> - The product has restricted availability.</p> </li> <li> <p> <code>Draft</code> - The product is in draft state and not yet available to buyers.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/waiters-2.json:300:    "RunCompleted" : {
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/waiters-2.json:304:      "operation" : "GetRun",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/waiters-2.json:337:    "RunRunning" : {
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/waiters-2.json:341:      "operation" : "GetRun",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/waiters-2.json:373:      "operation" : "GetRunTask",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/waiters-2.json:406:    "TaskRunning" : {
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/waiters-2.json:410:      "operation" : "GetRunTask",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/paginators-1.json:57:    "ListRunGroups": {
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/paginators-1.json:63:    "ListRunTasks": {
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/paginators-1.json:69:    "ListRuns": {
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/paginators-1.json:123:    "ListRunCaches": {
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:100:    "CancelRun":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:101:      "name":"CancelRun",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:107:      "input":{"shape":"CancelRunRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:118:      "documentation":"<p>Cancels a run using its ID and returns a response with no body if the operation is successful. To confirm that the run has been cancelled, use the <code>ListRuns</code> API operation to check that it is no longer listed.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:247:    "CreateRunCache":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:248:      "name":"CreateRunCache",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:254:      "input":{"shape":"CreateRunCacheRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:255:      "output":{"shape":"CreateRunCacheResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:269:    "CreateRunGroup":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:270:      "name":"CreateRunGroup",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:276:      "input":{"shape":"CreateRunGroupRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:277:      "output":{"shape":"CreateRunGroupResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:484:    "DeleteRun":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:485:      "name":"DeleteRun",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:491:      "input":{"shape":"DeleteRunRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:502:      "documentation":"<p>Deletes a run and returns a response with no body if the operation is successful. You can only delete a run that has reached a <code>COMPLETED</code>, <code>FAILED</code>, or <code>CANCELLED</code> stage. A completed run has delivered an output, or was cancelled and resulted in no output. When you delete a run, only the metadata associated with the run is deleted. The run outputs remain in Amazon S3 and logs remain in CloudWatch.</p> <p>To verify that the workflow is deleted:</p> <ul> <li> <p>Use <code>ListRuns</code> to confirm the workflow no longer appears in the list.</p> </li> <li> <p>Use <code>GetRun</code> to verify the workflow cannot be found.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:506:    "DeleteRunCache":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:507:      "name":"DeleteRunCache",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:513:      "input":{"shape":"DeleteRunCacheRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:528:    "DeleteRunGroup":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:529:      "name":"DeleteRunGroup",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:535:      "input":{"shape":"DeleteRunGroupRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:546:      "documentation":"<p>Deletes a run group and returns a response with no body if the operation is successful.</p> <p>To verify that the run group is deleted:</p> <ul> <li> <p>Use <code>ListRunGroups</code> to confirm the workflow no longer appears in the list.</p> </li> <li> <p>Use <code>GetRunGroup</code> to verify the workflow cannot be found.</p> </li> </ul>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:921:    "GetRun":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:922:      "name":"GetRun",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:928:      "input":{"shape":"GetRunRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:929:      "output":{"shape":"GetRunResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:940:      "documentation":"<p>Gets detailed information about a specific run using its ID.</p> <p>Amazon Web Services HealthOmics stores a configurable number of runs, as determined by service limits, that are available to the console and API. If <code>GetRun</code> does not return the requested run, you can find all run logs in the CloudWatch logs. For more information about viewing the run logs, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/monitoring-cloudwatch-logs.html\">CloudWatch logs</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:943:    "GetRunCache":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:944:      "name":"GetRunCache",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:950:      "input":{"shape":"GetRunCacheRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:951:      "output":{"shape":"GetRunCacheResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:965:    "GetRunGroup":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:966:      "name":"GetRunGroup",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:972:      "input":{"shape":"GetRunGroupRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:973:      "output":{"shape":"GetRunGroupResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:987:    "GetRunTask":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:988:      "name":"GetRunTask",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:994:      "input":{"shape":"GetRunTaskRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:995:      "output":{"shape":"GetRunTaskResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1394:    "ListRunCaches":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1395:      "name":"ListRunCaches",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1401:      "input":{"shape":"ListRunCachesRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1402:      "output":{"shape":"ListRunCachesResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1416:    "ListRunGroups":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1417:      "name":"ListRunGroups",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1423:      "input":{"shape":"ListRunGroupsRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1424:      "output":{"shape":"ListRunGroupsResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1438:    "ListRunTasks":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1439:      "name":"ListRunTasks",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1445:      "input":{"shape":"ListRunTasksRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1446:      "output":{"shape":"ListRunTasksResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1460:    "ListRuns":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1461:      "name":"ListRuns",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1467:      "input":{"shape":"ListRunsRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1468:      "output":{"shape":"ListRunsResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1479:      "documentation":"<p>Retrieves a list of runs and returns each run's metadata and status.</p> <p>Amazon Web Services HealthOmics stores a configurable number of runs, as determined by service limits, that are available to the console and API. If the <code>ListRuns</code> response doesn't include specific runs that you expected, you can find all run logs in the CloudWatch logs. For more information about viewing the run logs, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/monitoring-cloudwatch-logs.html\">CloudWatch logs</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1623:      "documentation":"<p>Retrieves a list of existing workflows. You can filter for specific workflows by their name and type. Using the type parameter, specify <code>PRIVATE</code> to retrieve a list of private workflows or specify <code>READY2RUN</code> for a list of all Ready2Run workflows. If you do not specify the type of workflow, this operation returns a list of existing workflows.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1751:    "StartRun":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1752:      "name":"StartRun",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1758:      "input":{"shape":"StartRunRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1759:      "output":{"shape":"StartRunResponse"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1770:      "documentation":"<p>Starts a new run and returns details about the run, or duplicates an existing run. A run is a single invocation of a workflow. If you provide request IDs, Amazon Web Services HealthOmics identifies duplicate requests and starts the run only once. Monitor the progress of the run by calling the <code>GetRun</code> API operation.</p> <p>To start a new run, the following inputs are required:</p> <ul> <li> <p>A service role ARN (<code>roleArn</code>).</p> </li> <li> <p>The run's workflow ID (<code>workflowId</code>, not the <code>uuid</code> or <code>runId</code>).</p> </li> <li> <p>An Amazon S3 location (<code>outputUri</code>) where the run outputs will be saved.</p> </li> <li> <p>All required workflow parameters (<code>parameter</code>), which can include optional parameters from the parameter template. The run cannot include any parameters that are not defined in the parameter template. To see all possible parameters, use the <code>GetRun</code> API operation. </p> </li> <li> <p>For runs with a <code>STATIC</code> (default) storage type, specify the required storage capacity (in gibibytes). A storage capacity value is not required for runs that use <code>DYNAMIC</code> storage.</p> </li> </ul> <p> <code>StartRun</code> can also duplicate an existing run using the run's default values. You can modify these default values and/or add other optional inputs. To duplicate a run, the following inputs are required:</p> <ul> <li> <p>A service role ARN (<code>roleArn</code>).</p> </li> <li> <p>The ID of the run to duplicate (<code>runId</code>).</p> </li> <li> <p>An Amazon S3 location where the run outputs will be saved (<code>outputUri</code>).</p> </li> </ul> <p>To learn more about the optional parameters for <code>StartRun</code>, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/starting-a-run.html\">Starting a run</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p> <p>Use the <code>retentionMode</code> input to control how long the metadata for each run is stored in CloudWatch. There are two retention modes:</p> <ul> <li> <p>Specify <code>REMOVE</code> to automatically remove the oldest runs when you reach the maximum service retention limit for runs. It is recommended that you use the <code>REMOVE</code> mode to initiate major run requests so that your runs do not fail when you reach the limit.</p> </li> <li> <p>The <code>retentionMode</code> is set to the <code>RETAIN</code> mode by default, which allows you to manually remove runs after reaching the maximum service retention limit. Under this setting, you cannot create additional runs until you remove the excess runs.</p> </li> </ul> <p>To learn more about the retention modes, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/run-retention.html\">Run retention mode</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1876:    "UpdateRunCache":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1877:      "name":"UpdateRunCache",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1883:      "input":{"shape":"UpdateRunCacheRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1894:      "documentation":"<p>Updates a run cache using its ID and returns a response with no body if the operation is successful. You can update the run cache description, name, or the default run cache behavior with <code>CACHE_ON_FAILURE</code> or <code>CACHE_ALWAYS</code>. To confirm that your run cache settings have been properly updated, use the <code>GetRunCache</code> API operation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/how-run-cache.html\">How call caching works</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1897:    "UpdateRunGroup":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1898:      "name":"UpdateRunGroup",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1904:      "input":{"shape":"UpdateRunGroupRequest"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:1915:      "documentation":"<p>Updates the settings of a run group and returns a response with no body if the operation is successful.</p> <p>You can update the following settings with <code>UpdateRunGroup</code>:</p> <ul> <li> <p>Maximum number of CPUs</p> </li> <li> <p>Run time (measured in minutes)</p> </li> <li> <p>Number of GPUs</p> </li> <li> <p>Number of concurrent runs</p> </li> <li> <p>Group name</p> </li> </ul> <p>To confirm that the settings have been successfully updated, use the <code>ListRunGroups</code> or <code>GetRunGroup</code> API operations to verify that the desired changes have been made.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:2282:          "shape":"RunLeftNormalization",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:2524:    "CancelRunRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:2529:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:2988:    "CreateRunCacheRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:2997:          "documentation":"<p>Default cache behavior for runs that use this cache. Supported values are:</p> <p> <code>CACHE_ON_FAILURE</code>: Caches task outputs from completed tasks for runs that fail. This setting is useful if you're debugging a workflow that fails after several tasks completed successfully. The subsequent run uses the cache outputs for previously-completed tasks if the task definition, inputs, and container in ECR are identical to the prior run.</p> <p> <code>CACHE_ALWAYS</code>: Caches task outputs from completed tasks for all runs. This setting is useful in development mode, but do not use it in a production setting.</p> <p>If you don't specify a value, the default behavior is CACHE_ON_FAILURE. When you start a run that uses this cache, you can override the default cache behavior.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/how-run-cache.html#run-cache-behavior\">Run cache behavior</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3012:          "shape":"RunCacheRequestId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3026:    "CreateRunCacheResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3030:          "shape":"RunCacheArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3034:          "shape":"RunCacheId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3038:          "shape":"RunCacheStatus",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3039:          "documentation":"<p>Run cache status.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3047:    "CreateRunGroupRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3052:          "shape":"RunGroupName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3056:          "shape":"CreateRunGroupRequestMaxCpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3059:        "maxRuns":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3060:          "shape":"CreateRunGroupRequestMaxRunsInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3064:          "shape":"CreateRunGroupRequestMaxDurationInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3072:          "shape":"RunGroupRequestId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3077:          "shape":"CreateRunGroupRequestMaxGpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3082:    "CreateRunGroupRequestMaxCpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3088:    "CreateRunGroupRequestMaxDurationInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3094:    "CreateRunGroupRequestMaxGpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3100:    "CreateRunGroupRequestMaxRunsInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3106:    "CreateRunGroupResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3110:          "shape":"RunGroupArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3114:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3367:          "documentation":"<p>The default storage type for runs that use this workflow. The <code>storageType</code> can be overridden at run time. <code>DYNAMIC</code> storage dynamically scales the storage up or down, based on file system utilization. <code>STATIC</code> storage allocates a fixed amount of storage. For more information about dynamic and static storage types, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/workflows-run-types.html\">Run storage types</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3479:          "documentation":"<p>The default storage type for runs that use this workflow. STATIC storage allocates a fixed amount of storage. DYNAMIC storage dynamically scales the storage up or down, based on file system utilization. For more information about static and dynamic storage, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/Using-workflows.html\">Running workflows</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3724:    "DeleteRunCacheRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3729:          "shape":"RunCacheId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3730:          "documentation":"<p>Run cache identifier for the cache you want to delete.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3736:    "DeleteRunGroupRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3741:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3748:    "DeleteRunRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:3753:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:4239:          "shape":"RunLeftNormalization",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5026:    "GetRunCacheRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5031:          "shape":"RunCacheId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5038:    "GetRunCacheResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5042:          "shape":"RunCacheArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5058:          "shape":"RunCacheTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5066:          "shape":"RunCacheId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5074:          "shape":"RunCacheStatus",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5083:    "GetRunGroupRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5088:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5095:    "GetRunGroupResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5099:          "shape":"RunGroupArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5103:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5107:          "shape":"RunGroupName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5111:          "shape":"GetRunGroupResponseMaxCpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5114:        "maxRuns":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5115:          "shape":"GetRunGroupResponseMaxRunsInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5119:          "shape":"GetRunGroupResponseMaxDurationInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5123:          "shape":"RunGroupTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5131:          "shape":"GetRunGroupResponseMaxGpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5136:    "GetRunGroupResponseMaxCpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5142:    "GetRunGroupResponseMaxDurationInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5148:    "GetRunGroupResponseMaxGpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5154:    "GetRunGroupResponseMaxRunsInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5160:    "GetRunRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5165:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5171:          "shape":"RunExportList",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5178:    "GetRunResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5182:          "shape":"RunArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5186:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5202:          "shape":"RunStatus",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5214:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5218:          "shape":"RunRoleArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5222:          "shape":"RunName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5226:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5230:          "shape":"GetRunResponsePriorityInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5242:          "shape":"RunParameters",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5246:          "shape":"GetRunResponseStorageCapacityInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5250:          "shape":"RunOutputUri",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5254:          "shape":"RunLogLevel",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5258:          "shape":"RunResourceDigests",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5262:          "shape":"RunStartedBy",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5266:          "shape":"RunTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5270:          "shape":"RunTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5274:          "shape":"RunTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5278:          "shape":"RunStatusMessage",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5290:          "shape":"RunRetentionMode",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5294:          "shape":"RunFailureReason",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5298:          "shape":"RunLogLocation",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5302:          "shape":"RunUuid",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5306:          "shape":"RunOutputUri",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5327:    "GetRunResponsePriorityInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5333:    "GetRunResponseStorageCapacityInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5339:    "GetRunTaskRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5347:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5360:    "GetRunTaskResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5376:          "shape":"GetRunTaskResponseCpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5388:          "shape":"GetRunTaskResponseMemoryInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5412:          "shape":"GetRunTaskResponseGpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5425:    "GetRunTaskResponseCpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5430:    "GetRunTaskResponseGpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5435:    "GetRunTaskResponseMemoryInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:5637:          "shape":"RunLeftNormalization",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6889:    "ListRunCachesRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6893:          "shape":"ListRunCachesRequestMaxResultsInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6900:          "documentation":"<p>Optional pagination token returned from a prior call to the <code>ListRunCaches</code> API operation.</p>",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6906:    "ListRunCachesRequestMaxResultsInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6912:    "ListRunCachesResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6916:          "shape":"RunCacheList",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6925:    "ListRunGroupsRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6929:          "shape":"RunGroupName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6935:          "shape":"RunGroupListToken",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6941:          "shape":"ListRunGroupsRequestMaxResultsInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6948:    "ListRunGroupsRequestMaxResultsInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6954:    "ListRunGroupsResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6958:          "shape":"RunGroupList",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6962:          "shape":"RunGroupListToken",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6967:    "ListRunTasksRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6972:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6990:          "shape":"ListRunTasksRequestMaxResultsInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:6997:    "ListRunTasksRequestMaxResultsInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7003:    "ListRunTasksResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7016:    "ListRunsRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7020:          "shape":"RunName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7026:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7032:          "shape":"RunListToken",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7038:          "shape":"ListRunsRequestMaxResultsInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7044:          "shape":"RunStatus",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7051:    "ListRunsRequestMaxResultsInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7057:    "ListRunsResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7061:          "shape":"RunList",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:7065:          "shape":"RunListToken",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8323:    "RunArn":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8329:    "RunCacheArn":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8335:    "RunCacheId":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8341:    "RunCacheList":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8343:      "member":{"shape":"RunCacheListItem"}
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8345:    "RunCacheListItem":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8349:          "shape":"RunCacheArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8361:          "shape":"RunCacheTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8365:          "shape":"RunCacheId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8373:          "shape":"RunCacheStatus",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8379:    "RunCacheRequestId":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8385:    "RunCacheStatus":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8395:    "RunCacheTimestamp":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8399:    "RunExport":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8405:    "RunExportList":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8407:      "member":{"shape":"RunExport"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8411:    "RunFailureReason":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8417:    "RunGroupArn":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8423:    "RunGroupId":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8429:    "RunGroupList":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8431:      "member":{"shape":"RunGroupListItem"}
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8433:    "RunGroupListItem":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8437:          "shape":"RunGroupArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8441:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8445:          "shape":"RunGroupName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8449:          "shape":"RunGroupListItemMaxCpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8452:        "maxRuns":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8453:          "shape":"RunGroupListItemMaxRunsInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8457:          "shape":"RunGroupListItemMaxDurationInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8461:          "shape":"RunGroupTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8465:          "shape":"RunGroupListItemMaxGpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8471:    "RunGroupListItemMaxCpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8477:    "RunGroupListItemMaxDurationInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8483:    "RunGroupListItemMaxGpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8489:    "RunGroupListItemMaxRunsInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8495:    "RunGroupListToken":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8501:    "RunGroupName":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8507:    "RunGroupRequestId":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8513:    "RunGroupTimestamp":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8517:    "RunId":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8523:    "RunLeftNormalization":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8524:    "RunList":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8526:      "member":{"shape":"RunListItem"}
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8528:    "RunListItem":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8532:          "shape":"RunArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8536:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8540:          "shape":"RunStatus",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8548:          "shape":"RunName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8552:          "shape":"RunListItemPriorityInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8556:          "shape":"RunListItemStorageCapacityInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8560:          "shape":"RunTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8564:          "shape":"RunTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8568:          "shape":"RunTimestamp",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8582:    "RunListItemPriorityInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8588:    "RunListItemStorageCapacityInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8594:    "RunListToken":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8600:    "RunLogLevel":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8611:    "RunLogLocation":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8619:          "shape":"RunLogStream",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8625:    "RunLogStream":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8629:    "RunName":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8635:    "RunOutputUri":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8641:    "RunParameters":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8647:    "RunRequestId":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8653:    "RunResourceDigest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8659:    "RunResourceDigestKey":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8665:    "RunResourceDigests":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8667:      "key":{"shape":"RunResourceDigestKey"},
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8668:      "value":{"shape":"RunResourceDigest"}
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8670:    "RunRetentionMode":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8679:    "RunRoleArn":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8685:    "RunStartedBy":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8690:    "RunStatus":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8705:    "RunStatusMessage":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8709:    "RunTimestamp":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:8713:    "RunUuid":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9139:          "shape":"RunLeftNormalization",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9502:    "StartRunRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9518:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9522:          "shape":"RunRoleArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9526:          "shape":"RunName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9535:          "documentation":"<p>The cache behavior for the run. You specify this value if you want to override the default behavior for the cache. You had set the default value when you created the cache. For more information, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/how-run-cache.html#run-cache-behavior\">Run cache behavior</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9538:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9542:          "shape":"StartRunRequestPriorityInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9543:          "documentation":"<p>Use the run priority (highest: 1) to establish the order of runs in a run group when you start a run. If multiple runs share the same priority, the run that was initiated first will have the higher priority. Runs that do not belong to a run group can be assigned a priority. The priorities of these runs are ranked among other runs that are not in a run group. For more information, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/creating-run-groups.html#run-priority\">Run priority</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9546:          "shape":"RunParameters",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9547:          "documentation":"<p>Parameters for the run. The run needs all required parameters and can include optional parameters. The run cannot include any parameters that are not defined in the parameter template. To retrieve parameters from the run, use the GetRun API operation.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9550:          "shape":"StartRunRequestStorageCapacityInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9554:          "shape":"RunOutputUri",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9558:          "shape":"RunLogLevel",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9566:          "shape":"RunRequestId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9571:          "shape":"RunRetentionMode",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9576:          "documentation":"<p>The storage type for the run. If you set the storage type to <code>DYNAMIC</code>, Amazon Web Services HealthOmics dynamically scales the storage up or down, based on file system utilization. By default, the run uses <code>STATIC</code> storage type, which allocates a fixed amount of storage. For more information about <code>DYNAMIC</code> and <code>STATIC</code> storage, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/workflows-run-types.html\">Run storage types</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9588:    "StartRunRequestPriorityInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9594:    "StartRunRequestStorageCapacityInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9600:    "StartRunResponse":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9604:          "shape":"RunArn",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9608:          "shape":"RunId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9612:          "shape":"RunStatus",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9620:          "shape":"RunUuid",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9624:          "shape":"RunOutputUri",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:9650:          "shape":"RunLeftNormalization",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10174:    "UpdateRunCacheRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10187:          "shape":"RunCacheId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10198:    "UpdateRunGroupRequest":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10203:          "shape":"RunGroupId",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10209:          "shape":"RunGroupName",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10213:          "shape":"UpdateRunGroupRequestMaxCpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10216:        "maxRuns":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10217:          "shape":"UpdateRunGroupRequestMaxRunsInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10221:          "shape":"UpdateRunGroupRequestMaxDurationInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10225:          "shape":"UpdateRunGroupRequestMaxGpusInteger",
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10230:    "UpdateRunGroupRequestMaxCpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10236:    "UpdateRunGroupRequestMaxDurationInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10242:    "UpdateRunGroupRequestMaxGpusInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10248:    "UpdateRunGroupRequestMaxRunsInteger":{
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10429:          "documentation":"<p>The default storage type for runs that use this workflow. STATIC storage allocates a fixed amount of storage. DYNAMIC storage dynamically scales the storage up or down, based on file system utilization. For more information about static and dynamic storage, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/Using-workflows.html\">Running workflows</a> in the <i>Amazon Web Services HealthOmics User Guide</i>. </p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10472:          "documentation":"<p>The default storage type for runs that use this workflow. STATIC storage allocates a fixed amount of storage. DYNAMIC storage dynamically scales the storage up or down, based on file system utilization. For more information about static and dynamic storage, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/Using-workflows.html\">Running workflows</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/omics/2022-11-28/service-2.json:10661:          "shape":"RunLeftNormalization",
./backend/aws/dist/awscli/botocore/data/migrationhubstrategy/2020-02-19/service-2.json:412:          "shape":"RuntimeAnalysisStatus",
./backend/aws/dist/awscli/botocore/data/migrationhubstrategy/2020-02-19/service-2.json:466:          "shape":"RunTimeAnalyzerName",
./backend/aws/dist/awscli/botocore/data/migrationhubstrategy/2020-02-19/service-2.json:662:          "shape":"RuntimeAnalysisStatus",
./backend/aws/dist/awscli/botocore/data/migrationhubstrategy/2020-02-19/service-2.json:2207:    "RunTimeAnalyzerName":{
./backend/aws/dist/awscli/botocore/data/migrationhubstrategy/2020-02-19/service-2.json:2217:    "RunTimeAssessmentStatus":{
./backend/aws/dist/awscli/botocore/data/migrationhubstrategy/2020-02-19/service-2.json:2229:    "RuntimeAnalysisStatus":{
./backend/aws/dist/awscli/botocore/data/migrationhubstrategy/2020-02-19/service-2.json:2333:          "shape":"RunTimeAssessmentStatus",
./backend/aws/dist/awscli/botocore/data/migrationhubstrategy/2020-02-19/service-2.json:2423:          "shape":"RunTimeAssessmentStatus",
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/waiters-2.json:4:    "ClusterRunning": {
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/completions-1.json:93:    "RunJobFlow": {
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:678:    "RunJobFlow":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:679:      "name":"RunJobFlow",
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:684:      "input":{"shape":"RunJobFlowInput"},
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:685:      "output":{"shape":"RunJobFlowOutput"},
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:689:      "documentation":"<p>RunJobFlow creates and starts running a new cluster (job flow). The cluster runs the steps specified. After the steps complete, the cluster stops and the HDFS partition is lost. To prevent loss of data, configure the last step of the job flow to store results in Amazon S3. If the <a>JobFlowInstancesConfig</a> <code>KeepJobFlowAliveWhenNoSteps</code> parameter is set to <code>TRUE</code>, the cluster transitions to the WAITING state rather than shutting down after the steps have completed. </p> <p>For additional protection, you can set the <a>JobFlowInstancesConfig</a> <code>TerminationProtected</code> parameter to <code>TRUE</code> to lock the cluster and prevent it from being terminated by API call, user intervention, or in the event of a job flow error.</p> <p>A maximum of 256 steps are allowed in each job flow.</p> <p>If your cluster is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass the 256-step limitation in various ways, including using the SSH shell to connect to the master node and submitting queries directly to the software running on the master node, such as Hive and Hadoop.</p> <p>For long-running clusters, we recommend that you periodically store your results.</p> <note> <p>The instance fleets configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions. The RunJobFlow request can contain InstanceFleets parameters or InstanceGroups parameters, but not both.</p> </note>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:737:      "documentation":"<important> <p>The SetVisibleToAllUsers parameter is no longer supported. Your cluster may be visible to all users in your account. To restrict cluster access using an IAM policy, see <a href=\"https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-access-IAM.html\">Identity and Access Management for Amazon EMR</a>. </p> </important> <p>Sets the <a>Cluster$VisibleToAllUsers</a> value for an Amazon EMR cluster. When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the Amazon Web Services account root user can perform Amazon EMR actions on the cluster, regardless of IAM permissions policies attached to other IAM principals.</p> <p>This action works on running clusters. When you create a cluster, use the <a>RunJobFlowInput$VisibleToAllUsers</a> parameter.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/ManagementGuide/security_IAM_emr-with-IAM.html#security_set_visible_to_all_users\">Understanding the Amazon EMR Cluster VisibleToAllUsers Setting</a> in the <i>Amazon EMR Management Guide</i>.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:894:          "documentation":"<p>A string that uniquely identifies the job flow. This identifier is returned by <a>RunJobFlow</a> and can also be obtained from <a>ListClusters</a>. </p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:1181:          "documentation":"<p>The <code>ClusterID</code> for the specified steps that will be canceled. Use <a>RunJobFlow</a> and <a>ListClusters</a> to get ClusterIDs. </p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:1294:        "RunningAmiVersion":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:1316:          "documentation":"<p>Indicates whether the cluster is visible to IAM principals in the Amazon Web Services account associated with the cluster. When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions on the cluster that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the Amazon Web Services account root user can perform Amazon EMR actions, regardless of IAM permissions policies attached to other IAM principals.</p> <p>The default value is <code>true</code> if a value is not provided when creating a cluster using the Amazon EMR API <a>RunJobFlow</a> command, the CLI <a href=\"https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html\">create-cluster</a> command, or the Amazon Web Services Management Console.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:1388:          "documentation":"<p>The Amazon Linux release specified in a cluster launch RunJobFlow request. If no Amazon Linux release was specified, the default Amazon Linux release is shown in the response.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:1648:        "RuntimeRoleEnabledCluster":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:2089:        "JobRunId":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:2400:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:2893:        "RunningInstanceCount":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:3002:        "InstanceRunningCount",
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:3035:        "InstanceRunningCount":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:3490:          "documentation":"<p>Indicates whether the cluster is visible to IAM principals in the Amazon Web Services account associated with the cluster. When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the Amazon Web Services account root user can perform Amazon EMR actions, regardless of IAM permissions policies attached to other IAM principals.</p> <p>The default value is <code>true</code> if a value is not provided when creating a cluster using the Amazon EMR API <a>RunJobFlow</a> command, the CLI <a href=\"https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html\">create-cluster</a> command, or the Amazon Web Services Management Console.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:3612:          "documentation":"<p>Applies only to Amazon EMR release versions earlier than 4.0. The Hadoop version for the cluster. Valid inputs are \"0.18\" (no longer maintained), \"0.20\" (no longer maintained), \"0.20.205\" (no longer maintained), \"1.0.3\", \"2.2.0\", or \"2.4.0\". If you do not set this value, the default of 0.18 is used, unless the <code>AmiVersion</code> parameter is set in the RunJobFlow call, in which case the default version of Hadoop for that AMI version is used.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:4424:          "documentation":"<p>The Amazon Linux release specified for a cluster in the RunJobFlow request. The format is as shown in <a href=\"https://docs.aws.amazon.com/AL2/latest/relnotes/relnotes-20220218.html\"> <i>Amazon Linux 2 Release Notes</i> </a>. For example, 2.0.20220218.1.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:4427:      "documentation":"<p>The Amazon Linux release specified for a cluster in the RunJobFlow request.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:4868:    "RunJobFlowInput":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:4986:          "documentation":"<p>Specifies a particular Amazon Linux release for all nodes in a cluster launch RunJobFlow request. If a release is not specified, Amazon EMR uses the latest validated Amazon Linux release for cluster launch.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:5001:      "documentation":"<p> Input to the <a>RunJobFlow</a> operation. </p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:5003:    "RunJobFlowOutput":{
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:5015:      "documentation":"<p> The result of the <a>RunJobFlow</a> operation. </p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:5220:          "documentation":"<p>A list of strings that uniquely identify the clusters to protect. This identifier is returned by <a href=\"https://docs.aws.amazon.com/emr/latest/APIReference/API_RunJobFlow.html\">RunJobFlow</a> and can also be obtained from <a href=\"https://docs.aws.amazon.com/emr/latest/APIReference/API_DescribeJobFlows.html\">DescribeJobFlows</a>.</p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:5237:          "documentation":"<p> A list of strings that uniquely identify the clusters to protect. This identifier is returned by <a>RunJobFlow</a> and can also be obtained from <a>DescribeJobFlows</a> . </p>"
./backend/aws/dist/awscli/botocore/data/emr/2009-03-31/service-2.json:5255:          "documentation":"<p>The list of strings that uniquely identify the clusters for which to turn on unhealthy node replacement. You can get these identifiers by running the <a>RunJobFlow</a> or the <a>DescribeJobFlows</a> operations.</p>"
./backend/aws/dist/awscli/botocore/data/partnercentral-selling/2022-07-26/service-2.json:4959:        "Running",
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:1318:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:1319:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:1328:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:1329:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:2547:    "DryRun":{"type":"boolean"},
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:2548:    "DryRunResults":{
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:2557:          "documentation":"<p>Contains an optional message associated with the DryRunResults.</p>"
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:4678:        "DryRun":{
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:4679:          "shape":"DryRun",
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:4693:        "DryRunResults":{
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:4694:          "shape":"DryRunResults",
./backend/aws/dist/awscli/botocore/data/es/2015-01-01/service-2.json:4695:          "documentation":"<p>Contains result of DryRun. </p>"
./backend/aws/dist/awscli/botocore/data/forecastquery/2018-06-26/service-2.json:13:    "targetPrefix":"AmazonForecastRuntime",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:574:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:575:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:664:        "RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:673:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:674:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:716:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:717:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:779:          "documentation":"<p>The target stream quality for sessions that are hosted in this stream group. Set a stream class that is appropriate to the type of content that you're streaming. Stream class determines the type of computing resources Amazon GameLift Streams uses and impacts the cost of streaming. The following options are available: </p> <p>A stream class can be one of the following:</p> <ul> <li> <p> <b> <code>gen5n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 12 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_ultra</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Uses dedicated NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 8 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_ultra</code> (NVIDIA, ultra)</b> Supports applications with high 3D scene complexity. Uses dedicated NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:822:          "documentation":"<p>The target stream quality for the stream group.</p> <p>A stream class can be one of the following:</p> <ul> <li> <p> <b> <code>gen5n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 12 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_ultra</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Uses dedicated NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 8 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_ultra</code> (NVIDIA, ultra)</b> Supports applications with high 3D scene complexity. Uses dedicated NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1092:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1093:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1176:          "documentation":"<p>The target stream quality for the stream group.</p> <p>A stream class can be one of the following:</p> <ul> <li> <p> <b> <code>gen5n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 12 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_ultra</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Uses dedicated NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 8 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_ultra</code> (NVIDIA, ultra)</b> Supports applications with high 3D scene complexity. Uses dedicated NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1679:    "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1687:          "shape":"RuntimeEnvironmentType",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1691:          "shape":"RuntimeEnvironmentVersion",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1697:    "RuntimeEnvironmentType":{
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1705:    "RuntimeEnvironmentVersion":{
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:1948:          "documentation":"<p>The target stream quality for the stream group. </p> <p>A stream class can be one of the following:</p> <ul> <li> <p> <b> <code>gen5n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 12 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_ultra</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Uses dedicated NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 8 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_ultra</code> (NVIDIA, ultra)</b> Supports applications with high 3D scene complexity. Uses dedicated NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:2184:        "RuntimeEnvironment":{
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:2185:          "shape":"RuntimeEnvironment",
./backend/aws/dist/awscli/botocore/data/gameliftstreams/2018-05-10/service-2.json:2280:          "documentation":"<p>The target stream quality for the stream group.</p> <p>A stream class can be one of the following:</p> <ul> <li> <p> <b> <code>gen5n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 12 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen5n_ultra</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Uses dedicated NVIDIA A10G Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 24 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_win2022</code> (NVIDIA, ultra)</b> Supports applications with extremely high 3D scene complexity. Runs applications on Microsoft Windows Server 2022 Base and supports DirectX 12. Compatible with Unreal Engine versions up through 5.4, 32 and 64-bit applications, and anti-cheat technology. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_high</code> (NVIDIA, high)</b> Supports applications with moderate to high 3D scene complexity. Uses NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 4 vCPUs, 16 GB RAM, 8 GB VRAM</p> </li> <li> <p>Tenancy: Supports up to 2 concurrent stream sessions</p> </li> </ul> </li> <li> <p> <b> <code>gen4n_ultra</code> (NVIDIA, ultra)</b> Supports applications with high 3D scene complexity. Uses dedicated NVIDIA T4 Tensor GPU.</p> <ul> <li> <p>Reference resolution: 1080p</p> </li> <li> <p>Reference frame rate: 60 fps</p> </li> <li> <p>Workload specifications: 8 vCPUs, 32 GB RAM, 16 GB VRAM</p> </li> <li> <p>Tenancy: Supports 1 concurrent stream session</p> </li> </ul> </li> </ul>"
./backend/aws/dist/awscli/examples/greengrassv2/create-component-version.rst:27:                    "Run": "echo 'Hello {configuration:/Message}'"
./backend/aws/dist/awscli/examples/greengrassv2/create-component-version.rst:88:For more information, see `Run AWS Lambda functions <https://docs.aws.amazon.com/greengrass/v2/developerguide/run-lambda-functions.html>`__ in the *AWS IoT Greengrass V2 Developer Guide*.
./backend/aws/dist/awscli/examples/cloudformation/describe-stack-resource-drifts.rst:17:                "ExpectedProperties": "{\"Description\":\"Write a file to S3.\",\"Environment\":{\"Variables\":{\"bucket\":\"my-stack-bucket-1vc62xmplgguf\"}},\"Handler\":\"index.handler\",\"MemorySize\":128,\"Role\":\"arn:aws:iam::123456789012:role/my-functionRole-HIZXMPLEOM9E\",\"Runtime\":\"nodejs10.x\",\"Tags\":[{\"Key\":\"lambda:createdBy\",\"Value\":\"SAM\"}],\"Timeout\":900,\"TracingConfig\":{\"Mode\":\"Active\"}}",
./backend/aws/dist/awscli/examples/cloudformation/describe-stack-resource-drifts.rst:18:                "ActualProperties": "{\"Description\":\"Write a file to S3.\",\"Environment\":{\"Variables\":{\"bucket\":\"my-stack-bucket-1vc62xmplgguf\"}},\"Handler\":\"index.handler\",\"MemorySize\":256,\"Role\":\"arn:aws:iam::123456789012:role/my-functionRole-HIZXMPLEOM9E\",\"Runtime\":\"nodejs10.x\",\"Tags\":[{\"Key\":\"lambda:createdBy\",\"Value\":\"SAM\"}],\"Timeout\":22,\"TracingConfig\":{\"Mode\":\"Active\"}}",
./backend/aws/dist/awscli/examples/cloudformation/detect-stack-resource-drift.rst:17:            "ExpectedProperties": "{\"Description\":\"Write a file to S3.\",\"Environment\":{\"Variables\":{\"bucket\":\"my-stack-bucket-1vc62xmplgguf\"}},\"Handler\":\"index.handler\",\"MemorySize\":128,\"Role\":\"arn:aws:iam::123456789012:role/my-functionRole-HIZXMPLEOM9E\",\"Runtime\":\"nodejs10.x\",\"Tags\":[{\"Key\":\"lambda:createdBy\",\"Value\":\"SAM\"}],\"Timeout\":900,\"TracingConfig\":{\"Mode\":\"Active\"}}",
./backend/aws/dist/awscli/examples/cloudformation/detect-stack-resource-drift.rst:18:            "ActualProperties": "{\"Description\":\"Write a file to S3.\",\"Environment\":{\"Variables\":{\"bucket\":\"my-stack-bucket-1vc62xmplgguf\"}},\"Handler\":\"index.handler\",\"MemorySize\":256,\"Role\":\"arn:aws:iam::123456789012:role/my-functionRole-HIZXMPLEOM9E\",\"Runtime\":\"nodejs10.x\",\"Tags\":[{\"Key\":\"lambda:createdBy\",\"Value\":\"SAM\"}],\"Timeout\":22,\"TracingConfig\":{\"Mode\":\"Active\"}}",
./backend/aws/dist/awscli/examples/ssm/get-maintenance-window-execution-task-invocation.rst:14:        "Parameters": "{\"comment\":\"\",\"documentName\":\"AWS-RunPowerShellScript\",\"instanceIds\":[\"i-1234567890EXAMPLE\"],\"maxConcurrency\":\"1\",\"maxErrors\":\"1\",\"parameters\":{\"executionTimeout\":[\"3600\"],\"workingDirectory\":[\"\"],\"commands\":[\"echo Hello\"]},\"timeoutSeconds\":600}",
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-execution-task-invocations.rst:15:                "Parameters": "{\"documentName\":\"AWS-RunShellScript\",\"instanceIds\":[\"i-0000293ffd8c57862\"],\"parameters\":{\"commands\":[\"df\"]},\"maxConcurrency\":\"1\",\"maxErrors\":\"1\"}",
./backend/aws/dist/awscli/examples/ssm/send-automation-signal.rst:11:For more information, see `Running an Automation Workflow with Approvers <https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-working-executing-approval.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/get-maintenance-window-task.rst:14:        "TaskArn": "AWS-RunPowerShellScript",
./backend/aws/dist/awscli/examples/ssm/get-maintenance-window-task.rst:20:            "RunCommand": {
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:57:**Example 2: To list all tasks for a maintenance window that invokes the AWS-RunPowerShellScript command document**
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:59:The following ``describe-maintenance-window-tasks`` example lists all of the tasks for the specified maintenance window that invokes the ``AWS-RunPowerShellScript`` command document. ::
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:63:        --filters "Key=TaskArn,Values=AWS-RunPowerShellScript"
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:72:                "TaskArn": "AWS-RunPowerShellScript",
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:107:                "TaskArn": "AWS-RunPowerShellScript",
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:122:                "Name": "MyRunCommandTask"
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:148:**Example 4: To list all tasks for a maintenance window that have a Priority of 1 and use Run Command**
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:150:This ``describe-maintenance-window-tasks`` example lists all of the tasks for the specified maintenance window that have a ``Priority`` of ``1`` and use ``Run Command``. ::
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:163:                "TaskArn": "AWS-RunPowerShellScript",
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-tasks.rst:178:                "Name": "MyRunCommandTask"
./backend/aws/dist/awscli/examples/ssm/register-task-with-maintenance-window.rst:52:**Example 3: To register a Run Command task with a maintenance window**
./backend/aws/dist/awscli/examples/ssm/register-task-with-maintenance-window.rst:54:The following ``register-task-with-maintenance-window`` example registers a Run Command task with a maintenance window that is targeted at an instance. ::
./backend/aws/dist/awscli/examples/ssm/register-task-with-maintenance-window.rst:64:        --task-invocation-parameters "{\"RunCommand\":{\"Comment\":\"\",\"OutputS3BucketName\":\"runcommandlogs\",\"Parameters\":{\"commands\":[\"Get-Module -ListAvailable\"],\"executionTimeout\":[\"3600\"],\"source\":[\"https:\/\/gallery.technet.microsoft.com\/EZOut-33ae0fb7\/file\/110351\/1\/EZOut.zip\"],\"workingDirectory\":[\"\\\\\"]},\"TimeoutSeconds\":600}}" \
./backend/aws/dist/awscli/examples/ssm/register-task-with-maintenance-window.rst:110:        --task-arn "AWS-RunShellScript" \
./backend/aws/dist/awscli/examples/ssm/describe-association-execution-targets.rst:24:                    "OutputSourceType": "RunCommand"
./backend/aws/dist/awscli/examples/ssm/stop-automation-execution.rst:10:For more information, see `Running an Automation Workflow Manually <https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-working-executing-manually.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/update-maintenance-window-task.rst:21:            "RunCommand": {
./backend/aws/dist/awscli/examples/ssm/describe-automation-executions.rst:33:For more information, see `Running a Simple Automation Workflow <https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-working-executing.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/start-change-request-execution.rst:49:        "Runbooks": [
./backend/aws/dist/awscli/examples/ssm/start-change-request-execution.rst:62:        "ChangeDetails": "### Document Name: HelloWorldChangeTemplate\n\n## What does this document do?\nThis change template demonstrates the feature set available for creating change templates for Change Manager. This template starts a Runbook workflow for the Automation document called AWS-HelloWorld.\n\n## Input Parameters\n* ApproverSnsTopicArn: (Required) Amazon Simple Notification Service ARN for approvers.\n* Approver: (Required) The name of the approver to send this request to.\n* ApproverType: (Required) The type of reviewer.\n  * Allowed Values: IamUser, IamGroup, IamRole, SSOGroup, SSOUser\n\n## Output Parameters\nThis document has no outputs \n"
./backend/aws/dist/awscli/examples/ssm/put-parameter.rst:27:        --value "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat [truncated]" \
./backend/aws/dist/awscli/examples/ssm/get-document.rst:6:        --name "AWS-RunShellScript"
./backend/aws/dist/awscli/examples/ssm/get-document.rst:11:        "Name": "AWS-RunShellScript",
./backend/aws/dist/awscli/examples/ssm/get-document.rst:14:        "Content": "{\n    \"schemaVersion\":\"1.2\",\n    \"description\":\"Run a shell script or specify the commands to run.\",\n    \"parameters\":{\n        \"commands\":{\n            \"type\":\"StringList\",\n            \"description\":\"(Required) Specify a shell script or a command to run.\",\n            \"minItems\":1,\n            \"displayType\":\"textarea\"\n        },\n        \"workingDirectory\":{\n            \"type\":\"String\",\n            \"default\":\"\",\n            \"description\":\"(Optional) The path to the working directory on your instance.\",\n            \"maxChars\":4096\n        },\n        \"executionTimeout\":{\n            \"type\":\"String\",\n            \"default\":\"3600\",\n            \"description\":\"(Optional) The time in seconds for a command to complete before it is considered to have failed. Default is 3600 (1 hour). Maximum is 172800 (48 hours).\",\n            \"allowedPattern\":\"([1-9][0-9]{0,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800)\"\n        }\n    },\n    \"runtimeConfig\":{\n        \"aws:runShellScript\":{\n            \"properties\":[\n                {\n                    \"id\":\"0.aws:runShellScript\",\n                    \"runCommand\":\"{{ commands }}\",\n                    \"workingDirectory\":\"{{ workingDirectory }}\",\n                    \"timeoutSeconds\":\"{{ executionTimeout }}\"\n                }\n            ]\n        }\n    }\n}\n",
./backend/aws/dist/awscli/examples/ssm/list-commands.rst:113:                "DocumentName": "AWS-RunPatchBaseline",
./backend/aws/dist/awscli/examples/ssm/list-commands.rst:168:For more information, see `Running Commands Using Systems Manager Run Command <https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/describe-automation-step-executions.rst:41:For more information, see `Running an Automation Workflow Step by Step (Command Line) <https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-working-executing-manually.html#automation-working-executing-manually-commandline>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/describe-maintenance-window-execution-tasks.rst:14:                "TaskArn": "AWS-RunShellScript",
./backend/aws/dist/awscli/examples/ssm/update-document.rst:8:        --name "RunShellScript" \
./backend/aws/dist/awscli/examples/ssm/update-document.rst:9:        --content "file://RunShellScript.json" \
./backend/aws/dist/awscli/examples/ssm/update-document.rst:15:        --name "RunShellScript" \
./backend/aws/dist/awscli/examples/ssm/update-document.rst:16:        --content "file://RunShellScript.json" \
./backend/aws/dist/awscli/examples/ssm/update-document.rst:25:        "Name": "RunShellScript",
./backend/aws/dist/awscli/examples/ssm/update-document.rst:44:        "Description": "Run an updated script"
./backend/aws/dist/awscli/examples/ssm/send-command.rst:6:        --document-name "AWS-RunShellScript" \
./backend/aws/dist/awscli/examples/ssm/send-command.rst:16:            "DocumentName": "AWS-RunShellScript",
./backend/aws/dist/awscli/examples/ssm/send-command.rst:53:For more information, see `Running Commands Using Systems Manager Run Command <https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/send-command.rst:61:        --document-name "AWS-RunShellScript" \
./backend/aws/dist/awscli/examples/ssm/send-command.rst:67:For more information, see `Running Commands Using Systems Manager Run Command <https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/send-command.rst:75:        --document-name "AWS-RunShellScript" \
./backend/aws/dist/awscli/examples/ssm/send-command.rst:80:For more information, see `Running Commands Using Systems Manager Run Command <https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/send-command.rst:88:        --document-name "AWS-RunShellScript" \
./backend/aws/dist/awscli/examples/ssm/send-command.rst:96:For more information, see `Running Commands Using Systems Manager Run Command <https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/send-command.rst:104:        --document-name "AWS-RunShellScript" \
./backend/aws/dist/awscli/examples/ssm/send-command.rst:113:For more information, see `Running Commands Using Systems Manager Run Command <https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/send-command.rst:120:        --document-name "AWS-RunPowerShellScript" \
./backend/aws/dist/awscli/examples/ssm/send-command.rst:126:For more information, see `Running Commands Using Systems Manager Run Command <https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/send-command.rst:133:        --document-name "AWS-RunPowerShellScript" \
./backend/aws/dist/awscli/examples/ssm/send-command.rst:139:For more information, see `Running Commands Using Systems Manager Run Command <https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ssm/get-maintenance-window-execution-task.rst:14:        "TaskArn": "AWS-RunPatchBaseline",
./backend/aws/dist/awscli/examples/ssm/start-automation-execution.rst:15:For more information, see `Running an Automation Workflow Manually <https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-working-executing-manually.html>`__ in the *AWS Systems Manager User Guide*.
./backend/aws/dist/awscli/examples/ec2/get-spot-placement-scores.rst:92:        "DryRun": true,
./backend/aws/dist/awscli/examples/ec2/get-instance-types-from-instance-requirements.rst:14:        "DryRun": true,
./backend/aws/dist/awscli/examples/ec2/describe-images.rst:22:                "UsageOperation": "RunInstances:0010", 
./backend/aws/dist/awscli/examples/ec2/describe-instances.rst:147:                        "UsageOperation": "RunInstances",
./backend/aws/dist/awscli/examples/ec2/modify-instance-attribute.rst:62:    certutil -encode UserData.txt tmp.b64 && findstr /v /c:- tmp.b64 > UserData.base64.txt
./backend/aws/dist/awscli/examples/codebuild/delete-webhook.rst:9:For more information, see `Stop Running Builds Automatically (AWS CLI) <https://docs.aws.amazon.com/codebuild/latest/userguide/run-build.html#run-build-cli-auto-stop>`_ in the *AWS CodeBuild User Guide*.
./backend/aws/dist/awscli/examples/codebuild/list-curated-environment-images.rst:18:                                "description": "AWS ElasticBeanstalk - Java 7 Running on Amazon Linux 64bit v2.1.3",
./backend/aws/dist/awscli/examples/codebuild/list-curated-environment-images.rst:25:                                "description": "AWS ElasticBeanstalk - Java 8 Running on Amazon Linux 64bit v2.1.3",
./backend/aws/dist/awscli/examples/codebuild/start-build.rst:66:For more information, see `Run a Build (AWS CLI) <https://docs.aws.amazon.com/codebuild/latest/userguide/run-build.html#run-build-cli>`_ in the *AWS CodeBuild User Guide*.
./backend/aws/dist/awscli/examples/codebuild/describe-test-cases.rst:16:                "name": "NUnit.Tests.Assemblies.MockTestFixture.NotRunnableTest",
./backend/aws/dist/awscli/examples/codebuild/list-projects.rst:19:Run this command again and provide the ``nextToken`` value from the previous response as a parameter to get the next part of the output. Repeat until you don't receive a ``nextToken`` value in the response. ::
./backend/aws/dist/awscli/examples/codebuild/list-builds.rst:19:Run this command again and provide the ``nextToken`` value in the previous response as a parameter to get the next part of the output. Repeat until you don't receive a ``nextToken`` value in the response. ::
./backend/aws/dist/awscli/examples/iotdeviceadvisor/list-suite-runs.rst:11:        "suiteRunsList": [
./backend/aws/dist/awscli/examples/iotdeviceadvisor/list-suite-runs.rst:16:                "suiteRunId": "p6awv89nre6v",
./backend/aws/dist/awscli/examples/iotdeviceadvisor/list-suite-runs.rst:39:        "suiteRunsList": [
./backend/aws/dist/awscli/examples/iotdeviceadvisor/list-suite-runs.rst:44:                "suiteRunId": "gz9vm2s6d2jy",
./backend/aws/dist/awscli/examples/iotdeviceadvisor/list-suite-runs.rst:56:For more information, see `ListSuiteRuns <https://docs.aws.amazon.com/iot/latest/apireference/API_iotdeviceadvisor_ListSuiteRuns.html>`__ in the *AWS IoT API Reference*.
./backend/aws/dist/awscli/examples/iotdeviceadvisor/start-suite-run.rst:13:        "suiteRunId": "pwmucgw7lt9s",
./backend/aws/dist/awscli/examples/iotdeviceadvisor/start-suite-run.rst:14:        "suiteRunArn": "arn:aws:iotdeviceadvisor:us-east-1:123456789012:suiterun/qqcsmtyyjabl/pwmucgw7lk9s",
./backend/aws/dist/awscli/examples/iotdeviceadvisor/get-suite-run.rst:14:        "suiteRunId": "nzlfyhaa18oa",
./backend/aws/dist/awscli/examples/iotdeviceadvisor/get-suite-run.rst:15:        "suiteRunArn": "arn:aws:iotdeviceadvisor:us-east-1:123456789012:suiterun/qqcsmtyyjabl/nzlfyhaa18oa",
./backend/aws/dist/awscli/examples/iotdeviceadvisor/get-suite-run.rst:16:        "suiteRunConfiguration": {
./backend/aws/dist/awscli/examples/iotdeviceadvisor/get-suite-run.rst:21:            "parallelRun": false
./backend/aws/dist/awscli/examples/iotdeviceadvisor/get-suite-run.rst:30:                            "testCaseRunId": "2ve2twrqyr0s",
./backend/aws/dist/awscli/examples/workspaces/create-workspaces.rst:28:        --workspaces DirectoryId=d-926722edaf,UserName=Mary,BundleId=wsb-0zsvgp8fc,WorkspaceProperties={RunningMode=AUTO_STOP}
./backend/aws/dist/awscli/examples/workspaces/create-workspaces.rst:50:        --workspaces DirectoryId=d-926722edaf,UserName='"[UNDEFINED]"',WorkspaceName=MaryWorkspace1,BundleId=wsb-0zsvgp8fc,WorkspaceProperties={RunningMode=ALWAYS_ON}
./backend/aws/dist/awscli/examples/workspaces/describe-workspace-directories.rst:50:                    "SwitchRunningMode": "DISABLED",
./backend/aws/dist/awscli/examples/workspaces/describe-workspaces.rst:22:                    "RunningMode": "AUTO_STOP",
./backend/aws/dist/awscli/examples/workspaces/describe-workspaces.rst:23:                    "RunningModeAutoStopTimeoutInMinutes": 60,
./backend/aws/dist/awscli/examples/workspaces/modify-workspace-properties.rst:7:        --workspace-properties RunningMode=AUTO_STOP
./backend/aws/dist/awscli/examples/glue/batch-stop-job-run.rst:15:                "JobRunId": "jr_852f1de1f29fb62e0ba4166c33970803935d87f14f96cfdee5089d5274a61d3f"
./backend/aws/dist/awscli/examples/glue/batch-stop-job-run.rst:33:For more information, see `Job Runs <https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-runs.html>`__ in the *AWS Glue Developer Guide*.
./backend/aws/dist/awscli/examples/glue/start-job-run.rst:11:        "JobRunId": "jr_22208b1f44eb5376a60569d4b21dd20fcb8621e1a366b4e7b2494af764b82ded"
./backend/aws/dist/awscli/examples/glue/get-job.rst:17:                "MaxConcurrentRuns": 1
./backend/aws/dist/awscli/examples/glue/get-job-run.rst:12:        "JobRun": {
./backend/aws/dist/awscli/examples/glue/get-job-run.rst:19:            "JobRunState": "SUCCEEDED",
./backend/aws/dist/awscli/examples/glue/get-job-run.rst:27:            "PredecessorRuns": [],
./backend/aws/dist/awscli/examples/glue/get-job-run.rst:39:For more information, see `Job Runs <https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-runs.html>`__ in the *AWS Glue Developer Guide*.
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:11:        "JobRuns": [
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:19:                "JobRunState": "SUCCEEDED",
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:27:                "PredecessorRuns": [],
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:40:                "PreviousRunId": "jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f_attempt_1",
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:45:                "JobRunState": "FAILED",
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:50:                "PredecessorRuns": [],
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:63:                "PreviousRunId": "jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f",
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:68:                "JobRunState": "FAILED",
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:73:                "PredecessorRuns": [],
./backend/aws/dist/awscli/examples/glue/get-job-runs.rst:87:For more information, see `Job Runs <https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-runs.html>`__ in the *AWS Glue Developer Guide*.
./backend/aws/dist/awscli/examples/rds/describe-option-group-options.rst:16:                "Description": "Oracle Application Express Runtime Environment",
./backend/aws/dist/awscli/examples/greengrass/get-thing-runtime-configuration.rst:11:        "RuntimeConfiguration": {
./backend/aws/dist/awscli/examples/greengrass/update-function-definition.rst:11:For more information, see `Run Local Lambda Functions <https://docs.aws.amazon.com/greengrass/latest/developerguide/lambda-functions.html>`__ in the *AWS IoT Greengrass Developer Guide*.
./backend/aws/dist/awscli/examples/iam/decode-authorization-message.rst:11:        "DecodedMessage": "{\"allowed\":false,\"explicitDeny\":false,\"matchedStatements\":{\"items\":[]},\"failures\":{\"items\":[]},\"context\":{\"principal\":{\"id\":\"AIDAV3ZUEFP6J7GY7O6LO\",\"name\":\"chain-user\",\"arn\":\"arn:aws:iam::403299380220:user/chain-user\"},\"action\":\"ec2:RunInstances\",\"resource\":\"arn:aws:ec2:us-east-2:403299380220:instance/*\",\"conditions\":{\"items\":[{\"key\":\"ec2:InstanceMarketType\",\"values\":{\"items\":[{\"value\":\"on-demand\"}]}},{\"key\":\"aws:Resource\",\"values\":{\"items\":[{\"value\":\"instance/*\"}]}},{\"key\":\"aws:Account\",\"values\":{\"items\":[{\"value\":\"403299380220\"}]}},{\"key\":\"ec2:AvailabilityZone\",\"values\":{\"items\":[{\"value\":\"us-east-2b\"}]}},{\"key\":\"ec2:ebsOptimized\",\"values\":{\"items\":[{\"value\":\"false\"}]}},{\"key\":\"ec2:IsLaunchTemplateResource\",\"values\":{\"items\":[{\"value\":\"false\"}]}},{\"key\":\"ec2:InstanceType\",\"values\":{\"items\":[{\"value\":\"t2.micro\"}]}},{\"key\":\"ec2:RootDeviceType\",\"values\":{\"items\":[{\"value\":\"ebs\"}]}},{\"key\":\"aws:Region\",\"values\":{\"items\":[{\"value\":\"us-east-2\"}]}},{\"key\":\"aws:Service\",\"values\":{\"items\":[{\"value\":\"ec2\"}]}},{\"key\":\"ec2:InstanceID\",\"values\":{\"items\":[{\"value\":\"*\"}]}},{\"key\":\"aws:Type\",\"values\":{\"items\":[{\"value\":\"instance\"}]}},{\"key\":\"ec2:Tenancy\",\"values\":{\"items\":[{\"value\":\"default\"}]}},{\"key\":\"ec2:Region\",\"values\":{\"items\":[{\"value\":\"us-east-2\"}]}},{\"key\":\"aws:ARN\",\"values\":{\"items\":[{\"value\":\"arn:aws:ec2:us-east-2:403299380220:instance/*\"}]}}]}}}"
./backend/aws/dist/awscli/examples/inspector/set-tags-for-resource.rst:7:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/set-tags-for-resource.rst:9:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/list-assessment-templates.rst:16:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/list-assessment-templates.rst:18:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/list-assessment-run-agents.rst:11:        "assessmentRunAgents": [
./backend/aws/dist/awscli/examples/inspector/list-assessment-run-agents.rst:16:                "assessmentRunArn": "arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE",
./backend/aws/dist/awscli/examples/inspector/describe-findings.rst:29:		   "assessmentRunArn": "arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE",
./backend/aws/dist/awscli/examples/inspector/subscribe-to-event.rst:12:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs <https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html>`__ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/describe-assessment-templates.rst:26:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/describe-assessment-templates.rst:28:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/list-assessment-runs.rst:10:        "assessmentRunArns": [
./backend/aws/dist/awscli/examples/inspector/list-assessment-runs.rst:16:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs <https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html>`_ in the *Amazon Inspector User Guide*.
./backend/aws/dist/awscli/examples/inspector/start-assessment-run.rst:10:	"assessmentRunArn": "arn:aws:inspector:us-west-2:123456789012:target/0-nvgVhaxX/template/0-it5r2S4T/run/0-jOoroxyY"
./backend/aws/dist/awscli/examples/inspector/start-assessment-run.rst:13:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/start-assessment-run.rst:15:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/list-event-subscriptions.rst:24:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/list-event-subscriptions.rst:26:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/delete-assessment-template.rst:7:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/delete-assessment-template.rst:9:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/stop-assessment-run.rst:7:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/stop-assessment-run.rst:9:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/describe-assessment-runs.rst:10:	 "assessmentRuns": [
./backend/aws/dist/awscli/examples/inspector/describe-assessment-runs.rst:18:		 "name": "Run 1 for ExampleAssessmentTemplate",
./backend/aws/dist/awscli/examples/inspector/describe-assessment-runs.rst:66:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/describe-assessment-runs.rst:68:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/unsubscribe-from-event.rst:7:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/unsubscribe-from-event.rst:9:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/create-assessment-template.rst:13:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/create-assessment-template.rst:15:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/delete-assessment-run.rst:7:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/delete-assessment-run.rst:9:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/inspector/list-tags-for-resource.rst:18:For more information, see `Amazon Inspector Assessment Templates and Assessment Runs`_ in the *Amazon Inspector* guide.
./backend/aws/dist/awscli/examples/inspector/list-tags-for-resource.rst:20:.. _`Amazon Inspector Assessment Templates and Assessment Runs`: https://docs.aws.amazon.com/inspector/latest/userguide/inspector_assessments.html
./backend/aws/dist/awscli/examples/ssm-incidents/create-response-plan.rst:10:        --actions '[{"ssmAutomation": {"documentName": "AWSIncidents-CriticalIncidentRunbookTemplate", "documentVersion": "$DEFAULT", "roleArn": "arn:aws:iam::111122223333:role/aws-service-role/ssm-incidents.amazonaws.com/AWSServiceRoleForIncidentManager", "targetAccount": "RESPONSE_PLAN_OWNER_ACCOUNT"}}]' \
./backend/aws/dist/awscli/examples/ssm-incidents/get-response-plan.rst:14:                    "documentName": "AWSIncidents-CriticalIncidentRunbookTemplate",
./backend/aws/dist/awscli/examples/s3api/list-bucket-metrics-configurations.rst:21:                    "Prefix": "tmp"
./backend/aws/dist/awscli/examples/lakeformation/get-effective-permissions-for-path.rst:34:                    "DataLakePrincipalIdentifier": "arn:aws:iam::123456789111:role/EMR-RuntimeRole"
./backend/aws/dist/awscli/examples/kms/encrypt.rst:18:    If the file is not in the current directory, type the full path to file. For example: ``fileb:///var/tmp/ExamplePlaintextFile`` or ``fileb://C:\Temp\ExamplePlaintextFile``. For more information about reading AWS CLI parameter values from a file, see `Loading Parameters from a File <https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-file>`__ in the *AWS Command Line Interface User Guide* and `Best Practices for Local File Parameters <https://blogs.aws.amazon.com/cli/post/TxLWWN1O25V1HE/Best-Practices-for-Local-File-Parameters>`__ on the AWS Command Line Tool Blog.
./backend/aws/dist/awscli/examples/kms/decrypt.rst:46:Run the ``certutil`` command. ::
./backend/aws/dist/awscli/examples/robomaker/describe-simulation-job.rst:13:    "status": "Running",
./backend/aws/dist/awscli/examples/opsworks/register.rst:80:  [Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Running on Ubuntu
./backend/aws/dist/awscli/examples/opsworks/register.rst:82:  [Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Running on supported OS
./backend/aws/dist/awscli/examples/opsworks/register.rst:93:  [Tue, 24 Feb 2015 20:50:13 +0000] opsworks-init: Executing: /tmp/opsworks-agent-installer.YgGq8wF3UUre6yDy/opsworks-agent-installer/opsworks-agent/bin/installer_wrapper.sh -r -R opsworks-instance-assets-us-east-1.s3.amazonaws.com
./backend/aws/dist/awscli/examples/opsworks/delete-instance.rst:5:If the instance is online, you must first stop the instance by calling ``stop-instance``, and then you must wait until the instance has stopped. Run ``describe-instances`` to check the instance status.
./backend/aws/dist/awscli/examples/opsworks/describe-stack-provisioning-parameters.rst:32:For more information, see `Run Stack Commands <https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-commands.html>`__ in the *AWS OpsWorks User Guide*.
./backend/aws/dist/awscli/examples/opsworks/create-deployment.rst:35:**Example 3: Run a Recipe**
./backend/aws/dist/awscli/examples/opsworks/create-deployment.rst:49:For more information, see `Run Stack Commands <https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-commands.html>`__ in the *AWS OpsWorks User Guide*.
./backend/aws/dist/awscli/examples/opsworks/create-deployment.rst:66:For more information, see `Run Stack Commands <https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-commands.html>`__ in the *AWS OpsWorks User Guide*.
./backend/aws/dist/awscli/examples/apigateway/create-model.rst:5:  aws apigateway create-model --rest-api-id 1234123412 --name 'firstModel' --description 'The First Model' --content-type 'application/json'  --schema '{ "$schema": "http://json-schema.org/draft-04/schema#", "title": "firstModel", "type": "object", "properties": { "firstProperty" : { "type": "object", "properties": { "key": { "type": "string" } } } } }'
./backend/aws/dist/awscli/examples/apigateway/create-model.rst:14:      "schema": "{ \"$schema\": \"http://json-schema.org/draft-04/schema#\", \"title\": \"firstModel\", \"type\": \"object\", \"properties\": { \"firstProperty\" : { \"type\": \"object\", \"properties\": { \"key\": { \"type\": \"string\" } } } } }"
./backend/aws/dist/awscli/examples/apigateway/update-model.rst:11:  aws apigateway update-model --rest-api-id 1234123412 --model-name 'Empty' --patch-operations op=replace,path=/schema,value='"{ \"$schema\": \"http://json-schema.org/draft-04/schema#\", \"title\" : \"Empty Schema\", \"type\" : \"object\" }"'
./backend/aws/dist/awscli/examples/apigateway/get-model.rst:14:      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\" : \"Empty Schema\",\n  \"type\" : \"object\"\n}"
./backend/aws/dist/awscli/examples/apigateway/get-models.rst:13:              "schema": "{\n  \"$schema\" : \"http://json-schema.org/draft-04/schema#\",\n  \"title\" : \"Error Schema\",\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"message\" : { \"type\" : \"string\" }\n  }\n}", 
./backend/aws/dist/awscli/examples/apigateway/get-models.rst:20:              "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\" : \"Empty Schema\",\n  \"type\" : \"object\"\n}", 
./backend/aws/dist/awscli/examples/lambda/list-layers.rst:20:                    "CompatibleRuntimes": [
./backend/aws/dist/awscli/examples/lambda/get-layer-version-by-arn.rst:21:        "CompatibleRuntimes": [
./backend/aws/dist/awscli/examples/lambda/create-function.rst:33:        "Runtime": "nodejs18.x",
./backend/aws/dist/awscli/examples/lambda/publish-version.rst:25:        "Runtime": "nodejs10.x",
./backend/aws/dist/awscli/examples/lambda/list-functions.rst:26:                "Runtime": "nodejs18.x",
./backend/aws/dist/awscli/examples/lambda/list-functions.rst:49:                "Runtime": "nodejs18.x",
./backend/aws/dist/awscli/examples/lambda/list-functions.rst:82:                "Runtime": "python3.11",
./backend/aws/dist/awscli/examples/lambda/list-versions-by-function.rst:32:                "Runtime": "nodejs10.x",
./backend/aws/dist/awscli/examples/lambda/list-versions-by-function.rst:55:                "Runtime": "nodejs10.x",
./backend/aws/dist/awscli/examples/lambda/list-versions-by-function.rst:78:                "Runtime": "nodejs10.x",
./backend/aws/dist/awscli/examples/lambda/get-layer-version.rst:23:        "CompatibleRuntimes": [
./backend/aws/dist/awscli/examples/lambda/get-function-configuration.rst:18:        "Runtime": "nodejs10.x",
./backend/aws/dist/awscli/examples/lambda/get-function.rst:38:            "Runtime": "nodejs10.x",
./backend/aws/dist/awscli/examples/lambda/publish-layer-version.rst:26:        "CompatibleRuntimes": [
./backend/aws/dist/awscli/examples/lambda/update-function-configuration.rst:19:        "Runtime": "nodejs10.x",
./backend/aws/dist/awscli/examples/lambda/list-layer-versions.rst:17:                "CompatibleRuntimes": [
./backend/aws/dist/awscli/examples/lambda/update-function-code.rst:19:        "Runtime": "nodejs10.x",
./backend/aws/dist/awscli/examples/fis/list-actions.rst:118:                "description": "Run the specified SSM document.",
./backend/aws/dist/awscli/examples/elasticbeanstalk/delete-environment-configuration.rst:1:**To delete a draft configuration**
./backend/aws/dist/awscli/examples/elasticbeanstalk/delete-environment-configuration.rst:3:The following command deletes a draft configuration for an environment named ``my-env``::
./backend/aws/dist/awscli/examples/iotanalytics/run-pipeline-activity.rst:37:For more information, see `RunPipelineActivity <https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_RunPipelineActivity.html>`__ in the *AWS IoT Analytics API Reference*.
./backend/aws/dist/awscli/examples/ivs-realtime/update-stage.rst:37:                "rtmp": "rtmp://9x0y8z7s6t5u.global-contribute-staging.live-video.net/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/update-stage.rst:38:                "rtmps": "rtmps://9x0y8z7s6t5u.global-contribute-staging.live-video.net:443/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/update-stage.rst:84:                "rtmp": "rtmp://9x0y8z7s6t5u.global-contribute-staging.live-video.net/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/update-stage.rst:85:                "rtmps": "rtmps://9x0y8z7s6t5u.global-contribute-staging.live-video.net:443/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/create-ingest-configuration.rst:7:        --ingest-protocol rtmps
./backend/aws/dist/awscli/examples/ivs-realtime/get-stage.rst:34:                "rtmp": "rtmp://9x0y8z7s6t5u.global-contribute-staging.live-video.net/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/get-stage.rst:35:                "rtmps": "rtmps://9x0y8z7s6t5u.global-contribute-staging.live-video.net:443/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/create-stage.rst:42:                "rtmp": "rtmp://9x0y8z7s6t5u.global-contribute-staging.live-video.net/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/create-stage.rst:43:                "rtmps": "rtmps://9x0y8z7s6t5u.global-contribute-staging.live-video.net:443/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/create-stage.rst:88:                "rtmp": "rtmp://9x0y8z7s6t5u.global-contribute-staging.live-video.net/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/create-stage.rst:89:                "rtmps": "rtmps://9x0y8z7s6t5u.global-contribute-staging.live-video.net:443/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/create-stage.rst:134:                "rtmp": "rtmp://9x0y8z7s6t5u.global-contribute-staging.live-video.net/app/",
./backend/aws/dist/awscli/examples/ivs-realtime/create-stage.rst:135:                "rtmps": "rtmps://9x0y8z7s6t5u.global-contribute-staging.live-video.net:443/app/",
./backend/aws/dist/awscli/examples/mediaconvert/delete-preset.rst:9:This command produces no output. Run ``aws mediaconvert list-presets`` to confirm that your preset was deleted.
./backend/aws/dist/awscli/examples/mediaconvert/delete-job-template.rst:9:This command produces no output. Run ``aws mediaconvert list-job-templates`` to confirm that your template was deleted.
./backend/aws/dist/awscli/examples/mediaconvert/delete-queue.rst:12:This command produces no output. Run ``aws mediaconvert list-queues`` to confirm that your queue was deleted.
./backend/aws/dist/awscli/examples/service-quotas/get-service-quota.rst:17:            "QuotaName": "Running On-Demand Standard (A, C, D, H, I, M, R, T, Z) instances",
./backend/aws/dist/awscli/examples/service-quotas/get-aws-default-service-quota.rst:17:            "QuotaName": "Running On-Demand Standard (A, C, D, H, I, M, R, T, Z) instances",
./backend/aws/dist/awscli/examples/service-quotas/get-requested-service-quota-change.rst:17:            "QuotaName": "Running Dedicated c5n Hosts",
./backend/aws/dist/awscli/examples/service-quotas/list-requested-service-quota-change-history-by-quota.rst:19:                "QuotaName": "Running Dedicated c5n Hosts",
./backend/aws/dist/awscli/examples/service-quotas/list-requested-service-quota-change-history.rst:18:                "QuotaName": "Running Dedicated c5n Hosts",
./backend/aws/dist/awscli/examples/service-quotas/request-service-quota-increase.rst:18:            "QuotaName": "Running Dedicated c5n Hosts",
./backend/aws/dist/awscli/examples/medialive/create-channel.rst:162:* ``PipelinesRunningCount`` and ``State`` show the current status of the channel.
./backend/aws/dist/awscli/examples/iot/describe-audit-task.rst:25:                "checkRunStatus": "COMPLETED_COMPLIANT",
./backend/aws/dist/awscli/examples/iot/describe-audit-task.rst:31:                "checkRunStatus": "COMPLETED_COMPLIANT",
./backend/aws/dist/awscli/examples/iot/describe-audit-task.rst:37:                "checkRunStatus": "COMPLETED_COMPLIANT",
./backend/aws/dist/awscli/examples/iot/describe-audit-suppression.rst:26:                "checkRunStatus": "COMPLETED_NON_COMPLIANT",
./backend/aws/dist/awscli/examples/codecommit/get-folder.rst:51:                "absolutePath":"tmp",
./backend/aws/dist/awscli/examples/codecommit/get-folder.rst:52:                "relativePath":"tmp",
./backend/aws/dist/awscli/examples/codecommit/get-differences.rst:7:  aws codecommit get-differences --repository-name MyDemoRepo --before-commit-specifier 955bba12thisisanexamplethisisanexample --after-commit-specifier 14a95463thisisanexamplethisisanexample --before-path tmp/example-folder --after-path tmp/renamed-folder
./backend/aws/dist/awscli/examples/synthetics/describe-runtime-versions.rst:10:        "RuntimeVersions": [
./backend/aws/dist/awscli/examples/synthetics/describe-canaries-last-run.rst:10:        "CanariesLastRun": [
./backend/aws/dist/awscli/examples/synthetics/describe-canaries-last-run.rst:13:                "LastRun": {
./backend/aws/dist/awscli/examples/synthetics/describe-canaries.rst:23:                "RunConfig": {
./backend/aws/dist/awscli/examples/synthetics/describe-canaries.rst:40:                "RuntimeVersion": "syn-nodejs-puppeteer-9.1",
./backend/aws/dist/awscli/examples/synthetics/get-canary.rst:23:            "RunConfig": {
./backend/aws/dist/awscli/examples/synthetics/get-canary.rst:40:            "RuntimeVersion": "syn-nodejs-puppeteer-9.1",
./backend/aws/dist/awscli/examples/synthetics/create-canary.rst:27:            "RunConfig": {
./backend/aws/dist/awscli/examples/synthetics/create-canary.rst:43:            "RuntimeVersion": "syn-nodejs-puppeteer-9.1",
./backend/aws/dist/awscli/examples/synthetics/get-canary-runs.rst:11:        "CanaryRuns": [
./backend/aws/dist/awscli/examples/ecs/run-task.rst:63:For more information, see `Running an application as a standalone task <https://docs.aws.amazon.com/AmazonECS/latest/developerguide/standalone-task-create.html>`__ in the *Amazon ECS Developer Guide*.
./backend/aws/dist/awscli/examples/sts/decode-authorization-message.rst:11:        "DecodedMessage": "{\"allowed\":false,\"explicitDeny\":true,\"matchedStatements\":{\"items\":[{\"statementId\":\"VisualEditor0\",\"effect\":\"DENY\",\"principals\":{\"items\":[{\"value\":\"AROA123456789EXAMPLE\"}]},\"principalGroups\":{\"items\":[]},\"actions\":{\"items\":[{\"value\":\"ec2:RunInstances\"}]},\"resources\":{\"items\":[{\"value\":\"*\"}]},\"conditions\":{\"items\":[]}}]},\"failures\":{\"items\":[]},\"context\":{\"principal\":{\"id\":\"AROA123456789EXAMPLE:Ana\",\"arn\":\"arn:aws:sts::111122223333:assumed-role/Developer/Ana\"},\"action\":\"RunInstances\",\"resource\":\"arn:aws:ec2:us-east-1:111122223333:instance/*\",\"conditions\":{\"items\":[{\"key\":\"ec2:MetadataHttpPutResponseHopLimit\",\"values\":{\"items\":[{\"value\":\"2\"}]}},{\"key\":\"ec2:InstanceMarketType\",\"values\":{\"items\":[{\"value\":\"on-demand\"}]}},{\"key\":\"aws:Resource\",\"values\":{\"items\":[{\"value\":\"instance/*\"}]}},{\"key\":\"aws:Account\",\"values\":{\"items\":[{\"value\":\"111122223333\"}]}},{\"key\":\"ec2:AvailabilityZone\",\"values\":{\"items\":[{\"value\":\"us-east-1f\"}]}},{\"key\":\"ec2:ebsOptimized\",\"values\":{\"items\":[{\"value\":\"false\"}]}},{\"key\":\"ec2:IsLaunchTemplateResource\",\"values\":{\"items\":[{\"value\":\"false\"}]}},{\"key\":\"ec2:InstanceType\",\"values\":{\"items\":[{\"value\":\"t2.micro\"}]}},{\"key\":\"ec2:RootDeviceType\",\"values\":{\"items\":[{\"value\":\"ebs\"}]}},{\"key\":\"aws:Region\",\"values\":{\"items\":[{\"value\":\"us-east-1\"}]}},{\"key\":\"ec2:MetadataHttpEndpoint\",\"values\":{\"items\":[{\"value\":\"enabled\"}]}},{\"key\":\"aws:Service\",\"values\":{\"items\":[{\"value\":\"ec2\"}]}},{\"key\":\"ec2:InstanceID\",\"values\":{\"items\":[{\"value\":\"*\"}]}},{\"key\":\"ec2:MetadataHttpTokens\",\"values\":{\"items\":[{\"value\":\"required\"}]}},{\"key\":\"aws:Type\",\"values\":{\"items\":[{\"value\":\"instance\"}]}},{\"key\":\"ec2:Tenancy\",\"values\":{\"items\":[{\"value\":\"default\"}]}},{\"key\":\"ec2:Region\",\"values\":{\"items\":[{\"value\":\"us-east-1\"}]}},{\"key\":\"aws:ARN\",\"values\":{\"items\":[{\"value\":\"arn:aws:ec2:us-east-1:111122223333:instance/*\"}]}}]}}}"
./backend/aws/dist/awscli/examples/oam/list-sinks.rst:3:The following ``list-sinks`` example returns a list of sinks created in the monitoring account. Run this operation in a monitoring account. ::
./backend/aws/dist/awscli/examples/oam/list-links.rst:3:The following ``list-links`` example returns a list of links for one monitoring account sink. Run this operation in a source account to return a list of links to monitoring account sinks that this source account has. ::
./backend/aws/dist/awscli/examples/networkmanager/list-bucket-metrics-configurations.rst:21:                    "Prefix": "tmp"
./backend/aws/dist/awscli/examples/eks/describe-addon-configuration.rst:14:        "configurationSchema": "{\"$ref\":\"#/definitions/VpcCni\",\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"definitions\":{\"Affinity\":{\"type\":[\"object\",\"null\"]},\"EniConfig\":{\"additionalProperties\":false,\"properties\":{\"create\":{\"type\":\"boolean\"},\"region\":{\"type\":\"string\"},\"subnets\":{\"additionalProperties\":{\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\"},\"securityGroups\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"id\"],\"type\":\"object\"},\"minProperties\":1,\"type\":\"object\"}},\"required\":[\"create\",\"region\",\"subnets\"],\"type\":\"object\"},\"Env\":{\"additionalProperties\":false,\"properties\":{\"ADDITIONAL_ENI_TAGS\":{\"type\":\"string\"},\"ANNOTATE_POD_IP\":{\"format\":\"boolean\",\"type\":\"string\"},\"AWS_EC2_ENDPOINT\":{\"type\":\"string\"},\"AWS_EXTERNAL_SERVICE_CIDRS\":{\"type\":\"string\"},\"AWS_MANAGE_ENIS_NON_SCHEDULABLE\":{\"format\":\"boolean\",\"type\":\"string\"},\"AWS_VPC_CNI_NODE_PORT_SUPPORT\":{\"format\":\"boolean\",\"type\":\"string\"},\"AWS_VPC_ENI_MTU\":{\"format\":\"integer\",\"type\":\"string\"},\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\":{\"format\":\"boolean\",\"type\":\"string\"},\"AWS_VPC_K8S_CNI_EXCLUDE_SNAT_CIDRS\":{\"type\":\"string\"},\"AWS_VPC_K8S_CNI_EXTERNALSNAT\":{\"format\":\"boolean\",\"type\":\"string\"},\"AWS_VPC_K8S_CNI_LOGLEVEL\":{\"type\":\"string\"},\"AWS_VPC_K8S_CNI_LOG_FILE\":{\"type\":\"string\"},\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\":{\"type\":\"string\"},\"AWS_VPC_K8S_CNI_VETHPREFIX\":{\"type\":\"string\"},\"AWS_VPC_K8S_PLUGIN_LOG_FILE\":{\"type\":\"string\"},\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\":{\"type\":\"string\"},\"CLUSTER_ENDPOINT\":{\"type\":\"string\"},\"DISABLE_INTROSPECTION\":{\"format\":\"boolean\",\"type\":\"string\"},\"DISABLE_LEAKED_ENI_CLEANUP\":{\"format\":\"boolean\",\"type\":\"string\"},\"DISABLE_METRICS\":{\"format\":\"boolean\",\"type\":\"string\"},\"DISABLE_NETWORK_RESOURCE_PROVISIONING\":{\"format\":\"boolean\",\"type\":\"string\"},\"DISABLE_POD_V6\":{\"format\":\"boolean\",\"type\":\"string\"},\"ENABLE_BANDWIDTH_PLUGIN\":{\"format\":\"boolean\",\"type\":\"string\"},\"ENABLE_POD_ENI\":{\"format\":\"boolean\",\"type\":\"string\"},\"ENABLE_PREFIX_DELEGATION\":{\"format\":\"boolean\",\"type\":\"string\"},\"ENABLE_V4_EGRESS\":{\"format\":\"boolean\",\"type\":\"string\"},\"ENABLE_V6_EGRESS\":{\"format\":\"boolean\",\"type\":\"string\"},\"ENI_CONFIG_ANNOTATION_DEF\":{\"type\":\"string\"},\"ENI_CONFIG_LABEL_DEF\":{\"type\":\"string\"},\"INTROSPECTION_BIND_ADDRESS\":{\"type\":\"string\"},\"IP_COOLDOWN_PERIOD\":{\"format\":\"integer\",\"type\":\"string\"},\"MAX_ENI\":{\"format\":\"integer\",\"type\":\"string\"},\"MINIMUM_IP_TARGET\":{\"format\":\"integer\",\"type\":\"string\"},\"POD_SECURITY_GROUP_ENFORCING_MODE\":{\"type\":\"string\"},\"WARM_ENI_TARGET\":{\"format\":\"integer\",\"type\":\"string\"},\"WARM_IP_TARGET\":{\"format\":\"integer\",\"type\":\"string\"},\"WARM_PREFIX_TARGET\":{\"format\":\"integer\",\"type\":\"string\"}},\"title\":\"Env\",\"type\":\"object\"},\"Init\":{\"additionalProperties\":false,\"properties\":{\"env\":{\"$ref\":\"#/definitions/InitEnv\"}},\"title\":\"Init\",\"type\":\"object\"},\"InitEnv\":{\"additionalProperties\":false,\"properties\":{\"DISABLE_TCP_EARLY_DEMUX\":{\"format\":\"boolean\",\"type\":\"string\"},\"ENABLE_V6_EGRESS\":{\"format\":\"boolean\",\"type\":\"string\"}},\"title\":\"InitEnv\",\"type\":\"object\"},\"Limits\":{\"additionalProperties\":false,\"properties\":{\"cpu\":{\"type\":\"string\"},\"memory\":{\"type\":\"string\"}},\"title\":\"Limits\",\"type\":\"object\"},\"NodeAgent\":{\"additionalProperties\":false,\"properties\":{\"enableCloudWatchLogs\":{\"format\":\"boolean\",\"type\":\"string\"},\"enablePolicyEventLogs\":{\"format\":\"boolean\",\"type\":\"string\"},\"healthProbeBindAddr\":{\"format\":\"integer\",\"type\":\"string\"},\"metricsBindAddr\":{\"format\":\"integer\",\"type\":\"string\"}},\"title\":\"NodeAgent\",\"type\":\"object\"},\"Resources\":{\"additionalProperties\":false,\"properties\":{\"limits\":{\"$ref\":\"#/definitions/Limits\"},\"requests\":{\"$ref\":\"#/definitions/Limits\"}},\"title\":\"Resources\",\"type\":\"object\"},\"Tolerations\":{\"additionalProperties\":false,\"items\":{\"type\":\"object\"},\"type\":\"array\"},\"VpcCni\":{\"additionalProperties\":false,\"properties\":{\"affinity\":{\"$ref\":\"#/definitions/Affinity\"},\"enableNetworkPolicy\":{\"format\":\"boolean\",\"type\":\"string\"},\"enableWindowsIpam\":{\"format\":\"boolean\",\"type\":\"string\"},\"eniConfig\":{\"$ref\":\"#/definitions/EniConfig\"},\"env\":{\"$ref\":\"#/definitions/Env\"},\"init\":{\"$ref\":\"#/definitions/Init\"},\"livenessProbeTimeoutSeconds\":{\"type\":\"integer\"},\"nodeAgent\":{\"$ref\":\"#/definitions/NodeAgent\"},\"readinessProbeTimeoutSeconds\":{\"type\":\"integer\"},\"resources\":{\"$ref\":\"#/definitions/Resources\"},\"tolerations\":{\"$ref\":\"#/definitions/Tolerations\"}},\"title\":\"VpcCni\",\"type\":\"object\"}},\"description\":\"vpc-cni\"}"
./backend/aws/dist/awscli/examples/eks/describe-addon-configuration.rst:30:        "configurationSchema": "{\"$ref\":\"#/definitions/Coredns\",\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"definitions\":{\"Coredns\":{\"additionalProperties\":false,\"properties\":{\"computeType\":{\"type\":\"string\"},\"corefile\":{\"description\":\"Entire corefile contents to use with installation\",\"type\":\"string\"},\"nodeSelector\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"replicaCount\":{\"type\":\"integer\"},\"resources\":{\"$ref\":\"#/definitions/Resources\"}},\"title\":\"Coredns\",\"type\":\"object\"},\"Limits\":{\"additionalProperties\":false,\"properties\":{\"cpu\":{\"type\":\"string\"},\"memory\":{\"type\":\"string\"}},\"title\":\"Limits\",\"type\":\"object\"},\"Resources\":{\"additionalProperties\":false,\"properties\":{\"limits\":{\"$ref\":\"#/definitions/Limits\"},\"requests\":{\"$ref\":\"#/definitions/Limits\"}},\"title\":\"Resources\",\"type\":\"object\"}}}"
./backend/aws/dist/awscli/examples/gamelift/describe-runtime-configuration.rst:11:        "RuntimeConfiguration": {
./backend/aws/dist/awscli/examples/gamelift/describe-runtime-configuration.rst:29:For more information, see `Run Multiple Processes on a Fleet <https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-multiprocess.html>`__ in the *Amazon GameLift Developer Guide*.
./backend/aws/dist/awscli/examples/athena/start-query-execution.rst:16:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/start-query-execution.rst:32:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/start-query-execution.rst:48:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/batch-get-query-execution.rst:65:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/get-named-query.rst:21:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/get-query-execution.rst:39:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/list-named-queries.rst:18:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/delete-named-query.rst:10:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/create-named-query.rst:18:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/stop-query-execution.rst:10:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/athena/batch-get-named-query.rst:40:For more information, see `Running SQL Queries Using Amazon Athena <https://docs.aws.amazon.com/athena/latest/ug/querying-athena-tables.html>`__ in the *Amazon Athena User Guide*.
./backend/aws/dist/awscli/examples/trustedadvisor/get-organization-recommendation.rst:13:            "name": "Lambda Runtime Deprecation Warning",
./backend/aws/dist/awscli/examples/trustedadvisor/list-organization-recommendations.rst:13:                "name": "Lambda Runtime Deprecation Warning",
./backend/aws/dist/awscli/examples/trustedadvisor/list-organization-recommendations.rst:34:                "name": "Lambda Runtime Deprecation Warning",
./backend/aws/dist/awscli/examples/trustedadvisor/list-organization-recommendations.rst:72:            "name": "Lambda Runtime Deprecation Warning",
./backend/aws/dist/awscli/examples/trustedadvisor/list-organization-recommendations.rst:110:            "name": "Lambda Runtime Deprecation Warning",
./backend/aws/dist/awscli/examples/macie2/describe-buckets.rst:25:                    "lastJobRunTime": "2024-08-19T14:55:30.270000+00:00"
./backend/aws/dist/awscli/examples/macie2/describe-buckets.rst:115:                    "lastJobRunTime": "2024-07-09T19:37:11.511000+00:00"
./backend/aws/dist/awscli/examples/s3/_concepts.rst:130:    /tmp/foo/
./backend/aws/dist/awscli/examples/s3/_concepts.rst:138:In the command ``aws s3 sync /tmp/foo s3://bucket/`` the source directory is
./backend/aws/dist/awscli/examples/s3/_concepts.rst:139:``/tmp/foo``.  Any include/exclude filters will be evaluated with the source
./backend/aws/dist/awscli/examples/s3/_concepts.rst:143:``aws s3 cp /tmp/foo s3://bucket/ --recursive --exclude ".git/*"``, the
./backend/aws/dist/awscli/examples/s3/_concepts.rst:148:    /tmp/foo/.git/* -> /tmp/foo/.git/config       (matches, should exclude)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:149:    /tmp/foo/.git/* -> /tmp/foo/.git/description  (matches, should exclude)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:150:    /tmp/foo/.git/* -> /tmp/foo/foo.txt  (does not match, should include)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:151:    /tmp/foo/.git/* -> /tmp/foo/bar.txt  (does not match, should include)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:152:    /tmp/foo/.git/* -> /tmp/foo/baz.jpg  (does not match, should include)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:154:The command ``aws s3 cp /tmp/foo/ s3://bucket/ --recursive --exclude "ba*"``
./backend/aws/dist/awscli/examples/s3/_concepts.rst:155:will exclude ``/tmp/foo/bar.txt`` and ``/tmp/foo/baz.jpg``::
./backend/aws/dist/awscli/examples/s3/_concepts.rst:157:    /tmp/foo/ba* -> /tmp/foo/.git/config      (does not match, should include)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:158:    /tmp/foo/ba* -> /tmp/foo/.git/description (does not match, should include)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:159:    /tmp/foo/ba* -> /tmp/foo/foo.txt          (does not match, should include)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:160:    /tmp/foo/ba* -> /tmp/foo/bar.txt  (matches, should exclude)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:161:    /tmp/foo/ba* -> /tmp/foo/baz.jpg  (matches, should exclude)
./backend/aws/dist/awscli/examples/s3/_concepts.rst:172:    aws s3 cp /tmp/foo/ s3://bucket/ --recursive --exclude "*" --include "*.jpg"
./backend/aws/dist/awscli/examples/s3/_concepts.rst:177:    aws s3 cp /tmp/foo/ s3://bucket/ --recursive \
./backend/aws/dist/awscli/examples/apprunner/untag-resource.rst:1:**To remove tags from an App Runner service**
./backend/aws/dist/awscli/examples/apprunner/untag-resource.rst:3:The following ``untag-resource`` example removes two tags from an App Runner service. ::
./backend/aws/dist/awscli/examples/apprunner/associate-custom-domain.rst:3:The following ``associate-custom-domain`` example associates a custom domain name that you control with an App Runner service.
./backend/aws/dist/awscli/examples/apprunner/create-auto-scaling-configuration.rst:4:With this configuration, App Runner attempts to spread your service instances over the most Availability Zones possible, up to five, depending on the AWS Region.
./backend/aws/dist/awscli/examples/apprunner/delete-service.rst:3:The following ``delete-service`` example deletes an App Runner service. ::
./backend/aws/dist/awscli/examples/apprunner/delete-service.rst:35:                            "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/delete-service.rst:36:                            "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/resume-service.rst:3:The following ``resume-service`` example resumes an App Runner service. ::
./backend/aws/dist/awscli/examples/apprunner/resume-service.rst:35:                            "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/resume-service.rst:36:                            "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/disassociate-custom-domain.rst:3:The following ``disassociate-custom-domain`` example disassociates the domain ``example.com`` from an App Runner service.
./backend/aws/dist/awscli/examples/apprunner/tag-resource.rst:1:**To add tags to an App Runner service**
./backend/aws/dist/awscli/examples/apprunner/tag-resource.rst:3:The following ``tag-resource`` example adds two tags to an App Runner service. ::
./backend/aws/dist/awscli/examples/apprunner/pause-service.rst:3:The following ``pause-service`` example pauses an App Runner service. ::
./backend/aws/dist/awscli/examples/apprunner/pause-service.rst:35:                            "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/pause-service.rst:36:                            "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/list-auto-scaling-configurations.rst:1:**To get a paginated listing of App Runner auto scaling configurations**
./backend/aws/dist/awscli/examples/apprunner/list-auto-scaling-configurations.rst:3:The following ``list-auto-scaling-configurations`` example lists all App Runner auto scaling configurations in your AWS account.
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:3:The following ``create-service`` example creates an App Runner service based on a Python source code repository. ::
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:26:                        "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:30:                        "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:66:                            "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:67:                            "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:93:The following ``create-service`` example creates an App Runner service based on a Python source code repository. ::
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:116:                        "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:120:                        "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:156:                            "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:157:                            "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:183:The following ``create-service`` example creates an App Runner service based on an image stored in Elastic Container Registry (ECR). ::
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:201:                    "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/create-service.rst:236:                        "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/delete-auto-scaling-configuration.rst:3:The following ``delete-auto-scaling-configuration`` example deletes the latest active revision of an App Runner auto scaling configuration.
./backend/aws/dist/awscli/examples/apprunner/delete-auto-scaling-configuration.rst:37:The following ``delete-auto-scaling-configuration`` example deletes a specific revision of an App Runner auto scaling configuration.
./backend/aws/dist/awscli/examples/apprunner/describe-auto-scaling-configuration.rst:3:The following ``describe-auto-scaling-configuration`` example gets a description of the latest active revision of an App Runner auto scaling configuration. To describe the latest active revision, specify an ARN that ends with the configuration name, without the revision component.
./backend/aws/dist/awscli/examples/apprunner/describe-auto-scaling-configuration.rst:34:The following ``describe-auto-scaling-configuration`` example get a description of a specific revision of an App Runner auto scaling configuration. To describe a specific revision, specify an ARN that includes the revision number.
./backend/aws/dist/awscli/examples/apprunner/list-services.rst:1:**To get a paginated listing of App Runner services**
./backend/aws/dist/awscli/examples/apprunner/list-services.rst:3:The following ``list-services`` example lists all App Runner services in the AWS account. Up to two services are listed in each response.
./backend/aws/dist/awscli/examples/apprunner/list-connections.rst:3:The following ``list-connections`` example lists all App Runner connections in the AWS account. ::
./backend/aws/dist/awscli/examples/apprunner/delete-connection.rst:3:The following ``delete-connection`` example deletes an App Runner connection.
./backend/aws/dist/awscli/examples/apprunner/create-connection.rst:3:The following ``create-connection`` example creates a connection to a private GitHub code repository. The connection status after a successful call is ``PENDING_HANDSHAKE``. This is because an authentication handshake with the provider still hasn't happened. Complete the handshake using the App Runner console. ::
./backend/aws/dist/awscli/examples/apprunner/create-connection.rst:27:For more information, see `Managing App Runner connections <https://docs.aws.amazon.com/apprunner/latest/dg/manage-connections.html>`__ in the *AWS App Runner Developer Guide*.
./backend/aws/dist/awscli/examples/apprunner/describe-service.rst:3:The following ``describe-service`` example gets a description of an App Runner service. ::
./backend/aws/dist/awscli/examples/apprunner/describe-service.rst:34:                            "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/describe-service.rst:35:                            "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/update-service.rst:3:The following ``update-service`` example updates the memory size of instances (scaling units) of an App Runner service to 2048 MiB.
./backend/aws/dist/awscli/examples/apprunner/update-service.rst:5:When the call succeeds, App Runner starts an asynchronous update process.
./backend/aws/dist/awscli/examples/apprunner/update-service.rst:41:                            "Runtime": "PYTHON_3",
./backend/aws/dist/awscli/examples/apprunner/update-service.rst:42:                            "RuntimeEnvironmentVariables": [
./backend/aws/dist/awscli/examples/apprunner/list-operations.rst:3:The following ``list-operations`` example lists all operations that occurred on an App Runner service so far.
./backend/aws/dist/awscli/examples/apprunner/list-tags-for-resource.rst:1:**To list tags associated with an App Runner service**
./backend/aws/dist/awscli/examples/apprunner/list-tags-for-resource.rst:3:The following ``list-tags-for-resource`` example lists all the tags that are associated with an App Runner service. ::
./backend/aws/dist/awscli/examples/apprunner/describe-custom-domains.rst:3:The following ``describe-custom-domains`` example get descriptions and status of the custom domain names associated with an App Runner service. ::
./backend/aws/dist/awscli/examples/apprunner/start-deployment.rst:3:The following ``start-deployment`` example performs a manual deployment to an App Runner service. ::
./backend/aws/dist/awscli/examples/ram/get-resource-policies.rst:12:             "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Sid\":\"RamStatement1\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[]},\"Action\":[\"ec2:RunInstances\",\"ec2:CreateNetworkInterface\",\"ec2:DescribeSubnets\"],\"Resource\":\"arn:aws:ec2:us-west-2:123456789012:subnet/subnet-0250c25a1fEXAMPLE\"}]}"
./backend/aws/dist/awscli/examples/deploy/push.rst:10:        --source /tmp/MyLocalDeploymentFolder/
./backend/aws/dist/awscli/examples/deploy/deregister.rst:17:    Run the following command on the on-premises instance to uninstall the codedeploy-agent:
./backend/aws/dist/awscli/examples/omics/get-run.rst:38:For more information, see `Run lifecycle in a workflow <https://docs.aws.amazon.com/omics/latest/dev/monitoring-runs.html>`__ in the *AWS HealthOmics User Guide*.
./backend/aws/dist/awscli/examples/omics/cancel-run.rst:8:For more information, see `Run lifecycle in a workflow <https://docs.aws.amazon.com/omics/latest/dev/monitoring-runs.html>`__ in the *AWS HealthOmics User Guide*.
./backend/aws/dist/awscli/examples/omics/list-runs.rst:46:For more information, see `Run lifecycle in a workflow <https://docs.aws.amazon.com/omics/latest/dev/monitoring-runs.html>`__ in the *AWS HealthOmics User Guide*.
./backend/aws/dist/awscli/examples/emr/ssh.rst:19:  Run "sudo yum update" to apply all updates.
./backend/aws/dist/awscli/examples/emr/describe-cluster.rst:56:		                "RunningInstanceCount": 2
./backend/aws/dist/awscli/examples/emr/describe-cluster.rst:77:		                "RunningInstanceCount": 1
./backend/aws/dist/awscli/examples/emr/describe-cluster.rst:206:	            "RunningAmiVersion": "2.5.4",
./backend/aws/dist/awscli/examples/emr/describe-cluster.rst:225:	                    "RunningInstanceCount": 1
./backend/aws/dist/awscli/examples/emr/describe-cluster.rst:244:	                    "RunningInstanceCount": 2
./backend/aws/dist/awscli/examples/emr/create-default-roles.rst:98:                            "ec2:RunInstances",
./backend/backup-volchain.sh:26:echo "Running pre-backup verification..."
./backend/backup-volchain.sh:99:echo "Running post-backup verification..."
./backend/PRODUCTION_MONITORING.md:9:3. **Operational Runbook**: Step-by-step recovery procedures
./backend/PRODUCTION_MONITORING.md:105:## Operational Runbook
./backend/PRODUCTION_MONITORING.md:113:- **User Mismatches**: Run stake reconciliation via admin endpoint
./backend/volchain_chain.js:1269:      // Determine nextCursor: if there are more older lines beyond what we returned
./backend/volchain_chain.js:1270:      let nextCursor = null;
./backend/volchain_chain.js:1281:        if (hasMore) nextCursor = oldestId;
./backend/volchain_chain.js:1283:      return { events: out, nextCursor };
./backend/volchain_chain.js:1285:      return { events: [], nextCursor: null };
./backend/volchain_chain.js:1307:      let nextCursor = null;
./backend/volchain_chain.js:1311:          try { const b = JSON.parse(lines[i]); if (typeof b.height === 'number' && b.height < oldestH) { nextCursor = oldestH; break; } } catch {}
./backend/volchain_chain.js:1314:      return { blocks: out, nextCursor };
./backend/volchain_chain.js:1316:      return { blocks: [], nextCursor: null };
./backend/tasks/align.js:66:    // Run once on init, then every minute
./backend/tools/test_prod_vv.js:722:// Run with error handling
./backend/Runbook.md:1:# Volchain Backup & DR Runbook
./backend/Runbook.md:44:mkdir -p /tmp/dr && cd /tmp/dr
./backend/server.js:122:  const tmp = filePath + '.new';
./backend/server.js:123:  fs.writeFileSync(tmp, JSON.stringify(obj, null, 2));
./backend/server.js:124:  fs.renameSync(tmp, filePath);
./backend/server.js:863:    let nextCursor = result?.nextCursor || null;
./backend/server.js:892:    res.json({ events: enriched, nextCursor });
./backend/server.js:1033:  try { const limit = Math.max(1, Math.min(1000, Number(req.query.limit) || 20)); const before = req.query.cursor ? Number(req.query.cursor) : undefined; const { blocks, nextCursor } = volchain.getBlocks(limit, before); res.json({ blocks, nextCursor }); } catch { res.status(500).json({ error:'Failed to read blocks' }); }
./backend/server.js:1055:    return res.json({ events: enriched, nextCursor: result?.nextCursor || null });
./backend/server.js:1165:    const { blocks, nextCursor } = volchain.getBlocks(limit, before);
./backend/server.js:1166:    res.json({ blocks, nextCursor });
./backend/server.js:1891:    const tmpDir = path.join(__dirname, 'tmp');
./backend/server.js:1892:    ensureDir(tmpDir);
./backend/server.js:1893:    const out = path.join(tmpDir, `snapshot_${Date.now()}.tar.gz`);
./backend/server.js:2522:    try { fs.appendFileSync('/tmp/stake_debug.log', `[start] index=${req.params.index} ts=${Date.now()}\n`); } catch {}
./backend/server.js:2538:    try { fs.appendFileSync('/tmp/stake_debug.log', `[validated] user=${username} total=${totalBlocks}\n`); } catch {}
./backend/server.js:2570:        try { fs.appendFileSync('/tmp/stake_debug.log', `[fallback] opId=${opId}\n`); } catch {}
./backend/server.js:2576:        try { fs.appendFileSync('/tmp/stake_debug.log', `[writeGridB] index=${blockIndex} from=${currentDefense} to=${newDefense}\n`); } catch {}
./backend/server.js:2579:        try { fs.appendFileSync('/tmp/stake_debug.log', `[writeGridB OK]\n`); } catch {}
./backend/server.js:2584:        try { fs.appendFileSync('/tmp/stake_debug.log', `[account] user=${username} mined=${newMined} used=${newUsed}\n`); } catch {}
./backend/server.js:2599:        } catch (e) { logger.warn('stake fallback enqueue failed', e?.message || e); try { fs.appendFileSync('/tmp/stake_debug.log', `[enqueue fail] ${e?.message||e}\n`); } catch {} }
./backend/server.js:2602:        try { fs.appendFileSync('/tmp/stake_debug.log', `[fallback fail] ${e?.stack||e?.message||e}\n`); } catch {}
./backend/server.js:2609:      try { fs.appendFileSync('/tmp/stake_debug.log', `[success] index=${blockIndex} user=${username} newDefense=${newDefense}\n`); } catch {}
./backend/server.js:2618:    try { fs.appendFileSync('/tmp/stake_debug.log', `[handler fail] ${e?.stack||e}\n`); } catch {}
./backend/scripts/volchain_backup.sh:38:ARCHIVE="/tmp/volchain-$TS_UTC-$HOSTNAME_FQDN-h${HEIGHT}-${APPHASH}.tar.gz"
./backend/scripts/volchain_backup.sh:39:META="/tmp/volchain-$TS_UTC-metadata.json"
./backend/dev/tests/property_test.js:3:  - Runs 500 random operations across 3–5 users
./backend/dev/tests/property_test.js:41:function backupAll(){ const stamp = Date.now().toString(); const tmp = path.join(BACKEND_DIR, `.testbak_${stamp}`); fs.mkdirSync(tmp, { recursive:true }); fs.copyFileSync(DB_FILE, path.join(tmp,'db.json.bak')); if (fs.existsSync(GRIDB_FILE)) fs.copyFileSync(GRIDB_FILE, path.join(tmp,'gridb.json.bak')); if (fs.existsSync(SESSIONS_FILE)) fs.copyFileSync(SESSIONS_FILE, path.join(tmp, 'sessions.json.bak')); const vdst = path.join(tmp,'volchain'); copyDir(VOLCHAIN_DIR, vdst); return tmp; }
./backend/dev/tests/property_test.js:42:function restoreAll(tmp){ try{ const dbb=path.join(tmp,'db.json.bak'); if (fs.existsSync(dbb)) fs.copyFileSync(dbb, DB_FILE); const gb=path.join(tmp,'gridb.json.bak'); if (fs.existsSync(gb)) fs.copyFileSync(gb, GRIDB_FILE); const ss=path.join(tmp,'sessions.json.bak'); if (fs.existsSync(ss)) fs.copyFileSync(ss, SESSIONS_FILE); rimraf(VOLCHAIN_DIR); copyDir(path.join(tmp,'volchain'), VOLCHAIN_DIR); } finally { rimraf(tmp); } }
./backend/dev/test_property_runner.js:25:  const sbRoot = `/tmp/volchain_sandbox/${stamp}_${attempt}`;
./backend/dev/test_property_runner.js:77:  const logsDir = '/tmp/property_runner';
./backend/dev/test_property_runner.js:146:  const summary = { ok:false, attempts:0, last:{}, logsDir:'/tmp/property_runner' };
./backend/dev/test_property_runner.js:155:  fs.writeFileSync('/tmp/property_runner/summary.json', JSON.stringify(summary, null, 2));
./backend/dev/test_property_runner.js:157:    console.error(`TEST FAILED after ${summary.attempts} attempts. See /tmp/property_runner`);
./backend/routes/admin.js:161:    const tmp = SNAPSHOT_FILE + '.tmp';
./backend/routes/admin.js:162:    fs.writeFileSync(tmp, JSON.stringify(updated, null, 2));
./backend/routes/admin.js:163:    fs.renameSync(tmp, SNAPSHOT_FILE);
./backend/routes/volchain.js:26:    let nextCursor = null;
./backend/routes/volchain.js:30:      nextCursor = (typeof r?.nextCursor === 'number') ? r.nextCursor : null;
./backend/routes/volchain.js:146:            const page = volchain.getBlocks(500, before) || { blocks: [], nextCursor: null };
./backend/routes/volchain.js:172:            if (page && typeof page.nextCursor === 'number') before = page.nextCursor; else break;
./backend/routes/volchain.js:260:    return res.json({ events, nextCursor });
./backend/routes/volchain.js:293:  try { const limit = Math.max(1, Math.min(1000, Number(req.query.limit) || 20)); const before = req.query.cursor ? Number(req.query.cursor) : undefined; const { blocks, nextCursor } = volchain.getBlocks(limit, before); res.json({ blocks, nextCursor }); } catch { res.status(500).json({ error:'Failed to read blocks' }); }
./backend/lib/gridb.js:8:  const tmp = filePath + '.new';
./backend/lib/gridb.js:9:  fs.writeFileSync(tmp, JSON.stringify(obj, null, 2));
./backend/lib/gridb.js:10:  fs.renameSync(tmp, filePath);
./backend/lib/invariants.js:107:      const tmp = SNAPSHOT_FILE + '.tmp';
./backend/lib/invariants.js:108:      fs.writeFileSync(tmp, JSON.stringify(correctedSnapshot, null, 2));
./backend/lib/invariants.js:109:      fs.renameSync(tmp, SNAPSHOT_FILE);
./backend/lib/invariants.js:158:    const tempFile = filePath + '.tmp';
./backend/RUNBOOK.md:1:# VolChain Production Runbook
./backend/RUNBOOK.md:211:### Manual Backup (Run Daily)
./.github/workflows/ci-gate.yml:99:          export VOLCHAIN_DATA_DIR=/tmp/ci_volchain_test
./.github/workflows/ci-gate.yml:100:          export GAME_DB_PATH=/tmp/ci_game_test.json
./.github/workflows/ci-gate.yml:101:          export AUTH_DB_PATH=/tmp/ci_auth_test.json
./.github/workflows/ci-gate.yml:105:          mkdir -p /tmp/ci_volchain_test
./.github/workflows/ci-gate.yml:106:          echo '{"grid":[],"users":[]}' > /tmp/ci_game_test.json
./.github/workflows/ci-gate.yml:107:          echo '[]' > /tmp/ci_auth_test.json
./.github/workflows/ci-gate.yml:110:          nohup node server.js > /tmp/server_test.log 2>&1 &
./.github/workflows/ci-gate.yml:174:          rm -rf /tmp/ci_*
./_audit/tree.txt:15:│   ├── Runbook.md
./schemas/volchain-event.json:2:  "$schema": "http://json-schema.org/draft-07/schema#",
./schemas/volchain-snapshot.json:2:  "$schema": "http://json-schema.org/draft-07/schema#",
./ARCHITECTURE.md:36:  - GET /volchain/events?limit=N[&cursor] → { events, nextCursor }
./docs/OVERVIEW.md:42:## Runtime notes
